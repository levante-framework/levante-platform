{"version":3,"file":"ManageTasksVariants-Be7JgfNz.js","sources":["../../../../node_modules/primevue/dropdown/index.mjs","../../src/composables/mutations/useAddTaskMutation.ts","../../src/composables/mutations/useUpdateTaskMutation.ts","../../src/components/tasks/ManageTasks.vue","../../src/composables/mutations/useAddTaskVariantMutation.ts","../../src/composables/mutations/useUpdateTaskVariantMutation.ts","../../src/components/tasks/ManageVariants.vue","../../src/pages/ManageTasksVariants.vue"],"sourcesContent":["import Select from 'primevue/select';\n\nvar script = {\n  name: 'Dropdown',\n  \"extends\": Select,\n  mounted: function mounted() {\n    console.warn('Deprecated since v4. Use Select component instead.');\n  }\n};\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n","import { useMutation, useQueryClient } from '@tanstack/vue-query';\nimport type { UseMutationReturnType } from '@tanstack/vue-query';\nimport { useAuthStore } from '@/store/auth';\nimport { TASKS_QUERY_KEY } from '@/constants/queryKeys';\nimport { TASK_ADD_MUTATION_KEY } from '@/constants/mutationKeys';\n\ninterface TaskData {\n  [key: string]: any;\n}\n\n/**\n * Add Task mutation.\n *\n * TanStack mutation to add a task and automatically invalidate the corresponding queries.\n * @TODO: Evaluate if we can apply optimistic updates to prevent invalidating/refetching the data.\n * @TODO: Consider merging this with `useUpdateTaskMutation` into a single `useUpsertTaskMutation`. Currently difficult\n * to achieve due to the underlaying firekit functions being different.\n *\n * @returns The mutation object returned by `useMutation`.\n */\n\nconst useAddTaskMutation = (): UseMutationReturnType<void, Error, TaskData, unknown> => {\n  const authStore = useAuthStore();\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationKey: TASK_ADD_MUTATION_KEY,\n    mutationFn: async (task: TaskData): Promise<void> => {\n      await authStore.roarfirekit.registerTaskVariant({ ...task });\n    },\n    onSuccess: (): void => {\n      queryClient.invalidateQueries({ queryKey: [TASKS_QUERY_KEY] });\n    },\n  });\n};\n\nexport default useAddTaskMutation;\n","import { useMutation, useQueryClient } from '@tanstack/vue-query';\nimport type { UseMutationReturnType } from '@tanstack/vue-query';\nimport { useAuthStore } from '@/store/auth';\nimport { TASKS_QUERY_KEY } from '@/constants/queryKeys';\nimport { TASK_UPDATE_MUTATION_KEY } from '@/constants/mutationKeys';\n\ninterface TaskData {\n  [key: string]: any;\n}\n\n/**\n * Update Task mutation.\n *\n * TanStack mutation to update a task and automatically invalidate the corresponding queries.\n * @TODO: Evaluate if we can apply optimistic updates to prevent invalidating/refetching the data.\n * @TODO: Consider merging this with `useAddTaskMutation` into a single `useUpsertTaskMutation`. Currently difficult to\n * achieve due to the underlaying firekit functions being different.\n *\n * @returns The mutation object returned by `useMutation`.\n */\n\nconst useUpdateTaskMutation = (): UseMutationReturnType<void, Error, TaskData, unknown> => {\n  const authStore = useAuthStore();\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationKey: TASK_UPDATE_MUTATION_KEY,\n    mutationFn: async (task: TaskData): Promise<void> => {\n      await authStore.roarfirekit.updateTaskOrVariant(task);\n    },\n    onSuccess: (): void => {\n      queryClient.invalidateQueries({ queryKey: [TASKS_QUERY_KEY] });\n    },\n  });\n};\n\nexport default useUpdateTaskMutation;\n","<template>\n  <PvToast />\n  <PvSelectButton\n    v-model=\"viewModel\"\n    :options=\"Object.values(MODEL_VIEWS)\"\n    class=\"flex my-2 select-button p-2\"\n    @change=\"handleViewChange($event.value)\"\n  />\n  <div v-show=\"viewModel === MODEL_VIEWS.CREATE_TASK\">\n    <div v-if=\"!created\" class=\"card px-3\">\n      <h1 class=\"text-center font-bold\">Create a New Task</h1>\n      <!-- <p class=\"login-title\" align=\"left\">Register for ROAR</p> -->\n      <form class=\"p-fluid\" @submit.prevent=\"handleNewTaskSubmit(!v$.$invalid)\">\n        <!-- Task name -->\n        <div class=\"flex flex-column row-gap-3\">\n          <section class=\"form-section\">\n            <div class=\"p-input-icon-right\">\n              <label for=\"taskName\">\n                <small class=\"text-gray-400 font-bold\">Task Name </small>\n                <span class=\"required\">*</span></label\n              >\n              <PvInputText\n                v-model=\"v$.taskName.$model\"\n                name=\"taskName\"\n                :class=\"{ 'p-invalid': v$.taskName.$invalid && submitted }\"\n                aria-describedby=\"activation-code-error\"\n              />\n            </div>\n            <span v-if=\"v$.taskName.$error && submitted\">\n              <span v-for=\"(error, index) of v$.taskName.$errors\" :key=\"index\">\n                <small class=\"p-error\">{{ error.$message }}</small>\n              </span>\n            </span>\n            <small v-if=\"(v$.taskName.$invalid && submitted) || v$.taskName.$pending.$response\" class=\"p-error\">\n              {{ v$.taskName.required.$message.replace('Value', 'Task Name') }}\n            </small>\n          </section>\n          <!-- Task ID -->\n          <section class=\"form-section\">\n            <div class=\"p-input-icon-right\">\n              <label for=\"taskId\">\n                <small class=\"text-gray-400 font-bold\">Task ID </small>\n                <span class=\"required\">*</span></label\n              >\n              <PvInputText\n                v-model=\"v$.taskId.$model\"\n                name=\"taskId\"\n                :class=\"{ 'p-invalid': v$.taskId.$invalid && submitted }\"\n                aria-describedby=\"activation-code-error\"\n              />\n            </div>\n            <span v-if=\"v$.taskId.$error && submitted\">\n              <span v-for=\"(error, index) of v$.taskId.$errors\" :key=\"index\">\n                <small class=\"p-error\">{{ error.$message }}</small>\n              </span>\n            </span>\n            <small v-else-if=\"(v$.taskId.$invalid && submitted) || v$.taskId.$pending.$response\" class=\"p-error\">\n              {{ v$.taskId.required.$message.replace('Value', 'Task ID') }}\n            </small>\n          </section>\n          <!-- Cover Image -->\n          <section class=\"form-section\">\n            <div>\n              <label for=\"coverImage\">\n                <small class=\"text-gray-400 font-bold\">Cover Image (URL)</small>\n              </label>\n              <PvInputText v-model=\"taskFields.coverImage\" name=\"coverImage\" />\n            </div>\n          </section>\n          <!--Description-->\n          <section class=\"form-section\">\n            <div class=\"p-input-icon-right\">\n              <label for=\"description\">\n                <small class=\"text-gray-400 font-bold\">Description</small>\n              </label>\n              <PvInputText v-model=\"taskFields.description\" name=\"description\" />\n            </div>\n          </section>\n          <!--Task URL-->\n          <section class=\"form-section\">\n            <div v-if=\"isExternalTask\">\n              <label for=\"taskURL\">\n                <small class=\"text-gray-400 font-bold\">Task URL </small>\n                <span class=\"required\">*</span></label\n              >\n              <PvInputText\n                v-model=\"v$.taskURL.$model\"\n                name=\"taskURL\"\n                :class=\"{ 'p-invalid': v$.taskURL.$invalid && submitted }\"\n                aria-describedby=\"first-name-error\"\n              />\n              <span v-if=\"v$.taskURL.$error && submitted\">\n                <span v-for=\"(error, index) of v$.taskURL.$errors\" :key=\"index\">\n                  <small class=\"p-error\">{{ error.$message }}</small>\n                </span>\n              </span>\n              <small v-else-if=\"(v$.taskURL.$invalid && submitted) || v$.taskURL.$pending.$response\" class=\"p-error\">\n                {{ v$.taskURL.required.$message.replace('Value', 'Task URL') }}\n              </small>\n            </div>\n          </section>\n        </div>\n\n        <div v-if=\"!isExternalTask\">\n          <h3 class=\"text-center\">\n            <strong>Configure Game Parameters</strong>\n          </h3>\n          <h4 class=\"text-center\">Create the configurable game parameters for variants of this task.</h4>\n          <div v-for=\"(param, index) in gameConfig\" :key=\"index\">\n            <div class=\"flex gap-2 align-content-start flex-grow-0 params-container\">\n              <PvInputText v-model=\"param.name\" placeholder=\"Name\" />\n\n              <PvDropdown v-model=\"param.type\" :options=\"typeOptions\" />\n\n              <PvInputText v-if=\"param.type === 'string'\" v-model=\"param.value\" placeholder=\"Value\" />\n\n              <PvDropdown v-else-if=\"param.type === 'boolean'\" v-model=\"param.value\" :options=\"[true, false]\" />\n\n              <PvInputNumber v-else-if=\"param.type === 'number'\" v-model=\"param.value\" />\n\n              <PvButton\n                icon=\"pi pi-trash\"\n                class=\"delete-btn my-1 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n                text\n                @click=\"removeField(gameConfig, index)\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div v-else>\n          <h3 class=\"text-center\">Configure URL Parameters</h3>\n          <h4 class=\"text-center\">\n            These parameters will be appended to the task URL to generate the variant URL for this task.\n          </h4>\n          <div v-for=\"(param, index) in taskParams\" :key=\"index\">\n            <div class=\"flex gap-2 align-content-start flex-grow-0 params-container\">\n              <PvInputText v-model=\"param.name\" placeholder=\"Name\" />\n\n              <PvDropdown v-model=\"param.type\" :options=\"typeOptions\" />\n\n              <PvInputText v-if=\"param.type === 'string'\" v-model=\"param.value\" placeholder=\"Value\" />\n\n              <PvDropdown v-else-if=\"param.type === 'boolean'\" v-model=\"param.value\" :options=\"[true, false]\" />\n\n              <PvInputNumber v-else-if=\"param.type === 'number'\" v-model=\"param.value\" />\n\n              <PvButton\n                icon=\"pi pi-trash\"\n                text\n                class=\"delete-btn bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n                @click=\"removeField(taskParams, index)\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"w-full flex justify-content-center\">\n          <div v-if=\"!isExternalTask\" class=\"w-2\">\n            <PvButton\n              label=\"Add Field\"\n              text\n              icon=\"pi pi-plus\"\n              class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n              @click=\"addField(gameConfig)\"\n            />\n          </div>\n          <div v-else class=\"w-2\">\n            <PvButton\n              label=\"Add Field\"\n              text\n              icon=\"pi pi-plus\"\n              class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n              @click=\"addField(taskParams)\"\n            />\n          </div>\n        </div>\n        <div class=\"flex flex-row align-items-center justify-content-center gap-2 flex-order-0 my-3\">\n          <div class=\"flex flex-row align-items-center\">\n            <PvCheckbox v-model=\"taskCheckboxData\" input-id=\"chbx-demoTask\" value=\"isDemoTask\" />\n            <label class=\"ml-1 mr-3\" for=\"chbx-demoTask\">Mark as <b>Demo Task</b></label>\n          </div>\n          <div class=\"flex flex-row align-items-center\">\n            <PvCheckbox v-model=\"taskCheckboxData\" input-id=\"chbx-testTask\" value=\"isTestTask\" />\n            <label class=\"ml-1 mr-3\" for=\"chbx-testTask\">Mark as <b>Test Task</b></label>\n          </div>\n          <div class=\"flex flex-row align-items-center\">\n            <PvCheckbox v-model=\"taskCheckboxData\" input-id=\"chbx-externalTask\" value=\"isExternalTask\" />\n            <label class=\"ml-1 mr-3\" for=\"chbx-externalTask\">Mark as <b>External Task</b> </label>\n          </div>\n          <div class=\"flex flex-row align-items-center\">\n            <PvCheckbox v-model=\"taskCheckboxData\" input-id=\"chbx-registeredTask\" value=\"isRegisteredTask\" />\n            <label class=\"ml-1 mr-3\" for=\"chbx-externalTask\">Mark as <b>Registered Task</b> </label>\n          </div>\n        </div>\n        <div class=\"form-submit\">\n          <PvButton\n            type=\"submit\"\n            label=\"Submit\"\n            class=\"submit-button bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n            severity=\"primary\"\n          />\n        </div>\n      </form>\n    </div>\n\n    <div v-else>\n      <h2>Your task has been created!</h2>\n      <p>\n        Redirect to this URL upon task completion. ParticipantId can be any string, completed should be set to true.\n      </p>\n      <p>roar.education/?participantId=[$PARTICIPANT_ID]&completed=[$BOOLEAN]</p>\n      <PvButton\n        label=\"Create Another Task\"\n        class=\"submit-button bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n        @click=\"created = false\"\n      />\n    </div>\n  </div>\n\n  <div v-show=\"viewModel === MODEL_VIEWS.UPDATE_TASK\">\n    <h1 class=\"text-center font-bold\">Update a Task</h1>\n    <form @submit.prevent=\"handleUpdateTask()\">\n      <section class=\"flex flex-column gap-2 mb-4 p-4\">\n        <label for=\"variant-fields\" class=\"my-2\">\n          <small class=\"text-gray-400 font-bold\">Select an Existing Task </small>\n          <span class=\"required\">*</span></label\n        >\n        <PvDropdown\n          v-model=\"selectedTask\"\n          :options=\"formattedTasks\"\n          option-label=\"name\"\n          option-value=\"id\"\n          placeholder=\"Select a Task\"\n        />\n      </section>\n\n      <section v-if=\"taskData\" class=\"flex flex-column align-items-start mt-4 p-4\">\n        <div class=\"flex flex-column w-full\">\n          <label for=\"fieldsOutput\">\n            <strong>Fields</strong>\n          </label>\n          <div v-for=\"(value, key) in taskData\" :key=\"key\">\n            <div v-if=\"!ignoreFields.includes(key)\">\n              <div\n                v-if=\"updatedTaskData[key] !== undefined\"\n                class=\"flex align-items-center justify-content-between gap-2 mb-1\"\n              >\n                <label :for=\"key\" class=\"w-1\">\n                  <em>{{ key }}</em>\n                </label>\n                <PvInputText :placeholder=\"typeof value\" class=\"w-2 text-center\" disabled />\n\n                <PvInputText\n                  v-if=\"typeof value === 'string'\"\n                  v-model=\"updatedTaskData[key]\"\n                  :placeholder=\"value\"\n                  class=\"flex-grow-1\"\n                />\n                <PvInputNumber\n                  v-else-if=\"typeof value === 'number'\"\n                  v-model=\"updatedTaskData[key]\"\n                  class=\"flex-grow-1\"\n                />\n                <PvDropdown\n                  v-else-if=\"typeof value === 'boolean'\"\n                  v-model=\"updatedTaskData[key]\"\n                  :options=\"booleanDropDownOptions\"\n                  option-label=\"label\"\n                  option-value=\"value\"\n                  class=\"flex-grow-1\"\n                />\n                <PvButton\n                  type=\"button\"\n                  icon=\"pi pi-trash\"\n                  class=\"bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n                  text\n                  @click=\"deleteParam(key)\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div v-if=\"newFields.length > 0\" class=\"w-full\">\n          <div v-for=\"(field, index) in newFields\" :key=\"index\" class=\"flex align-items-center column-gap-2 mb-1\">\n            <PvInputText v-model=\"field.name\" placeholder=\"Field Name\" />\n            <PvDropdown v-model=\"field.type\" :options=\"['string', 'number', 'boolean']\" placeholder=\"Field Type\" />\n\n            <PvInputText\n              v-if=\"field.type === 'string'\"\n              v-model=\"field.value\"\n              placeholder=\"Field Value\"\n              class=\"flex-grow-1\"\n            />\n            <PvInputNumber\n              v-if=\"field.type === 'number'\"\n              v-model=\"field.value\"\n              placeholder=\"Field Value\"\n              class=\"flex-grow-1\"\n            />\n            <PvDropdown\n              v-if=\"field.type === 'boolean'\"\n              v-model=\"field.value\"\n              placeholder=\"Field Value\"\n              :options=\"booleanDropDownOptions\"\n              option-label=\"label\"\n              option-value=\"value\"\n              class=\"flex-grow-1\"\n            />\n            <PvButton\n              type=\"button\"\n              icon=\"pi pi-trash\"\n              class=\"bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n              text\n              @click=\"removeNewField(field.name, newFields)\"\n            />\n          </div>\n        </div>\n        <PvButton\n          label=\"Add Field\"\n          text\n          icon=\"pi pi-plus\"\n          class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n          @click=\"newField\"\n        />\n\n        <div class=\"flex flex-column w-full\">\n          <label for=\"gameConfigOutput\">\n            <strong>Game Parameters</strong>\n          </label>\n          <div v-for=\"(param, paramName) in updatedTaskData.gameConfig\" id=\"paramsOutput\" :key=\"paramName\" class=\"mb-1\">\n            <div\n              v-if=\"updatedTaskData.gameConfig[paramName] !== undefined\"\n              class=\"flex align-items-center justify-content-end column-gap-2\"\n            >\n              <label :for=\"paramName\" class=\"w-2\">\n                <em>{{ paramName }} </em>\n              </label>\n              <PvInputText id=\"inputEditParamType\" :placeholder=\"typeof param\" class=\"w-2 text-center\" disabled />\n              <PvInputText\n                v-if=\"typeof param === 'string'\"\n                v-model=\"updatedTaskData.gameConfig[paramName]\"\n                :placeholder=\"param\"\n                class=\"flex-grow-1\"\n              />\n              <PvInputNumber\n                v-else-if=\"typeof param === 'number'\"\n                v-model=\"updatedTaskData.gameConfig[paramName]\"\n                class=\"flex-grow-1\"\n              />\n              <PvDropdown\n                v-else-if=\"typeof param === 'boolean'\"\n                v-model=\"updatedTaskData.gameConfig[paramName]\"\n                :options=\"booleanDropDownOptions\"\n                option-label=\"label\"\n                option-value=\"value\"\n                class=\"flex-grow-1\"\n              />\n              <PvButton\n                type=\"button\"\n                icon=\"pi pi-trash\"\n                class=\"bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n                text\n                @click=\"deleteParam(paramName)\"\n              />\n            </div>\n          </div>\n          <div v-if=\"addedGameConfig.length > 0\">\n            <div\n              v-for=\"(field, index) in addedGameConfig\"\n              :key=\"index\"\n              class=\"flex align-items-center column-gap-2 mb-1\"\n            >\n              <PvInputText v-model=\"field.name\" placeholder=\"Field Name\" />\n              <PvDropdown v-model=\"field.type\" :options=\"['string', 'number', 'boolean']\" placeholder=\"Field Type\" />\n              <PvInputText\n                v-if=\"field.type === 'string'\"\n                v-model=\"field.value\"\n                placeholder=\"Field Value\"\n                class=\"flex-grow-1\"\n              />\n              <PvInputNumber\n                v-if=\"field.type === 'number'\"\n                v-model=\"field.value\"\n                placeholder=\"Field Value\"\n                class=\"flex-grow-1\"\n              />\n              <PvDropdown\n                v-if=\"field.type === 'boolean'\"\n                v-model=\"field.value\"\n                placeholder=\"Field Value\"\n                :options=\"booleanDropDownOptions\"\n                option-label=\"label\"\n                option-value=\"value\"\n                class=\"flex-grow-1\"\n              />\n              <PvButton\n                type=\"button\"\n                icon=\"pi pi-trash\"\n                class=\"bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n                text\n                @click=\"removeNewField(field.name, addedGameConfig)\"\n              />\n            </div>\n          </div>\n        </div>\n        <PvButton\n          label=\"Add Parameter\"\n          text\n          icon=\"pi pi-plus\"\n          class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n          @click=\"addGameConfig\"\n        />\n      </section>\n\n      <PvButton type=\"submit\" class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n        >Update Task</PvButton\n      >\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, reactive, ref, watch } from 'vue';\nimport { required, requiredIf, url } from '@vuelidate/validators';\nimport { useVuelidate } from '@vuelidate/core';\nimport { storeToRefs } from 'pinia';\nimport { useToast } from 'primevue/usetoast';\nimport PvButton from 'primevue/button';\nimport PvCheckbox from 'primevue/checkbox';\nimport PvDropdown from 'primevue/dropdown';\nimport PvInputNumber from 'primevue/inputnumber';\nimport PvInputText from 'primevue/inputtext';\nimport PvSelectButton from 'primevue/selectbutton';\nimport PvToast from 'primevue/toast';\nimport { cloneDeep, camelCase } from 'lodash';\nimport { useAuthStore } from '@/store/auth';\nimport useTasksQuery from '@/composables/queries/useTasksQuery';\nimport useAddTaskMutation from '@/composables/mutations/useAddTaskMutation';\nimport useUpdateTaskMutation from '@/composables/mutations/useUpdateTaskMutation';\n\nconst toast = useToast();\nconst initialized = ref(false);\nconst registeredTasksOnly = ref(true);\nconst taskCheckboxData = ref();\nconst authStore = useAuthStore();\nconst { roarfirekit } = storeToRefs(authStore);\n\nconst { mutate: addTask } = useAddTaskMutation();\nconst { mutate: updateTask } = useUpdateTaskMutation();\n\nconst isExternalTask = computed(() => !!taskCheckboxData.value?.find((item) => item === 'isExternalTask'));\nconst selectedTask = ref(null);\n\nlet taskData = computed(() => {\n  if (!selectedTask.value) return null;\n  return tasks.value.find((task) => task.id === selectedTask.value);\n});\n\n// Reactive clone for holding changes made to taskData without affecting the original taskData and avoiding reactivity issues\nlet updatedTaskData = reactive(cloneDeep(taskData.value));\n// Array of objects which models the new fields for the task object being updated\n// This array of objects is later converted back into an object and spread into the updatedTaskData object\nlet newFields = reactive([]);\n// Array of objects which models the new fields for the gameConfig object being updated\n// This array of objects is later converted back into an object and spread into the updatedTaskData object\nlet addedGameConfig = reactive([]);\n\nconst MODEL_VIEWS = Object.freeze({\n  CREATE_TASK: 'Create Task',\n  UPDATE_TASK: 'Update Task',\n});\n\nconst viewModel = ref(MODEL_VIEWS.CREATE_TASK);\n\nconst handleViewChange = (value) => {\n  const selectedView = Object.values(MODEL_VIEWS).find((view) => view === value);\n  if (selectedView) {\n    viewModel.value = selectedView;\n  }\n};\n\nwatch(taskData, (newVal) => {\n  updatedTaskData = reactive(cloneDeep(newVal));\n});\n\n// Ignore these fields when displaying the task data\nconst ignoreFields = ['id', 'lastUpdated', 'gameConfig', 'parentDoc'];\n\nconst typeOptions = ['string', 'number', 'boolean'];\n\nconst booleanDropDownOptions = [\n  { label: 'true', value: true },\n  { label: 'false', value: false },\n];\n\nconst submitted = ref(false);\nconst created = ref(false);\n\nlet unsubscribe;\nconst init = () => {\n  if (unsubscribe) unsubscribe();\n  initialized.value = true;\n};\n\nunsubscribe = authStore.$subscribe(async (mutation, state) => {\n  if (state.roarfirekit.restConfig) init();\n});\n\nonMounted(() => {\n  if (roarfirekit.value.restConfig) init();\n});\n\nconst { data: tasks } = useTasksQuery(registeredTasksOnly, null, {\n  enabled: initialized,\n});\n\nconst formattedTasks = computed(() => {\n  if (!tasks.value) return [];\n  return tasks.value.map((task) => {\n    return {\n      name: task.taskName ?? task.id,\n      ...task,\n    };\n  });\n});\n\n// For modeling a task to submit to the DB\nconst taskFields = reactive({\n  taskName: '',\n  taskURL: '',\n  taskId: '',\n  coverImage: '',\n  description: '',\n  gameConfig: {},\n  // Based on type of account?\n  external: isExternalTask,\n});\n\n// Validation rules for task fields\nconst taskRules = {\n  taskName: { required },\n  taskURL: { required: requiredIf(isExternalTask.value), url },\n  taskId: { required },\n};\n\nconst v$ = useVuelidate(taskRules, taskFields);\n\n// Array of objects which models the game configuration fields\n// This array of objects is later converted back into an object and spread into the task object\nconst gameConfig = ref([\n  {\n    name: '',\n    value: '',\n    type: 'String',\n  },\n]);\n\n// Array of objects which models the task parameters and is used to build the task URL\nconst taskParams = ref([\n  {\n    name: '',\n    value: '',\n    type: 'String',\n  },\n]);\n\n// For adding a new field to the new task document\nfunction addField(type) {\n  type.push({\n    name: '',\n    value: '',\n    type: 'String',\n  });\n}\n\n// For removing a field from the task document\nfunction removeField(type, index) {\n  type.splice(index, 1);\n}\n\n// Adds a new object to the newFields array, which models a new field for the task object being updated\nconst newField = () => {\n  newFields.push({ name: '', value: '', type: 'string' });\n};\n\n// Removes a field from the newFields or addedGameConfig array\nconst removeNewField = (field, array) => {\n  const updatedFields = array.filter((item) => item.name !== field);\n  array.splice(0, array.length, ...updatedFields);\n};\n\n// Deletes a parameter from the updatedTaskData object\nconst deleteParam = (param) => {\n  if (updatedTaskData['gameConfig'][param] !== undefined) {\n    delete updatedTaskData['gameConfig'][param];\n  }\n  delete updatedTaskData[param];\n};\n\n// Adds a new object to the addedGameConfig array, which models a new field for the gameConfig object being updated\nconst addGameConfig = () => {\n  addedGameConfig.push({ name: '', value: '', type: 'string' });\n};\n\n// Takes the array of objects that will be added to the current data object in Firestore\n// and checks if any of the new fields are duplicates of existing fields to prevent overwriting data\nconst checkForDuplicates = (newItemsArray, currentDataObject) => {\n  if (currentDataObject === undefined) return { isDuplicate: false, duplicateField: '' };\n\n  const keys = Object.keys(currentDataObject);\n  for (const newItem of newItemsArray) {\n    if (keys.includes(newItem.name)) {\n      return { isDuplicate: true, duplicateField: newItem.name };\n    }\n  }\n  return { isDuplicate: false, duplicateField: '' };\n};\n\n// Helper function to check for errors before updating a task\n// Returns true if there are errors, false if there are none\nconst checkForErrors = () => {\n  if (!selectedTask.value) {\n    toast.add({\n      severity: 'error',\n      summary: 'Oops!',\n      detail: 'Please select a task to update.',\n      life: 3000,\n    });\n    return true;\n  }\n\n  if (newFields.length > 0) {\n    const { isDuplicate, duplicateField } = checkForDuplicates(newFields, updatedTaskData);\n    if (isDuplicate) {\n      toast.add({\n        severity: 'error',\n        summary: 'Oops!',\n        detail: `Duplicate field name detected: ${duplicateField}.`,\n        life: 3000,\n      });\n      return true;\n    }\n  }\n\n  if (addedGameConfig.length > 0) {\n    const { isDuplicate, duplicateField } = checkForDuplicates(addedGameConfig, updatedTaskData.gameConfig);\n    if (isDuplicate) {\n      toast.add({\n        severity: 'error',\n        summary: 'Oops!',\n        detail: `Duplicate field name detected: ${duplicateField}.`,\n        life: 3000,\n      });\n      return true;\n    }\n  }\n  return false;\n};\n\nconst handleUpdateTask = async () => {\n  // Check for errors before updating the task; end function if errors are found\n  if (checkForErrors()) return;\n\n  const convertedFields = convertParamsToObj(newFields);\n  const convertedGameConfig = convertParamsToObj(addedGameConfig);\n\n  const taskData = {\n    taskId: selectedTask.value,\n    data: {\n      ...updatedTaskData,\n      ...convertedFields,\n      gameConfig: {\n        ...updatedTaskData.gameConfig,\n        ...convertedGameConfig,\n      },\n    },\n  };\n\n  await updateTask(taskData, {\n    onSuccess: () => {\n      toast.add({\n        severity: 'success',\n        summary: 'Hoorah!',\n        detail: 'Task successfully updated.',\n        life: 3000,\n      });\n      resetUpdateTaskForm();\n    },\n    onError: (error) => {\n      toast.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'Unable to update task, please try again.',\n        life: 3000,\n      });\n      console.error('Failed to update task.', error);\n    },\n  });\n};\n\nconst handleNewTaskSubmit = async (isFormValid) => {\n  submitted.value = true;\n  const isDemoData = !!taskCheckboxData.value?.find((item) => item === 'isDemoTask');\n  const isTestData = !!taskCheckboxData.value?.find((item) => item === 'isTestTask');\n  const isExternalTask = !!taskCheckboxData.value?.find((item) => item === 'isExternalTask');\n  const isRegisteredTask = !!taskCheckboxData.value?.find((item) => item === 'isRegisteredTask');\n\n  if (!isFormValid) {\n    return;\n  }\n\n  const convertedGameConfig = convertParamsToObj(gameConfig) ?? {};\n  const convertedTaskParams = isExternalTask ? convertParamsToObj(taskParams) : null;\n\n  let newTaskObject = reactive({\n    taskId: taskFields.taskId,\n    taskName: taskFields.taskName,\n    taskDescription: taskFields.description,\n    taskImage: taskFields.coverImage,\n    gameConfig: convertedGameConfig,\n    taskParams: convertedTaskParams,\n    demoData: isDemoData,\n    testData: isTestData,\n    registered: isRegisteredTask,\n  });\n\n  if (isExternalTask.value) {\n    newTaskObject.taskURL = buildTaskURL(taskFields.taskURL, taskParams);\n  }\n\n  await addTask(newTaskObject, {\n    onSuccess: () => {\n      created.value = true;\n      // @TODO: Add form reset to ensure users see a clean form when clicking the \"Create Another Task\" button. This\n      // will also prevent users from accidentally submitting the same task twice.\n    },\n    onError: (error) => {\n      toast.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'Unable to create task, please try again.',\n        life: 3000,\n      });\n      console.error('Failed to add task.', error);\n    },\n  });\n};\n\nfunction convertParamsToObj(paramType) {\n  // If the paramType is an array of objects with a key called \"value\", convert it to an object\n  // Otherwise, just use the paramType object\n  const target = paramType.value !== undefined ? paramType.value : paramType;\n\n  return target.reduce((acc, item) => {\n    if (item.name) {\n      acc[camelCase(item.name)] = item.value;\n    }\n    return acc;\n  }, {});\n}\n\nfunction buildTaskURL(url, params) {\n  const baseURL = url;\n\n  let queryParams = url.includes('/?') ? '' : '/?';\n\n  params.value.forEach((param, i) => {\n    if (param.name) {\n      if (i === 0) {\n        queryParams += `${param.name}=${param.value}`;\n      } else {\n        queryParams += `&${param.name}=${param.value}`;\n      }\n    }\n  });\n\n  const completeURL = baseURL + queryParams;\n\n  return completeURL;\n}\n\nconst resetUpdateTaskForm = () => {\n  selectedTask.value = null;\n  updatedTaskData = reactive(cloneDeep(taskData.value));\n  clearFieldConfigArrays();\n};\n\nconst clearFieldConfigArrays = () => {\n  newFields = reactive([]);\n  addedGameConfig = reactive([]);\n};\n</script>\n\n<style>\n.submit-button {\n  margin: auto;\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n  display: flex;\n  border: none;\n  width: 11.75rem;\n}\n\n.submit-button:hover {\n  background-color: #2b8ecb;\n  color: black;\n}\n\n.delete-btn {\n  padding: 0.8rem;\n}\n\n.select-button .p-button:last-of-type:not(:only-of-type) {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 25rem;\n  border-bottom-right-radius: 25rem;\n}\n\n.select-button .p-button:first-of-type:not(:only-of-type) {\n  border-top-left-radius: 25rem;\n  border-bottom-left-radius: 25rem;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n</style>\n","import { useMutation, useQueryClient } from '@tanstack/vue-query';\nimport type { UseMutationReturnType } from '@tanstack/vue-query';\nimport { useAuthStore } from '@/store/auth';\nimport { TASKS_QUERY_KEY, TASK_VARIANTS_QUERY_KEY } from '@/constants/queryKeys';\nimport { TASK_VARIANT_ADD_MUTATION_KEY } from '@/constants/mutationKeys';\n\ninterface TaskVariantData {\n  [key: string]: any;\n}\n\n/**\n * Add Task Variant mutation.\n *\n * TanStack mutation to add a task variant and automatically invalidate the corresponding queries.\n * @TODO: Evaluate if we can apply optimistic updates to prevent invalidating/refetching the data.\n * @TODO: Consider merging this with `useUpdateTaskVariantMutation` into a single `useUpsertTaskVariantMutation`.\n * Currently difficult to achieve due to the underlaying firekit functions being different.\n *\n * @returns The mutation object returned by `useMutation`.\n */\n\nconst useAddTaskVariantMutation = (): UseMutationReturnType<void, Error, TaskVariantData, unknown> => {\n  const authStore = useAuthStore();\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationKey: TASK_VARIANT_ADD_MUTATION_KEY,\n    mutationFn: async (variant: TaskVariantData): Promise<void> => {\n      await authStore.roarfirekit.registerTaskVariant({ ...variant });\n    },\n    onSuccess: (): void => {\n      queryClient.invalidateQueries({ queryKey: [TASKS_QUERY_KEY] });\n      queryClient.invalidateQueries({ queryKey: [TASK_VARIANTS_QUERY_KEY] });\n    },\n  });\n};\n\nexport default useAddTaskVariantMutation;\n","import { useMutation, useQueryClient } from '@tanstack/vue-query';\nimport type { UseMutationReturnType } from '@tanstack/vue-query';\nimport { useAuthStore } from '@/store/auth';\nimport { TASKS_QUERY_KEY, TASK_VARIANTS_QUERY_KEY } from '@/constants/queryKeys';\nimport { TASK_VARIANT_UPDATE_MUTATION_KEY } from '@/constants/mutationKeys';\n\ninterface TaskVariantData {\n  [key: string]: any;\n}\n\n/**\n * Update Task Variant mutation.\n *\n * TanStack mutation to update a task variant and automatically invalidate the corresponding queries.\n * @TODO: Evaluate if we can apply optimistic updates to prevent invalidating/refetching the data.\n * @TODO: Consider merging this with `useAddTaskVariantMutation` into a single `useUpsertTaskVariantMutation`. Currently\n * difficult to achieve due to the underlaying firekit functions being different.\n *\n * @returns The mutation object returned by `useMutation`.\n */\n\nconst useUpdateTaskVariantMutation = (): UseMutationReturnType<void, Error, TaskVariantData, unknown> => {\n  const authStore = useAuthStore();\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationKey: TASK_VARIANT_UPDATE_MUTATION_KEY,\n    mutationFn: async (variant: TaskVariantData): Promise<void> => {\n      await authStore.roarfirekit.updateTaskOrVariant(variant);\n    },\n    onSuccess: (): void => {\n      queryClient.invalidateQueries({ queryKey: [TASKS_QUERY_KEY] });\n      queryClient.invalidateQueries({ queryKey: [TASK_VARIANTS_QUERY_KEY] });\n    },\n  });\n};\n\nexport default useUpdateTaskVariantMutation;\n","<template>\n  <PvToast />\n  <PvSelectButton\n    v-model=\"viewModel\"\n    :options=\"modelViews\"\n    class=\"flex my-2 select-button p-2\"\n    @change=\"handleViewChange($event.value)\"\n  />\n  <div v-show=\"viewModel === 'Create Variant'\">\n    <div class=\"card px-3\">\n      <form class=\"p-fluid\" @submit.prevent=\"handleVariantSubmit(!v$.$invalid)\">\n        <h1 class=\"text-center font-bold\">Create a New Variant</h1>\n\n        <div class=\"flex flex-column row-gap-3\">\n          <section class=\"form-section\">\n            <div class=\"flex justify-content-between align-items-center\">\n              <label for=\"variant-fields\">\n                <small class=\"text-gray-400 font-bold\">Select an Existing Task </small>\n                <span class=\"required\">*</span></label\n              >\n              <div class=\"flex flex-column gap-2 align-items-end\">\n                <div class=\"flex flex-row align-items-center justify-content-end gap-2 flex-order-1\">\n                  <!--                    This does not seemt to function properly, comming it out for now.-->\n                  <!--                    <label class=\"ml-7\" for=\"chbx-registeredTask\">Search registered tasks only?</label>-->\n                  <!--                    <PvCheckbox v-model=\"registeredTasksOnly\" input-id=\"chbx-registeredTask\" :binary=\"true\" />-->\n                </div>\n              </div>\n            </div>\n            <PvDropdown\n              v-model=\"v$.selectedGame.$model\"\n              :options=\"formattedTasks\"\n              option-label=\"name\"\n              placeholder=\"Select a Game\"\n              :loading=\"isFetchingTasks\"\n              :class=\"{ 'p-invalid': v$.variantName.$invalid && submitted }\"\n              name=\"variant-fields\"\n              @click=\"clearFieldParamArrays()\"\n            ></PvDropdown>\n            <span v-if=\"v$.selectedGame.$error && submitted\">\n              <span v-for=\"(error, index) of v$.selectedGame.$errors\" :key=\"index\">\n                <small class=\"p-error\">{{ error.$message }}</small>\n              </span>\n            </span>\n            <small\n              v-else-if=\"(v$.selectedGame.$invalid && submitted) || v$.selectedGame.$pending.$response\"\n              class=\"p-error\"\n            >\n              {{ v$.selectedGame.id.required.$message.replace('Value', 'Task selection') }}\n            </small>\n          </section>\n\n          <section class=\"form-section\">\n            <div class=\"p-input-icon-right\">\n              <label for=\"variantName\">\n                <small class=\"text-gray-400 font-bold\">Variant Name </small>\n                <span class=\"required\">*</span></label\n              >\n              <PvInputText\n                v-model=\"v$.variantName.$model\"\n                name=\"variantName\"\n                :class=\"{ 'p-invalid': v$.variantName.$invalid && submitted }\"\n                aria-describedby=\"activation-code-error\"\n              />\n            </div>\n            <span v-if=\"v$.variantName.$error && submitted\">\n              <span v-for=\"(error, index) of v$.variantName.$errors\" :key=\"index\">\n                <small class=\"p-error\">{{ error.$message }}</small>\n              </span>\n            </span>\n            <small\n              v-else-if=\"(v$.variantName.$invalid && submitted) || v$.variantName.$pending.$response\"\n              class=\"p-error\"\n            >\n              {{ v$.variantName.required.$message.replace('Value', 'Variant Name') }}\n            </small>\n          </section>\n        </div>\n\n        <div class=\"flex flex-column align-items-center\">\n          <h3 class=\"text-center\">\n            <strong>Configure Parameter Values</strong>\n          </h3>\n          <h4 class=\"text-center\">\n            Set the game parameters for a new variant of task\n            <strong>{{ variantFields.selectedGame.id }}</strong>\n          </h4>\n          <div class=\"flex flex-column\">\n            <!--\n            Each param looks like this:\n            {\"name\": \"someParam\", \"type\": \"string, boolean, or number\", \"value\": \"valueOfParam\"}\n\n            We want to assign the value of param.name to the value of the equivalent key in variantParams\n\n            So if param.name is \"someParam\", then\n            variantParams[param.name] returns the value of variantParams.someParam,which is the value that we want to change for a new variant\n-->\n            <div\n              v-for=\"(param, index) in mappedGameConfig\"\n              :key=\"index\"\n              class=\"flex align-items-center justify-content-center dynamic-param-container gap-4\"\n            >\n              <div v-if=\"!deletedParams.includes(param.name)\" class=\"flex align-items-center\">\n                <label for=\"inputParamName\">Parameter:</label>\n\n                <PvInputText id=\"inputParamName\" v-model=\"variantParams[param.name]\" :value=\"param.name\" disabled />\n              </div>\n\n              <div class=\"flex align-items-center\">\n                <label for=\"inputParamType\">Type:</label>\n                <PvInputText id=\"inputParamType\" v-model=\"param.type\" :value=\"param.type\" disabled />\n              </div>\n\n              <div class=\"flex align-items-center gap-2 flex-grow-1\">\n                <label for=\"inputParamValue\">Value:</label>\n                <PvInputText\n                  v-if=\"param.type === 'string'\"\n                  id=\"inputParamValue\"\n                  v-model=\"variantParams[param.name]\"\n                  placeholder=\"Set game parameter to desired value\"\n                  class=\"flex-grow-1\"\n                />\n                <PvDropdown\n                  v-else-if=\"param.type === 'boolean'\"\n                  id=\"inputParamValue\"\n                  v-model=\"variantParams[param.name]\"\n                  :options=\"booleanDropDownOptions\"\n                  option-label=\"label\"\n                  option-value=\"value\"\n                  placeholder=\"Set game parameter to desired value\"\n                  class=\"flex-grow-1\"\n                />\n                <PvInputNumber\n                  v-else-if=\"param.type === 'number'\"\n                  id=\"inputParamValue\"\n                  v-model=\"variantParams[param.name]\"\n                  placeholder=\"Set game parameter to desired value\"\n                  class=\"flex-grow-1\"\n                />\n              </div>\n\n              <div>\n                <PvButton\n                  type=\"button\"\n                  icon=\"pi pi-trash\"\n                  class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n                  text\n                  @click=\"moveToDeletedParams(param.name)\"\n                />\n              </div>\n            </div>\n\n            <div v-if=\"newParams.length > 0\" class=\"w-full\">\n              <div v-for=\"(field, index) in newParams\" :key=\"index\" class=\"flex align-items-center column-gap-2 mb-1\">\n                <PvInputText v-model=\"field.name\" placeholder=\"Field Name\" />\n                <PvDropdown\n                  v-model=\"field.type\"\n                  :options=\"['string', 'number', 'boolean']\"\n                  placeholder=\"Field Type\"\n                  class=\"w-fit\"\n                />\n\n                <PvInputText\n                  v-if=\"field.type === 'string'\"\n                  v-model=\"field.value\"\n                  placeholder=\"Field Value\"\n                  class=\"w-full\"\n                />\n                <PvInputNumber\n                  v-if=\"field.type === 'number'\"\n                  v-model=\"field.value\"\n                  placeholder=\"Field Value\"\n                  class=\"w-full\"\n                />\n                <PvDropdown\n                  v-if=\"field.type === 'boolean'\"\n                  v-model=\"field.value\"\n                  placeholder=\"Field Value\"\n                  :options=\"booleanDropDownOptions\"\n                  option-label=\"label\"\n                  option-value=\"value\"\n                  class=\"w-full\"\n                />\n                <PvButton\n                  type=\"button\"\n                  icon=\"pi pi-trash\"\n                  class=\"w-4rem bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n                  text\n                  @click=\"removeField(field.name, newParams)\"\n                />\n              </div>\n            </div>\n          </div>\n          <PvButton\n            label=\"Add Parameter\"\n            text\n            icon=\"pi pi-plus\"\n            class=\"w-2 my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n            @click=\"newParam\"\n          />\n        </div>\n        <div class=\"flex flex-row align-items-center justify-content-center gap-2 flex-order-0 my-3\">\n          <div class=\"flex flex-row align-items-center\">\n            <PvCheckbox\n              v-model=\"variantCheckboxData\"\n              input-id=\"chbx-demoVariant\"\n              name=\"variantCheckboxData\"\n              value=\"isDemoVariant\"\n            />\n            <label class=\"ml-1 mr-3\" for=\"chbx-demoVariant\">Mark as <b>Demo Variant</b></label>\n          </div>\n          <div class=\"flex flex-row align-items-center\">\n            <PvCheckbox\n              v-model=\"variantCheckboxData\"\n              input-id=\"chbx-testVariant\"\n              name=\"variantCheckboxData\"\n              value=\"isTestVariant\"\n            />\n            <label class=\"ml-1 mr-3\" for=\"chbx-testVariant\">Mark as <b>Test Variant</b></label>\n          </div>\n          <div class=\"flex flex-row align-items-center\">\n            <div class=\"flex flex-row align-items-center\">\n              <PvCheckbox\n                v-model=\"variantCheckboxData\"\n                input-id=\"chbx-registeredVariant\"\n                name=\"variantCheckboxData\"\n                value=\"isRegisteredVariant\"\n              />\n              <label class=\"ml-1 mr-3\" for=\"chbx-externalVariant\">Mark as <b>Registered Variant</b></label>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-submit\">\n          <PvButton\n            type=\"submit\"\n            label=\"Submit\"\n            class=\"submit-button w-2 my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n            severity=\"primary\"\n          />\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div v-show=\"viewModel === 'Update Variant'\">\n    <h1 class=\"text-center font-bold\">Update a Variant</h1>\n    <form @submit.prevent=\"handleUpdateVariant()\">\n      <section class=\"flex flex-column gap-2 mb-4 p-4\">\n        <label for=\"task-select\" class=\"my-2\">\n          <small class=\"text-gray-400 font-bold\">Select an Existing Task </small>\n          <span class=\"required\">*</span></label\n        >\n        <PvDropdown\n          v-model=\"selectedTask\"\n          :options=\"formattedTasks\"\n          option-label=\"name\"\n          option-value=\"id\"\n          placeholder=\"Select a Game\"\n          @click=\"clearFieldParamArrays()\"\n        />\n        <label for=\"variant-select\" class=\"my-2\">\n          <small class=\"text-gray-400 font-bold\">Select an Existing Variant </small>\n          <span class=\"required\">*</span></label\n        >\n        <PvDropdown\n          v-model=\"selectedVariant\"\n          :options=\"filteredVariants\"\n          :option-label=\"(data) => (data.variant.name ? data.variant.name : data.variant.id)\"\n          option-value=\"variant\"\n          placeholder=\"Select a Variant\"\n          @click=\"clearFieldParamArrays()\"\n        />\n      </section>\n\n      <section v-if=\"selectedVariant\" class=\"flex flex-column align-items-start mt-4 p-4\">\n        <div class=\"flex flex-column w-full\">\n          <label for=\"fieldsOutput\">\n            <strong>Fields</strong>\n          </label>\n          <div v-for=\"(value, key) in selectedVariant\" id=\"fieldsOutput\" :key=\"key\">\n            <div v-if=\"!ignoreFields.includes(key)\">\n              <div\n                v-if=\"updatedVariantData[key] !== undefined\"\n                class=\"flex align-items-center justify-content-between gap-2 mb-1\"\n              >\n                <label :for=\"key\" class=\"w-1\">\n                  <em>{{ key }}</em>\n                </label>\n                <PvInputText id=\"inputEditVariantType\" :placeholder=\"typeof value\" disabled class=\"w-2 text-center\" />\n                <PvInputText\n                  v-if=\"typeof value === 'string'\"\n                  v-model=\"updatedVariantData[key]\"\n                  :placeholder=\"value\"\n                  class=\"flex-grow-1\"\n                />\n                <PvInputNumber\n                  v-else-if=\"typeof value === 'number'\"\n                  v-model=\"updatedVariantData[key]\"\n                  class=\"flex-grow-1\"\n                />\n                <PvDropdown\n                  v-else-if=\"typeof value === 'boolean'\"\n                  v-model=\"updatedVariantData[key]\"\n                  :options=\"booleanDropDownOptions\"\n                  option-label=\"label\"\n                  option-value=\"value\"\n                  class=\"flex-grow-1\"\n                />\n                <PvButton\n                  type=\"button\"\n                  icon=\"pi pi-trash\"\n                  class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n                  text\n                  @click=\"deleteParam(key)\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"addedFields.length > 0\" class=\"w-full\">\n            <div v-for=\"(field, index) in addedFields\" :key=\"index\" class=\"flex align-items-center column-gap-2 mb-1\">\n              <PvInputText v-model=\"field.name\" placeholder=\"Field Name\" />\n              <PvDropdown v-model=\"field.type\" :options=\"['string', 'number', 'boolean']\" placeholder=\"Field Type\" />\n\n              <PvInputText\n                v-if=\"field.type === 'string'\"\n                v-model=\"field.value\"\n                placeholder=\"Field Value\"\n                class=\"flex-grow-1\"\n              />\n              <PvInputNumber\n                v-if=\"field.type === 'number'\"\n                v-model=\"field.value\"\n                placeholder=\"Field Value\"\n                class=\"flex-grow-1\"\n              />\n              <PvDropdown\n                v-if=\"field.type === 'boolean'\"\n                v-model=\"field.value\"\n                placeholder=\"Field Value\"\n                :options=\"booleanDropDownOptions\"\n                option-label=\"label\"\n                option-value=\"value\"\n                class=\"flex-grow-1\"\n              />\n              <PvButton\n                type=\"button\"\n                icon=\"pi pi-trash\"\n                class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n                @click=\"removeField(field.name, addedFields)\"\n              />\n            </div>\n          </div>\n        </div>\n        <PvButton\n          label=\"Add Field\"\n          text\n          icon=\"pi pi-plus\"\n          class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n          @click=\"addField\"\n        />\n\n        <!--          **** Disabling the function to edit game params for now ****-->\n\n        <!--          <div class=\"flex flex-column w-8\">-->\n        <!--            <label for=\"paramsOutput\">-->\n        <!--              <strong>Game Params</strong>-->\n        <!--            </label>-->\n        <!--            <div v-for=\"(param, paramName) in selectedVariant.params\" id=\"paramsOutput\" :key=\"paramName\" class=\"mb-1\">-->\n        <!--              <div-->\n        <!--                v-if=\"updatedVariantData.params[paramName] !== undefined\"-->\n        <!--                class=\"flex align-items-center justify-content-end column-gap-2\"-->\n        <!--              >-->\n        <!--                <label :for=\"paramName\" class=\"w-2\">-->\n        <!--                  <em>{{ paramName }} </em>-->\n        <!--                </label>-->\n        <!--                <PvInputText id=\"inputEditParamType\" :placeholder=\"typeof param\" class=\"w-2\" disabled />-->\n        <!--                <PvInputText-->\n        <!--                  v-if=\"typeof param === 'string'\"-->\n        <!--                  v-model=\"updatedVariantData.params[paramName]\"-->\n        <!--                  :placeholder=\"param\"-->\n        <!--                  class=\"flex-grow-1\"-->\n        <!--                />-->\n        <!--                <PvInputNumber-->\n        <!--                  v-else-if=\"typeof param === 'number'\"-->\n        <!--                  v-model=\"updatedVariantData.params[paramName]\"-->\n        <!--                  class=\"flex-grow-1\"-->\n        <!--                />-->\n        <!--                <PvDropdown-->\n        <!--                  v-else-if=\"typeof param === 'boolean'\"-->\n        <!--                  v-model=\"updatedVariantData.params[paramName]\"-->\n        <!--                  :options=\"booleanDropDownOptions\"-->\n        <!--                  option-label=\"label\"-->\n        <!--                  option-value=\"value\"-->\n        <!--                  class=\"flex-grow-1\"-->\n        <!--                />-->\n        <!--                <PvButton type=\"button\" @click=\"deleteParam(paramName)\">Delete</PvButton>-->\n        <!--              </div>-->\n        <!--            </div>-->\n        <!--            <div v-if=\"addedParams.length > 0\">-->\n        <!--              <div v-for=\"(field, index) in addedParams\" :key=\"index\" class=\"flex align-items-center column-gap-2 mb-1\">-->\n        <!--                <PvInputText v-model=\"field.name\" placeholder=\"Field Name\" />-->\n        <!--                <PvDropdown v-model=\"field.type\" :options=\"['string', 'number', 'boolean']\" placeholder=\"Field Type\" />-->\n        <!--                <PvInputText-->\n        <!--                  v-if=\"field.type === 'string'\"-->\n        <!--                  v-model=\"field.value\"-->\n        <!--                  placeholder=\"Field Value\"-->\n        <!--                  class=\"flex-grow-1\"-->\n        <!--                />-->\n        <!--                <PvInputNumber-->\n        <!--                  v-if=\"field.type === 'number'\"-->\n        <!--                  v-model=\"field.value\"-->\n        <!--                  placeholder=\"Field Value\"-->\n        <!--                  class=\"flex-grow-1\"-->\n        <!--                />-->\n        <!--                <PvDropdown-->\n        <!--                  v-if=\"field.type === 'boolean'\"-->\n        <!--                  v-model=\"field.value\"-->\n        <!--                  placeholder=\"Field Value\"-->\n        <!--                  :options=\"booleanDropDownOptions\"-->\n        <!--                  option-label=\"label\"-->\n        <!--                  option-value=\"value\"-->\n        <!--                  class=\"flex-grow-1\"-->\n        <!--                />-->\n        <!--                <PvButton type=\"button\" @click=\"removeField(field.name, addedParams)\">Delete</PvButton>-->\n        <!--              </div>-->\n        <!--            </div>-->\n        <!--          </div>-->\n        <!--          <PvButton label=\"Add Param\" text icon=\"pi pi-plus\" class=\"my-4\" @click=\"addParam\" />-->\n      </section>\n\n      <PvButton type=\"submit\" class=\"my-4 bg-primary text-white border-none border-round p-2 hover:bg-red-900\"\n        >Update Variant</PvButton\n      >\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, reactive, ref, watch } from 'vue';\nimport { required } from '@vuelidate/validators';\nimport { useVuelidate } from '@vuelidate/core';\nimport { storeToRefs } from 'pinia';\nimport { useToast } from 'primevue/usetoast';\nimport PvButton from 'primevue/button';\nimport PvCheckbox from 'primevue/checkbox';\nimport PvDropdown from 'primevue/dropdown';\nimport PvInputNumber from 'primevue/inputnumber';\nimport PvInputText from 'primevue/inputtext';\nimport PvSelectButton from 'primevue/selectbutton';\nimport PvToast from 'primevue/toast';\nimport { cloneDeep, camelCase } from 'lodash';\nimport { useAuthStore } from '@/store/auth';\nimport useTasksQuery from '@/composables/queries/useTasksQuery';\nimport useTaskVariantsQuery from '@/composables/queries/useTaskVariantsQuery';\nimport useAddTaskVariantMutation from '@/composables/mutations/useAddTaskVariantMutation';\nimport useUpdateTaskVariantMutation from '@/composables/mutations/useUpdateTaskVariantMutation';\n\nconst toast = useToast();\nconst initialized = ref(false);\nconst registeredTasksOnly = ref(true);\nconst variantCheckboxData = ref();\nconst authStore = useAuthStore();\nconst { roarfirekit } = storeToRefs(authStore);\n\nconst { mutate: addVariant } = useAddTaskVariantMutation();\nconst { mutate: updateVariant } = useUpdateTaskVariantMutation();\n\nconst selectedTask = ref(null);\nconst selectedVariant = ref(null);\n// Reactive clone for holding changes made to variantData without affecting the original variantData and avoiding reactivity issues\nlet updatedVariantData = reactive(cloneDeep(selectedVariant.value));\n// Array of objects which models the new fields added to the variant\n// This array of objects is later converted back into an object and spread into the updatedVariantData object\nlet addedFields = reactive([]);\n\n// Array of objects which models the new params added to the variant\n// This array of objects is later converted back into an object and spread into the updatedVariantData object\n// let addedParams = reactive([]);\n// Array of objects which models the new params added to the variant to be created\n// This array of objects is later converted back into an object and spread into the variantParams object\n\nlet newParams = reactive([]);\n\nconst viewModel = ref('Create Variant');\nconst modelViews = ['Create Variant', 'Update Variant'];\n\nconst handleViewChange = (value) => {\n  const selectedView = modelViews.find((view) => view === value);\n  if (selectedView) {\n    viewModel.value = selectedView;\n  }\n};\n\n// Fields to ignore when displaying variant data\nconst ignoreFields = ['id', 'lastUpdated', 'params', 'parentDoc'];\n\nconst booleanDropDownOptions = [\n  { label: 'true', value: true },\n  { label: 'false', value: false },\n];\n\nwatch(selectedVariant, (newVal) => {\n  updatedVariantData = reactive(cloneDeep(newVal));\n});\n\nlet unsubscribe;\nconst init = () => {\n  if (unsubscribe) unsubscribe();\n  initialized.value = true;\n};\n\nunsubscribe = authStore.$subscribe(async (mutation, state) => {\n  if (state.roarfirekit.restConfig) init();\n});\n\nonMounted(() => {\n  if (roarfirekit.value.restConfig) init();\n});\n\nconst { isFetching: isFetchingTasks, data: tasks } = useTasksQuery({\n  enabled: initialized,\n});\n\nconst { data: variants } = useTaskVariantsQuery(registeredTasksOnly, {\n  enabled: initialized,\n});\n\nconst formattedTasks = computed(() => {\n  if (!tasks.value) return [];\n  return tasks.value.map((task) => {\n    return {\n      name: task.taskName ?? task.id,\n      ...task,\n    };\n  });\n});\n\n// Filter variants based on selected task\nconst filteredVariants = computed(() => {\n  if (!variants.value || !selectedTask.value) {\n    return [];\n  }\n\n  return variants.value.filter((variant) => variant.task.id === selectedTask.value);\n});\n\n// Fields for modeling  a new variant\nconst variantFields = reactive({\n  variantName: '',\n  selectedGame: {},\n  // Based on type of account?\n  external: true,\n});\n\n// Validation rules for variantFields\nconst variantRules = {\n  variantName: { required },\n  selectedGame: {\n    id: { required },\n  },\n};\nconst v$ = useVuelidate(variantRules, variantFields);\nconst submitted = ref(false);\n\n// Turn mappedGameConfig into an object {key: value, key: value...} which models gameConfig, filtered for deleted params\n// This builds the object of parameters that will be sent to the DB\nconst variantParams = computed(() => {\n  const params = reactive({});\n\n  if (!mappedGameConfig.value) {\n    return params;\n  }\n\n  mappedGameConfig.value.forEach((param) => {\n    params[param.name] = param.value;\n  });\n\n  return params;\n});\n\n// Turn the gameConfig object into an array of key/value pairs [{name: 'key', value: 'value', type: 'type'}...]\n// This allows simplified editing of the gameConfig object\nconst mappedGameConfig = computed(() => {\n  // Prevent any errors if selectedGame is not set\n  if (!variantFields.selectedGame?.gameConfig) {\n    return [];\n  }\n\n  return Object.entries(variantFields.selectedGame.gameConfig).map(([key, value]) => ({\n    name: key,\n    type: typeof value,\n    value: value,\n  }));\n});\n\n// Keep track of params that are not needed for the particular variant when creating a new variant\nconst deletedParams = ref([]);\n\n// Push the name of the param to the deletedParams array\n// Remove the param from the mappedGameConfig array\n// Remove the param from the variantParams object\nconst moveToDeletedParams = (param) => {\n  for (const _param of mappedGameConfig.value) {\n    if (_param.name === param) {\n      console.log(mappedGameConfig.value.indexOf(_param));\n      const index = mappedGameConfig.value.indexOf(_param);\n      mappedGameConfig.value = mappedGameConfig.value.splice(index, 1);\n      delete variantParams.value[_param.name];\n    }\n  }\n  deletedParams.value.push(param);\n};\n\n// Delete the param from the updatedVariantData object when updating a variant\nconst deleteParam = (param) => {\n  if (updatedVariantData['params'][param] !== undefined) {\n    delete updatedVariantData['params'][param];\n  }\n  delete updatedVariantData[param];\n};\n\n// Add a new field to the updatedVariantData object when updating a variant\nconst addField = () => {\n  addedFields.push({ name: '', value: '', type: 'string' });\n};\n\n// Remove a field from the addedFields array when updating a variant\nconst removeField = (field, array) => {\n  const updatedFields = array.filter((item) => item.name !== field);\n  array.splice(0, array.length, ...updatedFields);\n};\n\n// Add a new param to the updatedVariantData object when updating a variant\n// const addParam = () => {\n//   addedParams.push({ name: '', value: '', type: 'string' });\n// };\n\n// Add a new param to the newParams array when creating a new variant\nconst newParam = () => {\n  newParams.push({ name: '', value: '', type: 'string' });\n};\n\n// Convert an array of paramType objects into a single object\nfunction convertParamsToObj(paramType) {\n  return paramType.reduce((acc, item) => {\n    if (item.name) {\n      // Check if name is not empty\n      acc[camelCase(item.name)] = item.value;\n    }\n    return acc;\n  }, {});\n}\n\n// Takes the array of objects that will be added to the current data object in Firestore\n// and checks if any of the new fields are duplicates of existing fields to prevent overwriting data\nconst checkForDuplicates = (newItemsArray, currentDataObject) => {\n  if (currentDataObject === undefined) return { isDuplicate: false, duplicateField: '' };\n\n  const keys = Object.keys(currentDataObject);\n  for (const newItem of newItemsArray) {\n    if (keys.includes(newItem.name)) {\n      return { isDuplicate: true, duplicateField: newItem.name };\n    }\n  }\n  return { isDuplicate: false, duplicateField: '' };\n};\n\nfunction checkVariantExists(value) {\n  variants.value.forEach((item) => {\n    if (value === item.variant?.name) {\n      toast.add({\n        severity: 'error',\n        summary: 'Oops!',\n        detail: `Variant with name '${value}' already exists. Please choose a different name.`,\n        life: 3000,\n      });\n      return true;\n    }\n    return false;\n  });\n}\n\n// Helper function to check for errors before updating a task\n// Returns true if there are errors, false if there are none\nconst checkForErrors = () => {\n  if (addedFields.length > 0) {\n    const { isDuplicate, duplicateField } = checkForDuplicates(addedFields, updatedVariantData);\n    if (isDuplicate) {\n      toast.add({\n        severity: 'error',\n        summary: 'Oops!',\n        detail: `Duplicate field name detected: ${duplicateField}.`,\n        life: 3000,\n      });\n      return true;\n    }\n  }\n\n  if (newParams.length > 0) {\n    const { isDuplicate, duplicateField } = checkForDuplicates(newParams, variantParams.value);\n    if (isDuplicate) {\n      toast.add({\n        severity: 'error',\n        summary: 'Oops!',\n        detail: `Duplicate field name detected: ${duplicateField}.`,\n        life: 3000,\n      });\n      return true;\n    }\n  }\n};\n\nconst handleUpdateVariant = async () => {\n  // Check for errors before updating a variant; end function if errors are found\n  if (checkForErrors()) return;\n\n  // Additional error checking; could be combined into checkForErrors()\n  // With some additional logic\n  if (!selectedTask.value) {\n    toast.add({\n      severity: 'error',\n      summary: 'Invalid Form',\n      detail: 'Please select a task.',\n      life: 3000,\n    });\n    return;\n  }\n\n  if (!selectedVariant.value) {\n    toast.add({\n      severity: 'error',\n      summary: 'Invalid Form',\n      detail: 'Please select a variant.',\n      life: 3000,\n    });\n    return;\n  }\n\n  const convertedFields = convertParamsToObj(addedFields);\n  // const convertedParams = convertParamsToObj(addedParams);\n\n  const variantData = {\n    taskId: selectedTask.value,\n    variantId: selectedVariant.value.id,\n    data: {\n      ...updatedVariantData,\n      ...convertedFields,\n      // params: {\n      //   ...updatedVariantData.params,\n      //   ...convertedParams,\n      // },\n    },\n  };\n\n  await updateVariant(variantData, {\n    onSuccess: () => {\n      toast.add({\n        severity: 'success',\n        summary: 'Hoorah!',\n        detail: 'Variant successfully updated.',\n        life: 3000,\n      });\n      resetUpdateVariantForm();\n    },\n    onError: (error) => {\n      toast.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'Unable to update variant, please try again.',\n        life: 3000,\n      });\n      console.error('Failed to update task.', error);\n    },\n  });\n};\n\nconst handleVariantSubmit = async (isFormValid) => {\n  if (checkForErrors()) return;\n\n  if (checkVariantExists(variantFields.variantName)) return;\n\n  submitted.value = true;\n  const isDemoData = !!variantCheckboxData.value?.find((item) => item === 'isDemoVariant');\n  const isTestData = !!variantCheckboxData.value?.find((item) => item === 'isTestVariant');\n  // const isExternalVariant = !!variantCheckboxData.value?.find((item) => item === 'isExternalVariant');\n  const isRegisteredVariant = !!variantCheckboxData.value?.find((item) => item === 'isRegisteredVariant');\n\n  if (!isFormValid) {\n    return;\n  }\n\n  const convertedParams = convertParamsToObj(newParams) ?? {};\n\n  const combinedParams = {\n    ...variantParams.value,\n    ...convertedParams,\n  };\n\n  const newVariantObject = reactive({\n    taskId: variantFields.selectedGame.id,\n    taskDescription: variantFields.selectedGame.description,\n    taskImage: variantFields.selectedGame.image,\n    variantName: variantFields.variantName,\n    variantParams: combinedParams,\n    demoData: {\n      task: !!variantFields.selectedGame?.demoData,\n      variant: isDemoData,\n    },\n    testData: {\n      task: !!variantFields.selectedGame?.testData,\n      variant: isTestData,\n    },\n    registered: isRegisteredVariant,\n  });\n\n  await addVariant(newVariantObject, {\n    onSuccess: () => {\n      toast.add({\n        severity: 'success',\n        summary: 'Hoorah!',\n        detail: 'Variant successfully created.',\n        life: 3000,\n      });\n      submitted.value = false;\n      resetCreateVariantForm();\n    },\n    onError: (error) => {\n      toast.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'Unable to create variant, please try again.',\n        life: 3000,\n      });\n      console.error('Failed to add variant.', error);\n    },\n  });\n};\n\nfunction resetCreateVariantForm() {\n  Object.assign(variantFields, {\n    variantName: '',\n    selectedGame: {},\n    external: true,\n  });\n\n  variantParams.value = [\n    {\n      name: '',\n      value: '',\n      type: 'String',\n    },\n  ];\n\n  variantCheckboxData.value = [];\n  clearFieldParamArrays();\n}\n\nconst resetUpdateVariantForm = () => {\n  selectedTask.value = null;\n  selectedVariant.value = null;\n  updatedVariantData = {};\n  clearFieldParamArrays();\n};\n\nconst clearFieldParamArrays = () => {\n  addedFields = reactive([]);\n  // addedParams = reactive([]);\n  newParams = reactive([]);\n};\n</script>\n\n<style>\n.submit-button {\n  margin: auto;\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n  display: flex;\n  border: none;\n  width: 11.75rem;\n}\n\n.submit-button:hover {\n  background-color: #2b8ecb;\n  color: black;\n}\n\n.select-button .p-button:last-of-type:not(:only-of-type) {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 25rem;\n  border-bottom-right-radius: 25rem;\n}\n\n.select-button .p-button:first-of-type:not(:only-of-type) {\n  border-top-left-radius: 25rem;\n  border-bottom-left-radius: 25rem;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n</style>\n","<template>\n  <main class=\"container main\">\n    <section class=\"main-body\">\n      <div class=\"flex flex-column mb-5\">\n        <div class=\"flex align-items-center flex-wrap gap-3 mb-2\">\n          <i class=\"pi pi-pencil text-gray-400 rounded\" style=\"font-size: 1.6rem\" />\n          <div class=\"admin-page-header\">Manage Tasks</div>\n        </div>\n        <div class=\"text-md text-gray-500 ml-6\">Manage tasks and variants.</div>\n      </div>\n      <div class=\"register-container mx-auto md:flex-none\">\n        <PvTabView>\n          <PvTabPanel header=\"Tasks\">\n            <ManageTasks />\n          </PvTabPanel>\n\n          <PvTabPanel header=\"Variants\">\n            <ManageVariants />\n          </PvTabPanel>\n        </PvTabView>\n      </div>\n    </section>\n  </main>\n</template>\n\n<script setup>\nimport PvTabPanel from 'primevue/tabpanel';\nimport PvTabView from 'primevue/tabview';\nimport ManageTasks from '@/components/tasks/ManageTasks.vue';\nimport ManageVariants from '@/components/tasks/ManageVariants.vue';\n</script>\n\n<style scoped>\n.register-container {\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 5px;\n  border-color: #e5e5e5;\n  background-color: #fcfcfc;\n  width: 75%;\n  position: relative;\n}\n\n.contact-text {\n  padding-top: 2.75rem;\n  padding-bottom: 2rem;\n  text-align: left;\n}\n\n.button-container {\n  display: flex;\n  gap: 1.125rem;\n  justify-content: center;\n  margin-bottom: 6.5rem;\n}\n\n.signin-button {\n  background-color: #e5e5e5;\n  border-color: #c4c4c4;\n  color: black;\n  width: 8rem;\n}\n\n.signin-button:hover {\n  background-color: #b7b5b5;\n  border-color: black;\n  color: black;\n}\n\n.text-btn {\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 16px;\n  color: #2c3e50;\n}\n</style>\n"],"names":["script","Select","useAddTaskMutation","authStore","useAuthStore","queryClient","useQueryClient","useMutation","TASK_ADD_MUTATION_KEY","task","TASKS_QUERY_KEY","useUpdateTaskMutation","TASK_UPDATE_MUTATION_KEY","toast","useToast","initialized","ref","registeredTasksOnly","taskCheckboxData","roarfirekit","storeToRefs","addTask","updateTask","isExternalTask","computed","_a","item","selectedTask","taskData","tasks","updatedTaskData","reactive","cloneDeep","newFields","addedGameConfig","MODEL_VIEWS","viewModel","handleViewChange","value","selectedView","view","watch","newVal","ignoreFields","typeOptions","booleanDropDownOptions","submitted","created","unsubscribe","init","mutation","state","onMounted","useTasksQuery","formattedTasks","taskFields","taskRules","required","requiredIf","url","v$","useVuelidate","gameConfig","taskParams","addField","type","removeField","index","newField","removeNewField","field","array","updatedFields","deleteParam","param","addGameConfig","checkForDuplicates","newItemsArray","currentDataObject","keys","newItem","checkForErrors","isDuplicate","duplicateField","handleUpdateTask","convertedFields","convertParamsToObj","convertedGameConfig","resetUpdateTaskForm","error","handleNewTaskSubmit","isFormValid","isDemoData","isTestData","_b","_c","isRegisteredTask","_d","convertedTaskParams","newTaskObject","buildTaskURL","paramType","acc","camelCase","params","baseURL","queryParams","i","clearFieldConfigArrays","_createVNode","_unref","PvToast","PvSelectButton","$event","_cache","_createElementVNode","_createElementBlock","_hoisted_34","PvButton","_openBlock","_hoisted_1","_withModifiers","_hoisted_2","_hoisted_3","_hoisted_4","PvInputText","_hoisted_5","_Fragment","_renderList","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_23","_hoisted_24","PvDropdown","_createBlock","PvInputNumber","_hoisted_21","_hoisted_22","_hoisted_25","_hoisted_27","_hoisted_26","_hoisted_28","_hoisted_29","PvCheckbox","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_35","_hoisted_36","_hoisted_37","key","_hoisted_38","_hoisted_39","_hoisted_41","_hoisted_42","paramName","_hoisted_43","_hoisted_45","useAddTaskVariantMutation","TASK_VARIANT_ADD_MUTATION_KEY","variant","TASK_VARIANTS_QUERY_KEY","useUpdateTaskVariantMutation","TASK_VARIANT_UPDATE_MUTATION_KEY","variantCheckboxData","addVariant","updateVariant","selectedVariant","updatedVariantData","addedFields","newParams","modelViews","isFetchingTasks","variants","useTaskVariantsQuery","filteredVariants","variantFields","variantParams","mappedGameConfig","deletedParams","moveToDeletedParams","_param","newParam","checkVariantExists","handleUpdateVariant","variantData","resetUpdateVariantForm","handleVariantSubmit","isRegisteredVariant","convertedParams","combinedParams","newVariantObject","_e","resetCreateVariantForm","clearFieldParamArrays","data","PvTabView","PvTabPanel","ManageTasks","ManageVariants"],"mappings":"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","x_google_ignoreList":[0]}