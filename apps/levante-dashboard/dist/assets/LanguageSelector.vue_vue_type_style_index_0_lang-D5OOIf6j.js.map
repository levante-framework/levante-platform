{"version":3,"file":"LanguageSelector.vue_vue_type_style_index_0_lang-D5OOIf6j.js","sources":["../../src/components/LanguageSelector.vue"],"sourcesContent":["<template>\n  <div class=\"language-selector-wrapper\">\n    <div class=\"font-semibold text-color-secondary\">{{ $t('authSignIn.selectLanguageLabel') }}:</div>\n\n    <PvSelect\n      v-model=\"$i18n.locale\"\n      class=\"w-full\"\n      :options=\"languageDropdownOptions\"\n      option-label=\"name\"\n      option-value=\"value\"\n      :placeholder=\"$t('authSignIn.selectLanguage')\"\n      :highlight-on-select=\"true\"\n      @change=\"onLanguageChange\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport PvSelect from 'primevue/select';\nimport { languageOptions } from '@/translations/i18n';\nimport { isLevante } from '@/helpers';\nimport { useSurveyStore } from '@/store/survey';\nimport { setupStudentAudio } from '@/helpers/surveyInitialization';\n\ninterface LanguageOption {\n  name: string;\n  code: string;\n  value: string;\n}\n\ninterface LanguageChangeEvent {\n  value: string;\n}\n\nconst surveyStore = useSurveyStore();\n\n// Convert the object to an array of [key, value] pairs\nconst languageOptionsArray: [string, any][] = Object.entries(languageOptions);\n\n// Sort the array by the key (language code)\nlanguageOptionsArray.sort((a, b) => a[0].localeCompare(b[1]));\n\n// Convert it back to an object\nconst sortedLanguageOptions: Record<string, any> = Object.fromEntries(languageOptionsArray);\n\nconst languageDropdownOptions = computed((): LanguageOption[] => {\n  return Object.entries(sortedLanguageOptions).map(([key, value]) => {\n    return {\n      name: value.language,\n      code: value.code,\n      value: key,\n    };\n  });\n});\n\nasync function onLanguageChange(event: LanguageChangeEvent): Promise<void> {\n  sessionStorage.setItem(`${isLevante ? 'levante' : 'roar'}PlatformLocale`, event.value);\n\n  console.log('event', event.value);\n\n  if (isLevante && surveyStore.survey) {\n    console.log('setting survey locale');\n    (surveyStore.survey as any).locale = event.value;\n    await setupStudentAudio(surveyStore.survey as any, event.value, surveyStore.audioLinkMap, surveyStore);\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.language-selector-wrapper {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.p-select-label {\n  text-align: left;\n}\n</style>\n"],"names":["surveyStore","useSurveyStore","languageOptionsArray","languageOptions","a","b","sortedLanguageOptions","languageDropdownOptions","computed","key","value","onLanguageChange","event","setupStudentAudio","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$t","_createVNode","_unref","PvSelect","$i18n","$event"],"mappings":"wqBAmCA,MAAMA,EAAcC,EAAA,EAGdC,EAAwC,OAAO,QAAQC,CAAe,EAG5ED,EAAqB,KAAK,CAACE,EAAGC,IAAMD,EAAE,CAAC,EAAE,cAAcC,EAAE,CAAC,CAAC,CAAC,EAG5D,MAAMC,EAA6C,OAAO,YAAYJ,CAAoB,EAEpFK,EAA0BC,EAAS,IAChC,OAAO,QAAQF,CAAqB,EAAE,IAAI,CAAC,CAACG,EAAKC,CAAK,KACpD,CACL,KAAMA,EAAM,SACZ,KAAMA,EAAM,KACZ,MAAOD,CAAA,EAEV,CACF,EAED,eAAeE,EAAiBC,EAA2C,CACzE,eAAe,QAAQ,wBAAmDA,EAAM,KAAK,EAErF,QAAQ,IAAI,QAASA,EAAM,KAAK,EAEfZ,EAAY,SAC3B,QAAQ,IAAI,uBAAuB,EAClCA,EAAY,OAAe,OAASY,EAAM,MAC3C,MAAMC,EAAkBb,EAAY,OAAeY,EAAM,MAAOZ,EAAY,aAAcA,CAAW,EAEzG,eAjEEc,EAAA,EAAAC,EAaM,MAbNC,EAaM,CAZJC,EAAiG,MAAjGC,EAAiGC,EAA9CC,EAAAA,sCAAuC,IAAC,CAAA,EAE3FC,EASEC,EAAAC,CAAA,EAAA,CARSC,WAAAA,EAAAA,MAAM,OAANA,sBAAAA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAAAA,GAAAA,EAAAA,MAAM,OAAMC,GACrB,MAAM,SACL,QAASlB,EAAA,MACV,eAAa,OACb,eAAa,QACZ,YAAaa,EAAAA,GAAE,2BAAA,EACf,sBAAqB,GACrB,SAAQT,CAAA"}