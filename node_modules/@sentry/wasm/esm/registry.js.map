{"version":3,"file":"registry.js","sources":["../../../src/registry.ts"],"sourcesContent":["import type { DebugImage } from '@sentry/types';\n\nexport const IMAGES: Array<DebugImage> = [];\n\nexport interface ModuleInfo {\n  buildId: string | null;\n  debugFile: string | null;\n}\n\n/**\n * Returns the extracted meta information from a web assembly module that\n * Sentry uses to identify debug images.\n *\n * @param module\n */\nexport function getModuleInfo(module: WebAssembly.Module): ModuleInfo {\n  const buildIds = WebAssembly.Module.customSections(module, 'build_id');\n  let buildId = null;\n  let debugFile = null;\n\n  if (buildIds.length > 0) {\n    const firstBuildId = new Uint8Array(buildIds[0]);\n    buildId = Array.from(firstBuildId).reduce((acc, x) => {\n      return acc + x.toString(16).padStart(2, '0');\n    }, '');\n  }\n\n  const externalDebugInfo = WebAssembly.Module.customSections(module, 'external_debug_info');\n  if (externalDebugInfo.length > 0) {\n    const firstExternalDebugInfo = new Uint8Array(externalDebugInfo[0]);\n    const decoder = new TextDecoder('utf-8');\n    debugFile = decoder.decode(firstExternalDebugInfo);\n  }\n\n  return { buildId, debugFile };\n}\n\n/**\n * Records a module\n */\nexport function registerModule(module: WebAssembly.Module, url: string): void {\n  const { buildId, debugFile } = getModuleInfo(module);\n  if (buildId) {\n    const oldIdx = getImage(url);\n    if (oldIdx >= 0) {\n      IMAGES.splice(oldIdx, 1);\n    }\n\n    let debugFileUrl = null;\n    if (debugFile) {\n      try {\n        debugFileUrl = new URL(debugFile, url).href;\n      } catch {\n        // debugFile could be a blob URL which causes the URL constructor to throw\n        // for now we just ignore this case\n      }\n    }\n\n    IMAGES.push({\n      type: 'wasm',\n      code_id: buildId,\n      code_file: url,\n      debug_file: debugFileUrl,\n      debug_id: `${buildId.padEnd(32, '0').slice(0, 32)}0`,\n    });\n  }\n}\n\n/**\n * Returns all known images.\n */\nexport function getImages(): Array<DebugImage> {\n  return IMAGES;\n}\n\n/**\n * Looks up an image by URL.\n *\n * @param url the URL of the WebAssembly module.\n */\nexport function getImage(url: string): number {\n  return IMAGES.findIndex(image => {\n    return image.type === 'wasm' && image.code_file === url;\n  });\n}\n"],"names":[],"mappings":"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"}