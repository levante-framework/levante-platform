import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from "jspsych";
declare const info: {
    readonly name: "html-slider-response";
    readonly parameters: {
        /** The HTML string to be displayed */
        readonly stimulus: {
            readonly type: ParameterType.HTML_STRING;
            readonly pretty_name: "Stimulus";
            readonly default: any;
        };
        /** Sets the minimum value of the slider. */
        readonly min: {
            readonly type: ParameterType.INT;
            readonly pretty_name: "Min slider";
            readonly default: 0;
        };
        /** Sets the maximum value of the slider */
        readonly max: {
            readonly type: ParameterType.INT;
            readonly pretty_name: "Max slider";
            readonly default: 100;
        };
        /** Sets the starting value of the slider */
        readonly slider_start: {
            readonly type: ParameterType.INT;
            readonly pretty_name: "Slider starting value";
            readonly default: 50;
        };
        /** Sets the step of the slider */
        readonly step: {
            readonly type: ParameterType.INT;
            readonly pretty_name: "Step";
            readonly default: 1;
        };
        /** Array containing the labels for the slider. Labels will be displayed at equidistant locations along the slider. */
        readonly labels: {
            readonly type: ParameterType.HTML_STRING;
            readonly pretty_name: "Labels";
            readonly default: readonly [];
            readonly array: true;
        };
        /** Width of the slider in pixels. */
        readonly slider_width: {
            readonly type: ParameterType.INT;
            readonly pretty_name: "Slider width";
            readonly default: any;
        };
        /** Label of the button to advance. */
        readonly button_label: {
            readonly type: ParameterType.STRING;
            readonly pretty_name: "Button label";
            readonly default: "Continue";
            readonly array: false;
        };
        /** If true, the participant will have to move the slider before continuing. */
        readonly require_movement: {
            readonly type: ParameterType.BOOL;
            readonly pretty_name: "Require movement";
            readonly default: false;
        };
        /** Any content here will be displayed below the slider. */
        readonly prompt: {
            readonly type: ParameterType.HTML_STRING;
            readonly pretty_name: "Prompt";
            readonly default: any;
        };
        /** How long to show the stimulus. */
        readonly stimulus_duration: {
            readonly type: ParameterType.INT;
            readonly pretty_name: "Stimulus duration";
            readonly default: any;
        };
        /** How long to show the trial. */
        readonly trial_duration: {
            readonly type: ParameterType.INT;
            readonly pretty_name: "Trial duration";
            readonly default: any;
        };
        /** If true, trial will end when user makes a response. */
        readonly response_ends_trial: {
            readonly type: ParameterType.BOOL;
            readonly pretty_name: "Response ends trial";
            readonly default: true;
        };
    };
};
type Info = typeof info;
/**
 * **html-slider-response**
 *
 * jsPsych plugin for showing an HTML stimulus and collecting a slider response
 *
 * @author Josh de Leeuw
 * @see {@link https://www.jspsych.org/plugins/jspsych-html-slider-response/ html-slider-response plugin documentation on jspsych.org}
 */
declare class HtmlSliderResponsePlugin implements JsPsychPlugin<Info> {
    private jsPsych;
    static info: {
        readonly name: "html-slider-response";
        readonly parameters: {
            /** The HTML string to be displayed */
            readonly stimulus: {
                readonly type: ParameterType.HTML_STRING;
                readonly pretty_name: "Stimulus";
                readonly default: any;
            };
            /** Sets the minimum value of the slider. */
            readonly min: {
                readonly type: ParameterType.INT;
                readonly pretty_name: "Min slider";
                readonly default: 0;
            };
            /** Sets the maximum value of the slider */
            readonly max: {
                readonly type: ParameterType.INT;
                readonly pretty_name: "Max slider";
                readonly default: 100;
            };
            /** Sets the starting value of the slider */
            readonly slider_start: {
                readonly type: ParameterType.INT;
                readonly pretty_name: "Slider starting value";
                readonly default: 50;
            };
            /** Sets the step of the slider */
            readonly step: {
                readonly type: ParameterType.INT;
                readonly pretty_name: "Step";
                readonly default: 1;
            };
            /** Array containing the labels for the slider. Labels will be displayed at equidistant locations along the slider. */
            readonly labels: {
                readonly type: ParameterType.HTML_STRING;
                readonly pretty_name: "Labels";
                readonly default: readonly [];
                readonly array: true;
            };
            /** Width of the slider in pixels. */
            readonly slider_width: {
                readonly type: ParameterType.INT;
                readonly pretty_name: "Slider width";
                readonly default: any;
            };
            /** Label of the button to advance. */
            readonly button_label: {
                readonly type: ParameterType.STRING;
                readonly pretty_name: "Button label";
                readonly default: "Continue";
                readonly array: false;
            };
            /** If true, the participant will have to move the slider before continuing. */
            readonly require_movement: {
                readonly type: ParameterType.BOOL;
                readonly pretty_name: "Require movement";
                readonly default: false;
            };
            /** Any content here will be displayed below the slider. */
            readonly prompt: {
                readonly type: ParameterType.HTML_STRING;
                readonly pretty_name: "Prompt";
                readonly default: any;
            };
            /** How long to show the stimulus. */
            readonly stimulus_duration: {
                readonly type: ParameterType.INT;
                readonly pretty_name: "Stimulus duration";
                readonly default: any;
            };
            /** How long to show the trial. */
            readonly trial_duration: {
                readonly type: ParameterType.INT;
                readonly pretty_name: "Trial duration";
                readonly default: any;
            };
            /** If true, trial will end when user makes a response. */
            readonly response_ends_trial: {
                readonly type: ParameterType.BOOL;
                readonly pretty_name: "Response ends trial";
                readonly default: true;
            };
        };
    };
    constructor(jsPsych: JsPsych);
    trial(display_element: HTMLElement, trial: TrialType<Info>): void;
    simulate(trial: TrialType<Info>, simulation_mode: any, simulation_options: any, load_callback: () => void): void;
    private create_simulation_data;
    private simulate_data_only;
    private simulate_visual;
}
export default HtmlSliderResponsePlugin;
