import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  ActionDropdownViewModel,
  Base,
  ButtonGroupItemModel,
  DropdownMultiSelectListModel,
  Helpers,
  PopupSurveyModel,
  ProgressButtonsResponsivityManager,
  RendererFactory,
  ScrollViewModel,
  SurveyModel,
  SurveyProgressModel,
  SvgRegistry,
  addIconsToThemeSet,
  createPopupModalViewModel,
  createPopupViewModel,
  createSvg,
  doKey2ClickBlur,
  doKey2ClickDown,
  doKey2ClickUp,
  settings
} from "./chunk-TYVW7Q6J.js";
import "./chunk-SKPULAU2.js";
import {
  Fragment,
  Teleport,
  computed,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createSlots,
  createStaticVNode,
  createVNode,
  defineComponent,
  getCurrentInstance,
  guardReactiveProps,
  isRef,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeProps,
  normalizeStyle,
  onBeforeUnmount,
  onMounted,
  onUnmounted,
  onUpdated,
  openBlock,
  ref,
  renderList,
  renderSlot,
  resolveDynamicComponent,
  shallowReactive,
  shallowRef,
  toDisplayString,
  toRaw,
  triggerRef,
  unref,
  useSlots,
  vModelCheckbox,
  vModelDynamic,
  vModelRadio,
  vModelSelect,
  vModelText,
  vShow,
  watch,
  watchEffect,
  withCtx,
  withDirectives
} from "./chunk-GBYMHZRU.js";
import {
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-QX3VWGKS.js";

// ../../node_modules/survey-vue3-ui/survey-vue3-ui.es.js
var import_dist = __toESM(require_dist());
var import_dist2 = __toESM(require_dist2());
var import_dist3 = __toESM(require_dist3());
var Ie = Object.defineProperty;
var Ve = (u, e, n) => e in u ? Ie(u, e, { enumerable: true, configurable: true, writable: true, value: n }) : u[e] = n;
var J = (u, e, n) => (Ve(u, typeof e != "symbol" ? e + "" : e, n), n);
var ee = class ee2 {
  constructor() {
    J(this, "creatorHash", {});
  }
  registerComponent(e, n) {
    this.creatorHash[e] = n;
  }
  getComponent(e) {
    return this.creatorHash[e] || e;
  }
  getAllTypes() {
    const e = new Array();
    for (const n in this.creatorHash)
      e.push(n);
    return e.sort();
  }
  isComponentRegistered(e) {
    return !!this.creatorHash[e];
  }
};
J(ee, "Instance", new ee());
var F = ee;
var m = defineComponent({
  inheritAttrs: false,
  __name: "SvComponent",
  props: {
    is: {}
  },
  setup(u) {
    const e = u, n = computed(
      () => F.Instance.getComponent(e.is)
    );
    return (s, o) => (openBlock(), createBlock(resolveDynamicComponent(n.value), normalizeProps(guardReactiveProps(s.$attrs)), createSlots({ _: 2 }, [
      renderList(s.$slots, (t, l) => ({
        name: l,
        fn: withCtx((d) => [
          renderSlot(s.$slots, l, normalizeProps(guardReactiveProps(d)))
        ])
      }))
    ]), 1040));
  }
});
Base.createPropertiesHash = () => shallowReactive({});
var xe = class {
  constructor(e) {
    J(this, "currentNextTickPromise");
    this.element = e;
  }
  async add() {
    const e = nextTick();
    this.currentNextTickPromise !== e && (this.currentNextTickPromise = e, await e, e == this.currentNextTickPromise && this.element.afterRerender());
  }
};
function es(u) {
  if (u) {
    if (u.__vueImplemented = u.__vueImplemented ?? 0, u.__vueImplemented <= 0) {
      const e = new xe(u);
      u.createArrayCoreHandler = (n, s) => {
        const o = [], t = shallowRef(o);
        return o.onArrayChanged = () => {
          triggerRef(t), e.add();
        }, n[s] = t, unref(n[s]);
      }, u.iteratePropertiesHash((n, s) => {
        if (Array.isArray(n[s])) {
          const o = shallowRef(n[s]);
          n[s].onArrayChanged = () => {
            triggerRef(o), e.add();
          }, n[s] = o;
        }
      }), u.getPropertyValueCoreHandler = (n, s) => unref(n[s]), u.setPropertyValueCoreHandler = (n, s, o) => {
        isRef(n[s]) ? n[s].value = o : n[s] = o, e.add();
      };
    }
    u.enableOnElementRerenderedEvent(), u.__vueImplemented++;
  }
}
function ss(u) {
  return !!u.__vueImplemented;
}
function pe(u) {
  u && (u.__vueImplemented = u.__vueImplemented ?? 0, u.__vueImplemented--, u.__vueImplemented <= 0 && (u.iteratePropertiesHash((e, n) => {
    e[n] = unref(e[n]), Array.isArray(e[n]) && (e[n].onArrayChanged = void 0);
  }), delete u.__vueImplemented, u.disableOnElementRerenderedEvent(), u.createArrayCoreHandler = void 0, u.getPropertyValueCoreHandler = void 0, u.setPropertyValueCoreHandler = void 0));
}
function S(u, e, n) {
  const s = watch(
    u,
    (t, l) => {
      t && e && e(t, l), l && (pe(l), n && n(l)), es(t);
    },
    {
      immediate: true
    }
  );
  let o = false;
  onBeforeUnmount(() => {
    if (!o) {
      const t = u();
      t && (pe(t), s(), n && n(t)), o = true;
    }
  });
}
function T(u, e, n, s) {
  S(() => u.question, n, s), onMounted(() => {
    u.question && u.question.afterRenderQuestionElement(e.value);
  }), onBeforeUnmount(() => {
    u.question.beforeDestroyQuestionElement(e.value);
  });
}
function U(u) {
  const e = ref(), n = (t) => {
    e.value = t.renderedHtml;
  }, s = (t) => {
    e.value = t.renderedHtml, t.onStringChanged.add(n);
  }, o = watch(
    u,
    (t, l) => {
      l && l.onStringChanged.remove(n), s(t);
    },
    { immediate: true }
  );
  return onBeforeUnmount(() => {
    const t = u();
    t && t.onStringChanged.remove(n), o();
  }), e;
}
function ie(u) {
  return u.customWidget ? "survey-customwidget" : u.isDefaultRendering && u.isDefaultRendering() || u.isPanel ? "survey-" + u.getTemplate() : u.getComponentName();
}
function se(u) {
  const e = shallowRef(), n = watchEffect(() => {
    e.value = u(), triggerRef(e);
  });
  return onBeforeUnmount(() => {
    n();
  }), e;
}
var ns = defineComponent({
  __name: "Page",
  props: {
    survey: {},
    page: {},
    css: {}
  },
  setup(u) {
    const e = u, n = ref(null), s = () => {
      e.survey && n.value && e.survey.afterRenderPage(n.value);
    }, o = computed(() => e.page._showDescription);
    return S(
      () => e.page,
      () => {
        s();
      }
    ), onMounted(() => {
      s();
    }), (t, l) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(t.page.cssRoot),
      ref_key: "root",
      ref: n
    }, [
      createVNode(m, {
        is: "survey-element-title",
        element: t.page,
        css: t.css
      }, null, 8, ["element", "css"]),
      o.value ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(t.page.cssClasses.page.description)
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: t.page.locDescription
        }, null, 8, ["locString"])
      ], 2)) : createCommentVNode("", true),
      createVNode(m, {
        is: "survey-errors",
        element: t.page
      }, null, 8, ["element"]),
      (openBlock(true), createElementBlock(Fragment, null, renderList(t.page.visibleRows, (d) => (openBlock(), createBlock(m, mergeProps({
        key: d.id,
        is: t.page.getSurvey().getRowWrapperComponentName(d)
      }, {
        componentData: t.page.getSurvey().getRowWrapperComponentData(d)
      }), {
        default: withCtx(() => [
          createVNode(m, {
            is: "survey-row",
            row: d,
            survey: t.survey,
            css: t.css
          }, null, 8, ["row", "survey", "css"])
        ]),
        _: 2
      }, 1040, ["is"]))), 128))
    ], 2));
  }
});
var ts = defineComponent({
  __name: "Header",
  props: {
    survey: {}
  },
  setup(u) {
    const e = u, n = ref();
    return onMounted(() => {
      var s = n.value;
      s && e.survey && e.survey.afterRenderHeader(s);
    }), (s, o) => s.survey.renderedHasHeader ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(s.survey.css.header),
      ref_key: "root",
      ref: n
    }, [
      s.survey.isLogoBefore ? (openBlock(), createBlock(m, {
        key: 0,
        is: s.survey.getElementWrapperComponentName(s.survey, "logo-image"),
        data: s.survey.getElementWrapperComponentData(s.survey, "logo-image")
      }, null, 8, ["is", "data"])) : createCommentVNode("", true),
      s.survey.renderedHasTitle ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(s.survey.css.headerText),
        style: normalizeStyle({ maxWidth: s.survey.titleMaxWidth })
      }, [
        createVNode(m, {
          is: "survey-element-title",
          element: s.survey,
          css: s.survey.css
        }, null, 8, ["element", "css"]),
        s.survey.renderedHasDescription ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(s.survey.css.description)
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: s.survey.locDescription
          }, null, 8, ["locString"])
        ], 2)) : createCommentVNode("", true)
      ], 6)) : createCommentVNode("", true),
      s.survey.isLogoAfter ? (openBlock(), createBlock(m, {
        key: 2,
        is: s.survey.getElementWrapperComponentName(s.survey, "logo-image"),
        data: s.survey.getElementWrapperComponentData(s.survey, "logo-image")
      }, null, 8, ["is", "data"])) : createCommentVNode("", true),
      createBaseVNode("div", {
        class: normalizeClass(s.survey.css.headerClose)
      }, null, 2)
    ], 2)) : createCommentVNode("", true);
  }
});
var os = defineComponent({
  __name: "Row",
  props: {
    row: {},
    css: {},
    survey: {}
  },
  setup(u) {
    const e = u, n = ref();
    let s;
    return S(
      () => e.row,
      (o, t) => {
        o.setRootElement(n.value), t && (o.isNeedRender = t.isNeedRender);
      },
      (o) => {
        ss(o) || (clearTimeout(s), o.setRootElement(void 0), o.stopLazyRendering(), o.isNeedRender = !o.isLazyRendering());
      }
    ), onMounted(() => {
      if (e.row && (e.row.setRootElement(n.value), !e.row.isNeedRender)) {
        const o = n.value;
        setTimeout(() => {
          e.row.startLazyRendering(o);
        }, 10);
      }
    }), (o, t) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(o.row.getRowCss()),
      ref_key: "root",
      ref: n
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(o.row.visibleElements, (l) => (openBlock(), createBlock(m, {
        is: "survey-element",
        row: o.row,
        css: o.css,
        element: l,
        key: l.id
      }, null, 8, ["row", "css", "element"]))), 128))
    ], 2));
  }
});
var is = ["id", "role", "aria-required", "aria-invalid", "aria-label", "aria-labelledby", "aria-describedby", "aria-expanded", "data-name"];
var rs = ["aria-hidden"];
var ls = ["id"];
var as = {
  inheritAttrs: false
};
var us = defineComponent({
  ...as,
  __name: "Question",
  props: {
    survey: {},
    element: {},
    css: {}
  },
  setup(u) {
    const e = u, n = ref(null), s = (q) => q.cssContent, o = () => e.element.getRootStyle(), t = computed(() => e.element.singleInputQuestion);
    S(() => e.element);
    const l = () => {
      n.value && e.element.afterRender(n.value);
    }, d = watch(
      () => n.value,
      () => {
        l();
      }
    ), C = computed(() => e.element.customWidget ? "survey-customwidget" : e.element.isDefaultRendering() ? "survey-" + e.element.getTemplate() : e.element.getComponentName()), L = computed(() => e.element.survey.getQuestionContentWrapperComponentName(e.element)), h = computed(() => ({
      componentData: {
        question: e.element,
        data: e.element.survey.getElementWrapperComponentData(e.element)
      }
    }));
    return onUnmounted(() => {
      d();
    }), (q, b) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(q.element.getRootCss()),
      style: normalizeStyle(o()),
      ref_key: "root",
      ref: n,
      onFocusin: b[0] || (b[0] = (R) => q.element.focusIn()),
      id: q.element.id,
      role: q.element.ariaRole,
      "aria-required": q.element.ariaRequired,
      "aria-invalid": q.element.ariaInvalid,
      "aria-label": q.element.ariaLabel,
      "aria-labelledby": q.element.ariaLabelledBy,
      "aria-describedby": q.element.ariaDescribedBy,
      "aria-expanded": q.element.ariaExpanded,
      "data-name": q.element.name
    }, [
      q.element.singleInputHasActions ? (openBlock(), createBlock(m, {
        key: 0,
        is: "sv-breadcrumbs",
        model: q.element.singleInputActions,
        css: q.element.cssClasses
      }, null, 8, ["model", "css"])) : createCommentVNode("", true),
      q.element.showErrorsAboveQuestion ? (openBlock(), createBlock(m, {
        key: 1,
        is: "survey-errors",
        element: q.element,
        location: "top"
      }, null, 8, ["element"])) : createCommentVNode("", true),
      !q.element.singleInputHideHeader && q.element.hasTitleOnLeftTop ? (openBlock(), createBlock(m, {
        key: 2,
        is: "survey-element-header",
        element: q.element,
        css: q.element.cssClasses
      }, null, 8, ["element", "css"])) : createCommentVNode("", true),
      q.element.singleInputSummary ? (openBlock(), createBlock(m, {
        key: 3,
        is: "sv-single-input-summary",
        css: q.element.cssClasses,
        summary: q.element.singleInputSummary
      }, null, 8, ["css", "summary"])) : t.value ? (openBlock(), createBlock(m, {
        is: "survey-question",
        css: q.css,
        element: t.value,
        survey: q.survey,
        key: t.value.id
      }, null, 8, ["css", "element", "survey"])) : (openBlock(), createBlock(m, mergeProps({
        key: 5,
        is: L.value
      }, h.value), {
        default: withCtx(() => [
          createBaseVNode("div", {
            class: normalizeClass(s(q.element) || void 0),
            "aria-hidden": q.element.contentAriaHidden,
            style: normalizeStyle({ display: q.element.renderedIsExpanded ? void 0 : "none" }),
            role: "presentation"
          }, [
            createVNode(m, {
              is: C.value,
              question: q.element
            }, null, 8, ["is", "question"]),
            q.element.hasComment ? (openBlock(), createElementBlock("div", {
              key: 0,
              class: normalizeClass(q.element.getCommentAreaCss())
            }, [
              createBaseVNode("div", null, [
                createVNode(m, {
                  is: "survey-string",
                  locString: q.element.locCommentText
                }, null, 8, ["locString"])
              ]),
              createVNode(m, {
                is: "survey-question-comment",
                question: q.element
              }, null, 8, ["question"])
            ], 2)) : createCommentVNode("", true),
            q.element.hasDescriptionUnderInput ? (openBlock(), createElementBlock("div", {
              key: 1,
              class: normalizeClass(q.element.cssDescription),
              id: q.element.ariaDescriptionId
            }, [
              createVNode(m, {
                is: "survey-string",
                locString: q.element.locDescription
              }, null, 8, ["locString"])
            ], 10, ls)) : createCommentVNode("", true)
          ], 14, rs)
        ]),
        _: 1
      }, 16, ["is"])),
      q.element.hasTitleOnBottom ? (openBlock(), createBlock(m, {
        key: 6,
        is: "survey-element-header",
        element: q.element,
        css: q.css
      }, null, 8, ["element", "css"])) : createCommentVNode("", true),
      q.element.showErrorsBelowQuestion ? (openBlock(), createBlock(m, {
        key: 7,
        is: "survey-errors",
        element: q.element,
        location: "bottom"
      }, null, 8, ["element"])) : createCommentVNode("", true)
    ], 46, is));
  }
});
var ds = ["id"];
var ms = ["id", "role", "aria-labelledby", "aria-label"];
var ps = {
  inheritAttrs: false
};
var vs = defineComponent({
  ...ps,
  inheritAttrs: false,
  __name: "Panel",
  props: {
    element: {},
    isEditMode: { type: Boolean },
    css: {}
  },
  setup(u) {
    const e = u, n = ref(null), s = computed(() => e.element.survey);
    return S(() => e.element), onMounted(() => {
      e.element.survey && e.element.afterRender(n.value);
    }), (o, t) => o.element.getIsContentVisible() ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(o.element.getContainerCss()),
      id: o.element.id,
      onFocusin: t[0] || (t[0] = (l) => o.element.focusIn()),
      ref_key: "root",
      ref: n
    }, [
      o.element.showErrorsAbovePanel ? (openBlock(), createBlock(m, {
        key: 0,
        is: "survey-errors",
        element: o.element
      }, null, 8, ["element"])) : createCommentVNode("", true),
      o.element.hasTitle || o.element.hasDescription ? (openBlock(), createBlock(m, {
        key: 1,
        is: "survey-element-header",
        element: o.element,
        css: o.css
      }, null, 8, ["element", "css"])) : createCommentVNode("", true),
      o.element.showErrorsAbovePanel ? createCommentVNode("", true) : (openBlock(), createBlock(m, {
        key: 2,
        is: "survey-errors",
        element: o.element
      }, null, 8, ["element"])),
      o.element.renderedIsExpanded ? (openBlock(), createElementBlock("div", {
        key: 3,
        id: o.element.contentId,
        style: normalizeStyle({ paddingLeft: o.element.innerPaddingLeft }),
        class: normalizeClass(o.element.cssClasses.panel.content),
        role: o.element.ariaRole,
        "aria-labelledby": o.element.ariaLabelledBy,
        "aria-label": o.element.ariaLabel
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(o.element.visibleRows, (l) => (openBlock(), createBlock(m, mergeProps({
          key: l.id,
          is: o.element.getSurvey().getRowWrapperComponentName(l)
        }, {
          componentData: o.element.getSurvey().getRowWrapperComponentData(l)
        }), {
          default: withCtx(() => [
            createVNode(m, {
              is: "survey-row",
              row: l,
              survey: s.value,
              css: o.css
            }, null, 8, ["row", "survey", "css"])
          ]),
          _: 2
        }, 1040, ["is"]))), 128)),
        createVNode(m, {
          is: "sv-action-bar",
          model: o.element.getFooterToolbar()
        }, null, 8, ["model"])
      ], 14, ms)) : createCommentVNode("", true)
    ], 42, ds)) : createCommentVNode("", true);
  }
});
var Cs = ["id"];
var cs = defineComponent({
  __name: "ElementHeader",
  props: {
    element: {},
    css: {}
  },
  setup(u) {
    const e = u, n = (o) => {
      typeof e.element.clickTitleFunction == "function" && e.element.clickTitleFunction(o);
    }, s = () => {
      const o = { width: void 0 };
      return "titleWidth" in e.element && (o.width = e.element.titleWidth), o;
    };
    return (o, t) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(o.element.cssHeader),
      onClick: n,
      style: normalizeStyle(s())
    }, [
      createVNode(m, {
        is: "survey-element-title",
        element: o.element,
        css: o.css
      }, null, 8, ["element", "css"]),
      o.element.hasDescriptionUnderTitle ? withDirectives((openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(o.element.cssDescription),
        id: o.element.ariaDescriptionId
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: o.element.locDescription
        }, null, 8, ["locString"])
      ], 10, Cs)), [
        [vShow, o.element.hasDescription]
      ]) : createCommentVNode("", true),
      o.element.hasAdditionalTitleToolbar ? (openBlock(), createBlock(m, {
        key: 1,
        is: "sv-action-bar",
        model: o.element.additionalTitleToolbar
      }, null, 8, ["model"])) : createCommentVNode("", true)
    ], 6));
  }
});
var gs = defineComponent({
  __name: "String",
  props: {
    locString: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createBlock(m, {
      is: e.locString.renderAs,
      locString: e.locString.renderAsData
    }, null, 8, ["is", "locString"]));
  }
});
var ys = ["innerHTML"];
var hs = defineComponent({
  __name: "StringViewer",
  props: {
    locString: {}
  },
  setup(u) {
    const e = u, n = U(() => e.locString), s = e.locString.allowLineBreaks ? "sv-string-viewer sv-string-viewer--multiline" : "sv-string-viewer";
    return (o, t) => o.locString.hasHtml ? (openBlock(), createElementBlock("span", {
      key: 0,
      class: normalizeClass(unref(s)),
      innerHTML: unref(n)
    }, null, 10, ys)) : (openBlock(), createElementBlock("span", {
      key: 1,
      class: normalizeClass(unref(s))
    }, toDisplayString(unref(n)), 3));
  }
});
var qs = ["innerHTML"];
var ws = defineComponent({
  __name: "StringEditor",
  props: {
    locString: {}
  },
  setup(u) {
    const e = u, n = (o) => {
      const t = e.locString;
      t.text = o.target.innerText;
    }, s = (o) => {
      o.preventDefault(), o.stopPropagation();
    };
    return (o, t) => o.locString.hasHtml ? (openBlock(), createElementBlock("span", {
      key: 0,
      class: "sv-string-editor",
      contenteditable: "true",
      innerHTML: o.locString.renderedHtml,
      onBlur: n,
      onClick: s
    }, null, 40, qs)) : (openBlock(), createElementBlock("span", {
      key: 1,
      class: "sv-string-editor",
      contenteditable: "true",
      onBlur: n,
      onClick: s
    }, toDisplayString(o.locString.renderedHtml), 33));
  }
});
var bs = ["id"];
var Ls = defineComponent({
  __name: "Skeleton",
  props: {
    element: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.element), (n, s) => (openBlock(), createElementBlock("div", {
      class: "sv-skeleton-element",
      id: n.element.id,
      style: normalizeStyle({ height: n.element.skeletonHeight })
    }, null, 12, bs));
  }
});
var ks = { class: "sv-scroll__container" };
var fs = createBaseVNode("div", { class: "sv-scroll__scrollbar-sizer" }, null, -1);
var Hs = [
  fs
];
var Ms = defineComponent({
  __name: "Scroll",
  props: {
    disabled: {},
    onInnerHeightChanged: { type: Function }
  },
  setup(u) {
    const e = u, n = new ScrollViewModel();
    n.onInnerHeightChanged = (o) => {
      e.onInnerHeightChanged && e.onInnerHeightChanged(o);
    };
    const s = ref();
    return onMounted(() => {
      n.setRootElement(s.value);
    }), onUnmounted(() => {
      n.setRootElement(void 0), n.unsubscribeRootElement();
    }), (o, t) => e.disabled ? renderSlot(o.$slots, "default", { key: 0 }) : (openBlock(), createElementBlock("div", {
      key: 1,
      ref_key: "root",
      ref: s,
      class: "sv-scroll__wrapper"
    }, [
      createBaseVNode("div", {
        class: "sv-scroll__scroller sv-drag-target-skipped",
        onScroll: t[0] || (t[0] = () => unref(n).onScrollContainer())
      }, [
        createBaseVNode("div", ks, [
          renderSlot(o.$slots, "default")
        ])
      ], 32),
      createBaseVNode("div", {
        class: "sv-scroll__scrollbar",
        onScroll: t[1] || (t[1] = () => unref(n).onScrollScrollbar())
      }, Hs, 32)
    ], 512));
  }
});
var Is = ["id"];
var Vs = ["value"];
var Ss = defineComponent({
  inheritAttrs: false,
  __name: "Text",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => s.question.isReadOnlyRenderDiv() ? (openBlock(), createElementBlock("div", {
      key: 0,
      ref_key: "root",
      ref: n
    }, toDisplayString(s.question.value), 513)) : s.question.dataListId ? (openBlock(), createElementBlock("div", {
      key: 1,
      ref_key: "root",
      ref: n
    }, [
      createVNode(m, {
        is: "survey-text-input",
        question: s.question
      }, null, 8, ["question"]),
      createBaseVNode("datalist", {
        id: s.question.dataListId
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(s.question.dataList, (t, l) => (openBlock(), createElementBlock("option", {
          key: l,
          value: t
        }, null, 8, Vs))), 128))
      ], 8, Is)
    ], 512)) : (openBlock(), createBlock(m, {
      key: 2,
      is: "survey-text-input",
      question: s.question,
      "get-ref": (t) => {
        n.value = t;
      }
    }, null, 8, ["question", "get-ref"]));
  }
});
var Rs = ["disabled", "readonly", "type", "maxlength", "min", "max", "step", "size", "id", "list", "placeholder", "autocomplete", "value", "aria-required", "aria-label", "aria-labelledby", "aria-describedby", "aria-invalid", "aria-errormessage"];
var Ts = ["disabled", "readonly", "type", "maxlength", "min", "max", "step", "size", "id", "list", "placeholder", "autocomplete", "value", "aria-required", "aria-label", "aria-labelledby", "aria-describedby", "aria-invalid", "aria-errormessage"];
var Bs = defineComponent({
  __name: "TextInput",
  props: {
    question: {},
    getRef: { type: Function }
  },
  setup(u, { expose: e }) {
    const n = u, s = function(l) {
      n.getRef && n.getRef(l);
    }, o = ref(null);
    e({ root: o }), S(() => n.question);
    const t = computed(() => n.question.inputStyle);
    return (l, d) => l.question.getMaxLength() ? (openBlock(), createElementBlock("div", {
      key: 1,
      ref: (C) => s(C)
    }, [
      createBaseVNode("input", {
        disabled: l.question.isDisabledAttr,
        readonly: l.question.isReadOnlyAttr,
        class: normalizeClass(l.question.getControlClass()),
        type: l.question.inputType,
        maxlength: l.question.getMaxLength(),
        min: l.question.renderedMin,
        max: l.question.renderedMax,
        step: l.question.renderedStep,
        size: l.question.renderedInputSize,
        style: normalizeStyle(t.value),
        id: l.question.inputId,
        list: l.question.dataListId,
        placeholder: l.question.renderedPlaceholder,
        autocomplete: l.question.autocomplete,
        value: l.question.inputValue,
        onChange: d[8] || (d[8] = //@ts-ignore
        (...C) => l.question.onChange && l.question.onChange(...C)),
        onClick: d[9] || (d[9] = //@ts-ignore
        (...C) => l.question.readOnlyBlocker && l.question.readOnlyBlocker(...C)),
        onPointerdown: d[10] || (d[10] = //@ts-ignore
        (...C) => l.question.readOnlyBlocker && l.question.readOnlyBlocker(...C)),
        onKeyup: d[11] || (d[11] = //@ts-ignore
        (...C) => l.question.onKeyUp && l.question.onKeyUp(...C)),
        onKeydown: d[12] || (d[12] = //@ts-ignore
        (...C) => l.question.onKeyDown && l.question.onKeyDown(...C)),
        onCompositionUpdate: d[13] || (d[13] = //@ts-ignore
        (...C) => l.question.onCompositionUpdate && l.question.onCompositionUpdate(...C)),
        onBlur: d[14] || (d[14] = //@ts-ignore
        (...C) => l.question.onBlur && l.question.onBlur(...C)),
        onFocus: d[15] || (d[15] = //@ts-ignore
        (...C) => l.question.onFocus && l.question.onFocus(...C)),
        "aria-required": l.question.a11y_input_ariaRequired,
        "aria-label": l.question.a11y_input_ariaLabel,
        "aria-labelledby": l.question.a11y_input_ariaLabelledBy,
        "aria-describedby": l.question.a11y_input_ariaDescribedBy,
        "aria-invalid": l.question.a11y_input_ariaInvalid,
        "aria-errormessage": l.question.a11y_input_ariaErrormessage
      }, null, 46, Ts),
      createVNode(m, {
        is: "sv-character-counter",
        counter: l.question.characterCounter,
        remainingCharacterCounter: l.question.cssClasses.remainingCharacterCounter
      }, null, 8, ["counter", "remainingCharacterCounter"])
    ], 512)) : (openBlock(), createElementBlock("input", {
      key: 0,
      ref: (C) => s(C),
      disabled: l.question.isDisabledAttr,
      readonly: l.question.isReadOnlyAttr,
      class: normalizeClass(l.question.getControlClass()),
      type: l.question.inputType,
      maxlength: l.question.getMaxLength(),
      min: l.question.renderedMin,
      max: l.question.renderedMax,
      step: l.question.renderedStep,
      size: l.question.renderedInputSize,
      style: normalizeStyle(t.value),
      id: l.question.inputId,
      list: l.question.dataListId,
      placeholder: l.question.renderedPlaceholder,
      autocomplete: l.question.autocomplete,
      value: l.question.inputValue,
      onChange: d[0] || (d[0] = //@ts-ignore
      (...C) => l.question.onChange && l.question.onChange(...C)),
      onClick: d[1] || (d[1] = //@ts-ignore
      (...C) => l.question.readOnlyBlocker && l.question.readOnlyBlocker(...C)),
      onPointerdown: d[2] || (d[2] = //@ts-ignore
      (...C) => l.question.readOnlyBlocker && l.question.readOnlyBlocker(...C)),
      onKeyup: d[3] || (d[3] = //@ts-ignore
      (...C) => l.question.onKeyUp && l.question.onKeyUp(...C)),
      onKeydown: d[4] || (d[4] = //@ts-ignore
      (...C) => l.question.onKeyDown && l.question.onKeyDown(...C)),
      onCompositionUpdate: d[5] || (d[5] = //@ts-ignore
      (...C) => l.question.onCompositionUpdate && l.question.onCompositionUpdate(...C)),
      onBlur: d[6] || (d[6] = //@ts-ignore
      (...C) => l.question.onBlur && l.question.onBlur(...C)),
      onFocus: d[7] || (d[7] = //@ts-ignore
      (...C) => l.question.onFocus && l.question.onFocus(...C)),
      "aria-required": l.question.a11y_input_ariaRequired,
      "aria-label": l.question.a11y_input_ariaLabel,
      "aria-labelledby": l.question.a11y_input_ariaLabelledBy,
      "aria-describedby": l.question.a11y_input_ariaDescribedBy,
      "aria-invalid": l.question.a11y_input_ariaInvalid,
      "aria-errormessage": l.question.a11y_input_ariaErrormessage
    }, null, 46, Rs));
  }
});
var Zs = ["role", "aria-required", "aria-label", "aria-labelledby", "aria-describedby", "aria-invalid", "aria-errormessage"];
var $s = {
  key: 0,
  class: "sv-hidden"
};
var Ds = { key: 6 };
var As = ["value"];
var Le = defineComponent({
  inheritAttrs: false,
  __name: "SelectBase",
  props: {
    question: {},
    showLegend: { type: Boolean }
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = (t) => e.question.getItemValueWrapperComponentName(t) || e.question.itemComponent, o = (t) => ({
      componentName: e.question.itemComponent,
      componentData: {
        question: e.question,
        item: t,
        data: e.question.getItemValueWrapperComponentData(t)
      }
    });
    return (t, l) => (openBlock(), createElementBlock("fieldset", {
      class: normalizeClass(t.question.getSelectBaseRootCss()),
      ref_key: "root",
      ref: n,
      role: t.question.a11y_input_ariaRole,
      "aria-required": t.question.a11y_input_ariaRequired,
      "aria-label": t.question.a11y_input_ariaLabel,
      "aria-labelledby": t.question.a11y_input_ariaLabelledBy,
      "aria-describedby": t.question.a11y_input_ariaDescribedBy,
      "aria-invalid": t.question.a11y_input_ariaInvalid,
      "aria-errormessage": t.question.a11y_input_ariaErrormessage
    }, [
      t.showLegend ? (openBlock(), createElementBlock("legend", $s, toDisplayString(t.question.locTitle.renderedHtml), 1)) : createCommentVNode("", true),
      t.question.hasHeadItems ? (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(t.question.headItems, (d) => (openBlock(), createBlock(m, mergeProps({
        key: d.value,
        is: s(d)
      }, o(d)), null, 16, ["is"]))), 128)) : createCommentVNode("", true),
      !t.question.hasColumns && !t.question.blockedRow ? (openBlock(true), createElementBlock(Fragment, { key: 2 }, renderList(t.question.bodyItems, (d) => (openBlock(), createBlock(m, mergeProps({
        key: d.value,
        is: s(d)
      }, o(d)), null, 16, ["is"]))), 128)) : createCommentVNode("", true),
      t.question.blockedRow ? (openBlock(), createElementBlock("div", {
        key: 3,
        class: normalizeClass(t.question.cssClasses.rootRow)
      }, [
        !t.question.hasColumns && t.question.blockedRow ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(t.question.dataChoices, (d) => (openBlock(), createBlock(m, mergeProps({
          key: d.value,
          is: s(d)
        }, o(d)), null, 16, ["is"]))), 128)) : createCommentVNode("", true)
      ], 2)) : createCommentVNode("", true),
      t.question.hasColumns ? (openBlock(), createElementBlock("div", {
        key: 4,
        class: normalizeClass(t.question.cssClasses.rootMultiColumn)
      }, [
        t.question.hasColumns ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(t.question.columns, (d, C) => (openBlock(), createElementBlock("div", {
          key: C,
          class: normalizeClass(t.question.getColumnClass()),
          role: "presentation"
        }, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(d, (L) => (openBlock(), createBlock(m, mergeProps({
            key: L.value,
            is: s(L)
          }, o(L)), null, 16, ["is"]))), 128))
        ], 2))), 128)) : createCommentVNode("", true)
      ], 2)) : createCommentVNode("", true),
      t.question.hasFootItems ? (openBlock(true), createElementBlock(Fragment, { key: 5 }, renderList(t.question.footItems, (d) => (openBlock(), createBlock(m, mergeProps({
        key: d.value,
        is: s(d)
      }, o(d)), null, 16, ["is"]))), 128)) : createCommentVNode("", true),
      t.question.showClearButtonInContent ? (openBlock(), createElementBlock("div", Ds, [
        createBaseVNode("input", {
          type: "button",
          class: normalizeClass(t.question.cssClasses.clearButton),
          onClick: l[0] || (l[0] = () => {
            t.question.clearValue(true);
          }),
          value: t.question.clearButtonCaption
        }, null, 10, As)
      ])) : createCommentVNode("", true)
    ], 10, Zs));
  }
});
var Ps = defineComponent({
  inheritAttrs: false,
  __name: "Checkbox",
  props: {
    question: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createBlock(Le, {
      question: e.question,
      "show-legend": true
    }, null, 8, ["question"]));
  }
});
function ke(u, e, n) {
  onMounted(() => {
    n.value && (e().isDesignMode || u().setRootElement(n.value));
  }), onUnmounted(() => {
    e().isDesignMode || u().setRootElement(void 0);
  }), S(u, (s, o) => {
    e().isDesignMode || (s && n.value && s.setRootElement(n.value), o && o.setRootElement(void 0));
  });
}
var Ns = ["name", "checked", "value", "id", "disabled", "readonly", "required", "aria-label"];
var Es = ["xlink:href"];
var Ws = defineComponent({
  inheritAttrs: false,
  __name: "CheckboxItem",
  props: {
    question: {},
    item: {},
    hideLabel: { type: Boolean },
    ariaLabel: {}
  },
  setup(u) {
    const e = ref(), n = u;
    ke(
      () => n.item,
      () => n.question,
      e
    );
    const s = (o) => {
      n.question.clickItemHandler(n.item, o.target.checked);
    };
    return (o, t) => (openBlock(), createElementBlock(Fragment, null, [
      createBaseVNode("div", {
        role: "presentation",
        class: normalizeClass(o.question.getItemClass(o.item)),
        ref_key: "root",
        ref: e
      }, [
        createBaseVNode("label", {
          class: normalizeClass(o.question.getLabelClass(o.item))
        }, [
          createBaseVNode("input", {
            type: "checkbox",
            name: o.question.name + o.item.id,
            checked: o.question.isItemSelected(o.item),
            onInput: t[0] || (t[0] = (l) => {
              s(l);
            }),
            value: o.item.value,
            id: o.question.getItemId(o.item),
            disabled: !o.question.getItemEnabled(o.item),
            readonly: o.question.isReadOnlyAttr,
            class: normalizeClass(o.question.cssClasses.itemControl),
            required: o.question.hasRequiredError(),
            "aria-label": o.ariaLabel
          }, null, 42, Ns),
          o.question.cssClasses.materialDecorator ? (openBlock(), createElementBlock("span", {
            key: 0,
            class: normalizeClass(o.question.cssClasses.materialDecorator)
          }, [
            o.question.itemSvgIcon ? (openBlock(), createElementBlock("svg", {
              key: 0,
              class: normalizeClass(o.question.cssClasses.itemDecorator)
            }, [
              createBaseVNode("use", {
                "xlink:href": o.question.itemSvgIcon
              }, null, 8, Es)
            ], 2)) : createCommentVNode("", true)
          ], 2)) : createCommentVNode("", true),
          o.hideLabel ? createCommentVNode("", true) : (openBlock(), createElementBlock("span", {
            key: 1,
            class: normalizeClass(o.question.cssClasses.controlLabel)
          }, [
            createVNode(m, {
              is: "survey-string",
              locString: o.item.locText
            }, null, 8, ["locString"])
          ], 2))
        ], 2)
      ], 2),
      o.item.isCommentShowing ? (openBlock(), createBlock(m, {
        key: 0,
        is: "survey-other-choice",
        question: o.question,
        item: o.item
      }, null, 8, ["question", "item"])) : createCommentVNode("", true)
    ], 64));
  }
});
var Fs = defineComponent({
  inheritAttrs: false,
  __name: "Radiogroup",
  props: {
    question: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createBlock(Le, { question: e.question }, null, 8, ["question"]));
  }
});
var Os = ["name", "value", "id", "aria-errormessage", "checked", "disabled", "readonly", "aria-label"];
var zs = ["xlink:href"];
var Us = defineComponent({
  inheritAttrs: false,
  __name: "RadiogroupItem",
  props: {
    question: {},
    item: {},
    hideLabel: { type: Boolean },
    ariaLabel: {}
  },
  setup(u) {
    const e = ref(), n = u, s = (l) => n.question.getLabelClass(l), o = (l) => n.question.getControlLabelClass(l), t = () => {
      n.question.clickItemHandler(n.item);
    };
    return ke(
      () => n.item,
      () => n.question,
      e
    ), (l, d) => (openBlock(), createElementBlock(Fragment, null, [
      createBaseVNode("div", {
        role: "presentation",
        class: normalizeClass(l.question.getItemClass(l.item)),
        ref_key: "root",
        ref: e
      }, [
        createBaseVNode("label", {
          onMousedown: d[1] || (d[1] = (C) => l.question.onMouseDown()),
          class: normalizeClass(s(l.item))
        }, [
          createBaseVNode("input", {
            type: "radio",
            name: l.question.questionName,
            value: l.item.value,
            id: l.question.getItemId(l.item),
            "aria-errormessage": l.question.ariaErrormessage,
            checked: l.question.isItemSelected(l.item),
            onInput: d[0] || (d[0] = (C) => {
              t();
            }),
            disabled: !l.question.getItemEnabled(l.item),
            readonly: l.question.isReadOnlyAttr,
            class: normalizeClass(l.question.cssClasses.itemControl),
            "aria-label": l.ariaLabel
          }, null, 42, Os),
          l.question.cssClasses.materialDecorator ? (openBlock(), createElementBlock("span", {
            key: 0,
            class: normalizeClass(l.question.cssClasses.materialDecorator)
          }, [
            l.question.itemSvgIcon ? (openBlock(), createElementBlock("svg", {
              key: 0,
              class: normalizeClass(l.question.cssClasses.itemDecorator)
            }, [
              createBaseVNode("use", {
                "xlink:href": l.question.itemSvgIcon
              }, null, 8, zs)
            ], 2)) : createCommentVNode("", true)
          ], 2)) : createCommentVNode("", true),
          l.hideLabel ? createCommentVNode("", true) : (openBlock(), createElementBlock("span", {
            key: 1,
            class: normalizeClass(o(l.item))
          }, [
            createVNode(m, {
              is: "survey-string",
              locString: l.item.locText
            }, null, 8, ["locString"])
          ], 2))
        ], 34)
      ], 2),
      l.item.isCommentShowing ? (openBlock(), createBlock(m, {
        key: 0,
        is: "survey-other-choice",
        question: l.question,
        item: l.item
      }, null, 8, ["question", "item"])) : createCommentVNode("", true)
    ], 64));
  }
});
var Qs = ["src"];
var Ks = ["title"];
var js = { key: 0 };
var Gs = defineComponent({
  inheritAttrs: false,
  __name: "Signaturepad",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.cssClasses.root),
      ref_key: "root",
      ref: n,
      style: normalizeStyle({
        width: s.question.renderedCanvasWidth
      })
    }, [
      withDirectives(createBaseVNode("div", {
        class: normalizeClass(s.question.cssClasses.placeholder)
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: s.question.locRenderedPlaceholder
        }, null, 8, ["locString"])
      ], 2), [
        [vShow, s.question.needShowPlaceholder()]
      ]),
      createBaseVNode("div", null, [
        s.question.backgroundImage ? (openBlock(), createElementBlock("img", {
          key: 0,
          role: "presentation",
          class: normalizeClass(s.question.cssClasses.backgroundImage),
          src: s.question.backgroundImage,
          style: normalizeStyle({
            width: s.question.renderedCanvasWidth
          })
        }, null, 14, Qs)) : createCommentVNode("", true),
        createBaseVNode("canvas", {
          tabindex: "-1",
          class: normalizeClass(s.question.cssClasses.canvas),
          onBlur: o[0] || (o[0] = //@ts-ignore
          (...t) => s.question.onBlur && s.question.onBlur(...t))
        }, null, 34)
      ]),
      s.question.canShowClearButton ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(s.question.cssClasses.controls)
      }, [
        createBaseVNode("button", {
          type: "button",
          class: normalizeClass(s.question.cssClasses.clearButton),
          title: s.question.clearButtonCaption,
          onClick: o[1] || (o[1] = () => {
            s.question.clearValue(true);
          })
        }, [
          s.question.cssClasses.clearButtonIconId ? createCommentVNode("", true) : (openBlock(), createElementBlock("span", js, "✖")),
          s.question.cssClasses.clearButtonIconId ? (openBlock(), createBlock(m, {
            key: 1,
            is: "sv-svg-icon",
            iconName: s.question.cssClasses.clearButtonIconId,
            size: "auto"
          }, null, 8, ["iconName"])) : createCommentVNode("", true)
        ], 10, Ks)
      ], 2)) : createCommentVNode("", true),
      s.question.showLoadingIndicator ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(s.question.cssClasses.loadingIndicator)
      }, [
        createVNode(m, { is: "sv-loading-indicator" })
      ], 2)) : createCommentVNode("", true)
    ], 6));
  }
});
var Xs = ["innerHTML"];
var Js = defineComponent({
  inheritAttrs: false,
  __name: "Html",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = U(() => e.question.locHtml);
    return (o, t) => (openBlock(), createElementBlock("div", {
      ref_key: "root",
      ref: n,
      class: normalizeClass(o.question.renderCssRoot),
      innerHTML: unref(s)
    }, null, 10, Xs));
  }
});
var Ys = ["src", "alt", "width", "height"];
var _s = ["src", "width", "height"];
var xs = ["src", "title", "width", "height"];
var e1 = defineComponent({
  inheritAttrs: false,
  __name: "Image",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = U(() => e.question.locImageLink);
    return (o, t) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(o.question.cssClasses.root),
      ref_key: "root",
      ref: n
    }, [
      o.question.renderedMode === "image" ? withDirectives((openBlock(), createElementBlock("img", {
        key: 0,
        class: normalizeClass(o.question.getImageCss()),
        src: unref(s),
        alt: o.question.altText || o.question.title,
        width: o.question.renderedWidth,
        height: o.question.renderedHeight,
        style: normalizeStyle({
          objectFit: o.question.imageFit,
          width: o.question.renderedStyleWidth,
          height: o.question.renderedStyleHeight
        }),
        onLoad: t[0] || (t[0] = (l) => {
          o.question.onLoadHandler();
        }),
        onError: t[1] || (t[1] = (l) => {
          o.question.onErrorHandler();
        })
      }, null, 46, Ys)), [
        [vShow, unref(s) && !o.question.contentNotLoaded]
      ]) : createCommentVNode("", true),
      o.question.renderedMode === "video" ? withDirectives((openBlock(), createElementBlock("video", {
        key: 1,
        controls: "",
        class: normalizeClass(o.question.getImageCss()),
        src: unref(s),
        width: o.question.renderedWidth,
        height: o.question.renderedHeight,
        style: normalizeStyle({
          objectFit: o.question.imageFit,
          width: o.question.renderedStyleWidth,
          height: o.question.renderedStyleHeight
        }),
        onLoadedmetadata: t[2] || (t[2] = (l) => {
          o.question.onLoadHandler();
        }),
        onError: t[3] || (t[3] = (l) => {
          o.question.onErrorHandler();
        })
      }, null, 46, _s)), [
        [vShow, unref(s) && !o.question.contentNotLoaded]
      ]) : createCommentVNode("", true),
      o.question.renderedMode === "youtube" ? (openBlock(), createElementBlock("iframe", {
        key: 2,
        class: normalizeClass(o.question.getImageCss()),
        src: unref(s),
        title: o.question.renderedAltText,
        width: o.question.renderedWidth,
        height: o.question.renderedHeight,
        style: normalizeStyle({
          objectFit: o.question.imageFit,
          width: o.question.renderedStyleWidth,
          height: o.question.renderedStyleHeight
        })
      }, null, 14, xs)) : createCommentVNode("", true),
      !unref(s) || o.question.contentNotLoaded ? (openBlock(), createElementBlock("div", {
        key: 3,
        class: normalizeClass(o.question.cssClasses.noImage)
      }, [
        createVNode(m, {
          is: "sv-svg-icon",
          iconName: o.question.cssClasses.noImageSvgIconId,
          size: 48
        }, null, 8, ["iconName"])
      ], 2)) : createCommentVNode("", true)
    ], 2));
  }
});
var s1 = ["aria-label"];
var n1 = defineComponent({
  inheritAttrs: false,
  __name: "Expression",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.cssClasses.root),
      ref_key: "root",
      ref: n,
      "aria-live": "polite",
      "aria-label": s.question.formatedValue
    }, toDisplayString(s.question.formatedValue), 11, s1));
  }
});
var t1 = ["id", "aria-required", "aria-label", "aria-invalid", "aria-errormessage", "multiple", "title", "accept", "capture"];
var o1 = ["id", "multiple", "placeholder"];
var i1 = ["id", "multiple", "placeholder"];
var r1 = defineComponent({
  inheritAttrs: false,
  __name: "File",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.fileRootCss),
      ref_key: "root",
      ref: n
    }, [
      !s.question.isReadOnlyAttr && !s.question.isDisabledAttr && s.question.hasFileUI ? (openBlock(), createElementBlock("input", {
        key: 0,
        class: normalizeClass(s.question.cssClasses.fileInput),
        tabindex: "-1",
        type: "file",
        id: s.question.inputId,
        "aria-required": s.question.ariaRequired,
        "aria-label": s.question.ariaLabel,
        "aria-invalid": s.question.ariaInvalid,
        "aria-errormessage": s.question.ariaErrormessage,
        multiple: s.question.allowMultiple,
        title: s.question.inputTitle,
        accept: s.question.acceptedTypes,
        capture: s.question.renderCapture
      }, null, 10, t1)) : createCommentVNode("", true),
      s.question.isReadOnlyAttr ? (openBlock(), createElementBlock("input", {
        key: 1,
        type: "file",
        readonly: "",
        id: s.question.inputId,
        class: normalizeClass(s.question.getReadOnlyFileCss()),
        multiple: s.question.allowMultiple,
        placeholder: s.question.title,
        style: { color: "transparent" }
      }, null, 10, o1)) : createCommentVNode("", true),
      s.question.isDisabledAttr ? (openBlock(), createElementBlock("input", {
        key: 2,
        type: "file",
        disabled: "",
        id: s.question.inputId,
        class: normalizeClass(s.question.getReadOnlyFileCss()),
        multiple: s.question.allowMultiple,
        placeholder: s.question.title,
        style: { color: "transparent" }
      }, null, 10, i1)) : createCommentVNode("", true),
      createBaseVNode("div", {
        class: normalizeClass(s.question.cssClasses.dragArea),
        onDrop: o[0] || (o[0] = //@ts-ignore
        (...t) => s.question.onDrop && s.question.onDrop(...t)),
        onDragover: o[1] || (o[1] = //@ts-ignore
        (...t) => s.question.onDragOver && s.question.onDragOver(...t)),
        onDragleave: o[2] || (o[2] = //@ts-ignore
        (...t) => s.question.onDragLeave && s.question.onDragLeave(...t)),
        onDragenter: o[3] || (o[3] = //@ts-ignore
        (...t) => s.question.onDragEnter && s.question.onDragEnter(...t))
      }, [
        s.question.showFileDecorator ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(s.question.getFileDecoratorCss())
        }, [
          s.question.showDragAreaPlaceholder ? (openBlock(), createElementBlock("span", {
            key: 0,
            class: normalizeClass(s.question.cssClasses.dragAreaPlaceholder)
          }, [
            createVNode(m, {
              is: "survey-string",
              locString: s.question.locRenderedPlaceholder
            }, null, 8, ["locString"])
          ], 2)) : createCommentVNode("", true),
          createBaseVNode("div", {
            class: normalizeClass(s.question.cssClasses.wrapper)
          }, [
            s.question.actionsContainerVisible ? (openBlock(), createBlock(m, {
              key: 0,
              is: "sv-action-bar",
              model: s.question.actionsContainer
            }, null, 8, ["model"])) : createCommentVNode("", true)
          ], 2)
        ], 2)) : createCommentVNode("", true),
        s.question.showLoadingIndicator ? (openBlock(), createElementBlock("div", {
          key: 1,
          class: normalizeClass(s.question.cssClasses.loadingIndicator)
        }, [
          createVNode(m, { is: "sv-loading-indicator" })
        ], 2)) : createCommentVNode("", true),
        s.question.isPlayingVideo ? (openBlock(), createBlock(m, {
          key: 2,
          is: "sv-file-video",
          question: s.question
        }, null, 8, ["question"])) : createCommentVNode("", true),
        s.question.allowShowPreview ? (openBlock(), createBlock(m, {
          key: 3,
          is: "sv-file-preview",
          question: s.question
        }, null, 8, ["question"])) : createCommentVNode("", true),
        s.question.fileNavigatorVisible ? (openBlock(), createBlock(m, {
          key: 4,
          is: "sv-action-bar",
          model: s.question.fileNavigator
        }, null, 8, ["model"])) : createCommentVNode("", true)
      ], 34)
    ], 2));
  }
});
var l1 = { class: "sv-hidden" };
var ve = "survey-imagepicker-item";
var a1 = defineComponent({
  inheritAttrs: false,
  __name: "Imagepicker",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = (t) => e.question.getItemValueWrapperComponentName(t) || ve, o = (t) => ({
      componentName: ve,
      componentData: {
        question: e.question,
        item: t,
        data: e.question.getItemValueWrapperComponentData(t)
      }
    });
    return (t, l) => (openBlock(), createElementBlock("fieldset", {
      class: normalizeClass(t.question.getSelectBaseRootCss()),
      style: normalizeStyle(t.question.getContainerStyle()),
      ref_key: "root",
      ref: n
    }, [
      createBaseVNode("legend", l1, toDisplayString(t.question.locTitle.renderedHtml), 1),
      t.question.hasColumns ? createCommentVNode("", true) : (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(t.question.visibleChoices, (d) => (openBlock(), createBlock(m, mergeProps({
        key: d.value,
        is: s(d)
      }, o(d)), null, 16, ["is"]))), 128)),
      t.question.hasColumns ? (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(t.question.columns, (d, C) => (openBlock(), createElementBlock("div", {
        class: normalizeClass(t.question.getColumnClass()),
        key: C,
        role: "presentation"
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(d, (L) => (openBlock(), createBlock(m, mergeProps({
          key: L.value,
          is: s(L)
        }, o(L)), null, 16, ["is"]))), 128))
      ], 2))), 128)) : createCommentVNode("", true)
    ], 6));
  }
});
var u1 = ["name", "value", "id", "disabled", "readonly", "required", "aria-label", "aria-invalid", "aria-errormessage"];
var d1 = ["name", "value", "id", "disabled", "readonly", "required", "aria-label", "aria-invalid", "aria-errormessage"];
var m1 = ["src", "width", "height", "alt"];
var p1 = ["src", "width", "height"];
var v1 = defineComponent({
  inheritAttrs: false,
  __name: "ImagepickerItem",
  props: {
    question: {},
    item: {}
  },
  setup(u) {
    const e = u, n = (t) => e.question.getItemClass(t), s = computed({
      get() {
        return e.question.value;
      },
      set(t) {
        const l = e.question;
        l.isReadOnlyAttr || (l.value = t);
      }
    });
    S(() => e.item);
    const o = U(() => e.item.locImageLink);
    return (t, l) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(n(t.item))
    }, [
      createBaseVNode("label", {
        class: normalizeClass(t.question.cssClasses.label)
      }, [
        t.question.multiSelect ? withDirectives((openBlock(), createElementBlock("input", {
          key: 0,
          type: "checkbox",
          name: t.question.questionName,
          value: t.item.value,
          id: t.question.getItemId(t.item),
          "onUpdate:modelValue": l[0] || (l[0] = (d) => s.value = d),
          disabled: !t.question.getItemEnabled(t.item),
          readonly: t.question.isReadOnlyAttr,
          required: t.question.inputRequiredAttribute,
          "aria-label": t.item.locText.renderedHtml,
          "aria-invalid": t.question.ariaInvalid,
          "aria-errormessage": t.question.ariaErrormessage,
          class: normalizeClass(t.question.cssClasses.itemControl)
        }, null, 10, u1)), [
          [vModelCheckbox, s.value]
        ]) : withDirectives((openBlock(), createElementBlock("input", {
          key: 1,
          type: "radio",
          name: t.question.questionName,
          value: t.item.value,
          id: t.question.getItemId(t.item),
          "onUpdate:modelValue": l[1] || (l[1] = (d) => s.value = d),
          disabled: !t.question.getItemEnabled(t.item),
          readonly: t.question.isReadOnlyAttr,
          required: t.question.hasRequiredError(),
          "aria-label": t.item.locText.renderedHtml,
          "aria-invalid": t.question.ariaInvalid,
          "aria-errormessage": t.question.ariaErrormessage,
          class: normalizeClass(t.question.cssClasses.itemControl)
        }, null, 10, d1)), [
          [vModelRadio, s.value]
        ]),
        createBaseVNode("div", {
          class: normalizeClass(t.question.cssClasses.itemDecorator)
        }, [
          createBaseVNode("div", {
            class: normalizeClass(t.question.cssClasses.imageContainer)
          }, [
            t.question.cssClasses.checkedItemDecorator ? (openBlock(), createElementBlock("span", {
              key: 0,
              class: normalizeClass(t.question.cssClasses.checkedItemDecorator),
              "aria-hidden": "true"
            }, [
              t.question.cssClasses.checkedItemSvgIconId ? (openBlock(), createBlock(m, {
                key: 0,
                is: "sv-svg-icon",
                class: normalizeClass(t.question.cssClasses.checkedItemSvgIcon),
                size: "auto",
                iconName: t.question.cssClasses.checkedItemSvgIconId
              }, null, 8, ["class", "iconName"])) : createCommentVNode("", true)
            ], 2)) : createCommentVNode("", true),
            unref(o) && !t.item.contentNotLoaded && t.question.contentMode === "image" ? (openBlock(), createElementBlock("img", {
              key: 1,
              class: normalizeClass(t.question.cssClasses.image),
              src: unref(o),
              width: t.question.renderedImageWidth,
              height: t.question.renderedImageHeight,
              style: normalizeStyle({ objectFit: t.question.imageFit }),
              alt: t.item.locText.renderedHtml,
              onLoad: l[2] || (l[2] = (d) => {
                t.question.onContentLoaded(t.item, d);
              }),
              onError: l[3] || (l[3] = (d) => {
                t.item.onErrorHandler();
              })
            }, null, 46, m1)) : createCommentVNode("", true),
            unref(o) && !t.item.contentNotLoaded && t.question.contentMode === "video" ? (openBlock(), createElementBlock("video", {
              key: 2,
              controls: "",
              class: normalizeClass(t.question.cssClasses.image),
              src: unref(o),
              width: t.question.renderedImageWidth,
              height: t.question.renderedImageHeight,
              style: normalizeStyle({ objectFit: t.question.imageFit }),
              onLoadedmetadata: l[4] || (l[4] = (d) => {
                t.question.onContentLoaded(t.item, d);
              }),
              onError: l[5] || (l[5] = (d) => {
                t.item.onErrorHandler();
              })
            }, null, 46, p1)) : createCommentVNode("", true),
            !unref(o) || t.item.contentNotLoaded ? (openBlock(), createElementBlock("div", {
              key: 3,
              class: normalizeClass(t.question.cssClasses.itemNoImage),
              style: normalizeStyle({
                width: t.question.renderedImageWidth + "px",
                height: t.question.renderedImageHeight + "px",
                objectFit: t.question.imageFit
              })
            }, [
              createVNode(m, {
                is: "sv-svg-icon",
                class: normalizeClass(t.question.cssClasses.itemNoImageSvgIcon),
                iconName: t.question.cssClasses.itemNoImageSvgIconId,
                size: 48
              }, null, 8, ["class", "iconName"])
            ], 6)) : createCommentVNode("", true)
          ], 2),
          t.question.showLabel ? (openBlock(), createElementBlock("span", {
            key: 0,
            class: normalizeClass(t.question.cssClasses.itemText)
          }, [
            createVNode(m, {
              is: "survey-string",
              locString: t.item.locText
            }, null, 8, ["locString"])
          ], 2)) : createCommentVNode("", true)
        ], 2)
      ], 2)
    ], 2));
  }
});
var C1 = defineComponent({
  inheritAttrs: false,
  __name: "Comment",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref();
    function s(o) {
      n.value = o;
    }
    return T(e, n), (o, t) => !o.question.isReadOnlyRenderDiv() && o.question.getMaxLength() ? (openBlock(), createElementBlock("div", {
      key: 0,
      ref_key: "root",
      ref: n
    }, [
      createVNode(m, {
        is: "sv-text-area",
        model: o.question.textAreaModel
      }, null, 8, ["model"]),
      createVNode(m, {
        is: "sv-character-counter",
        counter: o.question.characterCounter,
        remainingCharacterCounter: o.question.cssClasses.remainingCharacterCounter
      }, null, 8, ["counter", "remainingCharacterCounter"])
    ], 512)) : !o.question.isReadOnlyRenderDiv() && !o.question.getMaxLength() ? (openBlock(), createBlock(m, {
      key: 1,
      is: "sv-text-area",
      "get-ref": s,
      model: o.question.textAreaModel
    }, null, 8, ["model"])) : (openBlock(), createElementBlock("div", {
      key: 2,
      ref_key: "root",
      ref: n
    }, toDisplayString(o.question.value), 513));
  }
});
var c1 = defineComponent({
  inheritAttrs: false,
  __name: "Dropdown",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.renderCssRoot),
      ref_key: "root",
      ref: n
    }, [
      createVNode(m, {
        is: "sv-dropdown",
        question: s.question
      }, null, 8, ["question"]),
      s.question.isShowingChoiceComment ? (openBlock(), createBlock(m, {
        key: 0,
        is: "survey-other-choice",
        question: s.question,
        item: s.question.selectedItem
      }, null, 8, ["question", "item"])) : createCommentVNode("", true)
    ], 2));
  }
});
var g1 = ["id", "autocomplete", "aria-required", "aria-label", "aria-invalid", "aria-errormessage", "required"];
var y1 = {
  key: 0,
  value: ""
};
var h1 = ["id"];
RendererFactory.Instance.registerRenderer(
  "dropdown",
  "select",
  "sv-dropdown-select"
);
var q1 = defineComponent({
  inheritAttrs: false,
  __name: "DropdownSelect",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = (l) => {
      e.question.onClick(l);
    }, o = (l) => {
      e.question.onKeyUp(l);
    }, t = computed({
      get() {
        return e.question.value ?? "";
      },
      set(l) {
        const d = e.question;
        l === "" ? d.renderedValue = void 0 : d.renderedValue = l;
      }
    });
    return (l, d) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(l.question.renderCssRoot),
      ref_key: "root",
      ref: n
    }, [
      createBaseVNode("div", {
        class: normalizeClass(l.question.cssClasses.selectWrapper)
      }, [
        l.question.isReadOnly ? (openBlock(), createElementBlock("div", {
          key: 1,
          disabled: "",
          id: l.question.inputId,
          class: normalizeClass(l.question.getControlClass())
        }, toDisplayString(l.question.readOnlyText), 11, h1)) : withDirectives((openBlock(), createElementBlock("select", {
          key: 0,
          id: l.question.inputId,
          "onUpdate:modelValue": d[0] || (d[0] = (C) => t.value = C),
          onClick: s,
          onKeyup: o,
          autocomplete: l.question.autocomplete,
          class: normalizeClass(l.question.getControlClass()),
          "aria-required": l.question.a11y_input_ariaRequired,
          "aria-label": l.question.a11y_input_ariaLabel,
          "aria-invalid": l.question.a11y_input_ariaInvalid,
          "aria-errormessage": l.question.a11y_input_ariaErrormessage,
          required: l.question.isRequired
        }, [
          l.question.allowClear ? (openBlock(), createElementBlock("option", y1, toDisplayString(l.question.placeholder), 1)) : createCommentVNode("", true),
          (openBlock(true), createElementBlock(Fragment, null, renderList(l.question.visibleChoices, (C) => (openBlock(), createBlock(m, {
            is: "sv-dropdown-option-item",
            item: C,
            key: C.id
          }, null, 8, ["item"]))), 128))
        ], 42, g1)), [
          [vModelSelect, t.value]
        ]),
        l.question.cssClasses.chevronButtonIconId ? (openBlock(), createElementBlock("div", {
          key: 2,
          class: normalizeClass(l.question.cssClasses.chevronButton),
          "aria-hidden": "true"
        }, [
          createVNode(m, {
            is: "sv-svg-icon",
            class: normalizeClass(l.question.cssClasses.chevronButtonSvg),
            iconName: l.question.cssClasses.chevronButtonIconId,
            size: "auto"
          }, null, 8, ["class", "iconName"])
        ], 2)) : createCommentVNode("", true)
      ], 2),
      l.question.isShowingChoiceComment ? (openBlock(), createBlock(m, {
        key: 0,
        is: "survey-other-choice",
        question: l.question,
        item: l.question.selectedItem
      }, null, 8, ["question", "item"])) : createCommentVNode("", true)
    ], 2));
  }
});
var w1 = ["value", "disabled"];
var b1 = defineComponent({
  __name: "OptionItem",
  props: {
    item: {}
  },
  setup(u) {
    const e = u, n = U(() => e.item.locText);
    return S(() => e.item), (s, o) => (openBlock(), createElementBlock("option", {
      value: s.item.value,
      disabled: !s.item.isEnabled
    }, toDisplayString(unref(n)), 9, w1));
  }
});
var L1 = ["id", "disabled", "tabindex", "role", "aria-required", "aria-invalid", "aria-errormessage", "aria-expanded", "aria-label", "aria-labelledby", "aria-describedby", "aria-controls", "aria-activedescendant", "required"];
var k1 = { style: { visibility: "hidden" } };
var f1 = ["disabled", "inputmode", "id", "tabindex", "readonly", "role", "aria-required", "aria-invalid", "aria-errormessage", "aria-expanded", "aria-controls", "aria-label", "aria-labelledby", "aria-describedby", "aria-activedescendant", "placeholder"];
var H1 = ["id", "role", "aria-label", "aria-labelledby", "aria-describedby", "tabindex"];
var M1 = defineComponent({
  __name: "Dropdown",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null), s = computed(() => e.question.dropdownListModel), o = (b) => {
      var R;
      (R = s.value) == null || R.onClick(b);
    }, t = (b) => {
      var R;
      (R = s.value) == null || R.keyHandler(b);
    }, l = () => {
      if (n.value) {
        const b = n.value, R = s.value.inputStringRendered;
        Helpers.isTwoValueEquals(R, b.value, false, true, false) || (b.value = s.value.inputStringRendered);
      }
    }, d = (b) => {
      e.question.onBlur(b), l();
    }, C = (b) => {
      e.question.onFocus(b);
    }, L = (b) => {
      s.value.inputStringRendered = b.target.value;
    }, h = computed(
      () => e.question.showSelectedItemLocText
    ), q = computed(() => e.question.selectedItemLocText);
    return S(() => s.value), onUpdated(l), onMounted(l), (b, R) => {
      var N, K, j, ae;
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(b.question.cssClasses.selectWrapper),
        onClick: o
      }, [
        b.question.isReadOnly ? createCommentVNode("", true) : (openBlock(), createElementBlock("div", {
          key: 0,
          id: b.question.inputId,
          disabled: b.question.isDisabledAttr ? true : null,
          tabindex: s.value.noTabIndex ? void 0 : 0,
          onKeydown: t,
          onBlur: d,
          class: normalizeClass(b.question.getControlClass()),
          role: s.value.ariaQuestionRole,
          "aria-required": s.value.ariaQuestionRequired,
          "aria-invalid": s.value.ariaQuestionInvalid,
          "aria-errormessage": s.value.ariaQuestionErrorMessage,
          "aria-expanded": s.value.ariaQuestionExpanded,
          "aria-label": s.value.ariaQuestionLabel,
          "aria-labelledby": s.value.ariaQuestionLabelledby,
          "aria-describedby": s.value.ariaQuestionDescribedby,
          "aria-controls": s.value.ariaQuestionControls,
          "aria-activedescendant": s.value.ariaQuestionActivedescendant,
          required: b.question.isRequired ? true : null
        }, [
          s.value.showHintPrefix ? (openBlock(), createElementBlock("div", {
            key: 0,
            class: normalizeClass(b.question.cssClasses.hintPrefix)
          }, [
            createBaseVNode("span", null, toDisplayString(s.value.hintStringPrefix), 1)
          ], 2)) : createCommentVNode("", true),
          createBaseVNode("div", {
            class: normalizeClass(b.question.cssClasses.controlValue)
          }, [
            h.value ? (openBlock(), createBlock(m, {
              key: 0,
              is: "survey-string",
              locString: q.value
            }, null, 8, ["locString"])) : createCommentVNode("", true),
            s.value.showHintString ? (openBlock(), createElementBlock("div", {
              key: 1,
              class: normalizeClass(b.question.cssClasses.hintSuffix)
            }, [
              createBaseVNode("span", k1, toDisplayString(s.value.inputStringRendered), 1),
              createBaseVNode("span", null, toDisplayString(s.value.hintStringSuffix), 1)
            ], 2)) : createCommentVNode("", true),
            b.question.showInputFieldComponent ? (openBlock(), createBlock(m, {
              key: 2,
              is: b.question.inputFieldComponentName,
              item: s.value.getSelectedAction(),
              question: b.question
            }, null, 8, ["is", "item", "question"])) : createCommentVNode("", true),
            s.value.needRenderInput ? (openBlock(), createElementBlock("input", {
              key: 3,
              type: "text",
              ref_key: "inputElement",
              ref: n,
              class: normalizeClass(b.question.cssClasses.filterStringInput),
              disabled: b.question.isDisabledAttr,
              autocomplete: "off",
              inputmode: s.value.inputMode,
              id: b.question.getInputId(),
              tabindex: s.value.noTabIndex ? void 0 : -1,
              readonly: s.value.filterReadOnly ? true : void 0,
              role: s.value.ariaInputRole,
              "aria-required": s.value.ariaInputRequired,
              "aria-invalid": s.value.ariaInputInvalid,
              "aria-errormessage": s.value.ariaInputErrorMessage,
              "aria-expanded": s.value.ariaInputExpanded,
              "aria-controls": s.value.ariaInputControls,
              "aria-label": s.value.ariaInputLabel,
              "aria-labelledby": s.value.ariaInputLabelledby,
              "aria-describedby": s.value.ariaInputDescribedby,
              "aria-activedescendant": s.value.ariaInputActivedescendant,
              placeholder: s.value.placeholderRendered,
              onInput: L,
              onBlur: d,
              onFocus: C
            }, null, 42, f1)) : createCommentVNode("", true)
          ], 2),
          createVNode(m, {
            is: "sv-action-bar",
            model: s.value.editorButtons
          }, null, 8, ["model"])
        ], 42, L1)),
        b.question.isInputReadOnly ? createCommentVNode("", true) : (openBlock(), createBlock(m, {
          key: 1,
          is: "sv-popup",
          model: s.value.popupModel
        }, null, 8, ["model"])),
        b.question.isReadOnly ? (openBlock(), createElementBlock("div", {
          key: 2,
          id: b.question.inputId,
          role: (N = s.value) == null ? void 0 : N.ariaQuestionRole,
          "aria-label": (K = s.value) == null ? void 0 : K.ariaQuestionLabel,
          "aria-labelledby": (j = s.value) == null ? void 0 : j.ariaQuestionLabelledby,
          "aria-describedby": (ae = s.value) == null ? void 0 : ae.ariaQuestionDescribedby,
          "aria-expanded": false,
          "aria-readonly": true,
          "aria-disabled": true,
          tabindex: b.question.isDisabledAttr ? void 0 : 0,
          class: normalizeClass(b.question.getControlClass())
        }, [
          createBaseVNode("div", {
            class: normalizeClass(b.question.cssClasses.controlValue)
          }, [
            b.question.locReadOnlyText ? (openBlock(), createBlock(m, {
              key: 0,
              is: "survey-string",
              locString: b.question.locReadOnlyText
            }, null, 8, ["locString"])) : createCommentVNode("", true)
          ], 2),
          createVNode(m, {
            is: "sv-action-bar",
            model: s.value.editorButtons
          }, null, 8, ["model"])
        ], 10, H1)) : createCommentVNode("", true)
      ], 2);
    };
  }
});
var I1 = defineComponent({
  inheritAttrs: false,
  __name: "Tagbox",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.renderCssRoot),
      ref_key: "root",
      ref: n
    }, [
      createVNode(m, {
        is: "sv-tagbox",
        question: s.question
      }, null, 8, ["question"]),
      s.question.isOtherSelected ? (openBlock(), createBlock(m, {
        key: 0,
        is: "survey-other-choice",
        question: s.question,
        item: s.question.otherItem
      }, null, 8, ["question", "item"])) : createCommentVNode("", true)
    ], 2));
  }
});
var V1 = ["id", "tabindex", "disabled", "role", "aria-required", "aria-label", "aria-labelledby", "aria-describedby", "aria-invalid", "aria-errormessage", "aria-controls", "aria-expanded", "aria-activedescendant", "required"];
var S1 = ["id", "role", "aria-label", "aria-labelledby", "aria-describedby", "tabindex"];
var R1 = defineComponent({
  __name: "Tagbox",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = computed(() => {
      const d = e.question;
      return d.dropdownListModel || (d.dropdownListModel = new DropdownMultiSelectListModel(d)), e.question.dropdownListModel;
    }), s = (d) => {
      var C;
      (C = n.value) == null || C.onClick(d);
    }, o = (d) => {
      var C;
      (C = n.value) == null || C.keyHandler(d);
    }, t = (d) => {
      var C;
      (C = n.value) == null || C.onBlur(d);
    }, l = se(() => e.question.selectedChoices);
    return S(() => n.value), (d, C) => {
      var L, h, q, b;
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(d.question.cssClasses.selectWrapper),
        onClick: s
      }, [
        d.question.isReadOnly ? createCommentVNode("", true) : (openBlock(), createElementBlock("div", {
          key: 0,
          id: d.question.inputId,
          tabindex: n.value.noTabIndex ? void 0 : 0,
          disabled: d.question.isDisabledAttr ? true : null,
          onKeydown: o,
          onBlur: t,
          class: normalizeClass(d.question.getControlClass()),
          role: n.value.ariaQuestionRole,
          "aria-required": n.value.ariaQuestionRequired,
          "aria-label": n.value.ariaQuestionLabel,
          "aria-labelledby": n.value.ariaQuestionLabelledby,
          "aria-describedby": n.value.ariaQuestionDescribedby,
          "aria-invalid": n.value.ariaQuestionInvalid,
          "aria-errormessage": n.value.ariaQuestionErrorMessage,
          "aria-controls": n.value.ariaQuestionControls,
          "aria-expanded": n.value.ariaQuestionExpanded,
          "aria-activedescendant": n.value.ariaQuestionActivedescendant,
          required: d.question.isRequired ? true : null
        }, [
          createBaseVNode("div", {
            class: normalizeClass(d.question.cssClasses.controlValue)
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(l), (R, N) => (openBlock(), createBlock(m, {
              is: "sv-tagbox-item",
              item: R,
              question: d.question,
              key: "item" + N
            }, null, 8, ["item", "question"]))), 128)),
            n.value.needRenderInput ? (openBlock(), createBlock(m, {
              key: 0,
              is: "sv-tagbox-filter",
              model: n.value,
              question: d.question
            }, null, 8, ["model", "question"])) : createCommentVNode("", true)
          ], 2),
          createVNode(m, {
            is: "sv-action-bar",
            model: n.value.editorButtons
          }, null, 8, ["model"])
        ], 42, V1)),
        d.question.isInputReadOnly ? createCommentVNode("", true) : (openBlock(), createBlock(m, {
          key: 1,
          is: "sv-popup",
          model: n.value.popupModel
        }, null, 8, ["model"])),
        d.question.isReadOnly ? (openBlock(), createElementBlock("div", {
          key: 2,
          id: d.question.inputId,
          role: (L = n.value) == null ? void 0 : L.ariaQuestionRole,
          "aria-label": (h = n.value) == null ? void 0 : h.ariaQuestionLabel,
          "aria-labelledby": (q = n.value) == null ? void 0 : q.ariaQuestionLabelledby,
          "aria-describedby": (b = n.value) == null ? void 0 : b.ariaQuestionDescribedby,
          "aria-expanded": false,
          "aria-readonly": true,
          "aria-disabled": true,
          tabindex: d.question.isDisabledAttr ? void 0 : 0,
          class: normalizeClass(d.question.getControlClass())
        }, [
          createBaseVNode("div", {
            class: normalizeClass(d.question.cssClasses.controlValue)
          }, [
            d.question.locReadOnlyText ? (openBlock(), createBlock(m, {
              key: 0,
              is: "survey-string",
              locString: d.question.locReadOnlyText
            }, null, 8, ["locString"])) : createCommentVNode("", true)
          ], 2),
          createVNode(m, {
            is: "sv-action-bar",
            model: n.value.editorButtons
          }, null, 8, ["model"])
        ], 10, S1)) : createCommentVNode("", true)
      ], 2);
    };
  }
});
var T1 = { style: { visibility: "hidden" } };
var B1 = ["placeholder", "disabled", "inputmode", "role", "aria-required", "aria-invalid", "aria-errormessage", "aria-expanded", "aria-label", "aria-labelledby", "aria-describedby", "aria-controls", "aria-activedescendant", "id", "readonly", "size"];
var Z1 = defineComponent({
  __name: "TagboxFilter",
  props: {
    question: {},
    model: {}
  },
  setup(u) {
    const e = u, n = (d) => {
      const C = e.model;
      C.inputStringRendered = d.target.value;
    }, s = (d) => {
      e.model.inputKeyHandler(d);
    }, o = (d) => {
      e.question.onBlur(d);
    }, t = (d) => {
      e.question.onFocus(d);
    }, l = computed({
      get() {
        return e.model.inputStringRendered ?? "";
      },
      set(d) {
        const C = e.model;
        C.inputStringRendered = d;
      }
    });
    return S(() => e.model), (d, C) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(d.question.cssClasses.hint)
    }, [
      d.model.showHintPrefix ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(d.question.cssClasses.hintPrefix)
      }, [
        createBaseVNode("span", null, toDisplayString(d.model.hintStringPrefix), 1)
      ], 2)) : createCommentVNode("", true),
      createBaseVNode("div", {
        class: normalizeClass(d.question.cssClasses.hintSuffixWrapper)
      }, [
        d.question.showSelectedItemLocText ? (openBlock(), createBlock(m, {
          key: 0,
          is: "survey-string",
          locString: d.question.selectedItemLocText
        }, null, 8, ["locString"])) : createCommentVNode("", true),
        d.model.showHintString ? (openBlock(), createElementBlock("div", {
          key: 1,
          class: normalizeClass(d.question.cssClasses.hintSuffix)
        }, [
          createBaseVNode("span", T1, toDisplayString(d.model.inputStringRendered), 1),
          createBaseVNode("span", null, toDisplayString(d.model.hintStringSuffix), 1)
        ], 2)) : createCommentVNode("", true),
        withDirectives(createBaseVNode("input", {
          type: "text",
          autocomplete: "off",
          "onUpdate:modelValue": C[0] || (C[0] = (L) => l.value = L),
          class: normalizeClass(d.question.cssClasses.filterStringInput),
          placeholder: d.model.filterStringPlaceholder,
          disabled: d.question.isDisabledAttr,
          inputmode: d.model.inputMode,
          role: d.model.ariaInputRole,
          "aria-required": d.model.ariaInputRequired,
          "aria-invalid": d.model.ariaInputInvalid,
          "aria-errormessage": d.model.ariaInputErrorMessage,
          "aria-expanded": d.model.ariaInputExpanded,
          "aria-label": d.model.ariaInputLabel,
          "aria-labelledby": d.model.ariaInputLabelledby,
          "aria-describedby": d.model.ariaInputDescribedby,
          "aria-controls": d.model.ariaInputControls,
          "aria-activedescendant": d.model.ariaInputActivedescendant,
          id: d.question.getInputId(),
          readonly: d.model.filterReadOnly ? true : void 0,
          size: d.model.inputStringRendered ? void 0 : 1,
          onChange: n,
          onKeydown: s,
          onBlur: o,
          onFocus: t
        }, null, 42, B1), [
          [vModelText, l.value]
        ])
      ], 2)
    ], 2));
  }
});
var $1 = { class: "sv-tagbox__item-text" };
var D1 = defineComponent({
  __name: "TagboxItem",
  props: {
    question: {},
    item: {}
  },
  setup(u) {
    const e = u, n = (s) => {
      e.question.dropdownListModel.deselectItem(e.item.value), s.stopPropagation();
    };
    return S(() => e.item), (s, o) => (openBlock(), createElementBlock("div", {
      class: "sv-tagbox__item",
      key: s.item.key
    }, [
      createBaseVNode("div", $1, [
        createVNode(m, {
          is: "survey-string",
          locString: s.item.locText
        }, null, 8, ["locString"])
      ]),
      createBaseVNode("div", {
        class: normalizeClass(s.question.cssClasses.cleanItemButton),
        onClick: n
      }, [
        createVNode(m, {
          is: "sv-svg-icon",
          class: normalizeClass(s.question.cssClasses.cleanItemButtonSvg),
          iconName: s.question.cssClasses.cleanItemButtonIconId,
          size: "auto"
        }, null, 8, ["class", "iconName"])
      ], 2)
    ]));
  }
});
var A1 = defineComponent({
  inheritAttrs: false,
  __name: "Ranking",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = (t) => e.question.getItemValueWrapperComponentName(t) || "survey-ranking-item", o = (t, l, d) => ({
      componentName: "survey-ranking-item",
      componentData: {
        question: e.question,
        item: t,
        index: l,
        unrankedItem: d,
        data: e.question.getItemValueWrapperComponentData(t)
      }
    });
    return (t, l) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(t.question.rootClass),
      ref_key: "root",
      ref: n
    }, [
      t.question.selectToRankEnabled ? createCommentVNode("", true) : (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(t.question.renderedRankingChoices, (d, C) => (openBlock(), createBlock(m, mergeProps({
        key: d.value + "-" + C + "-item",
        is: s(d)
      }, o(d, C)), null, 16, ["is"]))), 128)),
      t.question.selectToRankEnabled ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(t.question.getContainerClasses("from")),
        "data-ranking": "from-container"
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(t.question.renderedUnRankingChoices, (d, C) => (openBlock(), createBlock(m, mergeProps({
          key: d.value + "-" + C + "-item",
          is: s(d)
        }, o(d, C, true)), null, 16, ["is"]))), 128)),
        t.question.renderedUnRankingChoices.length === 0 ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(t.question.cssClasses.containerPlaceholder)
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: t.question.locSelectToRankEmptyRankedAreaText
          }, null, 8, ["locString"])
        ], 2)) : createCommentVNode("", true)
      ], 2)) : createCommentVNode("", true),
      t.question.selectToRankEnabled ? (openBlock(), createElementBlock("div", {
        key: 2,
        class: normalizeClass(t.question.cssClasses.containersDivider)
      }, null, 2)) : createCommentVNode("", true),
      t.question.selectToRankEnabled ? (openBlock(), createElementBlock("div", {
        key: 3,
        class: normalizeClass(t.question.getContainerClasses("to")),
        "data-ranking": "to-container"
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(t.question.renderedRankingChoices, (d, C) => (openBlock(), createBlock(m, mergeProps({
          key: d.value + "-" + C + "-item",
          is: s(d)
        }, o(d, C)), null, 16, ["is"]))), 128)),
        t.question.renderedRankingChoices.length === 0 ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(t.question.cssClasses.containerPlaceholder)
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: t.question.locSelectToRankEmptyUnrankedAreaText
          }, null, 8, ["locString"])
        ], 2)) : createCommentVNode("", true)
      ], 2)) : createCommentVNode("", true)
    ], 2));
  }
});
var P1 = ["id", "tabindex", "data-sv-drop-target-ranking-item"];
var N1 = {
  tabindex: "-1",
  style: { outline: "none" }
};
var E1 = ["xlink:href"];
var W1 = ["xlink:href"];
var F1 = ["xlink:href"];
var O1 = defineComponent({
  inheritAttrs: false,
  __name: "RankingItem",
  props: {
    index: {},
    question: {},
    item: {},
    unrankedItem: { type: Boolean }
  },
  setup(u) {
    const e = u, n = computed(() => e.question.getNumberByIndex(e.index));
    return S(() => e.item), (s, o) => (openBlock(), createElementBlock("div", {
      id: s.question.getItemId(s.item),
      tabindex: s.question.getItemTabIndex(s.item),
      "data-sv-drop-target-ranking-item": s.index,
      class: normalizeClass(s.question.getItemClass(s.item)),
      onKeydown: o[0] || (o[0] = (t) => {
        s.question.handleKeydown.call(s.question, t, s.item);
      }),
      onPointerdown: o[1] || (o[1] = (t) => {
        s.question.handlePointerDown.call(
          s.question,
          t,
          s.item,
          t.currentTarget
        );
      }),
      onPointerup: o[2] || (o[2] = (t) => {
        s.question.handlePointerUp.call(
          s.question,
          t,
          s.item,
          t.currentTarget
        );
      })
    }, [
      createBaseVNode("div", N1, [
        createBaseVNode("div", {
          class: normalizeClass(s.question.cssClasses.itemGhostNode)
        }, null, 2),
        createBaseVNode("div", {
          class: normalizeClass(s.question.cssClasses.itemContent)
        }, [
          createBaseVNode("div", {
            class: normalizeClass(s.question.cssClasses.itemIconContainer)
          }, [
            (openBlock(), createElementBlock("svg", {
              class: normalizeClass(s.question.getIconHoverCss())
            }, [
              createBaseVNode("use", {
                "xlink:href": s.question.dragDropSvgIcon
              }, null, 8, E1)
            ], 2)),
            (openBlock(), createElementBlock("svg", {
              class: normalizeClass(s.question.getIconFocusCss())
            }, [
              createBaseVNode("use", {
                "xlink:href": s.question.arrowsSvgIcon
              }, null, 8, W1)
            ], 2))
          ], 2),
          !s.unrankedItem && n.value ? (openBlock(), createElementBlock("div", {
            key: 0,
            class: normalizeClass(s.question.getItemIndexClasses(s.item))
          }, toDisplayString(n.value), 3)) : (openBlock(), createElementBlock("div", {
            key: 1,
            class: normalizeClass(s.question.getItemIndexClasses(s.item))
          }, [
            (openBlock(), createElementBlock("svg", null, [
              createBaseVNode("use", {
                "xlink:href": s.question.dashSvgIcon
              }, null, 8, F1)
            ]))
          ], 2)),
          createVNode(m, {
            is: s.question.itemComponent,
            item: s.item,
            cssClasses: s.question.cssClasses
          }, null, 8, ["is", "item", "cssClasses"])
        ], 2)
      ])
    ], 42, P1));
  }
});
var z1 = defineComponent({
  inheritAttrs: false,
  __name: "RankingItemContent",
  props: {
    item: {},
    cssClasses: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(e.cssClasses.controlLabel)
    }, [
      createVNode(m, {
        is: "survey-string",
        locString: e.item.locText
      }, null, 8, ["locString"])
    ], 2));
  }
});
var U1 = ["role", "aria-required", "aria-label", "aria-labelledby", "aria-describedby", "aria-invalid", "aria-errormessage"];
var Q1 = createBaseVNode("legend", {
  role: "presentation",
  class: "sv-hidden"
}, null, -1);
var K1 = defineComponent({
  inheritAttrs: false,
  __name: "Rating",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = (o) => e.question.getInputId(o);
    return (o, t) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(o.question.ratingRootCss),
      ref_key: "root",
      ref: n
    }, [
      createBaseVNode("fieldset", {
        role: o.question.a11y_input_ariaRole,
        "aria-required": o.question.a11y_input_ariaRequired,
        "aria-label": o.question.a11y_input_ariaLabel,
        "aria-labelledby": o.question.a11y_input_ariaLabelledBy,
        "aria-describedby": o.question.a11y_input_ariaDescribedBy,
        "aria-invalid": o.question.a11y_input_ariaInvalid,
        "aria-errormessage": o.question.a11y_input_ariaErrormessage
      }, [
        Q1,
        o.question.hasMinLabel ? (openBlock(), createElementBlock("span", {
          key: 0,
          class: normalizeClass(o.question.cssClasses.minText)
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: o.question.locMinRateDescription
          }, null, 8, ["locString"])
        ], 2)) : createCommentVNode("", true),
        (openBlock(true), createElementBlock(Fragment, null, renderList(o.question.renderedRateItems, (l, d) => (openBlock(), createBlock(m, {
          key: s(d),
          is: o.question.itemComponent,
          item: l,
          index: d,
          question: o.question
        }, null, 8, ["is", "item", "index", "question"]))), 128)),
        o.question.hasMaxLabel ? (openBlock(), createElementBlock("span", {
          key: 1,
          class: normalizeClass(o.question.cssClasses.maxText)
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: o.question.locMaxRateDescription
          }, null, 8, ["locString"])
        ], 2)) : createCommentVNode("", true)
      ], 8, U1)
    ], 2));
  }
});
var j1 = ["name", "id", "value", "disabled", "readonly", "aria-label"];
var G1 = ["data-text"];
var X1 = defineComponent({
  __name: "RatingItem",
  props: {
    question: {},
    item: {},
    index: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.item), (n, s) => (openBlock(), createElementBlock("label", {
      key: n.item.value,
      onMousedown: s[1] || (s[1] = (o) => n.question.onMouseDown()),
      class: normalizeClass(n.question.getItemClassByText(n.item.itemValue, n.item.text))
    }, [
      createBaseVNode("input", {
        type: "radio",
        class: "sv-visuallyhidden",
        name: n.question.questionName,
        id: n.question.getInputId(n.index),
        value: n.item.value,
        disabled: n.question.isDisabledAttr,
        readonly: n.question.isReadOnlyAttr,
        onClick: s[0] || (s[0] = (o) => n.question.setValueFromClick(o.target.value)),
        "aria-label": n.question.ariaLabel
      }, null, 8, j1),
      createBaseVNode("span", {
        class: normalizeClass(n.question.cssClasses.itemText),
        "data-text": n.item.text
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: n.item.locText
        }, null, 8, ["locString"])
      ], 10, G1)
    ], 34));
  }
});
var J1 = ["title"];
var Y1 = ["name", "id", "value", "disabled", "readonly", "aria-label"];
var _1 = defineComponent({
  __name: "RatingItemSmiley",
  props: {
    question: {},
    item: {},
    index: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.item), (n, s) => (openBlock(), createElementBlock("label", {
      key: n.item.value,
      onMousedown: s[1] || (s[1] = (o) => n.question.onMouseDown()),
      style: normalizeStyle(n.question.getItemStyle(n.item.itemValue, n.item.highlight)),
      class: normalizeClass(n.question.getItemClass(n.item.itemValue, n.item.highlight)),
      onMouseover: s[2] || (s[2] = (o) => n.question.onItemMouseIn(n.item)),
      onMouseleave: s[3] || (s[3] = (o) => n.question.onItemMouseOut(n.item)),
      title: n.item.text
    }, [
      createBaseVNode("input", {
        type: "radio",
        class: "sv-visuallyhidden",
        name: n.question.questionName,
        id: n.question.getInputId(n.index),
        value: n.item.value,
        disabled: n.question.isDisabledAttr,
        readonly: n.question.isReadOnlyAttr,
        onClick: s[0] || (s[0] = (o) => n.question.setValueFromClick(o.target.value)),
        "aria-label": n.question.ariaLabel
      }, null, 8, Y1),
      createVNode(m, {
        is: "sv-svg-icon",
        iconName: n.question.getItemSmileyIconName(n.item.itemValue),
        size: "auto"
      }, null, 8, ["iconName"])
    ], 46, J1));
  }
});
var x1 = ["title"];
var en = ["name", "id", "value", "disabled", "readonly", "aria-label"];
var sn = defineComponent({
  __name: "RatingItemStar",
  props: {
    question: {},
    item: {},
    index: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.item), (n, s) => (openBlock(), createElementBlock("label", {
      key: n.item.value,
      onMousedown: s[1] || (s[1] = (o) => n.question.onMouseDown()),
      class: normalizeClass(n.question.getItemClass(n.item.itemValue)),
      onMouseover: s[2] || (s[2] = (o) => n.question.onItemMouseIn(n.item)),
      onMouseleave: s[3] || (s[3] = (o) => n.question.onItemMouseOut(n.item)),
      title: n.item.text
    }, [
      createBaseVNode("input", {
        type: "radio",
        class: "sv-visuallyhidden",
        name: n.question.questionName,
        id: n.question.getInputId(n.index),
        value: n.item.value,
        disabled: n.question.isDisabledAttr,
        readonly: n.question.isReadOnlyAttr,
        onClick: s[0] || (s[0] = (o) => n.question.setValueFromClick((o == null ? void 0 : o.target).value)),
        "aria-label": n.question.ariaLabel
      }, null, 8, en),
      createVNode(m, {
        is: "sv-svg-icon",
        class: normalizeClass("sv-star"),
        iconName: n.question.itemStarIcon,
        size: "auto"
      }, null, 8, ["iconName"]),
      createVNode(m, {
        is: "sv-svg-icon",
        class: normalizeClass("sv-star-2"),
        iconName: n.question.itemStarIconAlt,
        size: "auto"
      }, null, 8, ["iconName"])
    ], 42, x1));
  }
});
var nn = { class: "sd-rating-dropdown-item" };
var tn = { class: "sd-rating-dropdown-item_text" };
var on = {
  key: 0,
  class: "sd-rating-dropdown-item_description"
};
var rn = defineComponent({
  __name: "RatingDropdownItem",
  props: {
    item: {},
    model: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.item), (n, s) => (openBlock(), createElementBlock("div", nn, [
      createBaseVNode("span", tn, toDisplayString(n.item.title), 1),
      n.item.description ? (openBlock(), createElementBlock("div", on, [
        createVNode(m, {
          is: "survey-string",
          locString: n.item.description
        }, null, 8, ["locString"])
      ])) : createCommentVNode("", true)
    ]));
  }
});
RendererFactory.Instance.registerRenderer(
  "rating",
  "dropdown",
  "sv-rating-dropdown"
);
var ln = defineComponent({
  inheritAttrs: false,
  __name: "RatingDropdown",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.cssClasses.rootDropdown),
      ref_key: "root",
      ref: n
    }, [
      createVNode(m, {
        is: "sv-dropdown",
        question: s.question
      }, null, 8, ["question"])
    ], 2));
  }
});
var an = ["name", "value", "id", ".indeterminate", "disabled", "readonly", "role", "aria-required", "aria-label", "aria-labelledby", "aria-describedby", "aria-invalid", "aria-errormessage"];
var un = defineComponent({
  inheritAttrs: false,
  __name: "BooleanSwitch",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = (t, l) => {
      e.question.onLabelClick(t, l);
    }, o = (t) => {
      e.question.onSwitchClickModel(t);
    };
    return (t, l) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(t.question.cssClasses.root),
      ref_key: "root",
      ref: n,
      onKeydown: l[4] || (l[4] = (d) => t.question.onKeyDownCore(d))
    }, [
      createBaseVNode("label", {
        class: normalizeClass(t.question.getItemCss())
      }, [
        withDirectives(createBaseVNode("input", {
          type: "checkbox",
          name: t.question.name,
          value: t.question.booleanValue ?? "",
          "onUpdate:modelValue": l[0] || (l[0] = (d) => t.question.booleanValue = d),
          class: normalizeClass(t.question.cssClasses.control),
          id: t.question.inputId,
          ".indeterminate": t.question.isIndeterminate,
          disabled: t.question.isDisabledAttr,
          readonly: t.question.isReadOnlyAttr,
          role: t.question.a11y_input_ariaRole,
          "aria-required": t.question.a11y_input_ariaRequired,
          "aria-label": t.question.a11y_input_ariaLabel,
          "aria-labelledby": t.question.a11y_input_ariaLabelledBy,
          "aria-describedby": t.question.a11y_input_ariaDescribedBy,
          "aria-invalid": t.question.a11y_input_ariaInvalid,
          "aria-errormessage": t.question.a11y_input_ariaErrormessage
        }, null, 42, an), [
          [vModelCheckbox, t.question.booleanValue]
        ]),
        createBaseVNode("div", {
          class: normalizeClass(t.question.cssClasses.sliderGhost),
          onClick: l[1] || (l[1] = (d) => s(d, t.question.swapOrder))
        }, [
          createBaseVNode("span", {
            class: normalizeClass(t.question.getLabelCss(t.question.swapOrder))
          }, [
            createVNode(m, {
              is: "survey-string",
              locString: t.question.locLabelLeft
            }, null, 8, ["locString"])
          ], 2)
        ], 2),
        createBaseVNode("div", {
          class: normalizeClass(t.question.cssClasses.switch),
          onClick: l[2] || (l[2] = (d) => o(d))
        }, [
          createBaseVNode("span", {
            class: normalizeClass(t.question.cssClasses.slider)
          }, [
            t.question.cssClasses.sliderText && t.question.isDeterminated ? (openBlock(), createElementBlock("span", {
              key: 0,
              class: normalizeClass(t.question.cssClasses.sliderText)
            }, [
              createVNode(m, {
                is: "survey-string",
                locString: t.question.getCheckedLabel()
              }, null, 8, ["locString"])
            ], 2)) : createCommentVNode("", true)
          ], 2)
        ], 2),
        createBaseVNode("div", {
          class: normalizeClass(t.question.cssClasses.sliderGhost),
          onClick: l[3] || (l[3] = (d) => s(d, !t.question.swapOrder))
        }, [
          createBaseVNode("span", {
            class: normalizeClass(t.question.getLabelCss(!t.question.swapOrder))
          }, [
            createVNode(m, {
              is: "survey-string",
              locString: t.question.locLabelRight
            }, null, 8, ["locString"])
          ], 2)
        ], 2)
      ], 2)
    ], 34));
  }
});
RendererFactory.Instance.registerRenderer(
  "boolean",
  "radio",
  "sv-boolean-radio"
);
var dn = defineComponent({
  inheritAttrs: false,
  __name: "BooleanRadio",
  props: {
    question: {}
  },
  setup(u) {
    const e = ref(null);
    return T(u, e), (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.cssClasses.rootRadio),
      ref_key: "root",
      ref: e
    }, [
      createBaseVNode("fieldset", {
        role: "presentation",
        class: normalizeClass(s.question.cssClasses.radioFieldset)
      }, [
        s.question.swapOrder ? (openBlock(), createBlock(m, {
          is: "sv-boolean-radio-item",
          key: "true",
          question: s.question,
          locText: s.question.locLabelTrue,
          value: true
        }, null, 8, ["question", "locText"])) : createCommentVNode("", true),
        (openBlock(), createBlock(m, {
          is: "sv-boolean-radio-item",
          key: "false",
          question: s.question,
          locText: s.question.locLabelFalse,
          value: false
        }, null, 8, ["question", "locText"])),
        s.question.swapOrder ? createCommentVNode("", true) : (openBlock(), createBlock(m, {
          is: "sv-boolean-radio-item",
          key: "true",
          question: s.question,
          locText: s.question.locLabelTrue,
          value: true
        }, null, 8, ["question", "locText"]))
      ], 2)
    ], 2));
  }
});
var mn = ["name", "value", "checked", "aria-errormessage", "disabled", "readonly"];
var pn = ["xlink:href"];
var vn = defineComponent({
  __name: "BooleanRadioItem",
  props: {
    question: {},
    locText: {},
    value: { type: Boolean }
  },
  setup(u) {
    const e = u, n = (s) => {
      const o = e.question;
      o.booleanValue = s.target.value == "true";
    };
    return (s, o) => (openBlock(), createElementBlock("div", {
      role: "presentation",
      class: normalizeClass(s.question.getRadioItemClass(s.question.cssClasses, s.value))
    }, [
      createBaseVNode("label", {
        class: normalizeClass(s.question.cssClasses.radioLabel)
      }, [
        createBaseVNode("input", {
          type: "radio",
          name: s.question.name,
          value: s.value,
          checked: s.value === s.question.booleanValueRendered,
          "aria-errormessage": s.question.ariaErrormessage,
          disabled: s.question.isDisabledAttr,
          readonly: s.question.isReadOnlyAttr,
          class: normalizeClass(s.question.cssClasses.itemRadioControl),
          onChange: n
        }, null, 42, mn),
        s.question.cssClasses.materialRadioDecorator ? (openBlock(), createElementBlock("span", {
          key: 0,
          class: normalizeClass(s.question.cssClasses.materialRadioDecorator)
        }, [
          s.question.itemSvgIcon ? (openBlock(), createElementBlock("svg", {
            key: 0,
            class: normalizeClass(s.question.cssClasses.itemRadioDecorator)
          }, [
            createBaseVNode("use", {
              "xlink:href": s.question.itemSvgIcon
            }, null, 8, pn)
          ], 2)) : createCommentVNode("", true)
        ], 2)) : createCommentVNode("", true),
        createBaseVNode("span", {
          class: normalizeClass(s.question.cssClasses.radioControlLabel)
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: s.locText
          }, null, 8, ["locString"])
        ], 2)
      ], 2)
    ], 2));
  }
});
var Cn = ["name", "value", "id", ".indeterminate", "disabled", "readonly", "aria-required", "aria-label", "aria-labelledby", "aria-describedby", "aria-invalid", "aria-errormessage"];
var cn = ["xlink:href"];
var gn = createBaseVNode("span", { class: "check" }, null, -1);
var yn = ["id"];
var hn = ["id"];
RendererFactory.Instance.registerRenderer(
  "boolean",
  "checkbox",
  "sv-boolean-checkbox"
);
var qn = defineComponent({
  inheritAttrs: false,
  __name: "BooleanCheckbox",
  props: {
    question: {},
    css: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.cssClasses.rootCheckbox),
      ref_key: "root",
      ref: n
    }, [
      createBaseVNode("div", {
        class: normalizeClass(s.question.getCheckboxItemCss())
      }, [
        createBaseVNode("label", {
          class: normalizeClass(s.question.cssClasses.checkboxLabel)
        }, [
          withDirectives(createBaseVNode("input", {
            type: "checkbox",
            name: s.question.name,
            value: s.question.booleanValue ?? "",
            "onUpdate:modelValue": o[0] || (o[0] = (t) => s.question.booleanValue = t),
            class: normalizeClass(s.question.cssClasses.controlCheckbox),
            id: s.question.inputId,
            ".indeterminate": s.question.isIndeterminate,
            disabled: s.question.isDisabledAttr,
            readonly: s.question.isReadOnlyAttr,
            "aria-required": s.question.a11y_input_ariaRequired,
            "aria-label": s.question.a11y_input_ariaLabel,
            "aria-labelledby": s.question.a11y_input_ariaLabelledBy,
            "aria-describedby": s.question.a11y_input_ariaDescribedBy,
            "aria-invalid": s.question.a11y_input_ariaInvalid,
            "aria-errormessage": s.question.a11y_input_ariaErrormessage
          }, null, 42, Cn), [
            [vModelCheckbox, s.question.booleanValue]
          ]),
          createBaseVNode("span", {
            class: normalizeClass(s.question.cssClasses.checkboxMaterialDecorator)
          }, [
            s.question.svgIcon ? (openBlock(), createElementBlock("svg", {
              key: 0,
              class: normalizeClass(s.question.cssClasses.checkboxItemDecorator)
            }, [
              createBaseVNode("use", {
                "xlink:href": s.question.svgIcon
              }, null, 8, cn)
            ], 2)) : createCommentVNode("", true),
            gn
          ], 2),
          s.question.isLabelRendered ? (openBlock(), createElementBlock("span", {
            key: 0,
            id: s.question.labelRenderedAriaID,
            class: normalizeClass(s.question.cssClasses.checkboxControlLabel)
          }, [
            s.question.hasTitleActions ? createCommentVNode("", true) : (openBlock(), createBlock(m, {
              key: 0,
              is: "survey-element-title-content",
              element: s.question,
              css: s.css
            }, null, 8, ["element", "css"])),
            s.question.hasTitleActions ? (openBlock(), createBlock(m, {
              key: 1,
              is: "sv-title-actions",
              element: s.question,
              css: s.css
            }, null, 8, ["element", "css"])) : createCommentVNode("", true)
          ], 10, yn)) : createCommentVNode("", true)
        ], 2),
        s.question.canRenderLabelDescription ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(s.question.cssDescription),
          id: s.question.ariaDescriptionId
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: s.question.locDescription
          }, null, 8, ["locString"])
        ], 10, hn)) : createCommentVNode("", true)
      ], 2)
    ], 2));
  }
});
var wn = defineComponent({
  inheritAttrs: false,
  __name: "Multipletext",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null), s = se(() => e.question.getRows());
    return T(e, n), (o, t) => (openBlock(), createElementBlock("table", {
      class: normalizeClass(o.question.getQuestionRootCss()),
      ref_key: "root",
      ref: n
    }, [
      createBaseVNode("tbody", null, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(s), (l, d) => (openBlock(), createElementBlock(Fragment, {
          key: o.question.inputId + "rowkey" + d
        }, [
          l.isVisible ? (openBlock(), createElementBlock("tr", {
            key: 0,
            class: normalizeClass(o.question.cssClasses.row)
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(l.cells, (C) => (openBlock(), createElementBlock("td", {
              key: "item" + C.item.editor.id,
              class: normalizeClass(C.className)
            }, [
              createVNode(m, {
                is: "survey-multipletext-item",
                question: o.question,
                cell: C
              }, null, 8, ["question", "cell"])
            ], 2))), 128))
          ], 2)) : createCommentVNode("", true)
        ], 64))), 128))
      ])
    ], 2));
  }
});
var bn = { key: 1 };
var Ln = { key: 2 };
var kn = defineComponent({
  __name: "MultipletextItem",
  props: {
    question: {},
    cell: {}
  },
  setup(u) {
    const e = u, n = (o) => ie(o);
    S(() => e.cell.item.editor);
    const s = computed(() => e.cell.item);
    return (o, t) => o.cell.isErrorsCell ? (openBlock(), createBlock(m, {
      key: 1,
      is: "survey-errors",
      element: s.value.editor
    }, null, 8, ["element"])) : (openBlock(), createElementBlock("label", {
      key: 0,
      class: normalizeClass(o.question.getItemLabelCss(s.value))
    }, [
      createBaseVNode("span", {
        class: normalizeClass(o.question.getItemTitleCss()),
        style: normalizeStyle({
          minWidth: o.question.itemTitleWidth,
          width: o.question.itemTitleWidth
        })
      }, [
        s.value.editor.isRequireTextBeforeTitle || s.value.editor.isRequireTextOnStart ? (openBlock(), createElementBlock("span", {
          key: 0,
          class: normalizeClass(o.question.cssClasses.requiredMark)
        }, toDisplayString(s.value.editor.requiredMark), 3)) : createCommentVNode("", true),
        s.value.editor.isRequireTextBeforeTitle || s.value.editor.isRequireTextOnStart ? (openBlock(), createElementBlock("span", bn, " ")) : createCommentVNode("", true),
        createVNode(m, {
          is: "survey-string",
          locString: s.value.locTitle
        }, null, 8, ["locString"]),
        s.value.editor.isRequireTextAfterTitle ? (openBlock(), createElementBlock("span", Ln, " ")) : createCommentVNode("", true),
        s.value.editor.isRequireTextAfterTitle ? (openBlock(), createElementBlock("span", {
          key: 3,
          "aria-hidden": "true",
          class: normalizeClass(o.question.cssClasses.requiredMark)
        }, toDisplayString(s.value.editor.requiredMark), 3)) : createCommentVNode("", true)
      ], 6),
      (openBlock(), createElementBlock("div", {
        key: s.value.editor.id,
        class: normalizeClass(o.question.getItemCss()),
        onFocusin: t[0] || (t[0] = (l) => s.value.focusIn())
      }, [
        createVNode(m, {
          is: n(s.value.editor),
          question: s.value.editor
        }, null, 8, ["is", "question"])
      ], 34))
    ], 2));
  }
});
var fn = defineComponent({
  inheritAttrs: false,
  __name: "Breadcrumbs",
  props: {
    model: {},
    css: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.model), (n, s) => n.model.actions && n.model.actions.length ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(n.css.breadcrumbsRoot)
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(n.model.actions, (o, t) => (openBlock(), createElementBlock(Fragment, {
        key: o.renderedId
      }, [
        t ? (openBlock(), createBlock(m, {
          key: 0,
          is: "sv-svg-icon",
          class: normalizeClass(n.css.breadcrumbsSeparator),
          iconName: "arrowright-16x16",
          size: "auto"
        }, null, 8, ["class"])) : createCommentVNode("", true),
        createVNode(m, {
          is: "sv-action",
          item: o
        }, null, 8, ["item"])
      ], 64))), 128))
    ], 2)) : createCommentVNode("", true);
  }
});
var Hn = ["onClick", "title"];
var Mn = ["onClick", "title"];
var In = { key: 1 };
var Vn = { key: 1 };
var Sn = defineComponent({
  __name: "SingleInputSummary",
  props: {
    summary: {},
    css: {}
  },
  setup(u) {
    const e = u, n = computed(() => "survey-placeholder-" + e.summary.question.getTemplate()), s = computed(() => F.Instance.isComponentRegistered(n.value));
    return (o, t) => o.summary.isEmpty() ? (openBlock(), createElementBlock("div", In, [
      s.value ? (openBlock(), createBlock(m, {
        key: 0,
        is: "survey-placeholder-" + o.summary.question.getTemplate(),
        cssClasses: o.css,
        question: o.summary.question
      }, null, 8, ["is", "cssClasses", "question"])) : (openBlock(), createElementBlock("div", Vn, [
        createVNode(m, {
          is: "survey-string",
          locString: o.summary.noEntry
        }, null, 8, ["locString"])
      ]))
    ])) : (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(o.css.summary)
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(o.summary.items, (l, d) => (openBlock(), createElementBlock("div", {
        key: d,
        class: normalizeClass(o.css.summaryRow)
      }, [
        createBaseVNode("div", {
          class: normalizeClass(o.css.summaryRowContent)
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: l.locText
          }, null, 8, ["locString"])
        ], 2),
        createBaseVNode("div", {
          class: normalizeClass(o.css.summaryRowActions)
        }, [
          l.btnEdit ? (openBlock(), createElementBlock("button", {
            key: 0,
            class: normalizeClass(o.css.summaryRowActionEdit),
            onClick: (C) => l.btnEdit.action(),
            title: l.btnEdit.title
          }, [
            createVNode(m, {
              is: "sv-svg-icon",
              iconName: "icon-editsmall-16x16",
              size: "auto"
            })
          ], 10, Hn)) : createCommentVNode("", true),
          l.showRemove && l.btnRemove ? (openBlock(), createElementBlock("button", {
            key: 1,
            class: normalizeClass(o.css.summaryRowActionDelete),
            onClick: (C) => l.btnRemove.action(),
            title: l.btnRemove.title
          }, [
            createVNode(m, {
              is: "sv-svg-icon",
              iconName: "icon-delete-16x16",
              size: "auto"
            })
          ], 10, Mn)) : createCommentVNode("", true)
        ], 2)
      ], 2))), 128))
    ], 2));
  }
});
var Rn = ["min", "max", "step"];
var Tn = ["id", "value", "min", "max", "step", "disabled", "onInput", "onFocus", "aria-required", "aria-label", "aria-labelledby", "aria-describedby", "aria-invalid", "aria-errormessage"];
var Bn = defineComponent({
  inheritAttrs: false,
  __name: "Slider",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null), s = ref(null);
    return T(e, n), onMounted(() => {
      e.question.refreshInputRange(s.value);
    }), (o, t) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(o.question.rootCss),
      ref_key: "rootRef",
      ref: n
    }, [
      o.question.sliderType !== "single" && o.question.allowDragRange ? (openBlock(), createElementBlock("input", {
        key: 0,
        ref_key: "rangeInputRef",
        ref: s,
        name: "range-input",
        class: normalizeClass(o.question.cssClasses.input),
        type: "range",
        tabIndex: "-1",
        min: o.question.min,
        max: o.question.max,
        step: o.question.step,
        "aria-hidden": "true",
        id: "sjs-slider-input-range-input",
        onInput: t[0] || (t[0] = (l) => {
          o.question.handleRangeOnChange(l);
        }),
        onPointerdown: t[1] || (t[1] = (l) => {
          o.question.handleRangePointerDown(l, n.value);
        }),
        onPointerup: t[2] || (t[2] = (l) => {
          o.question.handleRangePointerUp(l, n.value);
        })
      }, null, 42, Rn)) : createCommentVNode("", true),
      createBaseVNode("div", {
        class: normalizeClass(o.question.cssClasses.visualContainer),
        onPointerup: t[8] || (t[8] = (l) => {
          o.question.setValueByClickOnPath(l, n.value);
        })
      }, [
        createBaseVNode("div", {
          class: normalizeClass(o.question.cssClasses.visualContainerSlider)
        }, [
          createBaseVNode("div", {
            class: normalizeClass(o.question.cssClasses.inverseTrackLeft),
            style: normalizeStyle({ width: o.question.getTrackPercentLeft() + "%" })
          }, null, 6),
          createBaseVNode("div", {
            class: normalizeClass(o.question.cssClasses.inverseTrackRight),
            style: normalizeStyle({ width: o.question.getTrackPercentRight() + "%" })
          }, null, 6),
          createBaseVNode("div", {
            class: normalizeClass(o.question.cssClasses.rangeTrack),
            style: normalizeStyle({ left: o.question.getTrackPercentLeft() + "%", right: o.question.getTrackPercentRight() + "%" })
          }, null, 6),
          (openBlock(true), createElementBlock(Fragment, null, renderList(o.question.renderedValue, (l, d) => (openBlock(), createElementBlock(Fragment, { key: d }, [
            createBaseVNode("input", {
              class: normalizeClass(o.question.cssClasses.input),
              id: "sjs-slider-input-" + d,
              type: "range",
              value: l,
              min: o.question.min,
              max: o.question.max,
              step: o.question.step,
              disabled: o.question.isDisabledAttr,
              onInput: (C) => {
                o.question.handleOnChange(C, d);
              },
              onPointerdown: t[3] || (t[3] = (C) => {
                o.question.handlePointerDown(C);
              }),
              onPointerup: t[4] || (t[4] = (C) => {
                C.stopPropagation(), o.question.handlePointerUp(C);
              }),
              onKeydown: t[5] || (t[5] = (C) => {
                o.question.handleKeyDown(C);
              }),
              onKeyup: t[6] || (t[6] = (C) => {
                o.question.handleKeyUp(C);
              }),
              onFocus: () => {
                o.question.handleOnFocus(d);
              },
              onBlur: t[7] || (t[7] = () => {
                o.question.handleOnBlur();
              }),
              "aria-required": o.question.a11y_input_ariaRequired,
              "aria-label": o.question.a11y_input_ariaLabel,
              "aria-labelledby": o.question.a11y_input_ariaLabelledBy,
              "aria-describedby": o.question.a11y_input_ariaDescribedBy,
              "aria-invalid": o.question.a11y_input_ariaInvalid,
              "aria-errormessage": o.question.a11y_input_ariaErrormessage
            }, null, 42, Tn),
            createBaseVNode("div", {
              class: normalizeClass(o.question.getThumbContainerCss(d)),
              style: normalizeStyle({ left: o.question.getPercent(l) + "%" })
            }, [
              o.question.tooltipVisibility !== "never" ? (openBlock(), createElementBlock("div", {
                key: 0,
                class: normalizeClass(o.question.tooltipCss)
              }, [
                createBaseVNode("div", {
                  class: normalizeClass(o.question.cssClasses.tooltipPanel)
                }, [
                  createBaseVNode("div", {
                    class: normalizeClass(o.question.cssClasses.tooltipValue)
                  }, toDisplayString(o.question.getTooltipValue(d)), 3)
                ], 2)
              ], 2)) : createCommentVNode("", true),
              createBaseVNode("div", {
                class: normalizeClass(o.question.cssClasses.thumb)
              }, [
                createBaseVNode("div", {
                  class: normalizeClass(o.question.cssClasses.thumbDot)
                }, null, 2)
              ], 2)
            ], 6)
          ], 64))), 128))
        ], 2)
      ], 34),
      o.question.showLabels ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(o.question.cssClasses.labelsContainer)
      }, [
        createBaseVNode("div", null, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(o.question.renderedLabels, (l) => (openBlock(), createBlock(m, {
            key: l.id,
            is: "sv-slider-label-item",
            item: l,
            question: o.question
          }, null, 8, ["item", "question"]))), 128))
        ])
      ], 2)) : createCommentVNode("", true)
    ], 2));
  }
});
var Zn = defineComponent({
  __name: "SliderLabelItem",
  props: {
    question: {},
    item: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.item), (n, s) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(n.question.getLabelCss(n.item.locText)),
      style: normalizeStyle({ left: n.question.getPercent(n.item.value) + "%" }),
      onPointerup: s[0] || (s[0] = (o) => {
        n.question.handleLabelPointerUp(o, n.item.value);
      })
    }, [
      createBaseVNode("div", {
        class: normalizeClass(n.question.cssClasses.labelTick)
      }, null, 2),
      createBaseVNode("div", {
        class: normalizeClass(n.question.cssClasses.labelText)
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: n.item.locText
        }, null, 8, ["locString"])
      ], 2)
    ], 38));
  }
});
var $n = { role: "radiogroup" };
var Dn = { class: "sv-visuallyhidden" };
var An = {
  key: 0,
  role: "presentation"
};
var Pn = { key: 0 };
var Nn = ["onClick"];
var En = ["data-responsive-title", "onClick"];
var Wn = defineComponent({
  inheritAttrs: false,
  __name: "Matrix",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null), s = shallowRef();
    T(
      e,
      n,
      (t) => {
        s.value = t.visibleRows, t.visibleRowsChangedCallback = () => {
          s.value = t.visibleRows;
        };
      },
      (t) => {
        t.visibleRowsChangedCallback = () => {
        };
      }
    );
    const o = (t, l) => {
      t.cellClick(l);
    };
    return (t, l) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(t.question.cssClasses.tableWrapper),
      ref_key: "root",
      ref: n
    }, [
      createBaseVNode("fieldset", $n, [
        createBaseVNode("legend", Dn, toDisplayString(t.question.locTitle.renderedHtml), 1),
        createBaseVNode("table", {
          class: normalizeClass(t.question.getTableCss()),
          role: "presentation"
        }, [
          t.question.showHeader ? (openBlock(), createElementBlock("thead", An, [
            createBaseVNode("tr", null, [
              t.question.hasRows ? (openBlock(), createElementBlock("td", Pn)) : createCommentVNode("", true),
              (openBlock(true), createElementBlock(Fragment, null, renderList(t.question.visibleColumns, (d, C) => (openBlock(), createElementBlock("th", {
                key: C,
                class: normalizeClass(t.question.cssClasses.headerCell),
                style: normalizeStyle({
                  minWidth: t.question.columnMinWidth,
                  width: t.question.columnMinWidth
                })
              }, [
                createVNode(m, {
                  is: t.question.getColumnHeaderWrapperComponentName(d),
                  componentData: t.question.getColumnHeaderWrapperComponentData(d)
                }, {
                  default: withCtx(() => [
                    createVNode(m, {
                      is: "survey-string",
                      locString: d.locText
                    }, null, 8, ["locString"])
                  ]),
                  _: 2
                }, 1032, ["is", "componentData"])
              ], 6))), 128))
            ])
          ])) : createCommentVNode("", true),
          createBaseVNode("tbody", null, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(s.value, (d, C) => (openBlock(), createElementBlock("tr", {
              key: "row_" + d.name + "_" + C,
              class: normalizeClass(d.rowClasses || void 0)
            }, [
              withDirectives(createBaseVNode("td", {
                class: normalizeClass(d.rowTextClasses),
                style: normalizeStyle({
                  minWidth: t.question.rowTitleWidth,
                  width: t.question.rowTitleWidth
                })
              }, [
                createVNode(m, {
                  is: t.question.getRowHeaderWrapperComponentName(d),
                  componentData: t.question.getRowHeaderWrapperComponentData(d)
                }, {
                  default: withCtx(() => [
                    createVNode(m, {
                      is: "survey-string",
                      locString: d.locText
                    }, null, 8, ["locString"])
                  ]),
                  _: 2
                }, 1032, ["is", "componentData"])
              ], 6), [
                [vShow, t.question.hasRows]
              ]),
              t.question.hasCellText ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(t.question.visibleColumns, (L, h) => (openBlock(), createElementBlock("td", {
                key: h,
                class: normalizeClass(t.question.getItemClass(d, L)),
                onClick: (q) => o(d, L)
              }, [
                createVNode(m, {
                  is: "survey-string",
                  locString: t.question.getCellDisplayLocText(d.name, L)
                }, null, 8, ["locString"])
              ], 10, Nn))), 128)) : createCommentVNode("", true),
              t.question.hasCellText ? createCommentVNode("", true) : (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(t.question.visibleColumns, (L, h) => (openBlock(), createElementBlock("td", {
                key: h,
                "data-responsive-title": L.locText.renderedHtml,
                class: normalizeClass(t.question.cssClasses.cell),
                onClick: (q) => o(d, L)
              }, [
                createVNode(m, {
                  is: t.question.cellComponent,
                  question: t.question,
                  row: d,
                  column: L,
                  columnIndex: h
                }, null, 8, ["is", "question", "row", "column", "columnIndex"])
              ], 10, En))), 128))
            ], 2))), 128))
          ])
        ], 2)
      ])
    ], 2));
  }
});
var Fn = ["data-sv-drop-target-matrix-row"];
var On = defineComponent({
  __name: "MatrixRow",
  props: {
    question: {},
    row: {}
  },
  setup(u) {
    const e = u, n = ref();
    S(() => e.row);
    const s = watch(
      () => e.row,
      (o, t) => {
        t && t.setRootElement(void 0), o.setRootElement(n.value);
      }
    );
    return onMounted(() => {
      e.row.setRootElement(n.value);
    }), onUnmounted(() => {
      e.row.setRootElement(void 0), s();
    }), (o, t) => o.row.visible ? (openBlock(), createElementBlock("tr", {
      key: 0,
      "data-sv-drop-target-matrix-row": o.row.dropTargetId,
      onPointerdown: t[0] || (t[0] = (l) => o.question.onPointerDown(l, o.row.row)),
      class: normalizeClass(o.row.className),
      ref_key: "root",
      ref: n
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(o.row.cells, (l) => (openBlock(), createBlock(m, {
        is: "survey-matrixdropdown-cell",
        cell: l,
        question: o.question,
        key: o.row.id + "_" + l.id
      }, null, 8, ["cell", "question"]))), 128))
    ], 42, Fn)) : createCommentVNode("", true);
  }
});
var zn = ["type", "name", "value", "readonly", "disabled", "id", "aria-required", "aria-label", "aria-invalid", "aria-errormessage"];
var Un = ["xlink:href"];
var Qn = defineComponent({
  inheritAttrs: false,
  __name: "MatrixCell",
  props: {
    question: {},
    row: {},
    column: {},
    columnIndex: {}
  },
  setup(u) {
    const e = u, n = e.row.isChecked(e.column) ? e.column.value : "", s = () => {
      const t = e.row, l = e.column;
      t.cellClick(l);
    }, o = computed(() => e.question.getItemSvgIcon(e.row, e.column));
    return (t, l) => (openBlock(), createElementBlock("label", {
      onMousedown: l[1] || (l[1] = (d) => t.question.onMouseDown()),
      class: normalizeClass(t.question.getItemClass(t.row, t.column))
    }, [
      withDirectives(createBaseVNode("input", {
        type: t.question.checkType,
        class: normalizeClass(t.question.cssItemValue),
        name: t.row.fullName,
        "onUpdate:modelValue": l[0] || (l[0] = (d) => isRef(n) ? n.value = d : null),
        onChange: s,
        value: t.column.value,
        readonly: t.row.isReadOnlyAttr,
        disabled: t.row.isDisabledAttr,
        id: t.question.inputId + "_" + t.row.name + "_" + t.columnIndex,
        "aria-required": t.question.a11y_input_ariaRequired,
        "aria-label": t.question.getCellAriaLabel(t.row, t.column),
        "aria-invalid": t.question.a11y_input_ariaInvalid,
        "aria-errormessage": t.question.a11y_input_ariaErrormessage
      }, null, 42, zn), [
        [vModelDynamic, unref(n)]
      ]),
      createBaseVNode("span", {
        class: normalizeClass(t.question.cssMaterialDecorator)
      }, [
        o.value ? (openBlock(), createElementBlock("svg", {
          key: 0,
          class: normalizeClass(t.question.cssItemDecorator)
        }, [
          createBaseVNode("use", { "xlink:href": o.value }, null, 8, Un)
        ], 2)) : createCommentVNode("", true)
      ], 2),
      t.question.isMobile ? (openBlock(), createElementBlock("span", {
        key: 0,
        class: normalizeClass(t.question.cssClasses.cellResponsiveTitle)
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: t.column.locText
        }, null, 8, ["locString"])
      ], 2)) : createCommentVNode("", true)
    ], 34));
  }
});
var Kn = defineComponent({
  inheritAttrs: false,
  __name: "MatrixDropdown",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => (openBlock(), createBlock(m, {
      is: "survey-matrixtable",
      question: s.question,
      ref_key: "root",
      ref: n
    }, null, 8, ["question"]));
  }
});
var jn = { key: 0 };
var Gn = { key: 1 };
var Xn = defineComponent({
  __name: "MatrixTable",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = computed(() => e.question.renderedTable);
    return S(() => n.value), (s, o) => (openBlock(), createElementBlock("div", {
      style: normalizeStyle({ overflowX: s.question.showHorizontalScroll ? "scroll" : "" }),
      class: normalizeClass(s.question.cssClasses.tableWrapper)
    }, [
      createBaseVNode("table", {
        class: normalizeClass(s.question.getTableCss())
      }, [
        n.value.showHeader ? (openBlock(), createElementBlock("thead", jn, [
          createBaseVNode("tr", null, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(n.value.headerRow.cells, (t) => (openBlock(), createElementBlock(Fragment, null, [
              t.hasTitle ? (openBlock(), createElementBlock("th", {
                key: "header_" + t.id,
                class: normalizeClass(t.className),
                style: normalizeStyle({ minWidth: t.minWidth, width: t.width })
              }, [
                createVNode(m, {
                  is: s.question.getColumnHeaderWrapperComponentName(t),
                  componentData: s.question.getColumnHeaderWrapperComponentData(t)
                }, {
                  default: withCtx(() => [
                    createVNode(m, {
                      is: "survey-string",
                      locString: t.locTitle
                    }, null, 8, ["locString"]),
                    t.column ? (openBlock(), createBlock(m, {
                      key: 0,
                      is: "survey-matrixheaderrequired",
                      column: t.column,
                      question: s.question
                    }, null, 8, ["column", "question"])) : createCommentVNode("", true)
                  ]),
                  _: 2
                }, 1032, ["is", "componentData"])
              ], 6)) : createCommentVNode("", true),
              t.hasTitle ? createCommentVNode("", true) : (openBlock(), createElementBlock("td", {
                class: normalizeClass(t.className),
                key: "header_" + t.id,
                style: normalizeStyle({ minWidth: t.minWidth, width: t.width })
              }, null, 6))
            ], 64))), 256))
          ])
        ])) : createCommentVNode("", true),
        createBaseVNode("tbody", null, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(n.value.renderedRows, (t) => (openBlock(), createBlock(m, {
            key: s.question.inputId + "_" + t.id,
            is: "survey-matrix-row",
            row: t,
            question: s.question
          }, null, 8, ["row", "question"]))), 128))
        ]),
        n.value.showFooter ? (openBlock(), createElementBlock("tfoot", Gn, [
          createBaseVNode("tr", null, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(n.value.footerRow.cells, (t, l) => (openBlock(), createBlock(m, {
              is: "survey-matrixdropdown-cell",
              cell: t,
              question: s.question,
              key: "footer_" + l
            }, null, 8, ["cell", "question"]))), 128))
          ])
        ])) : createCommentVNode("", true)
      ], 2)
    ], 6));
  }
});
var Jn = createBaseVNode("span", null, " ", -1);
var Yn = defineComponent({
  __name: "MatrixHeaderRequired",
  props: {
    question: {},
    column: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.column), (n, s) => n.column.isRenderedRequired ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
      Jn,
      n.column.isRenderedRequired ? (openBlock(), createElementBlock("span", {
        key: 0,
        class: normalizeClass(n.question.cssClasses.cellRequiredMark)
      }, toDisplayString(n.column.requiredMark), 3)) : createCommentVNode("", true)
    ], 64)) : createCommentVNode("", true);
  }
});
var _n = ["title", "colspan"];
var xn = defineComponent({
  __name: "MatrixDropdownCellComp",
  props: {
    question: {},
    cell: {}
  },
  setup(u) {
    const e = u, n = ref(false), s = ref(), o = () => e.cell.width || e.cell.minWidth ? { width: e.cell.width, minWidth: e.cell.minWidth } : null, t = () => e.cell.question.parentQuestion.getCellAriaLabel(e.cell.row, e.cell.column), l = () => {
      !e.cell.hasQuestion || !e.question || !e.question.survey || (n.value = e.cell.question.isVisible);
    }, d = (h) => ie(h);
    l(), onMounted(() => {
      if (!e.cell.hasQuestion || !e.question || !e.question.survey)
        return;
      e.cell.question.registerPropertyChangedHandlers(["isVisible"], () => {
        l();
      });
      const h = s.value, q = e.cell.question, b = {
        cell: e.cell.cell,
        cellQuestion: q,
        htmlElement: h,
        row: e.cell.row,
        column: e.cell.cell.column
      };
      e.question.survey.matrixAfterCellRender(b), q && q.afterRenderCore(h);
    });
    const C = computed(() => {
      const h = e.cell;
      if (h.hasPanel) {
        const q = h.panel, b = q.survey;
        if (b) {
          const R = b.getElementWrapperComponentName(q);
          if (R)
            return R;
        }
        return "survey-panel";
      }
    }), L = computed(() => {
      if (e.cell.hasPanel) {
        const q = e.cell.panel, b = q.survey;
        let R;
        return b && (R = b.getElementWrapperComponentData(q)), {
          componentName: "survey-panel",
          componentData: {
            element: q,
            data: R,
            css: e.question.cssClasses
          }
        };
      }
    });
    return (h, q) => h.cell.isVisible ? (openBlock(), createElementBlock("td", {
      key: 0,
      class: normalizeClass(h.cell.className),
      title: h.cell.getTitle(),
      style: normalizeStyle(o()),
      colspan: h.cell.colSpans,
      onFocusin: q[0] || (q[0] = (b) => h.cell.focusIn()),
      ref_key: "root",
      ref: s
    }, [
      h.cell.isErrorsCell ? (openBlock(), createBlock(m, {
        key: 0,
        is: "survey-errors",
        element: h.cell.question
      }, null, 8, ["element"])) : createCommentVNode("", true),
      h.cell.isDragHandlerCell ? (openBlock(), createBlock(m, {
        key: 1,
        is: "sv-matrix-drag-drop-icon",
        item: { data: { row: h.cell.row, question: h.question } }
      }, null, 8, ["item"])) : createCommentVNode("", true),
      h.cell.isActionsCell ? (openBlock(), createBlock(m, {
        key: 2,
        is: "sv-action-bar",
        model: h.cell.item.getData(),
        handleClick: false
      }, null, 8, ["model"])) : createCommentVNode("", true),
      h.cell.hasPanel ? (openBlock(), createBlock(m, mergeProps({
        key: 3,
        is: C.value
      }, L.value), null, 16, ["is"])) : createCommentVNode("", true),
      h.cell.showResponsiveTitle ? (openBlock(), createElementBlock("span", {
        key: 4,
        class: normalizeClass(h.cell.responsiveTitleCss)
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: h.cell.responsiveLocTitle
        }, null, 8, ["locString"]),
        createVNode(m, {
          is: "survey-matrixheaderrequired",
          column: h.cell.column,
          question: h.cell.matrix
        }, null, 8, ["column", "question"])
      ], 2)) : createCommentVNode("", true),
      h.cell.hasQuestion ? withDirectives((openBlock(), createElementBlock("div", {
        key: 5,
        class: normalizeClass(h.cell.cellQuestionWrapperClassName)
      }, [
        !h.cell.isChoice && h.cell.question.isDefaultRendering() ? (openBlock(), createBlock(m, {
          key: 0,
          is: h.question.getCellWrapperComponentName(h.cell.cell),
          componentData: h.question.getCellWrapperComponentData(h.cell.cell)
        }, {
          default: withCtx(() => [
            createVNode(m, {
              is: d(h.cell.question),
              question: h.cell.question
            }, null, 8, ["is", "question"])
          ]),
          _: 1
        }, 8, ["is", "componentData"])) : createCommentVNode("", true),
        !h.cell.isChoice && !h.cell.question.isDefaultRendering() ? (openBlock(), createBlock(m, {
          key: 1,
          is: h.cell.question.getComponentName(),
          question: h.cell.question
        }, null, 8, ["is", "question"])) : createCommentVNode("", true),
        h.cell.isItemChoice ? (openBlock(), createBlock(m, {
          key: 2,
          is: h.question.getCellWrapperComponentName(h.cell.cell),
          componentData: h.question.getCellWrapperComponentData(h.cell.cell)
        }, {
          default: withCtx(() => [
            h.cell.isRadio ? (openBlock(), createBlock(m, {
              is: "survey-radiogroup-item",
              key: h.cell.item.value,
              question: h.cell.question,
              item: h.cell.item,
              hideLabel: true,
              ariaLabel: t()
            }, null, 8, ["question", "item", "ariaLabel"])) : createCommentVNode("", true),
            h.cell.isCheckbox ? (openBlock(), createBlock(m, {
              is: "survey-checkbox-item",
              key: h.cell.item.value,
              question: h.cell.question,
              item: h.cell.item,
              hideLabel: true,
              ariaLabel: t()
            }, null, 8, ["question", "item", "ariaLabel"])) : createCommentVNode("", true)
          ]),
          _: 1
        }, 8, ["is", "componentData"])) : createCommentVNode("", true),
        h.cell.isOtherChoice ? (openBlock(), createBlock(m, {
          key: 3,
          is: "survey-other-choice",
          question: h.cell.question,
          item: h.cell.question.otherItem
        }, null, 8, ["question", "item"])) : createCommentVNode("", true)
      ], 2)), [
        [vShow, n.value]
      ]) : createCommentVNode("", true),
      h.cell.hasTitle ? (openBlock(), createBlock(m, {
        key: 6,
        is: h.question.getCellWrapperComponentName(h.cell),
        componentData: h.question.getCellWrapperComponentData(h.cell)
      }, {
        default: withCtx(() => [
          h.cell.hasTitle ? (openBlock(), createBlock(m, {
            key: 0,
            is: "survey-string",
            locString: h.cell.locTitle
          }, null, 8, ["locString"])) : createCommentVNode("", true),
          h.cell.requiredMark ? (openBlock(), createElementBlock("span", {
            key: 1,
            class: normalizeClass(h.question.cssClasses.cellRequiredMark)
          }, toDisplayString(h.cell.requiredMark), 3)) : createCommentVNode("", true)
        ]),
        _: 1
      }, 8, ["is", "componentData"])) : createCommentVNode("", true)
    ], 46, _n)) : createCommentVNode("", true);
  }
});
var et = defineComponent({
  inheritAttrs: false,
  __name: "MatrixDynamic",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = () => {
      e.question.addRowUI();
    };
    return (o, t) => (openBlock(), createElementBlock("div", {
      ref_key: "root",
      ref: n
    }, [
      o.question.renderedTable.showAddRowOnTop ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(o.question.cssClasses.footer)
      }, [
        createBaseVNode("button", {
          type: "button",
          class: normalizeClass(o.question.getAddRowButtonCss()),
          onClick: s
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: o.question.locAddRowText
          }, null, 8, ["locString"]),
          createBaseVNode("span", {
            class: normalizeClass(o.question.cssClasses.iconAdd)
          }, null, 2)
        ], 2)
      ], 2)) : createCommentVNode("", true),
      o.question.renderedTable.showTable ? (openBlock(), createBlock(m, {
        key: 1,
        is: "survey-matrixtable",
        question: o.question
      }, null, 8, ["question"])) : (openBlock(), createBlock(m, {
        key: 2,
        is: "survey-placeholder-matrixdynamic",
        question: o.question
      }, null, 8, ["question"])),
      o.question.renderedTable.showAddRowOnBottom ? (openBlock(), createElementBlock("div", {
        key: 3,
        class: normalizeClass(o.question.cssClasses.footer)
      }, [
        createBaseVNode("button", {
          type: "button",
          class: normalizeClass(o.question.getAddRowButtonCss()),
          onClick: s
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: o.question.locAddRowText
          }, null, 8, ["locString"]),
          createBaseVNode("span", {
            class: normalizeClass(o.question.cssClasses.iconAdd)
          }, null, 2)
        ], 2)
      ], 2)) : createCommentVNode("", true)
    ], 512));
  }
});
var st = defineComponent({
  __name: "MatrixDynamicPlaceholder",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = () => {
      e.question.addRowUI();
    };
    return (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.cssClasses.noRowsSection)
    }, [
      createBaseVNode("div", {
        class: normalizeClass(s.question.cssClasses.noRowsText)
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: s.question.locNoRowsText
        }, null, 8, ["locString"])
      ], 2),
      s.question.renderedTable.showAddRow ? (openBlock(), createElementBlock("button", {
        key: 0,
        type: "button",
        class: normalizeClass(s.question.getAddRowButtonCss(true)),
        onClick: n
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: s.question.locAddRowText
        }, null, 8, ["locString"]),
        createBaseVNode("span", {
          class: normalizeClass(s.question.cssClasses.iconAdd)
        }, null, 2)
      ], 2)) : createCommentVNode("", true)
    ], 2));
  }
});
function re(u, e = true) {
  return {
    question: computed(() => u.item.data.question),
    row: e ? computed(() => u.item.data.row) : void 0
  };
}
var nt = ["disabled"];
var tt = defineComponent({
  __name: "RemoveButton",
  props: {
    item: {}
  },
  setup(u) {
    const e = u, { question: n, row: s } = re(e);
    return (o, t) => (openBlock(), createElementBlock("button", {
      type: "button",
      class: normalizeClass(unref(n).getRemoveRowButtonCss()),
      disabled: unref(n).isInputReadOnly,
      onClick: t[0] || (t[0] = () => unref(n).removeRowUI(unref(s)))
    }, [
      createVNode(m, {
        is: "survey-string",
        locString: unref(n).locRemoveRowText
      }, null, 8, ["locString"]),
      createBaseVNode("span", {
        class: normalizeClass(unref(n).cssClasses.iconRemove)
      }, null, 2)
    ], 10, nt));
  }
});
var ot = ["xlink:href"];
var it = defineComponent({
  __name: "DragDropIcon",
  props: {
    item: {}
  },
  setup(u) {
    const e = u, { question: n } = re(e, false);
    return (s, o) => (openBlock(), createElementBlock("div", null, [
      unref(n).iconDragElement ? (openBlock(), createElementBlock("svg", {
        key: 0,
        class: normalizeClass(unref(n).cssClasses.dragElementDecorator)
      }, [
        createBaseVNode("use", {
          "xlink:href": unref(n).iconDragElement
        }, null, 8, ot)
      ], 2)) : (openBlock(), createElementBlock("span", {
        key: 1,
        class: normalizeClass(unref(n).cssClasses.iconDrag)
      }, null, 2))
    ]));
  }
});
var rt = ["title", "aria-expanded", "aria-controls"];
var lt = defineComponent({
  __name: "DetailButton",
  props: {
    item: {}
  },
  setup(u) {
    const e = u, { question: n, row: s } = re(e);
    return (o, t) => (openBlock(), createElementBlock("button", {
      type: "button",
      class: normalizeClass(unref(n).getDetailPanelButtonCss(unref(s))),
      onClick: t[0] || (t[0] = () => unref(s).showHideDetailPanelClick()),
      title: o.item.title,
      "aria-expanded": unref(n).getIsDetailPanelShowing(unref(s)) ? "true" : "false",
      "aria-controls": unref(n).getIsDetailPanelShowing(unref(s)) ? unref(s).detailPanelId : null
    }, [
      createVNode(m, {
        is: "sv-svg-icon",
        class: normalizeClass(unref(n).getDetailPanelIconCss(unref(s))),
        iconName: unref(n).getDetailPanelIconId(unref(s)),
        size: "auto"
      }, null, 8, ["class", "iconName"])
    ], 10, rt));
  }
});
var at = ["aria-label"];
var ut = defineComponent({
  inheritAttrs: false,
  __name: "PanelDynamic",
  props: {
    question: {},
    css: {}
  },
  setup(u) {
    const e = u, n = ref(null), s = getCurrentInstance();
    T(
      e,
      n,
      (l) => {
        l.panelCountChangedCallback = () => {
          var d;
          (d = s == null ? void 0 : s.proxy) == null || d.$forceUpdate();
        }, l.currentIndexChangedCallback = () => {
          var d;
          (d = s == null ? void 0 : s.proxy) == null || d.$forceUpdate();
        }, l.renderModeChangedCallback = () => {
          var d;
          (d = s == null ? void 0 : s.proxy) == null || d.$forceUpdate();
        };
      },
      (l) => {
        l.panelCountChangedCallback = void 0, l.currentIndexChangedCallback = void 0, l.renderModeChangedCallback = void 0;
      }
    );
    const o = (l) => {
      const d = e.question.getSurvey();
      if (d) {
        const C = d.getElementWrapperComponentName(l);
        if (C)
          return C;
      }
      return "panel";
    }, t = (l) => {
      const d = e.question.getSurvey();
      let C;
      return d && (C = d.getElementWrapperComponentData(l)), {
        componentName: "survey-panel",
        componentData: {
          element: l,
          data: C
        }
      };
    };
    return (l, d) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(l.question.cssClasses.root),
      ref_key: "root",
      ref: n
    }, [
      l.question.hasTabbedMenu ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(l.question.getTabsContainerCss())
      }, [
        createVNode(m, {
          is: "sv-action-bar",
          model: l.question.tabbedMenu
        }, null, 8, ["model"])
      ], 2)) : createCommentVNode("", true),
      l.question.getShowNoEntriesPlaceholder() ? (openBlock(), createBlock(m, {
        key: 1,
        is: "survey-placeholder-paneldynamic",
        question: l.question
      }, null, 8, ["question"])) : createCommentVNode("", true),
      l.question.isProgressTopShowing && l.question.isRangeShowing ? (openBlock(), createElementBlock("div", {
        key: 2,
        class: normalizeClass(l.question.cssClasses.progress)
      }, [
        createBaseVNode("div", {
          class: normalizeClass(l.question.cssClasses.progressBar),
          style: normalizeStyle({ width: l.question.progress }),
          role: "progressbar",
          "aria-label": l.question.progressBarAriaLabel
        }, null, 14, at)
      ], 2)) : createCommentVNode("", true),
      createBaseVNode("div", {
        class: normalizeClass(l.question.cssClasses.panelsContainer)
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(l.question.renderedPanels, (C, L) => (openBlock(), createElementBlock(Fragment, {
          key: C.id
        }, [
          createBaseVNode("div", {
            class: normalizeClass(l.question.getPanelWrapperCss(C))
          }, [
            createVNode(m, mergeProps({
              is: o(C)
            }, t(C)), null, 16, ["is"]),
            l.question.canRenderRemovePanelOnRight(C) ? (openBlock(), createBlock(m, {
              key: 0,
              is: "sv-paneldynamic-remove-btn",
              data: { question: l.question, panel: C }
            }, null, 8, ["data"])) : createCommentVNode("", true)
          ], 2),
          l.question.isRenderModeList && L < l.question.visiblePanelCount - 1 ? (openBlock(), createElementBlock("hr", {
            class: normalizeClass(l.question.cssClasses.separator),
            key: "separator" + C.id
          }, null, 2)) : createCommentVNode("", true)
        ], 64))), 128))
      ], 2),
      l.question.showNavigation ? (openBlock(), createBlock(m, {
        key: 3,
        is: "survey-paneldynamicprogress-v2",
        question: l.question
      }, null, 8, ["question"])) : createCommentVNode("", true)
    ], 2));
  }
});
var dt = ["aria-label"];
var mt = defineComponent({
  __name: "PanelDynamicProgress",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = () => e.question.isProgressTopShowing ? e.question.cssClasses.progressTop : e.question.cssClasses.progressBottom;
    return (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(n())
    }, [
      createBaseVNode("div", {
        style: { clear: "both" },
        class: normalizeClass(n())
      }, [
        createBaseVNode("div", {
          class: normalizeClass(s.question.cssClasses.progressContainer)
        }, [
          createVNode(m, {
            is: "sv-paneldynamic-prev-btn",
            data: { question: s.question }
          }, null, 8, ["data"]),
          s.question.isRangeShowing ? (openBlock(), createElementBlock("div", {
            key: 0,
            class: normalizeClass(s.question.cssClasses.progress)
          }, [
            createBaseVNode("div", {
              class: normalizeClass(s.question.cssClasses.progressBar),
              style: normalizeStyle({ width: s.question.progress }),
              role: "progressbar",
              "aria-label": s.question.progressBarAriaLabel
            }, null, 14, dt)
          ], 2)) : createCommentVNode("", true),
          createVNode(m, {
            is: "sv-paneldynamic-next-btn",
            data: { question: s.question }
          }, null, 8, ["data"])
        ], 2),
        createVNode(m, {
          is: "sv-paneldynamic-add-btn",
          data: { question: s.question }
        }, null, 8, ["data"]),
        createVNode(m, {
          is: "sv-paneldynamic-progress-text",
          data: { question: s.question }
        }, null, 8, ["data"])
      ], 2)
    ], 2));
  }
});
var pt = ["aria-label"];
var vt = defineComponent({
  __name: "PanelDynamicProgressV2",
  props: {
    question: {}
  },
  setup(u) {
    return (e, n) => e.question.cssClasses.footer ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(e.question.cssClasses.footer)
    }, [
      createBaseVNode("hr", {
        class: normalizeClass(e.question.cssClasses.separator)
      }, null, 2),
      e.question.isRangeShowing && e.question.isProgressBottomShowing ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(e.question.cssClasses.progress)
      }, [
        createBaseVNode("div", {
          class: normalizeClass(e.question.cssClasses.progressBar),
          style: normalizeStyle({ width: e.question.progress }),
          role: "progressbar",
          "aria-label": e.question.progressBarAriaLabel
        }, null, 14, pt)
      ], 2)) : createCommentVNode("", true),
      e.question.showFooterToolbar ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(e.question.cssClasses.footerButtonsContainer)
      }, [
        createVNode(m, {
          is: "sv-action-bar",
          model: e.question.footerToolbar
        }, null, 8, ["model"])
      ], 2)) : createCommentVNode("", true)
    ], 2)) : createCommentVNode("", true);
  }
});
var Ct = defineComponent({
  __name: "PanelDynamicPlaceholder",
  props: {
    question: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(e.question.cssClasses.noEntriesPlaceholder)
    }, [
      createBaseVNode("span", null, [
        createVNode(m, {
          is: "survey-string",
          locString: e.question.locNoEntriesText
        }, null, 8, ["locString"])
      ]),
      createVNode(m, {
        is: "sv-paneldynamic-add-btn",
        data: { question: e.question }
      }, null, 8, ["data"])
    ], 2));
  }
});
function X(u) {
  return computed(
    () => u.item && u.item.data.question || u.data.question
  );
}
var ct = ["id"];
var gt = defineComponent({
  __name: "PaneldynamicAddBtn",
  props: {
    item: {},
    data: {}
  },
  setup(u) {
    const n = X(u), s = () => {
      n.value.addPanelUI();
    };
    return (o, t) => unref(n).canAddPanel ? (openBlock(), createElementBlock("button", {
      key: 0,
      type: "button",
      id: unref(n).addButtonId,
      class: normalizeClass(unref(n).getAddButtonCss()),
      onClick: s
    }, [
      createBaseVNode("span", {
        class: normalizeClass(unref(n).cssClasses.buttonAddText)
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: unref(n).locAddPanelText
        }, null, 8, ["locString"])
      ], 2)
    ], 10, ct)) : createCommentVNode("", true);
  }
});
var yt = ["title"];
var ht = defineComponent({
  __name: "PaneldynamicNextBtn",
  props: {
    item: {},
    data: {}
  },
  setup(u) {
    const n = X(u), s = () => {
      n.value.goToNextPanel();
    };
    return (o, t) => (openBlock(), createElementBlock("div", {
      title: unref(n).panelNextText,
      onClick: s,
      class: normalizeClass(unref(n).getNextButtonCss())
    }, [
      createVNode(m, {
        is: "sv-svg-icon",
        iconName: unref(n).cssClasses.progressBtnIcon,
        size: "auto"
      }, null, 8, ["iconName"])
    ], 10, yt));
  }
});
var qt = ["title"];
var wt = defineComponent({
  __name: "PaneldynamicPrevBtn",
  props: {
    item: {},
    data: {}
  },
  setup(u) {
    const n = X(u), s = () => {
      n.value.goToPrevPanel();
    };
    return (o, t) => (openBlock(), createElementBlock("div", {
      title: unref(n).panelPrevText,
      onClick: s,
      class: normalizeClass(unref(n).getPrevButtonCss())
    }, [
      createVNode(m, {
        is: "sv-svg-icon",
        iconName: unref(n).cssClasses.progressBtnIcon,
        size: "auto"
      }, null, 8, ["iconName"])
    ], 10, qt));
  }
});
var bt = ["id"];
var Lt = defineComponent({
  __name: "PaneldynamicRemoveBtn",
  props: {
    item: {},
    data: {}
  },
  setup(u) {
    const e = u, n = X(e), s = computed(
      () => e.item && e.item.data.panel || e.data.panel
    ), o = (l) => n.value.getPanelRemoveButtonId(l), t = (l) => {
      n.value.isInputReadOnly || n.value.removePanelUI(l);
    };
    return (l, d) => (openBlock(), createElementBlock("button", {
      type: "button",
      id: o(s.value),
      class: normalizeClass(unref(n).getPanelRemoveButtonCss()),
      onClick: d[0] || (d[0] = (C) => t(s.value))
    }, [
      createBaseVNode("span", {
        class: normalizeClass(unref(n).cssClasses.buttonRemoveText)
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: unref(n).locRemovePanelText
        }, null, 8, ["locString"])
      ], 2),
      createBaseVNode("span", {
        class: normalizeClass(unref(n).cssClasses.iconRemove)
      }, null, 2)
    ], 10, bt));
  }
});
var kt = defineComponent({
  __name: "PaneldynamicProgressText",
  props: {
    item: {},
    data: {}
  },
  setup(u) {
    const n = X(u);
    return (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(unref(n).cssClasses.progressText)
    }, toDisplayString(unref(n).progressText), 3));
  }
});
var ft = ["id"];
var Ht = defineComponent({
  __name: "Errors",
  props: {
    element: {},
    location: {}
  },
  setup(u) {
    const e = ref();
    return (n, s) => n.element.hasVisibleErrors ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(n.element.cssError),
      id: n.element.id + "_errors",
      ref_key: "root",
      ref: e
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(n.element.errors, (o, t) => (openBlock(), createBlock(m, {
        is: n.element.survey.questionErrorComponent,
        element: n.element,
        key: "error_" + t,
        errorKey: "error_" + t,
        error: o,
        cssClasses: n.element.cssClasses
      }, null, 8, ["is", "element", "errorKey", "error", "cssClasses"]))), 128))
    ], 10, ft)) : createCommentVNode("", true);
  }
});
var Mt = { key: 0 };
var It = defineComponent({
  __name: "QuestionComment",
  props: {
    question: {}
  },
  setup(u) {
    return (e, n) => e.question.isReadOnlyRenderDiv() ? (openBlock(), createElementBlock("div", Mt, toDisplayString(e.question.comment), 1)) : (openBlock(), createBlock(m, {
      key: 1,
      is: "sv-text-area",
      model: e.question.commentTextAreaModel
    }, null, 8, ["model"]));
  }
});
var Vt = defineComponent({
  __name: "TitleElement",
  props: {
    element: {},
    css: {}
  },
  setup(u) {
    const e = (n) => {
      doKey2ClickUp(n);
    };
    return (n, s) => n.element.hasTitle ? (openBlock(), createBlock(resolveDynamicComponent(n.element.titleTagName), {
      key: 0,
      class: normalizeClass(n.element.cssTitle),
      "aria-label": n.element.titleAriaLabel,
      id: n.element.ariaTitleId,
      tabindex: n.element.titleTabIndex,
      "aria-expanded": n.element.titleAriaExpanded,
      role: n.element.titleAriaRole,
      onKeyup: s[0] || (s[0] = (o) => {
        e(o);
      })
    }, {
      default: withCtx(() => [
        !n.element.isExpanded && n.element.getCssTitleExpandableSvg() ? (openBlock(), createBlock(m, {
          key: 0,
          is: "sv-svg-icon",
          class: normalizeClass(n.element.getCssTitleExpandableSvg()),
          iconName: "icon-expand-16x16",
          size: "'auto'"
        }, null, 8, ["class"])) : createCommentVNode("", true),
        n.element.isExpanded && n.element.getCssTitleExpandableSvg() ? (openBlock(), createBlock(m, {
          key: 1,
          is: "sv-svg-icon",
          class: normalizeClass(n.element.getCssTitleExpandableSvg()),
          iconName: "icon-collapse-16x16",
          size: "'auto'"
        }, null, 8, ["class"])) : createCommentVNode("", true),
        n.element.hasTitleActions ? createCommentVNode("", true) : (openBlock(), createBlock(m, {
          key: 2,
          is: "survey-element-title-content",
          element: n.element,
          css: n.css
        }, null, 8, ["element", "css"])),
        n.element.hasTitleActions ? (openBlock(), createBlock(m, {
          key: 3,
          is: "sv-title-actions",
          element: n.element,
          css: n.css
        }, null, 8, ["element", "css"])) : createCommentVNode("", true)
      ]),
      _: 1
    }, 40, ["class", "aria-label", "id", "tabindex", "aria-expanded", "role"])) : createCommentVNode("", true);
  }
});
var St = { key: 2 };
var Rt = { key: 4 };
var Tt = { key: 6 };
var Bt = { key: 8 };
var Zt = defineComponent({
  inheritAttrs: false,
  __name: "TitleContent",
  props: {
    element: {},
    css: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock(Fragment, null, [
      e.element.isTitleRenderedAsString ? (openBlock(), createBlock(m, {
        key: 0,
        is: "survey-string",
        locString: e.element.locRenderedTitle
      }, null, 8, ["locString"])) : createCommentVNode("", true),
      !e.element.isTitleRenderedAsString && e.element.isRequireTextOnStart ? (openBlock(), createElementBlock("span", {
        key: 1,
        class: normalizeClass(e.element.cssRequiredMark),
        "aria-hidden": true
      }, toDisplayString(e.element.requiredMark), 3)) : createCommentVNode("", true),
      !e.element.isTitleRenderedAsString && e.element.isRequireTextOnStart ? (openBlock(), createElementBlock("span", St, " ")) : createCommentVNode("", true),
      !e.element.isTitleRenderedAsString && e.element.no ? (openBlock(), createElementBlock("span", {
        key: 3,
        style: { position: "static" },
        class: normalizeClass(e.element.cssTitleNumber),
        "aria-hidden": true
      }, toDisplayString(e.element.no), 3)) : createCommentVNode("", true),
      !e.element.isTitleRenderedAsString && e.element.no ? (openBlock(), createElementBlock("span", Rt, " ")) : createCommentVNode("", true),
      !e.element.isTitleRenderedAsString && e.element.isRequireTextBeforeTitle ? (openBlock(), createElementBlock("span", {
        key: 5,
        class: normalizeClass(e.element.cssRequiredMark),
        "aria-hidden": true
      }, toDisplayString(e.element.requiredMark), 3)) : createCommentVNode("", true),
      !e.element.isTitleRenderedAsString && e.element.isRequireTextBeforeTitle ? (openBlock(), createElementBlock("span", Tt, " ")) : createCommentVNode("", true),
      e.element.isTitleRenderedAsString ? createCommentVNode("", true) : (openBlock(), createBlock(m, {
        key: 7,
        is: "survey-string",
        locString: e.element.locRenderedTitle
      }, null, 8, ["locString"])),
      !e.element.isTitleRenderedAsString && e.element.isRequireTextAfterTitle ? (openBlock(), createElementBlock("span", Bt, " ")) : createCommentVNode("", true),
      !e.element.isTitleRenderedAsString && e.element.isRequireTextAfterTitle ? (openBlock(), createElementBlock("span", {
        key: 9,
        class: normalizeClass(e.element.cssRequiredMark),
        "aria-hidden": true
      }, toDisplayString(e.element.requiredMark), 3)) : createCommentVNode("", true)
    ], 64));
  }
});
var $t = { class: "sv-title-actions" };
var Dt = { class: "sv-title-actions__title" };
var At = defineComponent({
  __name: "TitleActions",
  props: {
    element: {},
    css: {}
  },
  setup(u) {
    const e = u, n = computed(() => e.element.getTitleToolbar());
    return (s, o) => (openBlock(), createElementBlock("div", $t, [
      createBaseVNode("span", Dt, [
        s.element.isPage ? (openBlock(), createBlock(m, {
          key: 0,
          is: "survey-string",
          locString: s.element.locTitle
        }, null, 8, ["locString"])) : createCommentVNode("", true),
        s.element.isPage ? createCommentVNode("", true) : (openBlock(), createBlock(m, {
          key: 1,
          is: "survey-element-title-content",
          element: s.element,
          css: s.css
        }, null, 8, ["element", "css"]))
      ]),
      createVNode(m, {
        is: "sv-action-bar",
        model: n.value
      }, null, 8, ["model"])
    ]));
  }
});
var Pt = (u, e) => {
  const n = u.__vccOpts || u;
  for (const [s, o] of e)
    n[s] = o;
  return n;
};
var Nt = {};
var Et = { class: "sv-brand-info" };
var Wt = createStaticVNode('<a class="sv-brand-info__logo" href="https://surveyjs.io/?utm_source=built-in_links&amp;utm_medium=online_survey_tool&amp;utm_campaign=landing_page"><img src="https://surveyjs.io/Content/Images/poweredby.svg"></a><div class="sv-brand-info__text"> Try and see how easy it is to <a href="https://surveyjs.io/create-survey?utm_source=built-in_links&amp;utm_medium=online_survey_tool&amp;utm_campaign=create_survey">create a survey</a></div><div class="sv-brand-info__terms"><a href="https://surveyjs.io/TermsOfUse">Terms of Use &amp; Privacy Statement</a></div>', 3);
var Ft = [
  Wt
];
function Ot(u, e) {
  return openBlock(), createElementBlock("div", Et, Ft);
}
var zt = Pt(Nt, [["render", Ot]]);
var Ut = createBaseVNode("use", null, null, -1);
var Qt = [
  Ut
];
var Kt = defineComponent({
  __name: "SvgIcon",
  props: {
    size: {},
    width: {},
    height: {},
    iconName: {},
    title: {}
  },
  setup(u) {
    const e = u, n = ref(), s = () => {
      createSvg(
        e.size,
        e.width,
        e.height,
        e.iconName,
        n.value,
        e.title
      );
    };
    return onUpdated(() => {
      s();
    }), onMounted(() => {
      s();
    }), (o, t) => (openBlock(), createElementBlock("svg", {
      ref_key: "svgIconElement",
      ref: n,
      class: "sv-svg-icon",
      role: "presentation"
    }, Qt, 512));
  }
});
var jt = defineComponent({
  __name: "QuestionError",
  props: {
    errorKey: {},
    error: {},
    cssClasses: {},
    element: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("div", { key: e.errorKey }, [
      createBaseVNode("span", {
        class: normalizeClass(
          e.cssClasses ? e.cssClasses.error.icon || void 0 : "panel-error-icon"
        ),
        "aria-hidden": "true"
      }, null, 2),
      createBaseVNode("span", {
        class: normalizeClass(
          e.cssClasses ? e.cssClasses.error.item || void 0 : "panel-error-item"
        )
      }, [
        createVNode(m, {
          is: "survey-string",
          locString: e.error.locText
        }, null, 8, ["locString"])
      ], 2)
    ]));
  }
});
var Gt = defineComponent({
  __name: "ActionBar",
  props: {
    model: {},
    container: {},
    handleClick: { type: Boolean, default: true }
  },
  setup(u) {
    const e = u, n = ref(null), s = (l) => {
      e.handleClick && l.stopPropagation();
    };
    S(() => e.model, void 0, (l) => {
      l.resetResponsivityManager();
    });
    const o = se(() => e.model.renderedActions);
    function t() {
      e.model.hasVisibleActions && e.model.initResponsivityManager(n.value);
    }
    return onUpdated(() => {
      t();
    }), onMounted(() => {
      t();
    }), (l, d) => l.model.hasActions ? (openBlock(), createElementBlock("div", {
      key: 0,
      ref_key: "root",
      ref: n,
      style: normalizeStyle(l.model.getRootStyle()),
      class: normalizeClass(l.model.getRootCss()),
      onClick: s
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(unref(o), (C) => (openBlock(), createBlock(m, {
        is: "sv-action",
        key: C.renderedId,
        item: C
      }, null, 8, ["item"]))), 128))
    ], 6)) : createCommentVNode("", true);
  }
});
var Xt = ["id"];
var Jt = { class: "sv-action__content" };
var Yt = defineComponent({
  __name: "Action",
  props: {
    item: {}
  },
  setup(u) {
    const e = ref(), n = u, s = computed(
      () => n.item.component || "sv-action-bar-item"
    );
    return S(() => n.item), onMounted(() => {
      const o = n.item;
      o.updateModeCallback = (t, l) => {
        o.mode = t, nextTick(() => {
          l(t, e.value);
        });
      }, o.afterRender();
    }), onUnmounted(() => {
      const o = n.item;
      o.updateModeCallback = void 0;
    }), (o, t) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(o.item.getActionRootCss()),
      id: o.item.id,
      ref_key: "root",
      ref: e
    }, [
      createBaseVNode("div", Jt, [
        o.item.needSeparator ? (openBlock(), createBlock(m, {
          key: 0,
          is: "sv-action-bar-separator"
        })) : createCommentVNode("", true),
        createVNode(m, {
          is: s.value,
          item: o.item
        }, null, 8, ["is", "item"])
      ])
    ], 10, Xt));
  }
});
var Q = {
  mounted: function(u, e) {
    const n = Object.assign(
      {
        processEsc: true
      },
      { ...e.value }
    );
    if (n.disableTabStop) {
      u.tabIndex = -1;
      return;
    }
    n.disableTabStop || (u.tabIndex = 0), u.addEventListener("keyup", (s) => (s.preventDefault(), s.stopPropagation(), doKey2ClickUp(s, n), false)), u.addEventListener("keydown", (s) => {
      doKey2ClickDown(s, n);
    }), u.addEventListener("blur", (s) => {
      doKey2ClickBlur(s);
    });
  }
};
var _t = ["disabled", "title", "aria-checked", "aria-expanded", "role"];
var xt = {
  inheritAttrs: false
};
var eo = defineComponent({
  ...xt,
  __name: "ActionBarItem",
  props: {
    item: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.item), (n, s) => withDirectives((openBlock(), createElementBlock("button", {
      class: normalizeClass(n.item.getActionBarItemCss()),
      type: "button",
      onClick: s[0] || (s[0] = (o) => {
        n.item.doAction(o);
      }),
      onKeyup: s[1] || (s[1] = (o) => {
        o.stopPropagation();
      }),
      onMousedown: s[2] || (s[2] = (o) => {
        n.item.doMouseDown(o);
      }),
      onFocus: s[3] || (s[3] = (o) => {
        n.item.doFocus(o);
      }),
      disabled: n.item.disabled,
      title: n.item.tooltip || n.item.title,
      "aria-checked": n.item.ariaChecked,
      "aria-expanded": n.item.ariaExpanded,
      role: n.item.ariaRole
    }, [
      n.item.iconName ? (openBlock(), createBlock(m, {
        key: 0,
        is: "sv-svg-icon",
        class: normalizeClass(n.item.cssClasses.itemIcon),
        iconName: n.item.iconName,
        size: n.item.iconSize,
        title: n.item.tooltip || n.item.title
      }, null, 8, ["class", "iconName", "size", "title"])) : createCommentVNode("", true),
      n.item.hasTitle ? (openBlock(), createElementBlock("span", {
        key: 1,
        class: normalizeClass(n.item.getActionBarItemTitleCss())
      }, toDisplayString(n.item.title), 3)) : createCommentVNode("", true)
    ], 42, _t)), [
      [unref(Q), { processEsc: false, disableTabStop: n.item.disableTabStop }]
    ]);
  }
});
var so = ["disabled", "title", "role"];
var no = {
  inheritAttrs: false
};
var to = defineComponent({
  ...no,
  __name: "ActionBarItemDropdown",
  props: {
    item: {}
  },
  setup(u) {
    const e = u;
    let n;
    return S(
      () => e.item,
      (s) => {
        n = new ActionDropdownViewModel(s);
      },
      () => {
        n.dispose();
      }
    ), (s, o) => (openBlock(), createElementBlock(Fragment, null, [
      withDirectives((openBlock(), createElementBlock("button", {
        type: "button",
        class: normalizeClass(s.item.getActionBarItemCss()),
        onClick: o[0] || (o[0] = (t) => {
          s.item.action(s.item, !!t.pointerType);
        }),
        onKeyup: o[1] || (o[1] = (t) => {
          t.stopPropagation();
        }),
        disabled: s.item.disabled,
        title: s.item.tooltip || s.item.title,
        role: s.item.ariaRole
      }, [
        s.item.iconName ? (openBlock(), createBlock(m, {
          key: 0,
          is: "sv-svg-icon",
          class: normalizeClass(s.item.cssClasses.itemIcon),
          iconName: s.item.iconName,
          size: s.item.iconSize,
          title: s.item.tooltip || s.item.title
        }, null, 8, ["class", "iconName", "size", "title"])) : createCommentVNode("", true),
        s.item.hasTitle ? (openBlock(), createElementBlock("span", {
          key: 1,
          class: normalizeClass(s.item.getActionBarItemTitleCss())
        }, toDisplayString(s.item.title), 3)) : createCommentVNode("", true)
      ], 42, so)), [
        [unref(Q), { processEsc: false, disableTabStop: s.item.disableTabStop }]
      ]),
      createVNode(m, {
        is: "sv-popup",
        model: s.item.popupModel
      }, null, 8, ["model"])
    ], 64));
  }
});
var oo = defineComponent({
  __name: "ActionBarSeparator",
  props: {
    item: {}
  },
  setup(u) {
    const e = u, n = computed(() => e.item && e.item.innerCss);
    return (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(["sv-action-bar-separator", n.value])
    }, null, 2));
  }
});
var io = ["aria-label", "placeholder", "value"];
var ro = ["aria-label"];
var lo = ["role", "aria-label", "id"];
var ao = defineComponent({
  __name: "List",
  props: {
    model: {}
  },
  setup(u) {
    const e = u, n = ref(null), s = (d) => {
      const C = e.model;
      C.filterString = d.target.value;
    }, o = (d) => {
      const C = e.model;
      C.filterString = d.target.value, e.model.goToItems(d);
    }, t = (d) => {
      e.model.onMouseMove(d);
    }, l = se(() => e.model.renderedActions);
    return S(() => e.model), onMounted(() => {
      e.model.initListContainerHtmlElement(n.value);
    }), onUnmounted(() => {
      e.model && (e.model.removeScrollEventListener(), e.model.initListContainerHtmlElement(void 0));
    }), (d, C) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(d.model.cssClasses.root),
      ref_key: "listContainerElement",
      ref: n
    }, [
      d.model.showFilter ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(d.model.cssClasses.filter)
      }, [
        createBaseVNode("div", {
          class: normalizeClass(d.model.cssClasses.filterIcon)
        }, [
          createVNode(m, {
            is: "sv-svg-icon",
            iconName: "icon-search",
            size: "auto"
          })
        ], 2),
        createBaseVNode("input", {
          type: "text",
          class: normalizeClass(d.model.cssClasses.filterInput),
          "aria-label": d.model.filterStringPlaceholder,
          placeholder: d.model.filterStringPlaceholder,
          value: d.model.filterString,
          onChange: s,
          onKeyup: o
        }, null, 42, io),
        d.model.showSearchClearButton && d.model.filterString ? (openBlock(), createElementBlock("button", {
          key: 0,
          onClick: C[0] || (C[0] = (L) => {
            d.model.onClickSearchClearButton(L);
          }),
          class: normalizeClass(d.model.cssClasses.searchClearButtonIcon)
        }, [
          createVNode(m, {
            is: "sv-svg-icon",
            iconName: "icon-searchclear",
            size: "auto"
          })
        ], 2)) : createCommentVNode("", true)
      ], 2)) : createCommentVNode("", true),
      withDirectives(createBaseVNode("div", {
        class: normalizeClass(d.model.cssClasses.emptyContainer)
      }, [
        createBaseVNode("div", {
          class: normalizeClass(d.model.cssClasses.emptyText),
          "aria-label": d.model.emptyMessage
        }, toDisplayString(d.model.emptyMessage), 11, ro)
      ], 2), [
        [vShow, d.model.isEmpty]
      ]),
      d.model.renderElements ? withDirectives((openBlock(), createElementBlock("ul", {
        key: 1,
        class: normalizeClass(d.model.getListClass()),
        role: d.model.listRole,
        "aria-label": d.model.a11ya11y_input_ariaLabel,
        id: d.model.elementId,
        onMousedown: C[1] || (C[1] = (L) => {
          L.preventDefault();
        }),
        onMousemove: t,
        onKeydown: C[2] || (C[2] = (L) => {
          d.model.onKeyDown(L);
        })
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(l), (L) => (openBlock(), createBlock(m, {
          is: "sv-list-item",
          item: L,
          model: d.model,
          key: L.id
        }, null, 8, ["item", "model"]))), 128))
      ], 42, lo)), [
        [vShow, !d.model.isEmpty]
      ]) : createCommentVNode("", true)
    ], 2));
  }
});
var uo = ["role", "aria-selected", "aria-checked", "id", "tabindex"];
var mo = ["title"];
var po = defineComponent({
  __name: "ListItem",
  props: {
    model: {},
    item: {}
  },
  setup(u) {
    const e = u, n = computed(() => e.item.elementId), s = (t) => {
      e.model.onItemClick(e.item), t.stopPropagation();
    };
    S(() => e.item);
    const o = computed(
      () => e.item.component || e.model.itemComponent
    );
    return onMounted(() => {
      setTimeout(() => {
        e.model.onLastItemRended(e.item);
      });
    }), (t, l) => withDirectives((openBlock(), createElementBlock("li", {
      role: t.model.listItemRole,
      "aria-selected": t.model.getA11yItemAriaSelected(t.item),
      "aria-checked": t.model.getA11yItemAriaChecked(t.item),
      key: t.item.id,
      id: n.value,
      onPointerdown: l[2] || (l[2] = (d) => t.model.onPointerDown(d, t.item)),
      class: normalizeClass(t.model.getItemClass(t.item)),
      onClick: s,
      tabindex: t.item.disableTabStop ? -1 : 0
    }, [
      t.item.needSeparator ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(t.model.cssClasses.itemSeparator)
      }, null, 2)) : createCommentVNode("", true),
      createBaseVNode("div", {
        style: normalizeStyle(t.model.getItemStyle(t.item)),
        class: normalizeClass(t.model.cssClasses.itemBody),
        title: t.item.getTooltip(),
        onMouseover: l[0] || (l[0] = (d) => t.model.onItemHover(t.item)),
        onMouseleave: l[1] || (l[1] = (d) => t.model.onItemLeave(t.item))
      }, [
        createVNode(m, {
          is: o.value,
          item: t.item,
          model: t.model
        }, null, 8, ["is", "item", "model"])
      ], 46, mo)
    ], 42, uo)), [
      [vShow, t.model.isItemVisible(t.item)],
      [unref(Q), { processEsc: false, disableTabStop: t.item.disableTabStop }]
    ]);
  }
});
var vo = defineComponent({
  __name: "ListItemContent",
  props: {
    model: {},
    item: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.item), (n, s) => (openBlock(), createElementBlock(Fragment, null, [
      n.item.iconName ? (openBlock(), createBlock(m, {
        key: 0,
        is: "sv-svg-icon",
        class: normalizeClass(n.model.cssClasses.itemIcon),
        iconName: n.item.iconName,
        size: n.item.iconSize
      }, null, 8, ["class", "iconName", "size"])) : createCommentVNode("", true),
      createVNode(m, {
        is: "survey-string",
        locString: n.item.locTitle
      }, null, 8, ["locString"]),
      n.item.markerIconName ? (openBlock(), createBlock(m, {
        key: 1,
        is: "sv-svg-icon",
        class: normalizeClass(n.item.cssClasses.itemMarkerIcon),
        iconName: n.item.markerIconName,
        size: "auto"
      }, null, 8, ["class", "iconName"])) : createCommentVNode("", true)
    ], 64));
  }
});
var Co = defineComponent({
  __name: "ListItemGroup",
  props: {
    model: {},
    item: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.item), (n, s) => (openBlock(), createElementBlock(Fragment, null, [
      createVNode(m, {
        is: "sv-list-item-content",
        item: n.item,
        model: n.model
      }, null, 8, ["item", "model"]),
      createVNode(m, {
        is: "sv-popup",
        model: n.item.popupModel
      }, null, 8, ["model"])
    ], 64));
  }
});
var co = defineComponent({
  __name: "Popup",
  props: {
    model: {}
  },
  setup(u) {
    const e = u, n = shallowRef(), s = ref(null), o = () => {
      const t = s.value;
      t && n.value.setComponentElement(t);
    };
    return watch(
      () => e.model,
      (t) => {
        n.value && n.value.dispose(), n.value = createPopupViewModel(t), o();
      },
      { immediate: true }
    ), S(() => n.value), onMounted(() => {
      o();
    }), onUnmounted(() => {
      n.value.dispose();
    }), (t, l) => (openBlock(), createElementBlock("div", {
      ref_key: "root",
      ref: s
    }, [
      createVNode(m, {
        is: "sv-popup-container",
        model: n.value
      }, null, 8, ["model"])
    ], 512));
  }
});
var go = { class: "sv-popup__body-content" };
var yo = {
  key: 0,
  class: "sv-popup__body-header"
};
var ho = { class: "sv-popup__scrolling-content" };
var qo = { class: "sv-popup__content" };
var wo = {
  key: 1,
  class: "sv-popup__body-footer"
};
var bo = defineComponent({
  __name: "PopupContainer",
  props: {
    model: {}
  },
  setup(u) {
    const e = u, n = (s) => {
      s.stopPropagation();
    };
    return S(() => e.model), onUpdated(() => {
      const s = e.model;
      s.isVisible && !s.isPositionSet && e.model.updateOnShowing();
    }), onMounted(() => {
      e.model.isVisible && e.model.updateOnShowing();
    }), (s, o) => withDirectives((openBlock(), createElementBlock("div", {
      tabindex: "-1",
      class: normalizeClass(["sv-popup", s.model.styleClass]),
      onKeydown: o[0] || (o[0] = (t) => {
        s.model.onKeyDown(t);
      }),
      onClick: o[1] || (o[1] = (t) => {
        s.model.clickOutside(t);
      })
    }, [
      createBaseVNode("div", {
        class: "sv-popup__container",
        style: normalizeStyle({
          left: s.model.left,
          top: s.model.top,
          height: s.model.height,
          width: s.model.width,
          minWidth: s.model.minWidth
        }),
        onClick: n
      }, [
        s.model.showHeader ? (openBlock(), createBlock(m, {
          key: 0,
          is: s.model.popupHeaderTemplate,
          model: s.model
        }, null, 8, ["is", "model"])) : createCommentVNode("", true),
        createBaseVNode("div", go, [
          s.model.title ? (openBlock(), createElementBlock("div", yo, toDisplayString(s.model.title), 1)) : createCommentVNode("", true),
          createBaseVNode("div", ho, [
            createBaseVNode("div", qo, [
              createVNode(m, mergeProps({
                is: s.model.contentComponentName
              }, s.model.contentComponentData), null, 16, ["is"])
            ])
          ]),
          s.model.showFooter ? (openBlock(), createElementBlock("div", wo, [
            createVNode(m, {
              is: "sv-action-bar",
              model: s.model.footerToolbar
            }, null, 8, ["model"])
          ])) : createCommentVNode("", true)
        ])
      ], 4)
    ], 34)), [
      [vShow, s.model.isVisible]
    ]);
  }
});
var Lo = defineComponent({
  __name: "PopupPointer",
  props: {
    model: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("span", {
      class: "sv-popup__pointer",
      style: normalizeStyle({
        left: e.model.pointerTarget.left,
        top: e.model.pointerTarget.top
      })
    }, null, 4));
  }
});
var ko = defineComponent({
  __name: "Container",
  props: {
    survey: {},
    container: {},
    needRenderWrapper: {}
  },
  setup(u) {
    const e = u, n = computed(
      () => e.survey.getContainerContent(e.container)
    );
    return (s, o) => n.value.length > 0 ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
      s.needRenderWrapper ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(["sv-components-column", "sv-components-container-" + s.container])
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(n.value, (t) => (openBlock(), createBlock(m, {
          key: t.id,
          is: t.component,
          survey: s.survey,
          container: s.container,
          model: t.data
        }, null, 8, ["is", "survey", "container", "model"]))), 128))
      ], 2)) : (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(n.value, (t) => (openBlock(), createBlock(m, {
        key: t.id,
        is: t.component,
        survey: s.survey,
        container: s.container,
        model: t.data
      }, null, 8, ["is", "survey", "container", "model"]))), 128))
    ], 64)) : createCommentVNode("", true);
  }
});
var fo = ["aria-label"];
var Y = defineComponent({
  __name: "Progress",
  props: {
    survey: {},
    container: {},
    css: {}
  },
  setup(u) {
    const e = u, n = computed(() => e.survey.progressValue + "%"), s = (t) => SurveyProgressModel.getProgressTextInBarCss(t), o = (t) => SurveyProgressModel.getProgressTextUnderBarCss(t);
    return (t, l) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(t.survey.getProgressCssClasses(t.container))
    }, [
      createBaseVNode("div", {
        class: normalizeClass(t.survey.css.progressBar),
        style: normalizeStyle({ width: n.value }),
        role: "progressbar",
        "aria-valuemin": "0",
        "aria-valuemax": "100",
        "aria-label": t.survey.progressBarAriaLabel
      }, [
        createBaseVNode("span", {
          class: normalizeClass(s(t.survey.css))
        }, toDisplayString(t.survey.progressText), 3)
      ], 14, fo),
      createBaseVNode("span", {
        class: normalizeClass(o(t.survey.css))
      }, toDisplayString(t.survey.progressText), 3)
    ], 2));
  }
});
var Ho = ["aria-label"];
var Mo = ["title"];
var Io = ["onClick", "data-page-number"];
var Vo = ["title"];
var So = ["title"];
var Ro = ["title"];
var To = defineComponent({
  __name: "ProgressButtons",
  props: {
    survey: {},
    model: {},
    container: {}
  },
  setup(u) {
    const e = u, n = ref(false), s = ref(false), o = ref(false), t = ref(true), l = ref(), d = computed(() => e.survey.css);
    let C = null;
    const L = (h) => {
      let q = l.value;
      q.scrollLeft += (h ? -1 : 1) * 70;
    };
    return onMounted(() => {
      const h = l.value;
      C = new ProgressButtonsResponsivityManager(e.model, h, {
        onResize: (q) => {
          t.value = q, s.value = !q;
        },
        onUpdateScroller: (q) => {
          n.value = q;
        },
        onUpdateSettings: () => {
          t.value = e.model.showItemTitles, o.value = !e.model.showItemTitles;
        },
        container: computed(() => e.container)
      });
    }), onBeforeUnmount(() => {
      C.dispose();
    }), (h, q) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(h.model.getRootCss(h.container)),
      style: normalizeStyle({ maxWidth: h.model.progressWidth }),
      role: "progressbar",
      "aria-valuemin": "0",
      "aria-valuemax": "100",
      "aria-label": h.model.progressBarAriaLabel
    }, [
      s.value ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(h.survey.css.progressButtonsHeader)
      }, [
        createBaseVNode("div", {
          class: normalizeClass(h.survey.css.progressButtonsPageTitle),
          title: h.model.headerText
        }, toDisplayString(h.model.headerText), 11, Mo)
      ], 2)) : createCommentVNode("", true),
      createBaseVNode("div", {
        class: normalizeClass(d.value.progressButtonsContainer)
      }, [
        createBaseVNode("div", {
          class: normalizeClass(h.model.getScrollButtonCss(n.value, true)),
          onClick: q[0] || (q[0] = (b) => L(true)),
          role: "button"
        }, null, 2),
        createBaseVNode("div", {
          class: normalizeClass(d.value.progressButtonsListContainer),
          ref_key: "progressButtonsListContainer",
          ref: l
        }, [
          createBaseVNode("ul", {
            class: normalizeClass(d.value.progressButtonsList)
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(h.survey.visiblePages, (b, R) => (openBlock(), createElementBlock("li", {
              key: "listelement" + R,
              class: normalizeClass(h.model.getListElementCss(R)),
              onClick: (N) => h.model.isListElementClickable(R) ? h.model.clickListElement(b) : null,
              "data-page-number": h.model.getItemNumber(b)
            }, [
              createBaseVNode("div", {
                class: normalizeClass(d.value.progressButtonsConnector)
              }, null, 2),
              t.value ? (openBlock(), createElementBlock("div", {
                key: 0,
                class: normalizeClass(d.value.progressButtonsPageTitle),
                title: b.renderedNavigationTitle
              }, [
                createVNode(m, {
                  is: "survey-string",
                  locString: b.locNavigationTitle
                }, null, 8, ["locString"])
              ], 10, Vo)) : createCommentVNode("", true),
              t.value ? (openBlock(), createElementBlock("div", {
                key: 1,
                class: normalizeClass(d.value.progressButtonsPageDescription),
                title: b.locNavigationDescription.renderedHtml
              }, toDisplayString(b.locNavigationDescription.renderedHtml), 11, So)) : createCommentVNode("", true),
              createBaseVNode("div", {
                class: normalizeClass(d.value.progressButtonsButton)
              }, [
                createBaseVNode("div", {
                  class: normalizeClass(d.value.progressButtonsButtonBackground)
                }, null, 2),
                createBaseVNode("div", {
                  class: normalizeClass(d.value.progressButtonsButtonContent)
                }, null, 2),
                createBaseVNode("span", null, toDisplayString(h.model.getItemNumber(b)), 1)
              ], 2)
            ], 10, Io))), 128))
          ], 2)
        ], 2),
        createBaseVNode("div", {
          class: normalizeClass(h.model.getScrollButtonCss(n.value, false)),
          onClick: q[1] || (q[1] = (b) => L(false)),
          role: "button"
        }, null, 2)
      ], 2),
      o.value ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(h.survey.css.progressButtonsFooter)
      }, [
        createBaseVNode("div", {
          class: normalizeClass(h.survey.css.progressButtonsPageTitle),
          title: h.model.footerText
        }, toDisplayString(h.model.footerText), 11, Ro)
      ], 2)) : createCommentVNode("", true)
    ], 14, Ho));
  }
});
var Bo = defineComponent({
  __name: "ProgressToc",
  props: {
    survey: {},
    model: {}
  },
  setup(u) {
    const e = u;
    return onMounted(() => {
      e.model.updateStickyTOCSize(e.survey.rootElement);
    }), (n, s) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(n.model.containerCss)
    }, [
      n.model.isMobile ? withDirectives((openBlock(), createElementBlock("div", {
        key: 0,
        onClick: s[0] || (s[0] = //@ts-ignore
        (...o) => n.model.togglePopup && n.model.togglePopup(...o))
      }, [
        createVNode(m, {
          is: "sv-svg-icon",
          iconName: n.model.icon,
          size: 24
        }, null, 8, ["iconName"]),
        createVNode(m, {
          is: "sv-popup",
          model: n.model.popupModel
        }, null, 8, ["model"])
      ])), [
        [unref(Q)]
      ]) : (openBlock(), createBlock(m, {
        key: 1,
        is: "sv-list",
        model: n.model.listModel
      }, null, 8, ["model"]))
    ], 2));
  }
});
var Zo = {
  modernbooleancheckchecked: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><polygon points="19,10 14,10 14,5 10,5 10,10 5,10 5,14 10,14 10,19 14,19 14,14 19,14 "></polygon></svg>',
  modernbooleancheckind: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M22,0H2C0.9,0,0,0.9,0,2v20c0,1.1,0.9,2,2,2h20c1.1,0,2-0.9,2-2V2C24,0.9,23.1,0,22,0z M21,18L6,3h15V18z M3,6l15,15H3V6z"></path></svg>',
  modernbooleancheckunchecked: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><rect x="5" y="10" width="14" height="4"></rect></svg>',
  moderncheck: '<svg viewBox="0 0 24 24"><path d="M5,13l2-2l3,3l7-7l2,2l-9,9L5,13z"></path></svg>',
  modernradio: '<svg viewBox="-12 -12 24 24"><circle r="6" cx="0" cy="0"></circle></svg>',
  progressbutton: '<svg viewBox="0 0 10 10"><polygon points="2,2 0,4 5,9 10,4 8,2 5,5 "></polygon></svg>',
  removefile: '<svg viewBox="0 0 16 16"><path d="M8,2C4.7,2,2,4.7,2,8s2.7,6,6,6s6-2.7,6-6S11.3,2,8,2z M11,10l-1,1L8,9l-2,2l-1-1l2-2L5,6l1-1l2,2l2-2l1,1L9,8 L11,10z"></path></svg>',
  timercircle: '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 160 160"><circle cx="80" cy="80" r="70" style="stroke: var(--sd-timer-stroke-background-color); stroke-width: var(--sd-timer-stroke-background-width)" stroke-dasharray="none" stroke-dashoffset="none"></circle><circle cx="80" cy="80" r="70"></circle></svg>',
  "add-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13 11H17V13H13V17H11V13H7V11H11V7H13V11ZM23 12C23 18.1 18.1 23 12 23C5.9 23 1 18.1 1 12C1 5.9 5.9 1 12 1C18.1 1 23 5.9 23 12ZM21 12C21 7 17 3 12 3C7 3 3 7 3 12C3 17 7 21 12 21C17 21 21 17 21 12Z"></path></svg>',
  "arrowleft-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M15 8.99999H4.4L8.7 13.3L7.3 14.7L0.599998 7.99999L7.3 1.29999L8.7 2.69999L4.4 6.99999H15V8.99999Z"></path></svg>',
  "arrowright-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M1 6.99999H11.6L7.3 2.69999L8.7 1.29999L15.4 7.99999L8.7 14.7L7.3 13.3L11.6 8.99999H1V6.99999Z"></path></svg>',
  "camera-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M20.01 4H18.4C18.2 4 18.01 3.9 17.9 3.73L16.97 2.34C16.41 1.5 15.48 1 14.47 1H9.54C8.53 1 7.6 1.5 7.04 2.34L6.11 3.73C6 3.9 5.81 4 5.61 4H4C2.35 4 1 5.35 1 7V19C1 20.65 2.35 22 4 22H20C21.65 22 23 20.65 23 19V7C23 5.35 21.65 4 20 4H20.01ZM21.01 19C21.01 19.55 20.56 20 20.01 20H4.01C3.46 20 3.01 19.55 3.01 19V7C3.01 6.45 3.46 6 4.01 6H5.62C6.49 6 7.3 5.56 7.79 4.84L8.72 3.45C8.91 3.17 9.22 3 9.55 3H14.48C14.81 3 15.13 3.17 15.31 3.45L16.24 4.84C16.72 5.56 17.54 6 18.41 6H20.02C20.57 6 21.02 6.45 21.02 7V19H21.01ZM12.01 6C8.7 6 6.01 8.69 6.01 12C6.01 15.31 8.7 18 12.01 18C15.32 18 18.01 15.31 18.01 12C18.01 8.69 15.32 6 12.01 6ZM12.01 16C9.8 16 8.01 14.21 8.01 12C8.01 9.79 9.8 8 12.01 8C14.22 8 16.01 9.79 16.01 12C16.01 14.21 14.22 16 12.01 16ZM13.01 10C13.01 10.55 12.56 11 12.01 11C11.46 11 11.01 11.45 11.01 12C11.01 12.55 10.56 13 10.01 13C9.46 13 9.01 12.55 9.01 12C9.01 10.35 10.36 9 12.01 9C12.56 9 13.01 9.45 13.01 10Z"></path></svg>',
  "camera-32x32": '<svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M27 6H23.8C23.34 6 22.92 5.77 22.66 5.39L22.25 4.78C21.51 3.66 20.26 3 18.92 3H13.06C11.72 3 10.48 3.67 9.73 4.78L9.32 5.39C9.07 5.77 8.64 6 8.18 6H4.98C2.79 6 1 7.79 1 10V24C1 26.21 2.79 28 5 28H27C29.21 28 31 26.21 31 24V10C31 7.79 29.21 6 27 6ZM29 24C29 25.1 28.1 26 27 26H5C3.9 26 3 25.1 3 24V10C3 8.9 3.9 8 5 8H8.2C9.33 8 10.38 7.44 11 6.5L11.41 5.89C11.78 5.33 12.41 5 13.07 5H18.93C19.6 5 20.22 5.33 20.59 5.89L21 6.5C21.62 7.44 22.68 8 23.8 8H27C28.1 8 29 8.9 29 10V24ZM16 9C12.13 9 9 12.13 9 16C9 19.87 12.13 23 16 23C19.87 23 23 19.87 23 16C23 12.13 19.87 9 16 9ZM16 21C13.24 21 11 18.76 11 16C11 13.24 13.24 11 16 11C18.76 11 21 13.24 21 16C21 18.76 18.76 21 16 21ZM17 13C17 13.55 16.55 14 16 14C14.9 14 14 14.9 14 16C14 16.55 13.55 17 13 17C12.45 17 12 16.55 12 16C12 13.79 13.79 12 16 12C16.55 12 17 12.45 17 13Z"></path></svg>',
  "cancel-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M22.6 8.6L16.4 2.4C16 2 15.5 1.8 15 1.8C14.5 1.8 14 2 13.6 2.4L1.40005 14.6C0.600049 15.4 0.600049 16.6 1.40005 17.4L6.00005 22H12L22.6 11.4C23.3 10.6 23.3 9.3 22.6 8.6ZM11.1 20H6.80005L2.80005 16L6.20005 12.6L12.4 18.8L11.1 20ZM13.8 17.4L7.60005 11.2L15 3.8L21.2 10L13.8 17.4ZM16 20H23V22H14L16 20Z"></path></svg>',
  "check-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M5.003 14.413L0.292999 9.70303L1.703 8.29303L5.003 11.583L14.293 2.29303L15.703 3.70303L5.003 14.413Z"></path></svg>',
  "check-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M9 20.1L1 12L3.1 9.9L9 15.9L20.9 4L23 6.1L9 20.1Z"></path></svg>',
  "chevrondown-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 15L17 10H7L12 15Z"></path></svg>',
  "chevronright-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M5.64648 12.6465L6.34648 13.3465L11.7465 8.04648L6.34648 2.64648L5.64648 3.34648L10.2465 8.04648L5.64648 12.6465Z"></path></svg>',
  "clear-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M13.35 3.34999L12.65 2.64999L8.05002 7.24999L3.35002 2.64999L2.65002 3.34999L7.25002 8.04999L2.65002 12.65L3.35002 13.35L8.05002 8.74999L12.65 13.35L13.35 12.65L8.75002 8.04999L13.35 3.34999Z"></path></svg>',
  "clear-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M22.6 8.6L16.4 2.4C16 2 15.5 1.8 15 1.8C14.5 1.8 14 2 13.6 2.4L1.40005 14.6C0.600049 15.4 0.600049 16.6 1.40005 17.4L6.00005 22H12L22.6 11.4C23.3 10.6 23.3 9.3 22.6 8.6ZM11.1 20H6.80005L2.80005 16L6.20005 12.6L12.4 18.8L11.1 20ZM13.8 17.4L7.60005 11.2L15 3.8L21.2 10L13.8 17.4ZM16 20H23V22H14L16 20Z"></path></svg>',
  "close-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M9.43 8.0025L13.7 3.7225C14.09 3.3325 14.09 2.6925 13.7 2.2925C13.31 1.9025 12.67 1.9025 12.27 2.2925L7.99 6.5725L3.72 2.3025C3.33 1.9025 2.69 1.9025 2.3 2.3025C1.9 2.6925 1.9 3.3325 2.3 3.7225L6.58 8.0025L2.3 12.2825C1.91 12.6725 1.91 13.3125 2.3 13.7125C2.69 14.1025 3.33 14.1025 3.73 13.7125L8.01 9.4325L12.29 13.7125C12.68 14.1025 13.32 14.1025 13.72 13.7125C14.11 13.3225 14.11 12.6825 13.72 12.2825L9.44 8.0025H9.43Z"></path></svg>',
  "close-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13.4101 12L20.7001 4.71C21.0901 4.32 21.0901 3.69 20.7001 3.3C20.3101 2.91 19.6801 2.91 19.2901 3.3L12.0001 10.59L4.71006 3.29C4.32006 2.9 3.68006 2.9 3.29006 3.29C2.90006 3.68 2.90006 4.32 3.29006 4.71L10.5801 12L3.29006 19.29C2.90006 19.68 2.90006 20.31 3.29006 20.7C3.49006 20.9 3.74006 20.99 4.00006 20.99C4.26006 20.99 4.51006 20.89 4.71006 20.7L12.0001 13.41L19.2901 20.7C19.4901 20.9 19.7401 20.99 20.0001 20.99C20.2601 20.99 20.5101 20.89 20.7101 20.7C21.1001 20.31 21.1001 19.68 20.7101 19.29L13.4201 12H13.4101Z"></path></svg>',
  "collapse-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M2 6L3 5L8 10L13 5L14 6L8 12L2 6Z"></path></svg>',
  "collapsedetails-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M13 7H3V9H13V7Z"></path></svg>',
  "delete-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M15 2H14H11V1C11 0.4 10.6 0 10 0H7C6.4 0 6 0.4 6 1V2H3H2V4H3V14C3 15.1 3.9 16 5 16H12C13.1 16 14 15.1 14 14V4H15V2ZM7 1H10V2H7V1ZM12 14H5V4H12V14ZM7 13H6V5H7V13ZM9 13H8V5H9V13ZM11 13H10V5H11V13Z"></path></svg>',
  "delete-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M22 4H20H16V2C16 0.9 15.1 0 14 0H10C8.9 0 8 0.9 8 2V4H4H2V6H4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V6H22V4ZM10 2H14V4H10V2ZM18 20H6V6H8H16H18V20ZM14 8H16V18H14V8ZM11 8H13V18H11V8ZM8 8H10V18H8V8Z"></path></svg>',
  "drag-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13 6C13 4.9 13.9 4 15 4C16.1 4 17 4.9 17 6C17 7.1 16.1 8 15 8C13.9 8 13 7.1 13 6ZM9 4C7.9 4 7 4.9 7 6C7 7.1 7.9 8 9 8C10.1 8 11 7.1 11 6C11 4.9 10.1 4 9 4ZM15 10C13.9 10 13 10.9 13 12C13 13.1 13.9 14 15 14C16.1 14 17 13.1 17 12C17 10.9 16.1 10 15 10ZM9 10C7.9 10 7 10.9 7 12C7 13.1 7.9 14 9 14C10.1 14 11 13.1 11 12C11 10.9 10.1 10 9 10ZM15 16C13.9 16 13 16.9 13 18C13 19.1 13.9 20 15 20C16.1 20 17 19.1 17 18C17 16.9 16.1 16 15 16ZM9 16C7.9 16 7 16.9 7 18C7 19.1 7.9 20 9 20C10.1 20 11 19.1 11 18C11 16.9 10.1 16 9 16Z"></path></svg>',
  "draghorizontal-24x16": '<svg viewBox="0 0 24 16" xmlns="http://www.w3.org/2000/svg"><path d="M18 9C19.1 9 20 9.9 20 11C20 12.1 19.1 13 18 13C16.9 13 16 12.1 16 11C16 9.9 16.9 9 18 9ZM20 5C20 3.9 19.1 3 18 3C16.9 3 16 3.9 16 5C16 6.1 16.9 7 18 7C19.1 7 20 6.1 20 5ZM14 11C14 9.9 13.1 9 12 9C10.9 9 10 9.9 10 11C10 12.1 10.9 13 12 13C13.1 13 14 12.1 14 11ZM14 5C14 3.9 13.1 3 12 3C10.9 3 10 3.9 10 5C10 6.1 10.9 7 12 7C13.1 7 14 6.1 14 5ZM8 11C8 9.9 7.1 9 6 9C4.9 9 4 9.9 4 11C4 12.1 4.9 13 6 13C7.1 13 8 12.1 8 11ZM8 5C8 3.9 7.1 3 6 3C4.9 3 4 3.9 4 5C4 6.1 4.9 7 6 7C7.1 7 8 6.1 8 5Z"></path></svg>',
  "editsmall-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M13.59 4.5884L11.42 2.4184C11.03 2.0284 10.52 1.8284 10.01 1.8284C9.5 1.8284 8.99 2.0284 8.6 2.4184L3.76 7.2384C2.63 8.3684 2 9.8884 2 11.4784V12.9884C2 13.5384 2.45 13.9884 3 13.9884H4.51C6.1 13.9884 7.63 13.3584 8.75 12.2284L13.58 7.3984C14.36 6.6184 14.36 5.3484 13.58 4.5684L13.59 4.5884ZM7.35 10.8284C6.59 11.5884 5.59 11.9984 4.52 11.9984H4.01V11.4884C4.01 10.4184 4.43 9.4184 5.18 8.6584L7.72 6.1184L9.89 8.2884L7.35 10.8284ZM11.3 6.8784L9.13 4.7084L10.01 3.8284L12.18 5.9984L11.3 6.8784Z"></path></svg>',
  "expand-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M6 14L5 13L10 8L5 3L6 2L12 8L6 14Z"></path></svg>',
  "expanddetails-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M13 7H9V3H7V7H3V9H7V13H9V9H13V7Z"></path></svg>',
  "file-72x72": '<svg viewBox="0 0 72 72" xmlns="http://www.w3.org/2000/svg"><path d="M62.83 12.83L53.17 3.17C52.7982 2.79866 52.357 2.50421 51.8714 2.30346C51.3858 2.1027 50.8654 1.99959 50.34 2H14C12.4087 2 10.8826 2.63214 9.75735 3.75736C8.63214 4.88258 8 6.4087 8 8V64C8 65.5913 8.63214 67.1174 9.75735 68.2426C10.8826 69.3679 12.4087 70 14 70H58C59.5913 70 61.1174 69.3679 62.2426 68.2426C63.3679 67.1174 64 65.5913 64 64V15.66C64.0004 15.1346 63.8973 14.6142 63.6965 14.1286C63.4958 13.643 63.2013 13.2018 62.83 12.83ZM52 4.83L61.17 14H56C54.9391 14 53.9217 13.5786 53.1716 12.8284C52.4214 12.0783 52 11.0609 52 10V4.83ZM62 64C62 65.0609 61.5786 66.0783 60.8284 66.8284C60.0783 67.5786 59.0609 68 58 68H14C12.9391 68 11.9217 67.5786 11.1716 66.8284C10.4214 66.0783 10 65.0609 10 64V8C10 6.93914 10.4214 5.92172 11.1716 5.17157C11.9217 4.42143 12.9391 4 14 4H50V10C50 11.5913 50.6321 13.1174 51.7574 14.2426C52.8826 15.3679 54.4087 16 56 16H62V64ZM22 26H50V28H22V26ZM22 32H50V34H22V32ZM22 38H50V40H22V38ZM22 44H50V46H22V44Z"></path></svg>',
  "flip-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M23 12.0037C23 14.2445 21.7794 16.3052 19.5684 17.8257C19.3984 17.9458 19.1983 18.0058 19.0082 18.0058C18.688 18.0058 18.3779 17.8557 18.1778 17.5756C17.8677 17.1155 17.9777 16.4953 18.4379 16.1852C20.0887 15.0448 21.0091 13.5643 21.0091 12.0138C21.0091 8.70262 16.9673 6.01171 12.005 6.01171C11.4948 6.01171 10.9945 6.04172 10.5043 6.09173L11.7149 7.30215C12.105 7.69228 12.105 8.32249 11.7149 8.71263C11.5148 8.9127 11.2647 9.00273 11.0045 9.00273C10.7444 9.00273 10.4943 8.90269 10.2942 8.71263L6.58254 5.00136L10.2842 1.2901C10.6744 0.899964 11.3047 0.899964 11.6949 1.2901C12.085 1.68023 12.085 2.31045 11.6949 2.70058L10.3042 4.09105C10.8545 4.03103 11.4147 4.00102 11.985 4.00102C18.0578 4.00102 22.99 7.59225 22.99 12.0037H23ZM12.2851 15.2949C11.895 15.685 11.895 16.3152 12.2851 16.7054L13.4957 17.9158C13.0055 17.9758 12.4952 17.9958 11.995 17.9958C7.03274 17.9958 2.99091 15.3049 2.99091 11.9937C2.99091 10.4332 3.90132 8.95271 5.56207 7.82232C6.02228 7.51222 6.13233 6.89201 5.82219 6.43185C5.51205 5.97169 4.89177 5.86166 4.43156 6.17176C2.22055 7.69228 1 9.76299 1 11.9937C1 16.4052 5.93224 19.9965 12.005 19.9965C12.5753 19.9965 13.1355 19.9665 13.6858 19.9064L12.2951 21.2969C11.905 21.6871 11.905 22.3173 12.2951 22.7074C12.4952 22.9075 12.7453 22.9975 13.0055 22.9975C13.2656 22.9975 13.5157 22.8975 13.7158 22.7074L17.4275 18.9961L13.7158 15.2849C13.3256 14.8947 12.6953 14.8947 12.3051 15.2849L12.2851 15.2949Z"></path></svg>',
  "folder-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M21.93 9H21V7C21 6.46957 20.7893 5.96086 20.4142 5.58579C20.0391 5.21071 19.5304 5 19 5H10L8 3H4C3.46957 3 2.96086 3.21071 2.58579 3.58579C2.21071 3.96086 2 4.46957 2 5L2 21H21L23.89 11.63C23.9916 11.3244 24.0179 10.9988 23.9667 10.6809C23.9155 10.363 23.7882 10.0621 23.5958 9.80392C23.4034 9.54571 23.1514 9.33779 22.8614 9.19782C22.5714 9.05786 22.2519 8.99 21.93 9ZM4 5H7.17L8.59 6.41L9.17 7H19V9H6L4 15V5ZM22 11L19.54 19H4.77L7.44 11H22Z"></path></svg>',
  "fullsize-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M12 13H4C2.9 13 2 12.1 2 11V5C2 3.9 2.9 3 4 3H12C13.1 3 14 3.9 14 5V11C14 12.1 13.1 13 12 13ZM4 5V11H12V5H4Z"></path></svg>',
  "image-48x48": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><path d="M36 8H12C9.79 8 8 9.79 8 12V36C8 38.21 9.79 40 12 40H36C38.21 40 40 38.21 40 36V12C40 9.79 38.21 8 36 8ZM38 36C38 37.1 37.1 38 36 38H12C10.9 38 10 37.1 10 36V12C10 10.9 10.9 10 12 10H36C37.1 10 38 10.9 38 12V36ZM14 17C14 15.34 15.34 14 17 14C18.66 14 20 15.34 20 17C20 18.66 18.66 20 17 20C15.34 20 14 18.66 14 17ZM27 24L36 36H12L19 27L23 29L27 24Z"></path></svg>',
  "loading-48x48": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_19679_369428)"><path opacity="0.1" d="M24 40C15.18 40 8 32.82 8 24C8 15.18 15.18 8 24 8C32.82 8 40 15.18 40 24C40 32.82 32.82 40 24 40ZM24 12C17.38 12 12 17.38 12 24C12 30.62 17.38 36 24 36C30.62 36 36 30.62 36 24C36 17.38 30.62 12 24 12Z" fill="black" fill-opacity="0.91"></path><path d="M10 26C8.9 26 8 25.1 8 24C8 15.18 15.18 8 24 8C25.1 8 26 8.9 26 10C26 11.1 25.1 12 24 12C17.38 12 12 17.38 12 24C12 25.1 11.1 26 10 26Z"></path></g><defs><clipPath id="clip0_19679_369428"><rect width="32" height="32" fill="white" transform="translate(8 8)"></rect></clipPath></defs></svg>',
  "maximize-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M6.71 10.71L4.42 13H6.01C6.56 13 7.01 13.45 7.01 14C7.01 14.55 6.56 15 6.01 15H2C1.45 15 1 14.55 1 14V10C1 9.45 1.45 9 2 9C2.55 9 3 9.45 3 10V11.59L5.29 9.3C5.68 8.91 6.31 8.91 6.7 9.3C7.09 9.69 7.09 10.32 6.7 10.71H6.71ZM14 1H10C9.45 1 9 1.45 9 2C9 2.55 9.45 3 10 3H11.59L9.3 5.29C8.91 5.68 8.91 6.31 9.3 6.7C9.5 6.9 9.75 6.99 10.01 6.99C10.27 6.99 10.52 6.89 10.72 6.7L13.01 4.41V6C13.01 6.55 13.46 7 14.01 7C14.56 7 15.01 6.55 15.01 6V2C15.01 1.45 14.56 1 14.01 1H14Z"></path></svg>',
  "minimize-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M13 9H3C2.45 9 2 8.55 2 8C2 7.45 2.45 7 3 7H13C13.55 7 14 7.45 14 8C14 8.55 13.55 9 13 9Z"></path></svg>',
  "more-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M6 12C6 13.1 5.1 14 4 14C2.9 14 2 13.1 2 12C2 10.9 2.9 10 4 10C5.1 10 6 10.9 6 12ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10ZM20 10C18.9 10 18 10.9 18 12C18 13.1 18.9 14 20 14C21.1 14 22 13.1 22 12C22 10.9 21.1 10 20 10Z"></path></svg>',
  "navmenu-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M16 7H2V5H16V7ZM2 11V13H22V11H2ZM2 19H10V17H2V19Z"></path></svg>',
  "noimage-48x48": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><path d="M14 17.01C14 16.4167 14.1759 15.8366 14.5056 15.3433C14.8352 14.8499 15.3038 14.4654 15.8519 14.2384C16.4001 14.0113 17.0033 13.9519 17.5853 14.0676C18.1672 14.1834 18.7018 14.4691 19.1213 14.8887C19.5409 15.3082 19.8266 15.8428 19.9424 16.4247C20.0581 17.0067 19.9987 17.6099 19.7716 18.1581C19.5446 18.7062 19.1601 19.1748 18.6667 19.5044C18.1734 19.8341 17.5933 20.01 17 20.01C16.2044 20.01 15.4413 19.6939 14.8787 19.1313C14.3161 18.5687 14 17.8056 14 17.01ZM27.09 24.14L20 36.01H36L27.09 24.14ZM36.72 8.14L35.57 10.01H36C36.5304 10.01 37.0391 10.2207 37.4142 10.5958C37.7893 10.9709 38 11.4796 38 12.01V36.01C38 36.5404 37.7893 37.0491 37.4142 37.4242C37.0391 37.7993 36.5304 38.01 36 38.01H18.77L17.57 40.01H36C37.0609 40.01 38.0783 39.5886 38.8284 38.8384C39.5786 38.0883 40 37.0709 40 36.01V12.01C39.9966 11.0765 39.6668 10.1737 39.0678 9.45778C38.4688 8.74188 37.6382 8.25802 36.72 8.09V8.14ZM36.86 4.5L12.86 44.5L11.14 43.5L13.23 40.01H12C10.9391 40.01 9.92172 39.5886 9.17157 38.8384C8.42143 38.0883 8 37.0709 8 36.01V12.01C8 10.9491 8.42143 9.93172 9.17157 9.18157C9.92172 8.43143 10.9391 8.01 12 8.01H32.43L35.14 3.5L36.86 4.5ZM14.43 38.01L15.63 36.01H12L19 27.01L20.56 27.8L31.23 10.01H12C11.4696 10.01 10.9609 10.2207 10.5858 10.5958C10.2107 10.9709 10 11.4796 10 12.01V36.01C10 36.5404 10.2107 37.0491 10.5858 37.4242C10.9609 37.7993 11.4696 38.01 12 38.01H14.43Z"></path></svg>',
  "ranking-arrows": '<svg viewBox="0 0 10 24" xmlns="http://www.w3.org/2000/svg"><path d="M10 5L5 0L0 5H4V9H6V5H10Z"></path><path d="M6 19V15H4V19H0L5 24L10 19H6Z"></path></svg>',
  "rankingundefined-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M13 7H3V9H13V7Z"></path></svg>',
  "rating-star-2": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><path d="M24 39.5057L11.7226 45.9839C10.4095 46.6739 8.87606 45.5622 9.12525 44.096L11.4734 30.373L1.54411 20.6556C0.480254 19.6207 1.06489 17.8095 2.53128 17.5986L16.2559 15.5957L22.3994 3.10891C23.0512 1.77685 24.9488 1.77685 25.6102 3.10891L31.7441 15.5957L45.4687 17.5986C46.9351 17.8095 47.5197 19.6207 46.4559 20.6556L36.5266 30.373L38.8748 44.096C39.1239 45.5622 37.5905 46.6835 36.2774 45.9839L24 39.5057Z" fill="none" stroke-width="2"></path><path d="M24.3981 33.1305L24 32.9206L23.6019 33.1305L15.8715 37.2059L17.3542 28.5663L17.43 28.1246L17.1095 27.8113L10.83 21.6746L19.4965 20.4049L19.9405 20.3399L20.1387 19.9373L24 12.0936L27.8613 19.9373L28.0595 20.3399L28.5035 20.4049L37.17 21.6746L30.8905 27.8113L30.57 28.1246L30.6458 28.5663L32.1285 37.2059L24.3981 33.1305Z" stroke-width="1.70746"></path></svg>',
  "rating-star-small-2": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 19.3373L6.13001 22.4373C5.50001 22.7673 4.77001 22.2373 4.89001 21.5373L6.01001 14.9773L1.26001 10.3273C0.750007 9.83728 1.03001 8.96728 1.73001 8.86728L8.29001 7.90728L11.23 1.93728C11.54 1.29728 12.45 1.29728 12.77 1.93728L15.7 7.90728L22.26 8.86728C22.96 8.96728 23.24 9.83728 22.73 10.3273L17.98 14.9773L19.1 21.5373C19.22 22.2373 18.49 22.7773 17.86 22.4373L11.99 19.3373H12Z" fill="none" stroke-width="2"></path><path d="M12 15.9472L8.58001 17.7572L9.23001 13.9272L6.45001 11.2072L10.29 10.6472L12 7.17725L13.71 10.6472L17.55 11.2072L14.77 13.9272L15.42 17.7572L12 15.9472Z"></path></svg>',
  "rating-star-small": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g><path d="M12 19.3373L6.13001 22.4373C5.50001 22.7673 4.77001 22.2373 4.89001 21.5373L6.01001 14.9773L1.26001 10.3273C0.750007 9.83728 1.03001 8.96728 1.73001 8.86728L8.29001 7.90728L11.23 1.93728C11.54 1.29728 12.45 1.29728 12.77 1.93728L15.7 7.90728L22.26 8.86728C22.96 8.96728 23.24 9.83728 22.73 10.3273L17.98 14.9773L19.1 21.5373C19.22 22.2373 18.49 22.7773 17.86 22.4373L11.99 19.3373H12Z"></path></g></svg>',
  "rating-star": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><g><path d="M24 39.5057L11.7226 45.9839C10.4095 46.6739 8.87606 45.5622 9.12525 44.096L11.4734 30.373L1.54411 20.6556C0.480254 19.6207 1.06489 17.8095 2.53128 17.5986L16.2559 15.5957L22.3994 3.10891C23.0512 1.77685 24.9488 1.77685 25.6102 3.10891L31.7441 15.5957L45.4687 17.5986C46.9351 17.8095 47.5197 19.6207 46.4559 20.6556L36.5266 30.373L38.8748 44.096C39.1239 45.5622 37.5905 46.6835 36.2774 45.9839L24 39.5057Z"></path></g></svg>',
  "reorder-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M17 5L12 0L7 5H11V9H13V5H17Z"></path><path d="M13 19V15H11V19H7L12 24L17 19H13Z"></path></svg>',
  "restoredown-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M15 6C15 6.55 14.55 7 14 7H10C9.45 7 9 6.55 9 6V2C9 1.45 9.45 1 10 1C10.55 1 11 1.45 11 2V3.59L13.29 1.29C13.49 1.09 13.74 1 14 1C14.26 1 14.51 1.1 14.71 1.29C15.1 1.68 15.1 2.31 14.71 2.7L12.42 4.99H14.01C14.56 4.99 15.01 5.44 15.01 5.99L15 6ZM6 9H2C1.45 9 0.999998 9.45 0.999998 10C0.999998 10.55 1.45 11 2 11H3.59L1.29 13.29C0.899998 13.68 0.899998 14.31 1.29 14.7C1.68 15.09 2.31 15.09 2.7 14.7L4.99 12.41V14C4.99 14.55 5.44 15 5.99 15C6.54 15 6.99 14.55 6.99 14V10C6.99 9.45 6.54 9 5.99 9H6Z"></path></svg>',
  "search-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M14 2C9.6 2 6 5.6 6 10C6 11.8 6.6 13.5 7.7 14.9L2.3 20.3C1.9 20.7 1.9 21.3 2.3 21.7C2.5 21.9 2.7 22 3 22C3.3 22 3.5 21.9 3.7 21.7L9.1 16.3C10.5 17.4 12.2 18 14 18C18.4 18 22 14.4 22 10C22 5.6 18.4 2 14 2ZM14 16C10.7 16 8 13.3 8 10C8 6.7 10.7 4 14 4C17.3 4 20 6.7 20 10C20 13.3 17.3 16 14 16Z"></path></svg>',
  "smiley-rate1-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M4 4.9938C4 4.44362 4.45 3.99348 5 3.99348H6.59L5.3 2.70306C4.91 2.31293 4.91 1.68272 5.3 1.2926C5.69 0.902468 6.32 0.902468 6.71 1.2926L9.71 4.29357C9.8 4.3836 9.88 4.49364 9.93 4.62368C10.03 4.86376 10.03 5.14385 9.93 5.38393C9.88 5.50397 9.81 5.614 9.71 5.71404L6.71 8.71501C6.51 8.91508 6.26 9.00511 6 9.00511C5.74 9.00511 5.49 8.90508 5.29 8.71501C4.9 8.32489 4.9 7.69468 5.29 7.30456L6.58 6.01413H4.99C4.44 6.01413 3.99 5.56399 3.99 5.01381L4 4.9938ZM14.08 5.37393C14.13 5.49397 14.2 5.604 14.3 5.70403L17.3 8.70501C17.5 8.90508 17.75 8.99511 18.01 8.99511C18.27 8.99511 18.52 8.89507 18.72 8.70501C19.11 8.31488 19.11 7.68468 18.72 7.29455L17.43 6.00413H19.02C19.57 6.00413 20.02 5.55399 20.02 5.00381C20.02 4.45363 19.57 4.00348 19.02 4.00348H17.43L18.72 2.71306C19.11 2.32293 19.11 1.69273 18.72 1.3026C18.33 0.912471 17.7 0.912471 17.31 1.3026L14.31 4.30358C14.22 4.39361 14.14 4.50364 14.09 4.63368C13.99 4.87376 13.99 5.15385 14.09 5.39393L14.08 5.37393ZM22 14.9971V20.999C22 22.6496 20.65 24 19 24H5C3.35 24 2 22.6496 2 20.999V14.9971C2 13.3465 3.35 11.9961 5 11.9961H19C20.65 11.9961 22 13.3465 22 14.9971ZM19 13.9967H16V16.9977H20V14.9971C20 14.4469 19.55 13.9967 19 13.9967ZM14 16.9977V13.9967H10V16.9977H14ZM10 18.9984V21.9993H14V18.9984H10ZM4 14.9971V16.9977H8V13.9967H5C4.45 13.9967 4 14.4469 4 14.9971ZM5 21.9993H8V18.9984H4V20.999C4 21.5492 4.45 21.9993 5 21.9993ZM20 20.999V18.9984H16V21.9993H19C19.55 21.9993 20 21.5492 20 20.999Z"></path></svg>',
  "smiley-rate10-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.01 23C6.85721 23 1.15412 19.9621 0.0134987 13.1669C-0.0765501 12.6272 0.293651 12.1076 0.833944 12.0177C1.38424 11.9277 1.89452 12.2975 1.98457 12.8371C2.92508 18.4732 7.69767 20.9914 12 20.9914C16.3023 20.9914 21.0749 18.4732 22.0154 12.8371C22.1055 12.2975 22.6158 11.9277 23.1661 12.0177C23.7063 12.1076 24.0765 12.6272 23.9865 13.1669C22.8559 19.9521 17.1428 23 11.99 23H12.01ZM21.165 6.15177C22.3056 5.01257 22.3056 3.16386 21.165 2.02465L21.0049 1.85477C19.9143 0.765533 18.1633 0.725561 17.0227 1.71487C15.8821 0.715568 14.1312 0.765533 13.0406 1.85477L12.8705 2.01466C11.7299 3.15386 11.7299 5.00257 12.8705 6.14178L17.0227 10.2889L21.175 6.14178L21.165 6.15177ZM15.742 3.27378L17.0127 4.54289L18.2834 3.27378C18.6436 2.91403 19.2239 2.91403 19.5841 3.27378L19.7442 3.43367C20.1044 3.79342 20.1044 4.37301 19.7442 4.73276L17.0127 7.46086L14.2812 4.73276C13.921 4.37301 13.921 3.79342 14.2812 3.43367L14.4413 3.27378C14.6214 3.09391 14.8515 3.00397 15.0917 3.00397C15.3318 3.00397 15.5619 3.09391 15.742 3.27378ZM11.1595 6.15177C12.3002 5.01257 12.3002 3.16386 11.1595 2.02465L10.9995 1.85477C9.90886 0.765533 8.15792 0.725561 7.0173 1.71487C5.87668 0.715568 4.12573 0.765533 3.03514 1.85477L2.86505 2.01466C1.72443 3.15386 1.72443 5.00257 2.86505 6.14178L7.0173 10.2889L11.1695 6.14178L11.1595 6.15177ZM5.7366 3.27378L7.00729 4.54289L8.27798 3.27378C8.63818 2.91403 9.21849 2.91403 9.57869 3.27378L9.73877 3.43367C10.099 3.79342 10.099 4.37301 9.73877 4.73276L7.00729 7.46086L4.27581 4.73276C3.91562 4.37301 3.91562 3.79342 4.27581 3.43367L4.4359 3.27378C4.61599 3.09391 4.84612 3.00397 5.08625 3.00397C5.32638 3.00397 5.5565 3.09391 5.7366 3.27378Z"></path></svg>',
  "smiley-rate2-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_15894_140103)"><path d="M4.88291 4.51001C4.47291 4.51001 4.08291 4.25001 3.94291 3.84001C3.76291 3.32001 4.03291 2.75001 4.55291 2.57001L8.32291 1.25001C8.84291 1.06001 9.41291 1.34001 9.59291 1.86001C9.77291 2.38001 9.50291 2.95001 8.98291 3.13001L5.20291 4.45001C5.09291 4.49001 4.98291 4.51001 4.87291 4.51001H4.88291ZM19.8129 3.89001C20.0229 3.38001 19.7729 2.79001 19.2629 2.59001L15.5529 1.07001C15.0429 0.860007 14.4529 1.11001 14.2529 1.62001C14.0429 2.13001 14.2929 2.72001 14.8029 2.92001L18.5029 4.43001C18.6229 4.48001 18.7529 4.50001 18.8829 4.50001C19.2729 4.50001 19.6529 4.27001 19.8129 3.88001V3.89001ZM3.50291 6.00001C2.64291 6.37001 1.79291 6.88001 1.00291 7.48001C0.79291 7.64001 0.64291 7.87001 0.59291 8.14001C0.48291 8.73001 0.87291 9.29001 1.45291 9.40001C2.04291 9.51001 2.60291 9.12001 2.71291 8.54001C2.87291 7.69001 3.12291 6.83001 3.50291 5.99001V6.00001ZM21.0429 8.55001C21.6029 10.48 24.2429 8.84001 22.7529 7.48001C21.9629 6.88001 21.1129 6.37001 20.2529 6.00001C20.6329 6.84001 20.8829 7.70001 21.0429 8.55001ZM21.5729 13.2C21.2529 14.2 22.5429 15.09 23.3629 14.39C23.8529 14 23.9229 13.29 23.5429 12.81C21.7429 10.67 22.1329 10.55 21.5829 13.2H21.5729ZM1.75291 11C1.22291 11.79 -0.14709 12.64 0.0129102 13.75C0.15291 14.36 0.75291 14.74 1.35291 14.6C2.98291 14.1 1.80291 12.22 1.75291 11ZM19.8829 17C19.8829 13.14 16.2929 10 11.8829 10C7.47291 10 3.88291 13.14 3.88291 17C3.88291 20.86 7.47291 24 11.8829 24C16.2929 24 19.8829 20.86 19.8829 17ZM17.8829 17C17.8829 19.76 15.1929 22 11.8829 22C8.57291 22 5.88291 19.76 5.88291 17C5.88291 14.24 8.57291 12 11.8829 12C15.1929 12 17.8829 14.24 17.8829 17Z"></path></g><defs><clipPath id="clip0_15894_140103"><rect width="24" height="24" fill="white"></rect></clipPath></defs></svg>',
  "smiley-rate3-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7.01915 7C6.46961 7 6.01998 6.55 6.01998 6V2C6.01998 1.45 6.46961 1 7.01915 1C7.56869 1 8.01832 1.45 8.01832 2V6C8.01832 6.55 7.56869 7 7.01915 7ZM18.01 6V2C18.01 1.45 17.5604 1 17.0108 1C16.4613 1 16.0117 1.45 16.0117 2V6C16.0117 6.55 16.4613 7 17.0108 7C17.5604 7 18.01 6.55 18.01 6ZM16.4213 21.58L18.01 19.99L19.2989 21.28C19.6886 21.67 20.3181 21.67 20.7077 21.28C21.0974 20.89 21.0974 20.26 20.7077 19.87L19.4188 18.58C18.6395 17.8 17.3705 17.8 16.5912 18.58L15.0025 20.17L13.4138 18.58C12.6345 17.8 11.3655 17.8 10.5862 18.58L8.9975 20.17L7.40883 18.58C6.62948 17.8 5.36053 17.8 4.58118 18.58L3.29226 19.87C2.90258 20.26 2.90258 20.89 3.29226 21.28C3.68193 21.67 4.31141 21.67 4.70108 21.28L5.99001 19.99L7.57868 21.58C8.35803 22.36 9.62698 22.36 10.4063 21.58L11.995 19.99L13.5837 21.58C13.9734 21.97 14.4829 22.16 14.9925 22.16C15.5021 22.16 16.0117 21.97 16.4013 21.58H16.4213Z"></path></svg>',
  "smiley-rate4-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7.06927 7C6.51927 7 6.06927 6.55 6.06927 6V2C6.06927 1.45 6.51927 1 7.06927 1C7.61927 1 8.06927 1.45 8.06927 2V6C8.06927 6.55 7.61927 7 7.06927 7ZM18.0693 6V2C18.0693 1.45 17.6193 1 17.0693 1C16.5193 1 16.0693 1.45 16.0693 2V6C16.0693 6.55 16.5193 7 17.0693 7C17.6193 7 18.0693 6.55 18.0693 6ZM22.5693 21.9C23.0693 21.66 23.2793 21.07 23.0393 20.57C21.1093 16.52 16.9093 14 12.0693 14C7.22927 14 3.02927 16.52 1.09927 20.57C0.859273 21.07 1.06927 21.67 1.56927 21.9C2.06927 22.14 2.65927 21.93 2.89927 21.43C4.49927 18.08 8.00927 16 12.0593 16C16.1093 16 19.6293 18.08 21.2193 21.43C21.3893 21.79 21.7493 22 22.1193 22C22.2593 22 22.4093 21.97 22.5493 21.9H22.5693Z"></path></svg>',
  "smiley-rate5-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7.00572 7C6.45572 7 6.00572 6.55 6.00572 6V2C6.00572 1.45 6.45572 1 7.00572 1C7.55572 1 8.00572 1.45 8.00572 2V6C8.00572 6.55 7.55572 7 7.00572 7ZM18.0057 6V2C18.0057 1.45 17.5557 1 17.0057 1C16.4557 1 16.0057 1.45 16.0057 2V6C16.0057 6.55 16.4557 7 17.0057 7C17.5557 7 18.0057 6.55 18.0057 6ZM19.9457 21.33C20.1257 20.81 19.8557 20.24 19.3357 20.05C14.5457 18.35 9.45572 18.35 4.66572 20.05C4.14572 20.23 3.87572 20.81 4.05572 21.33C4.23572 21.85 4.80572 22.12 5.33572 21.94C9.69572 20.4 14.3057 20.4 18.6657 21.94C18.7757 21.98 18.8857 22 18.9957 22C19.4057 22 19.7957 21.74 19.9357 21.33H19.9457Z"></path></svg>',
  "smiley-rate6-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7 7C6.45 7 6 6.55 6 6V2C6 1.45 6.45 1 7 1C7.55 1 8 1.45 8 2V6C8 6.55 7.55 7 7 7ZM18 6V2C18 1.45 17.55 1 17 1C16.45 1 16 1.45 16 2V6C16 6.55 16.45 7 17 7C17.55 7 18 6.55 18 6ZM21 21C21 20.45 20.55 20 20 20H4C3.45 20 3 20.45 3 21C3 21.55 3.45 22 4 22H20C20.55 22 21 21.55 21 21Z"></path></svg>',
  "smiley-rate7-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.0022 23.99C11.452 23.99 11.0018 23.5402 11.0018 22.9904C11.0018 22.4407 11.452 21.9909 12.0022 21.9909C16.3137 21.9909 21.0755 19.472 22.0158 13.8344C22.1058 13.2947 22.616 12.9248 23.1662 13.0148C23.7064 13.1047 24.0765 13.6245 23.9865 14.1643C22.8561 20.9513 17.144 24 11.9922 24L12.0022 23.99ZM8.00072 5.99783V1.99957C8.00072 1.4498 7.55056 1 7.00036 1C6.45016 1 6 1.4498 6 1.99957V5.99783C6 6.54759 6.45016 6.99739 7.00036 6.99739C7.55056 6.99739 8.00072 6.54759 8.00072 5.99783ZM18.0043 5.99783V1.99957C18.0043 1.4498 17.5542 1 17.004 1C16.4538 1 16.0036 1.4498 16.0036 1.99957V5.99783C16.0036 6.54759 16.4538 6.99739 17.004 6.99739C17.5542 6.99739 18.0043 6.54759 18.0043 5.99783Z"></path></svg>',
  "smiley-rate8-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.01 24C6.85721 24 1.15412 20.96 0.0134987 14.16C-0.0765501 13.62 0.293651 13.1 0.833944 13.01C1.38424 12.92 1.89452 13.29 1.98457 13.83C2.92508 19.47 7.69767 21.99 12 21.99C16.3023 21.99 21.0749 19.47 22.0154 13.83C22.1055 13.29 22.6158 12.92 23.1661 13.01C23.7063 13.1 24.0765 13.62 23.9865 14.16C22.8559 20.95 17.1428 24 11.99 24H12.01ZM8.00783 6V2C8.00783 1.45 7.55759 1 7.00729 1C6.45699 1 6.00675 1.45 6.00675 2V6C6.00675 6.55 6.45699 7 7.00729 7C7.55759 7 8.00783 6.55 8.00783 6ZM18.0133 6V2C18.0133 1.45 17.563 1 17.0127 1C16.4624 1 16.0122 1.45 16.0122 2V6C16.0122 6.55 16.4624 7 17.0127 7C17.563 7 18.0133 6.55 18.0133 6Z"></path></svg>',
  "smiley-rate9-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.01 24C6.85767 24 1.15509 20.96 0.0145752 14.16C-0.0354475 13.87 0.0445888 13.57 0.234675 13.35C0.424761 13.13 0.704888 13 0.995019 13H23.005C23.2951 13 23.5752 13.13 23.7653 13.35C23.9554 13.57 24.0354 13.87 23.9854 14.16C22.8549 20.95 17.1423 24 11.99 24H12.01ZM2.25559 15C3.61621 19.82 8.0182 22 12.01 22C16.0018 22 20.4038 19.82 21.7644 15H2.25559ZM8.00819 6V2C8.00819 1.45 7.55799 1 7.00774 1C6.45749 1 6.00729 1.45 6.00729 2V6C6.00729 6.55 6.45749 7 7.00774 7C7.55799 7 8.00819 6.55 8.00819 6ZM18.0127 6V2C18.0127 1.45 17.5625 1 17.0123 1C16.462 1 16.0118 1.45 16.0118 2V6C16.0118 6.55 16.462 7 17.0123 7C17.5625 7 18.0127 6.55 18.0127 6Z"></path></svg>'
};
var fe = {
  modernbooleancheckchecked: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><polygon points="19,10 14,10 14,5 10,5 10,10 5,10 5,14 10,14 10,19 14,19 14,14 19,14 "></polygon></svg>',
  modernbooleancheckind: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M22,0H2C0.9,0,0,0.9,0,2v20c0,1.1,0.9,2,2,2h20c1.1,0,2-0.9,2-2V2C24,0.9,23.1,0,22,0z M21,18L6,3h15V18z M3,6l15,15H3V6z"></path></svg>',
  modernbooleancheckunchecked: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><rect x="5" y="10" width="14" height="4"></rect></svg>',
  moderncheck: '<svg viewBox="0 0 24 24"><path d="M5,13l2-2l3,3l7-7l2,2l-9,9L5,13z"></path></svg>',
  modernradio: '<svg viewBox="-12 -12 24 24"><circle r="6" cx="0" cy="0"></circle></svg>',
  progressbutton: '<svg viewBox="0 0 10 10"><polygon points="2,2 0,4 5,9 10,4 8,2 5,5 "></polygon></svg>',
  removefile: '<svg viewBox="0 0 16 16"><path d="M8,2C4.7,2,2,4.7,2,8s2.7,6,6,6s6-2.7,6-6S11.3,2,8,2z M11,10l-1,1L8,9l-2,2l-1-1l2-2L5,6l1-1l2,2l2-2l1,1L9,8 L11,10z"></path></svg>',
  timercircle: '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 160 160"><circle cx="80" cy="80" r="70" style="stroke: var(--sd-timer-stroke-background-color); stroke-width: var(--sd-timer-stroke-background-width)" stroke-dasharray="none" stroke-dashoffset="none"></circle><circle cx="80" cy="80" r="70"></circle></svg>',
  "add-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M15.75 12C15.75 12.41 15.41 12.75 15 12.75H12.75V15C12.75 15.41 12.41 15.75 12 15.75C11.59 15.75 11.25 15.41 11.25 15V12.75H9C8.59 12.75 8.25 12.41 8.25 12C8.25 11.59 8.59 11.25 9 11.25H11.25V9C11.25 8.59 11.59 8.25 12 8.25C12.41 8.25 12.75 8.59 12.75 9V11.25H15C15.41 11.25 15.75 11.59 15.75 12ZM21.75 12C21.75 17.38 17.38 21.75 12 21.75C6.62 21.75 2.25 17.38 2.25 12C2.25 6.62 6.62 2.25 12 2.25C17.38 2.25 21.75 6.62 21.75 12ZM20.25 12C20.25 7.45 16.55 3.75 12 3.75C7.45 3.75 3.75 7.45 3.75 12C3.75 16.55 7.45 20.25 12 20.25C16.55 20.25 20.25 16.55 20.25 12Z"></path></svg>',
  "arrowleft-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.7475 7.9975C14.7475 8.4075 14.4075 8.7475 13.9975 8.7475H3.8075L7.5275 12.4675C7.8175 12.7575 7.8175 13.2375 7.5275 13.5275C7.3775 13.6775 7.1875 13.7475 6.9975 13.7475C6.8075 13.7475 6.6175 13.6775 6.4675 13.5275L1.4675 8.5275C1.1775 8.2375 1.1775 7.7575 1.4675 7.4675L6.4675 2.4675C6.7575 2.1775 7.2375 2.1775 7.5275 2.4675C7.8175 2.7575 7.8175 3.2375 7.5275 3.5275L3.8075 7.2475H13.9975C14.4075 7.2475 14.7475 7.5875 14.7475 7.9975Z"></path></svg>',
  "arrowright-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.53 8.5275L9.53 13.5275C9.38 13.6775 9.19 13.7475 9 13.7475C8.81 13.7475 8.62 13.6775 8.47 13.5275C8.18 13.2375 8.18 12.7575 8.47 12.4675L12.19 8.7475H2C1.59 8.7475 1.25 8.4075 1.25 7.9975C1.25 7.5875 1.59 7.2475 2 7.2475H12.19L8.47 3.5275C8.18 3.2375 8.18 2.7575 8.47 2.4675C8.76 2.1775 9.24 2.1775 9.53 2.4675L14.53 7.4675C14.82 7.7575 14.82 8.2375 14.53 8.5275Z"></path></svg>',
  "camera-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M19.19 4.25H17.12C16.72 4.25 16.35 4.03 16.17 3.67C15.73 2.8 14.86 2.25 13.88 2.25H10.12C9.14 2.25 8.27 2.79 7.83 3.67C7.65 4.03 7.29 4.25 6.88 4.25H4.81C3.4 4.25 2.25 5.4 2.25 6.81V18.19C2.25 19.6 3.4 20.75 4.81 20.75H19.19C20.6 20.75 21.75 19.6 21.75 18.19V6.81C21.75 5.4 20.6 4.25 19.19 4.25ZM20.25 18.19C20.25 18.77 19.78 19.25 19.19 19.25H4.81C4.23 19.25 3.75 18.78 3.75 18.19V6.81C3.75 6.23 4.22 5.75 4.81 5.75H6.88C7.86 5.75 8.73 5.21 9.17 4.33C9.35 3.97 9.71 3.75 10.12 3.75H13.88C14.28 3.75 14.65 3.97 14.83 4.33C15.27 5.2 16.14 5.75 17.12 5.75H19.19C19.77 5.75 20.25 6.22 20.25 6.81V18.19ZM12 6.25C8.83 6.25 6.25 8.83 6.25 12C6.25 15.17 8.83 17.75 12 17.75C15.17 17.75 17.75 15.17 17.75 12C17.75 8.83 15.17 6.25 12 6.25ZM12 16.25C9.66 16.25 7.75 14.34 7.75 12C7.75 9.66 9.66 7.75 12 7.75C14.34 7.75 16.25 9.66 16.25 12C16.25 14.34 14.34 16.25 12 16.25ZM14.75 12C14.75 13.52 13.52 14.75 12 14.75C11.59 14.75 11.25 14.41 11.25 14C11.25 13.59 11.59 13.25 12 13.25C12.69 13.25 13.25 12.69 13.25 12C13.25 11.59 13.59 11.25 14 11.25C14.41 11.25 14.75 11.59 14.75 12Z"></path></svg>',
  "camera-32x32": '<svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M25 7.25H22.19C21.73 7.25 21.31 7 21.09 6.59L20.89 6.22C20.23 5.01 18.97 4.25 17.59 4.25H14.41C13.03 4.25 11.77 5 11.11 6.22L10.91 6.6C10.69 7 10.27 7.26 9.81 7.26H7C4.93 7.26 3.25 8.94 3.25 11.01V24.01C3.25 26.08 4.93 27.76 7 27.76H25C27.07 27.76 28.75 26.08 28.75 24.01V11C28.75 8.93 27.07 7.25 25 7.25ZM27.25 24C27.25 25.24 26.24 26.25 25 26.25H7C5.76 26.25 4.75 25.24 4.75 24V11C4.75 9.76 5.76 8.75 7 8.75H9.81C10.82 8.75 11.75 8.2 12.23 7.31L12.43 6.94C12.82 6.21 13.58 5.76 14.41 5.76H17.59C18.42 5.76 19.18 6.21 19.57 6.94L19.77 7.31C20.25 8.2 21.18 8.76 22.19 8.76H25C26.24 8.76 27.25 9.77 27.25 11.01V24.01V24ZM16 10.25C12.28 10.25 9.25 13.28 9.25 17C9.25 20.72 12.28 23.75 16 23.75C19.72 23.75 22.75 20.72 22.75 17C22.75 13.28 19.72 10.25 16 10.25ZM16 22.25C13.11 22.25 10.75 19.89 10.75 17C10.75 14.11 13.11 11.75 16 11.75C18.89 11.75 21.25 14.11 21.25 17C21.25 19.89 18.89 22.25 16 22.25ZM19.75 17C19.75 19.07 18.07 20.75 16 20.75C15.59 20.75 15.25 20.41 15.25 20C15.25 19.59 15.59 19.25 16 19.25C17.24 19.25 18.25 18.24 18.25 17C18.25 16.59 18.59 16.25 19 16.25C19.41 16.25 19.75 16.59 19.75 17Z"></path></svg>',
  "cancel-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.8099 11.75L15.2799 9.28C15.5699 8.99 15.5699 8.51 15.2799 8.22C14.9899 7.93 14.5099 7.93 14.2199 8.22L11.7499 10.69L9.27994 8.22C8.98994 7.93 8.50994 7.93 8.21994 8.22C7.92994 8.51 7.92994 8.99 8.21994 9.28L10.6899 11.75L8.21994 14.22C7.92994 14.51 7.92994 14.99 8.21994 15.28C8.36994 15.43 8.55994 15.5 8.74994 15.5C8.93994 15.5 9.12994 15.43 9.27994 15.28L11.7499 12.81L14.2199 15.28C14.3699 15.43 14.5599 15.5 14.7499 15.5C14.9399 15.5 15.1299 15.43 15.2799 15.28C15.5699 14.99 15.5699 14.51 15.2799 14.22L12.8099 11.75Z"></path></svg>',
  "check-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.0275 5.0275L6.5275 12.5275C6.3775 12.6775 6.1875 12.7475 5.9975 12.7475C5.8075 12.7475 5.6175 12.6775 5.4675 12.5275L2.4675 9.5275C2.1775 9.2375 2.1775 8.7575 2.4675 8.4675C2.7575 8.1775 3.2375 8.1775 3.5275 8.4675L5.9975 10.9375L12.9675 3.9675C13.2575 3.6775 13.7375 3.6775 14.0275 3.9675C14.3175 4.2575 14.3175 4.7375 14.0275 5.0275Z"></path></svg>',
  "check-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M19.5275 7.5275L9.5275 17.5275C9.3775 17.6775 9.1875 17.7475 8.9975 17.7475C8.8075 17.7475 8.6175 17.6775 8.4675 17.5275L4.4675 13.5275C4.1775 13.2375 4.1775 12.7575 4.4675 12.4675C4.7575 12.1775 5.2375 12.1775 5.5275 12.4675L8.9975 15.9375L18.4675 6.4675C18.7575 6.1775 19.2375 6.1775 19.5275 6.4675C19.8175 6.7575 19.8175 7.2375 19.5275 7.5275Z"></path></svg>',
  "chevrondown-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M16.5275 10.5275L12.5275 14.5275C12.3775 14.6775 12.1875 14.7475 11.9975 14.7475C11.8075 14.7475 11.6175 14.6775 11.4675 14.5275L7.4675 10.5275C7.1775 10.2375 7.1775 9.7575 7.4675 9.4675C7.7575 9.1775 8.2375 9.1775 8.5275 9.4675L11.9975 12.9375L15.4675 9.4675C15.7575 9.1775 16.2375 9.1775 16.5275 9.4675C16.8175 9.7575 16.8175 10.2375 16.5275 10.5275Z"></path></svg>',
  "chevronright-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M11.35 8.34627L7.35 12.3463C7.25 12.4463 7.12 12.4963 7 12.4963C6.88 12.4963 6.74 12.4463 6.65 12.3463C6.45 12.1463 6.45 11.8363 6.65 11.6363L10.3 7.98627L6.65 4.34627C6.45 4.15627 6.45 3.83627 6.65 3.64627C6.85 3.45627 7.16 3.44627 7.35 3.64627L11.35 7.64627C11.55 7.84627 11.55 8.15627 11.35 8.35627V8.34627Z"></path></svg>',
  "clear-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M12.35 11.65C12.55 11.85 12.55 12.16 12.35 12.36C12.25 12.46 12.12 12.51 12 12.51C11.88 12.51 11.74 12.46 11.65 12.36L8 8.71L4.35 12.36C4.25 12.46 4.12 12.51 4 12.51C3.88 12.51 3.74 12.46 3.65 12.36C3.45 12.16 3.45 11.85 3.65 11.65L7.3 8L3.65 4.35C3.45 4.16 3.45 3.84 3.65 3.65C3.85 3.46 4.16 3.45 4.35 3.65L8 7.3L11.65 3.65C11.85 3.45 12.16 3.45 12.36 3.65C12.56 3.85 12.56 4.16 12.36 4.36L8.71 8.01L12.36 11.66L12.35 11.65Z"></path></svg>',
  "clear-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M20.12 10.9325C20.64 10.4125 20.93 9.7225 20.93 8.9925C20.93 8.2625 20.64 7.5725 20.12 7.0525L16.95 3.8825C15.88 2.8125 14.13 2.8125 13.06 3.8825L3.88 13.0525C3.36 13.5725 3.07 14.2625 3.07 14.9925C3.07 15.7225 3.36 16.4125 3.88 16.9325L5.64 18.6925C6.57 19.6225 7.78 20.0825 9 20.0825C10.22 20.0825 11.43 19.6225 12.36 18.6925L20.12 10.9325ZM14.12 4.9325C14.36 4.6925 14.67 4.5625 15 4.5625C15.33 4.5625 15.65 4.6925 15.88 4.9325L19.05 8.1025C19.54 8.5925 19.54 9.3825 19.05 9.8725L12.99 15.9325L8.05 10.9925L14.12 4.9325ZM6.7 17.6325L4.94 15.8725C4.45 15.3825 4.45 14.5925 4.94 14.1025L7 12.0425L11.94 16.9825L11.3 17.6225C10.07 18.8525 7.93 18.8525 6.7 17.6225V17.6325ZM22.75 20.9925C22.75 21.4025 22.41 21.7425 22 21.7425H14C13.59 21.7425 13.25 21.4025 13.25 20.9925C13.25 20.5825 13.59 20.2425 14 20.2425H22C22.41 20.2425 22.75 20.5825 22.75 20.9925ZM4.75 20.9925C4.75 21.4025 4.41 21.7425 4 21.7425H2C1.59 21.7425 1.25 21.4025 1.25 20.9925C1.25 20.5825 1.59 20.2425 2 20.2425H4C4.41 20.2425 4.75 20.5825 4.75 20.9925Z"></path></svg>',
  "close-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M13.5275 12.4675C13.8175 12.7575 13.8175 13.2375 13.5275 13.5275C13.3775 13.6775 13.1875 13.7475 12.9975 13.7475C12.8075 13.7475 12.6175 13.6775 12.4675 13.5275L7.9975 9.0575L3.5275 13.5275C3.3775 13.6775 3.1875 13.7475 2.9975 13.7475C2.8075 13.7475 2.6175 13.6775 2.4675 13.5275C2.1775 13.2375 2.1775 12.7575 2.4675 12.4675L6.9375 7.9975L2.4675 3.5275C2.1775 3.2375 2.1775 2.7575 2.4675 2.4675C2.7575 2.1775 3.2375 2.1775 3.5275 2.4675L7.9975 6.9375L12.4675 2.4675C12.7575 2.1775 13.2375 2.1775 13.5275 2.4675C13.8175 2.7575 13.8175 3.2375 13.5275 3.5275L9.0575 7.9975L13.5275 12.4675Z"></path></svg>',
  "close-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M19.5275 18.4675C19.8175 18.7575 19.8175 19.2375 19.5275 19.5275C19.3775 19.6775 19.1875 19.7475 18.9975 19.7475C18.8075 19.7475 18.6175 19.6775 18.4675 19.5275L11.9975 13.0575L5.5275 19.5275C5.3775 19.6775 5.1875 19.7475 4.9975 19.7475C4.8075 19.7475 4.6175 19.6775 4.4675 19.5275C4.1775 19.2375 4.1775 18.7575 4.4675 18.4675L10.9375 11.9975L4.4675 5.5275C4.1775 5.2375 4.1775 4.7575 4.4675 4.4675C4.7575 4.1775 5.2375 4.1775 5.5275 4.4675L11.9975 10.9375L18.4675 4.4675C18.7575 4.1775 19.2375 4.1775 19.5275 4.4675C19.8175 4.7575 19.8175 5.2375 19.5275 5.5275L13.0575 11.9975L19.5275 18.4675Z"></path></svg>',
  "collapse-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M11.75 8C11.75 8.41 11.41 8.75 11 8.75H5C4.59 8.75 4.25 8.41 4.25 8C4.25 7.59 4.59 7.25 5 7.25H11C11.41 7.25 11.75 7.59 11.75 8Z"></path></svg>',
  "collapsedetails-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M11.75 8C11.75 8.41 11.41 8.75 11 8.75H5C4.59 8.75 4.25 8.41 4.25 8C4.25 7.59 4.59 7.25 5 7.25H11C11.41 7.25 11.75 7.59 11.75 8Z"></path></svg>',
  "delete-16x16": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M13 3.25H10.75V3C10.75 2.04 9.96 1.25 9 1.25H7C6.04 1.25 5.25 2.04 5.25 3V3.25H3C2.59 3.25 2.25 3.59 2.25 4C2.25 4.41 2.59 4.75 3 4.75H3.25V13C3.25 13.96 4.04 14.75 5 14.75H11C11.96 14.75 12.75 13.96 12.75 13V4.75H13C13.41 4.75 13.75 4.41 13.75 4C13.75 3.59 13.41 3.25 13 3.25ZM6.75 3C6.75 2.86 6.86 2.75 7 2.75H9C9.14 2.75 9.25 2.86 9.25 3V3.25H6.75V3ZM11.25 13C11.25 13.14 11.14 13.25 11 13.25H5C4.86 13.25 4.75 13.14 4.75 13V4.75H11.25V13ZM9.25 6.25C9.66 6.25 10 6.59 10 7V11C10 11.41 9.66 11.75 9.25 11.75C8.84 11.75 8.5 11.41 8.5 11V7C8.5 6.59 8.84 6.25 9.25 6.25ZM7.5 7V11C7.5 11.41 7.16 11.75 6.75 11.75C6.34 11.75 6 11.41 6 11V7C6 6.59 6.34 6.25 6.75 6.25C7.16 6.25 7.5 6.59 7.5 7Z"></path></svg>',
  "delete-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.75 9V17C12.75 17.41 12.41 17.75 12 17.75C11.59 17.75 11.25 17.41 11.25 17V9C11.25 8.59 11.59 8.25 12 8.25C12.41 8.25 12.75 8.59 12.75 9ZM14.25 9V17C14.25 17.41 14.59 17.75 15 17.75C15.41 17.75 15.75 17.41 15.75 17V9C15.75 8.59 15.41 8.25 15 8.25C14.59 8.25 14.25 8.59 14.25 9ZM9 8.25C8.59 8.25 8.25 8.59 8.25 9V17C8.25 17.41 8.59 17.75 9 17.75C9.41 17.75 9.75 17.41 9.75 17V9C9.75 8.59 9.41 8.25 9 8.25ZM20.75 6C20.75 6.41 20.41 6.75 20 6.75H18.75V18C18.75 19.52 17.52 20.75 16 20.75H8C6.48 20.75 5.25 19.52 5.25 18V6.75H4C3.59 6.75 3.25 6.41 3.25 6C3.25 5.59 3.59 5.25 4 5.25H8.25V4C8.25 3.04 9.04 2.25 10 2.25H14C14.96 2.25 15.75 3.04 15.75 4V5.25H20C20.41 5.25 20.75 5.59 20.75 6ZM9.75 5.25H14.25V4C14.25 3.86 14.14 3.75 14 3.75H10C9.86 3.75 9.75 3.86 9.75 4V5.25ZM17.25 6.75H6.75V18C6.75 18.69 7.31 19.25 8 19.25H16C16.69 19.25 17.25 18.69 17.25 18V6.75Z"></path></svg>',
  "drag-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 8.75C15.19 8.75 15.75 8.19 15.75 7.5C15.75 6.81 15.19 6.25 14.5 6.25C13.81 6.25 13.25 6.81 13.25 7.5C13.25 8.19 13.81 8.75 14.5 8.75ZM14.5 7.25C14.64 7.25 14.75 7.36 14.75 7.5C14.75 7.78 14.25 7.78 14.25 7.5C14.25 7.36 14.36 7.25 14.5 7.25ZM9.5 6.25C8.81 6.25 8.25 6.81 8.25 7.5C8.25 8.19 8.81 8.75 9.5 8.75C10.19 8.75 10.75 8.19 10.75 7.5C10.75 6.81 10.19 6.25 9.5 6.25ZM9.25 7.5C9.25 7.36 9.36 7.25 9.5 7.25C9.64 7.25 9.75 7.36 9.75 7.5C9.75 7.78 9.25 7.78 9.25 7.5ZM14.5 11.25C13.81 11.25 13.25 11.81 13.25 12.5C13.25 13.19 13.81 13.75 14.5 13.75C15.19 13.75 15.75 13.19 15.75 12.5C15.75 11.81 15.19 11.25 14.5 11.25ZM14.25 12.5C14.25 12.36 14.36 12.25 14.5 12.25C14.64 12.25 14.75 12.36 14.75 12.5C14.75 12.78 14.25 12.78 14.25 12.5ZM9.5 11.25C8.81 11.25 8.25 11.81 8.25 12.5C8.25 13.19 8.81 13.75 9.5 13.75C10.19 13.75 10.75 13.19 10.75 12.5C10.75 11.81 10.19 11.25 9.5 11.25ZM9.25 12.5C9.25 12.36 9.36 12.25 9.5 12.25C9.64 12.25 9.75 12.36 9.75 12.5C9.75 12.78 9.25 12.78 9.25 12.5ZM14.5 16.25C13.81 16.25 13.25 16.81 13.25 17.5C13.25 18.19 13.81 18.75 14.5 18.75C15.19 18.75 15.75 18.19 15.75 17.5C15.75 16.81 15.19 16.25 14.5 16.25ZM14.25 17.5C14.25 17.36 14.36 17.25 14.5 17.25C14.64 17.25 14.75 17.36 14.75 17.5C14.75 17.78 14.25 17.78 14.25 17.5ZM9.5 16.25C8.81 16.25 8.25 16.81 8.25 17.5C8.25 18.19 8.81 18.75 9.5 18.75C10.19 18.75 10.75 18.19 10.75 17.5C10.75 16.81 10.19 16.25 9.5 16.25ZM9.25 17.5C9.25 17.36 9.36 17.25 9.5 17.25C9.64 17.25 9.75 17.36 9.75 17.5C9.75 17.78 9.25 17.78 9.25 17.5Z"></path></svg>',
  "draghorizontal-24x16": '<svg viewBox="0 0 24 16" xmlns="http://www.w3.org/2000/svg"><path d="M17.5 9.25C16.81 9.25 16.25 9.81 16.25 10.5C16.25 11.19 16.81 11.75 17.5 11.75C18.19 11.75 18.75 11.19 18.75 10.5C18.75 9.81 18.19 9.25 17.5 9.25ZM17.25 10.5C17.25 10.36 17.36 10.25 17.5 10.25C17.64 10.25 17.75 10.36 17.75 10.5C17.75 10.78 17.25 10.78 17.25 10.5ZM17.5 6.75C18.19 6.75 18.75 6.19 18.75 5.5C18.75 4.81 18.19 4.25 17.5 4.25C16.81 4.25 16.25 4.81 16.25 5.5C16.25 6.19 16.81 6.75 17.5 6.75ZM17.5 5.25C17.64 5.25 17.75 5.36 17.75 5.5C17.75 5.78 17.25 5.78 17.25 5.5C17.25 5.36 17.36 5.25 17.5 5.25ZM12.5 9.25C11.81 9.25 11.25 9.81 11.25 10.5C11.25 11.19 11.81 11.75 12.5 11.75C13.19 11.75 13.75 11.19 13.75 10.5C13.75 9.81 13.19 9.25 12.5 9.25ZM12.25 10.5C12.25 10.36 12.36 10.25 12.5 10.25C12.64 10.25 12.75 10.36 12.75 10.5C12.75 10.78 12.25 10.78 12.25 10.5ZM12.5 4.25C11.81 4.25 11.25 4.81 11.25 5.5C11.25 6.19 11.81 6.75 12.5 6.75C13.19 6.75 13.75 6.19 13.75 5.5C13.75 4.81 13.19 4.25 12.5 4.25ZM12.25 5.5C12.25 5.36 12.36 5.25 12.5 5.25C12.64 5.25 12.75 5.36 12.75 5.5C12.75 5.78 12.25 5.78 12.25 5.5ZM7.5 9.25C6.81 9.25 6.25 9.81 6.25 10.5C6.25 11.19 6.81 11.75 7.5 11.75C8.19 11.75 8.75 11.19 8.75 10.5C8.75 9.81 8.19 9.25 7.5 9.25ZM7.25 10.5C7.25 10.36 7.36 10.25 7.5 10.25C7.64 10.25 7.75 10.36 7.75 10.5C7.75 10.78 7.25 10.78 7.25 10.5ZM7.5 4.25C6.81 4.25 6.25 4.81 6.25 5.5C6.25 6.19 6.81 6.75 7.5 6.75C8.19 6.75 8.75 6.19 8.75 5.5C8.75 4.81 8.19 4.25 7.5 4.25ZM7.25 5.5C7.25 5.36 7.36 5.25 7.5 5.25C7.64 5.25 7.75 5.36 7.75 5.5C7.75 5.78 7.25 5.78 7.25 5.5Z"></path></svg>',
  "editsmall-16x16": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M13.1209 3.05249L12.9509 2.88249C11.8809 1.81249 10.1309 1.81249 9.06089 2.88249L3.47089 8.46249C3.37089 8.56249 3.31089 8.68249 3.27089 8.81249L2.27089 12.8125C2.21089 13.0625 2.28089 13.3425 2.47089 13.5225C2.61089 13.6625 2.80089 13.7425 3.00089 13.7425C3.06089 13.7425 3.12089 13.7425 3.18089 13.7225L7.18089 12.7225C7.31089 12.6925 7.43089 12.6225 7.53089 12.5225L13.1209 6.93249C14.1909 5.86249 14.1909 4.11249 13.1209 3.04249V3.05249ZM6.62089 11.3125L4.04089 11.9625L4.69089 9.38249L8.01089 6.06249L9.95089 8.00249L6.63089 11.3225L6.62089 11.3125ZM12.0609 5.87249L11.0009 6.93249L9.06089 4.99249L10.1209 3.93249C10.6109 3.44249 11.4009 3.44249 11.8909 3.93249L12.0609 4.10249C12.5509 4.59249 12.5509 5.38249 12.0609 5.87249Z"></path></svg>',
  "expand-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M11.75 8C11.75 8.41 11.41 8.75 11 8.75H8.75V11C8.75 11.41 8.41 11.75 8 11.75C7.59 11.75 7.25 11.41 7.25 11V8.75H5C4.59 8.75 4.25 8.41 4.25 8C4.25 7.59 4.59 7.25 5 7.25H7.25V5C7.25 4.59 7.59 4.25 8 4.25C8.41 4.25 8.75 4.59 8.75 5V7.25H11C11.41 7.25 11.75 7.59 11.75 8Z"></path></svg>',
  "expanddetails-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M11.75 8C11.75 8.41 11.41 8.75 11 8.75H8.75V11C8.75 11.41 8.41 11.75 8 11.75C7.59 11.75 7.25 11.41 7.25 11V8.75H5C4.59 8.75 4.25 8.41 4.25 8C4.25 7.59 4.59 7.25 5 7.25H7.25V5C7.25 4.59 7.59 4.25 8 4.25C8.41 4.25 8.75 4.59 8.75 5V7.25H11C11.41 7.25 11.75 7.59 11.75 8Z"></path></svg>',
  "file-72x72": '<svg viewBox="0 0 72 72" xmlns="http://www.w3.org/2000/svg"><path d="M62.83 12.83L53.17 3.17C52.7982 2.79866 52.357 2.50421 51.8714 2.30346C51.3858 2.1027 50.8654 1.99959 50.34 2H14C12.4087 2 10.8826 2.63214 9.75735 3.75736C8.63214 4.88258 8 6.4087 8 8V64C8 65.5913 8.63214 67.1174 9.75735 68.2426C10.8826 69.3679 12.4087 70 14 70H58C59.5913 70 61.1174 69.3679 62.2426 68.2426C63.3679 67.1174 64 65.5913 64 64V15.66C64.0004 15.1346 63.8973 14.6142 63.6965 14.1286C63.4958 13.643 63.2013 13.2018 62.83 12.83ZM52 4.83L61.17 14H56C54.9391 14 53.9217 13.5786 53.1716 12.8284C52.4214 12.0783 52 11.0609 52 10V4.83ZM62 64C62 65.0609 61.5786 66.0783 60.8284 66.8284C60.0783 67.5786 59.0609 68 58 68H14C12.9391 68 11.9217 67.5786 11.1716 66.8284C10.4214 66.0783 10 65.0609 10 64V8C10 6.93914 10.4214 5.92172 11.1716 5.17157C11.9217 4.42143 12.9391 4 14 4H50V10C50 11.5913 50.6321 13.1174 51.7574 14.2426C52.8826 15.3679 54.4087 16 56 16H62V64ZM22 26H50V28H22V26ZM22 32H50V34H22V32ZM22 38H50V40H22V38ZM22 44H50V46H22V44Z"></path></svg>',
  "flip-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M14.53 17.4775C14.82 17.7675 14.82 18.2475 14.53 18.5375L11.53 21.5375C11.38 21.6875 11.19 21.7575 11 21.7575C10.81 21.7575 10.62 21.6875 10.47 21.5375C10.18 21.2475 10.18 20.7675 10.47 20.4775L12.2 18.7475C12.13 18.7475 12.07 18.7475 12 18.7475C6.62 18.7475 2.25 15.7475 2.25 12.0575C2.25 10.2975 3.22 8.6375 4.99 7.3875C5.33 7.1475 5.8 7.2275 6.03 7.5675C6.27 7.9075 6.19 8.3775 5.85 8.6075C4.49 9.5675 3.74 10.7875 3.74 12.0575C3.74 14.9175 7.44 17.2475 11.99 17.2475C12.05 17.2475 12.11 17.2475 12.17 17.2475L10.46 15.5375C10.17 15.2475 10.17 14.7675 10.46 14.4775C10.75 14.1875 11.23 14.1875 11.52 14.4775L14.52 17.4775H14.53ZM12 5.2575C11.93 5.2575 11.87 5.2575 11.8 5.2575L13.53 3.5275C13.82 3.2375 13.82 2.7575 13.53 2.4675C13.24 2.1775 12.76 2.1775 12.47 2.4675L9.47 5.4675C9.18 5.7575 9.18 6.2375 9.47 6.5275L12.47 9.5275C12.62 9.6775 12.81 9.7475 13 9.7475C13.19 9.7475 13.38 9.6775 13.53 9.5275C13.82 9.2375 13.82 8.7575 13.53 8.4675L11.82 6.7575C11.88 6.7575 11.94 6.7575 12 6.7575C16.55 6.7575 20.25 9.0875 20.25 11.9475C20.25 13.2075 19.5 14.4375 18.14 15.3975C17.8 15.6375 17.72 16.1075 17.96 16.4475C18.11 16.6575 18.34 16.7675 18.57 16.7675C18.72 16.7675 18.87 16.7275 19 16.6275C20.77 15.3775 21.75 13.7175 21.75 11.9575C21.75 8.2675 17.38 5.2675 12 5.2675V5.2575Z"></path></svg>',
  "folder-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M21.72 9.24C21.45 8.92 21.12 8.67 20.75 8.5V8C20.75 6.48 19.52 5.25 18 5.25H10.65C10.32 4.1 9.26 3.25 8 3.25H6C4.48 3.25 3.25 4.48 3.25 6V18C3.25 19.52 4.48 20.75 6 20.75H18.33C19.66 20.75 20.8 19.8 21.04 18.49L22.31 11.49C22.46 10.69 22.24 9.86 21.72 9.24ZM4.75 18V6C4.75 5.31 5.31 4.75 6 4.75H8C8.69 4.75 9.25 5.31 9.25 6C9.25 6.41 9.59 6.75 10 6.75H18C18.69 6.75 19.25 7.31 19.25 8V8.25H9.27C7.94 8.25 6.8 9.2 6.56 10.51L5.29 17.51C5.19 18.07 5.27 18.64 5.51 19.15C5.06 18.96 4.75 18.52 4.75 18ZM20.83 11.22L19.56 18.22C19.45 18.81 18.94 19.25 18.33 19.25H8C7.63 19.25 7.28 19.09 7.04 18.8C6.8 18.51 6.7 18.14 6.77 17.78L8.04 10.78C8.15 10.19 8.66 9.75 9.27 9.75H19.6C19.97 9.75 20.32 9.91 20.56 10.2C20.8 10.49 20.9 10.86 20.83 11.22Z"></path></svg>',
  "fullsize-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M12 3.25H4C3.04 3.25 2.25 4.04 2.25 5V11C2.25 11.96 3.04 12.75 4 12.75H12C12.96 12.75 13.75 11.96 13.75 11V5C13.75 4.04 12.96 3.25 12 3.25ZM12.25 11C12.25 11.14 12.14 11.25 12 11.25H4C3.86 11.25 3.75 11.14 3.75 11V5C3.75 4.86 3.86 4.75 4 4.75H12C12.14 4.75 12.25 4.86 12.25 5V11Z"></path></svg>',
  "image-48x48": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><path d="M33 10.25H15C12.38 10.25 10.25 12.38 10.25 15V33C10.25 35.62 12.38 37.75 15 37.75H33C35.62 37.75 37.75 35.62 37.75 33V15C37.75 12.38 35.62 10.25 33 10.25ZM36.25 33C36.25 34.79 34.79 36.25 33 36.25H15C13.21 36.25 11.75 34.79 11.75 33V15C11.75 13.21 13.21 11.75 15 11.75H33C34.79 11.75 36.25 13.21 36.25 15V33ZM30.5 14.25C28.71 14.25 27.25 15.71 27.25 17.5C27.25 19.29 28.71 20.75 30.5 20.75C32.29 20.75 33.75 19.29 33.75 17.5C33.75 15.71 32.29 14.25 30.5 14.25ZM30.5 19.25C29.54 19.25 28.75 18.46 28.75 17.5C28.75 16.54 29.54 15.75 30.5 15.75C31.46 15.75 32.25 16.54 32.25 17.5C32.25 18.46 31.46 19.25 30.5 19.25ZM29.26 26.28C28.94 25.92 28.49 25.71 28.01 25.7C27.54 25.68 27.07 25.87 26.73 26.2L24.95 27.94L22.28 25.23C21.94 24.89 21.5 24.71 21 24.71C20.52 24.71 20.06 24.93 19.74 25.28L14.74 30.78C14.25 31.3 14.12 32.06 14.41 32.72C14.69 33.36 15.28 33.75 15.95 33.75H32.07C32.74 33.75 33.33 33.35 33.61 32.72C33.89 32.06 33.77 31.31 33.29 30.79L29.27 26.29L29.26 26.28ZM32.22 32.12C32.18 32.2 32.13 32.25 32.06 32.25H15.94C15.87 32.25 15.81 32.21 15.78 32.12C15.77 32.09 15.71 31.93 15.83 31.8L20.84 26.29C20.9 26.22 20.99 26.21 21.02 26.21C21.06 26.21 21.14 26.22 21.2 26.29L24.4 29.54C24.69 29.83 25.16 29.84 25.46 29.54L27.77 27.27C27.83 27.21 27.9 27.2 27.94 27.2C28.01 27.2 28.06 27.21 28.13 27.28L32.16 31.79C32.16 31.79 32.16 31.79 32.17 31.8C32.29 31.93 32.23 32.09 32.22 32.12Z"></path></svg>',
  "loading-48x48": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_19679_369428)"><path opacity="0.1" d="M24 40C15.18 40 8 32.82 8 24C8 15.18 15.18 8 24 8C32.82 8 40 15.18 40 24C40 32.82 32.82 40 24 40ZM24 12C17.38 12 12 17.38 12 24C12 30.62 17.38 36 24 36C30.62 36 36 30.62 36 24C36 17.38 30.62 12 24 12Z" fill="black" fill-opacity="0.91"></path><path d="M10 26C8.9 26 8 25.1 8 24C8 15.18 15.18 8 24 8C25.1 8 26 8.9 26 10C26 11.1 25.1 12 24 12C17.38 12 12 17.38 12 24C12 25.1 11.1 26 10 26Z"></path></g><defs><clipPath id="clip0_19679_369428"><rect width="32" height="32" fill="white" transform="translate(8 8)"></rect></clipPath></defs></svg>',
  "maximize-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M13.75 3V7C13.75 7.41 13.41 7.75 13 7.75C12.59 7.75 12.25 7.41 12.25 7V4.81L9.53 7.53C9.38 7.68 9.19 7.75 9 7.75C8.81 7.75 8.62 7.68 8.47 7.53C8.18 7.24 8.18 6.76 8.47 6.47L11.19 3.75H9C8.59 3.75 8.25 3.41 8.25 3C8.25 2.59 8.59 2.25 9 2.25H13C13.1 2.25 13.19 2.27 13.29 2.31C13.47 2.39 13.62 2.53 13.7 2.72C13.74 2.81 13.76 2.91 13.76 3.01L13.75 3ZM7.53 8.47C7.24 8.18 6.76 8.18 6.47 8.47L3.75 11.19V9C3.75 8.59 3.41 8.25 3 8.25C2.59 8.25 2.25 8.59 2.25 9V13C2.25 13.1 2.27 13.19 2.31 13.29C2.39 13.47 2.53 13.62 2.72 13.7C2.81 13.74 2.91 13.76 3.01 13.76H7.01C7.42 13.76 7.76 13.42 7.76 13.01C7.76 12.6 7.42 12.26 7.01 12.26H4.82L7.54 9.54C7.83 9.25 7.83 8.77 7.54 8.48L7.53 8.47Z"></path></svg>',
  "minimize-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M13.75 8C13.75 8.41 13.41 8.75 13 8.75H3C2.59 8.75 2.25 8.41 2.25 8C2.25 7.59 2.59 7.25 3 7.25H13C13.41 7.25 13.75 7.59 13.75 8Z"></path></svg>',
  "more-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 10.25C11.04 10.25 10.25 11.04 10.25 12C10.25 12.96 11.04 13.75 12 13.75C12.96 13.75 13.75 12.96 13.75 12C13.75 11.04 12.96 10.25 12 10.25ZM11.75 12C11.75 11.86 11.86 11.75 12 11.75C12.14 11.75 12.25 11.86 12.25 12C12.25 12.28 11.75 12.28 11.75 12ZM19 10.25C18.04 10.25 17.25 11.04 17.25 12C17.25 12.96 18.04 13.75 19 13.75C19.96 13.75 20.75 12.96 20.75 12C20.75 11.04 19.96 10.25 19 10.25ZM18.75 12C18.75 11.86 18.86 11.75 19 11.75C19.14 11.75 19.25 11.86 19.25 12C19.25 12.28 18.75 12.28 18.75 12ZM5 10.25C4.04 10.25 3.25 11.04 3.25 12C3.25 12.96 4.04 13.75 5 13.75C5.96 13.75 6.75 12.96 6.75 12C6.75 11.04 5.96 10.25 5 10.25ZM4.75 12C4.75 11.86 4.86 11.75 5 11.75C5.14 11.75 5.25 11.86 5.25 12C5.25 12.28 4.75 12.28 4.75 12Z"></path></svg>',
  "navmenu-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M3.25 7C3.25 6.59 3.59 6.25 4 6.25H15C15.41 6.25 15.75 6.59 15.75 7C15.75 7.41 15.41 7.75 15 7.75H4C3.59 7.75 3.25 7.41 3.25 7ZM20 11.25H4C3.59 11.25 3.25 11.59 3.25 12C3.25 12.41 3.59 12.75 4 12.75H20C20.41 12.75 20.75 12.41 20.75 12C20.75 11.59 20.41 11.25 20 11.25ZM9 16.25H4C3.59 16.25 3.25 16.59 3.25 17C3.25 17.41 3.59 17.75 4 17.75H9C9.41 17.75 9.75 17.41 9.75 17C9.75 16.59 9.41 16.25 9 16.25Z"></path></svg>',
  "noimage-48x48": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><path d="M30.4975 14.2475C28.7075 14.2475 27.2475 15.7075 27.2475 17.4975C27.2475 19.2875 28.7075 20.7475 30.4975 20.7475C32.2875 20.7475 33.7475 19.2875 33.7475 17.4975C33.7475 15.7075 32.2875 14.2475 30.4975 14.2475ZM30.4975 19.2475C29.5375 19.2475 28.7475 18.4575 28.7475 17.4975C28.7475 16.5375 29.5375 15.7475 30.4975 15.7475C31.4575 15.7475 32.2475 16.5375 32.2475 17.4975C32.2475 18.4575 31.4575 19.2475 30.4975 19.2475ZM13.5175 11.2175C13.4375 10.8075 13.7075 10.4175 14.1175 10.3375C14.4275 10.2775 14.7175 10.2475 14.9975 10.2475H32.9975C35.6175 10.2475 37.7475 12.3775 37.7475 14.9975V32.9975C37.7475 33.2775 37.7175 33.5675 37.6575 33.8775C37.5875 34.2375 37.2775 34.4875 36.9175 34.4875C36.8675 34.4875 36.8275 34.4875 36.7775 34.4775C36.3675 34.3975 36.1075 34.0075 36.1775 33.5975C36.2175 33.3775 36.2375 33.1775 36.2375 32.9975V14.9975C36.2375 13.2075 34.7775 11.7475 32.9875 11.7475H14.9975C14.8075 11.7475 14.6175 11.7675 14.3975 11.8075C13.9875 11.8875 13.5975 11.6175 13.5175 11.2075V11.2175ZM34.4775 36.7775C34.5575 37.1875 34.2875 37.5775 33.8775 37.6575C33.5675 37.7175 33.2775 37.7475 32.9975 37.7475H14.9975C12.3775 37.7475 10.2475 35.6175 10.2475 32.9975V14.9975C10.2475 14.7175 10.2775 14.4275 10.3375 14.1175C10.4175 13.7075 10.8075 13.4375 11.2175 13.5175C11.6275 13.5975 11.8875 13.9875 11.8175 14.3975C11.7775 14.6175 11.7575 14.8175 11.7575 14.9975V32.9975C11.7575 34.7875 13.2175 36.2475 15.0075 36.2475H33.0075C33.1975 36.2475 33.3875 36.2275 33.6075 36.1875C34.0075 36.1075 34.4075 36.3775 34.4875 36.7875L34.4775 36.7775ZM15.8275 31.7975C15.6975 31.9375 15.7575 32.0875 15.7775 32.1175C15.8175 32.1975 15.8675 32.2475 15.9375 32.2475H29.8175C30.2275 32.2475 30.5675 32.5875 30.5675 32.9975C30.5675 33.4075 30.2275 33.7475 29.8175 33.7475H15.9375C15.2675 33.7475 14.6775 33.3475 14.3975 32.7175C14.1075 32.0575 14.2375 31.2975 14.7275 30.7775L19.7275 25.2775C20.0475 24.9275 20.5075 24.7175 20.9875 24.7075C21.4875 24.7275 21.9375 24.8875 22.2675 25.2275L25.4675 28.4775C25.7575 28.7675 25.7575 29.2475 25.4675 29.5375C25.1675 29.8275 24.6975 29.8275 24.4075 29.5375L21.2075 26.2875C21.1475 26.2175 21.0675 26.1875 21.0275 26.2075C20.9875 26.2075 20.9075 26.2175 20.8475 26.2875L15.8375 31.7975H15.8275ZM38.5275 38.5275C38.3775 38.6775 38.1875 38.7475 37.9975 38.7475C37.8075 38.7475 37.6175 38.6775 37.4675 38.5275L9.4675 10.5275C9.1775 10.2375 9.1775 9.7575 9.4675 9.4675C9.7575 9.1775 10.2375 9.1775 10.5275 9.4675L38.5275 37.4675C38.8175 37.7575 38.8175 38.2375 38.5275 38.5275Z"></path></svg>',
  "ranking-arrows": '<svg viewBox="0 0 10 24" xmlns="http://www.w3.org/2000/svg"><path d="M10 5L5 0L0 5H4V9H6V5H10Z"></path><path d="M6 19V15H4V19H0L5 24L10 19H6Z"></path></svg>',
  "rankingundefined-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M11.75 8C11.75 8.41 11.41 8.75 11 8.75H5C4.59 8.75 4.25 8.41 4.25 8C4.25 7.59 4.59 7.25 5 7.25H11C11.41 7.25 11.75 7.59 11.75 8Z"></path></svg>',
  "rating-star-2": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><path d="M24 39.5057L11.7226 45.9839C10.4095 46.6739 8.87606 45.5622 9.12525 44.096L11.4734 30.373L1.54411 20.6556C0.480254 19.6207 1.06489 17.8095 2.53128 17.5986L16.2559 15.5957L22.3994 3.10891C23.0512 1.77685 24.9488 1.77685 25.6102 3.10891L31.7441 15.5957L45.4687 17.5986C46.9351 17.8095 47.5197 19.6207 46.4559 20.6556L36.5266 30.373L38.8748 44.096C39.1239 45.5622 37.5905 46.6835 36.2774 45.9839L24 39.5057Z" fill="none" stroke-width="2"></path><path d="M24.3981 33.1305L24 32.9206L23.6019 33.1305L15.8715 37.2059L17.3542 28.5663L17.43 28.1246L17.1095 27.8113L10.83 21.6746L19.4965 20.4049L19.9405 20.3399L20.1387 19.9373L24 12.0936L27.8613 19.9373L28.0595 20.3399L28.5035 20.4049L37.17 21.6746L30.8905 27.8113L30.57 28.1246L30.6458 28.5663L32.1285 37.2059L24.3981 33.1305Z" stroke-width="1.70746"></path></svg>',
  "rating-star-small-2": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 19.3373L6.13001 22.4373C5.50001 22.7673 4.77001 22.2373 4.89001 21.5373L6.01001 14.9773L1.26001 10.3273C0.750007 9.83728 1.03001 8.96728 1.73001 8.86728L8.29001 7.90728L11.23 1.93728C11.54 1.29728 12.45 1.29728 12.77 1.93728L15.7 7.90728L22.26 8.86728C22.96 8.96728 23.24 9.83728 22.73 10.3273L17.98 14.9773L19.1 21.5373C19.22 22.2373 18.49 22.7773 17.86 22.4373L11.99 19.3373H12Z" fill="none" stroke-width="2"></path><path d="M12 15.9472L8.58001 17.7572L9.23001 13.9272L6.45001 11.2072L10.29 10.6472L12 7.17725L13.71 10.6472L17.55 11.2072L14.77 13.9272L15.42 17.7572L12 15.9472Z"></path></svg>',
  "rating-star-small": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g><path d="M12 19.3373L6.13001 22.4373C5.50001 22.7673 4.77001 22.2373 4.89001 21.5373L6.01001 14.9773L1.26001 10.3273C0.750007 9.83728 1.03001 8.96728 1.73001 8.86728L8.29001 7.90728L11.23 1.93728C11.54 1.29728 12.45 1.29728 12.77 1.93728L15.7 7.90728L22.26 8.86728C22.96 8.96728 23.24 9.83728 22.73 10.3273L17.98 14.9773L19.1 21.5373C19.22 22.2373 18.49 22.7773 17.86 22.4373L11.99 19.3373H12Z"></path></g></svg>',
  "rating-star": '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><g><path d="M24 39.5057L11.7226 45.9839C10.4095 46.6739 8.87606 45.5622 9.12525 44.096L11.4734 30.373L1.54411 20.6556C0.480254 19.6207 1.06489 17.8095 2.53128 17.5986L16.2559 15.5957L22.3994 3.10891C23.0512 1.77685 24.9488 1.77685 25.6102 3.10891L31.7441 15.5957L45.4687 17.5986C46.9351 17.8095 47.5197 19.6207 46.4559 20.6556L36.5266 30.373L38.8748 44.096C39.1239 45.5622 37.5905 46.6835 36.2774 45.9839L24 39.5057Z"></path></g></svg>',
  "reorder-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M8.9444 10.75H15.0544C15.7144 10.75 16.3144 10.39 16.6144 9.80002C16.9144 9.22002 16.8644 8.52002 16.4844 7.98002L13.4244 3.71002C12.7644 2.79002 11.2344 2.79002 10.5744 3.71002L7.5244 7.99002C7.1444 8.53002 7.0944 9.22002 7.3944 9.81002C7.6944 10.4 8.2944 10.76 8.9544 10.76L8.9444 10.75ZM8.7444 8.86002L11.7944 4.58002C11.8644 4.49002 11.9544 4.48002 11.9944 4.48002C12.0344 4.48002 12.1344 4.49002 12.1944 4.58002L15.2544 8.86002C15.3344 8.97002 15.3044 9.07002 15.2744 9.12002C15.2444 9.17002 15.1844 9.26002 15.0544 9.26002H8.9444C8.8144 9.26002 8.7444 9.18002 8.7244 9.12002C8.7044 9.06002 8.6644 8.97002 8.7444 8.86002ZM15.0544 13.25H8.9444C8.2844 13.25 7.6844 13.61 7.3844 14.2C7.0844 14.78 7.1344 15.48 7.5144 16.02L10.5744 20.3C10.9044 20.76 11.4344 21.03 11.9944 21.03C12.5544 21.03 13.0944 20.76 13.4144 20.3L16.4744 16.02C16.8544 15.48 16.9044 14.79 16.6044 14.2C16.3044 13.61 15.7044 13.25 15.0444 13.25H15.0544ZM15.2644 15.15L12.2044 19.43C12.0744 19.61 11.9244 19.61 11.7944 19.43L8.7344 15.15C8.6544 15.04 8.6844 14.94 8.7144 14.89C8.7444 14.84 8.8044 14.75 8.9344 14.75H15.0444C15.1744 14.75 15.2444 14.83 15.2644 14.89C15.2844 14.95 15.3244 15.04 15.2444 15.15H15.2644Z"></path></svg>',
  "restoredown-16x16": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M7.69 8.71C7.73 8.8 7.75 8.9 7.75 9V13C7.75 13.41 7.41 13.75 7 13.75C6.59 13.75 6.25 13.41 6.25 13V10.81L3.53 13.53C3.38 13.68 3.19 13.75 3 13.75C2.81 13.75 2.62 13.68 2.47 13.53C2.18 13.24 2.18 12.76 2.47 12.47L5.19 9.75H3C2.59 9.75 2.25 9.41 2.25 9C2.25 8.59 2.59 8.25 3 8.25H7C7.1 8.25 7.19 8.27 7.29 8.31C7.47 8.39 7.62 8.53 7.7 8.72L7.69 8.71ZM13 6.25H10.81L13.53 3.53C13.82 3.24 13.82 2.76 13.53 2.47C13.24 2.18 12.76 2.18 12.47 2.47L9.75 5.19V3C9.75 2.59 9.41 2.25 9 2.25C8.59 2.25 8.25 2.59 8.25 3V7C8.25 7.1 8.27 7.19 8.31 7.29C8.39 7.47 8.53 7.62 8.72 7.7C8.81 7.74 8.91 7.76 9.01 7.76H13.01C13.42 7.76 13.76 7.42 13.76 7.01C13.76 6.6 13.42 6.26 13.01 6.26L13 6.25Z"></path></svg>',
  "search-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13.9975 2.25C9.7275 2.25 6.2475 5.73 6.2475 10C6.2475 11.87 6.9075 13.58 8.0175 14.92L2.4675 20.47C2.1775 20.76 2.1775 21.24 2.4675 21.53C2.6175 21.68 2.8075 21.75 2.9975 21.75C3.1875 21.75 3.3775 21.68 3.5275 21.53L9.0775 15.98C10.4175 17.08 12.1275 17.75 13.9975 17.75C18.2675 17.75 21.7475 14.27 21.7475 10C21.7475 5.73 18.2675 2.25 13.9975 2.25ZM13.9975 16.25C10.5475 16.25 7.7475 13.45 7.7475 10C7.7475 6.55 10.5475 3.75 13.9975 3.75C17.4475 3.75 20.2475 6.55 20.2475 10C20.2475 13.45 17.4475 16.25 13.9975 16.25Z"></path></svg>',
  "smiley-rate1-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M4 4.9938C4 4.44362 4.45 3.99348 5 3.99348H6.59L5.3 2.70306C4.91 2.31293 4.91 1.68272 5.3 1.2926C5.69 0.902468 6.32 0.902468 6.71 1.2926L9.71 4.29357C9.8 4.3836 9.88 4.49364 9.93 4.62368C10.03 4.86376 10.03 5.14385 9.93 5.38393C9.88 5.50397 9.81 5.614 9.71 5.71404L6.71 8.71501C6.51 8.91508 6.26 9.00511 6 9.00511C5.74 9.00511 5.49 8.90508 5.29 8.71501C4.9 8.32489 4.9 7.69468 5.29 7.30456L6.58 6.01413H4.99C4.44 6.01413 3.99 5.56399 3.99 5.01381L4 4.9938ZM14.08 5.37393C14.13 5.49397 14.2 5.604 14.3 5.70403L17.3 8.70501C17.5 8.90508 17.75 8.99511 18.01 8.99511C18.27 8.99511 18.52 8.89507 18.72 8.70501C19.11 8.31488 19.11 7.68468 18.72 7.29455L17.43 6.00413H19.02C19.57 6.00413 20.02 5.55399 20.02 5.00381C20.02 4.45363 19.57 4.00348 19.02 4.00348H17.43L18.72 2.71306C19.11 2.32293 19.11 1.69273 18.72 1.3026C18.33 0.912471 17.7 0.912471 17.31 1.3026L14.31 4.30358C14.22 4.39361 14.14 4.50364 14.09 4.63368C13.99 4.87376 13.99 5.15385 14.09 5.39393L14.08 5.37393ZM22 14.9971V20.999C22 22.6496 20.65 24 19 24H5C3.35 24 2 22.6496 2 20.999V14.9971C2 13.3465 3.35 11.9961 5 11.9961H19C20.65 11.9961 22 13.3465 22 14.9971ZM19 13.9967H16V16.9977H20V14.9971C20 14.4469 19.55 13.9967 19 13.9967ZM14 16.9977V13.9967H10V16.9977H14ZM10 18.9984V21.9993H14V18.9984H10ZM4 14.9971V16.9977H8V13.9967H5C4.45 13.9967 4 14.4469 4 14.9971ZM5 21.9993H8V18.9984H4V20.999C4 21.5492 4.45 21.9993 5 21.9993ZM20 20.999V18.9984H16V21.9993H19C19.55 21.9993 20 21.5492 20 20.999Z"></path></svg>',
  "smiley-rate10-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.01 23C6.85721 23 1.15412 19.9621 0.0134987 13.1669C-0.0765501 12.6272 0.293651 12.1076 0.833944 12.0177C1.38424 11.9277 1.89452 12.2975 1.98457 12.8371C2.92508 18.4732 7.69767 20.9914 12 20.9914C16.3023 20.9914 21.0749 18.4732 22.0154 12.8371C22.1055 12.2975 22.6158 11.9277 23.1661 12.0177C23.7063 12.1076 24.0765 12.6272 23.9865 13.1669C22.8559 19.9521 17.1428 23 11.99 23H12.01ZM21.165 6.15177C22.3056 5.01257 22.3056 3.16386 21.165 2.02465L21.0049 1.85477C19.9143 0.765533 18.1633 0.725561 17.0227 1.71487C15.8821 0.715568 14.1312 0.765533 13.0406 1.85477L12.8705 2.01466C11.7299 3.15386 11.7299 5.00257 12.8705 6.14178L17.0227 10.2889L21.175 6.14178L21.165 6.15177ZM15.742 3.27378L17.0127 4.54289L18.2834 3.27378C18.6436 2.91403 19.2239 2.91403 19.5841 3.27378L19.7442 3.43367C20.1044 3.79342 20.1044 4.37301 19.7442 4.73276L17.0127 7.46086L14.2812 4.73276C13.921 4.37301 13.921 3.79342 14.2812 3.43367L14.4413 3.27378C14.6214 3.09391 14.8515 3.00397 15.0917 3.00397C15.3318 3.00397 15.5619 3.09391 15.742 3.27378ZM11.1595 6.15177C12.3002 5.01257 12.3002 3.16386 11.1595 2.02465L10.9995 1.85477C9.90886 0.765533 8.15792 0.725561 7.0173 1.71487C5.87668 0.715568 4.12573 0.765533 3.03514 1.85477L2.86505 2.01466C1.72443 3.15386 1.72443 5.00257 2.86505 6.14178L7.0173 10.2889L11.1695 6.14178L11.1595 6.15177ZM5.7366 3.27378L7.00729 4.54289L8.27798 3.27378C8.63818 2.91403 9.21849 2.91403 9.57869 3.27378L9.73877 3.43367C10.099 3.79342 10.099 4.37301 9.73877 4.73276L7.00729 7.46086L4.27581 4.73276C3.91562 4.37301 3.91562 3.79342 4.27581 3.43367L4.4359 3.27378C4.61599 3.09391 4.84612 3.00397 5.08625 3.00397C5.32638 3.00397 5.5565 3.09391 5.7366 3.27378Z"></path></svg>',
  "smiley-rate2-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_15894_140103)"><path d="M4.88291 4.51001C4.47291 4.51001 4.08291 4.25001 3.94291 3.84001C3.76291 3.32001 4.03291 2.75001 4.55291 2.57001L8.32291 1.25001C8.84291 1.06001 9.41291 1.34001 9.59291 1.86001C9.77291 2.38001 9.50291 2.95001 8.98291 3.13001L5.20291 4.45001C5.09291 4.49001 4.98291 4.51001 4.87291 4.51001H4.88291ZM19.8129 3.89001C20.0229 3.38001 19.7729 2.79001 19.2629 2.59001L15.5529 1.07001C15.0429 0.860007 14.4529 1.11001 14.2529 1.62001C14.0429 2.13001 14.2929 2.72001 14.8029 2.92001L18.5029 4.43001C18.6229 4.48001 18.7529 4.50001 18.8829 4.50001C19.2729 4.50001 19.6529 4.27001 19.8129 3.88001V3.89001ZM3.50291 6.00001C2.64291 6.37001 1.79291 6.88001 1.00291 7.48001C0.79291 7.64001 0.64291 7.87001 0.59291 8.14001C0.48291 8.73001 0.87291 9.29001 1.45291 9.40001C2.04291 9.51001 2.60291 9.12001 2.71291 8.54001C2.87291 7.69001 3.12291 6.83001 3.50291 5.99001V6.00001ZM21.0429 8.55001C21.6029 10.48 24.2429 8.84001 22.7529 7.48001C21.9629 6.88001 21.1129 6.37001 20.2529 6.00001C20.6329 6.84001 20.8829 7.70001 21.0429 8.55001ZM21.5729 13.2C21.2529 14.2 22.5429 15.09 23.3629 14.39C23.8529 14 23.9229 13.29 23.5429 12.81C21.7429 10.67 22.1329 10.55 21.5829 13.2H21.5729ZM1.75291 11C1.22291 11.79 -0.14709 12.64 0.0129102 13.75C0.15291 14.36 0.75291 14.74 1.35291 14.6C2.98291 14.1 1.80291 12.22 1.75291 11ZM19.8829 17C19.8829 13.14 16.2929 10 11.8829 10C7.47291 10 3.88291 13.14 3.88291 17C3.88291 20.86 7.47291 24 11.8829 24C16.2929 24 19.8829 20.86 19.8829 17ZM17.8829 17C17.8829 19.76 15.1929 22 11.8829 22C8.57291 22 5.88291 19.76 5.88291 17C5.88291 14.24 8.57291 12 11.8829 12C15.1929 12 17.8829 14.24 17.8829 17Z"></path></g><defs><clipPath id="clip0_15894_140103"><rect width="24" height="24" fill="white"></rect></clipPath></defs></svg>',
  "smiley-rate3-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7.01915 7C6.46961 7 6.01998 6.55 6.01998 6V2C6.01998 1.45 6.46961 1 7.01915 1C7.56869 1 8.01832 1.45 8.01832 2V6C8.01832 6.55 7.56869 7 7.01915 7ZM18.01 6V2C18.01 1.45 17.5604 1 17.0108 1C16.4613 1 16.0117 1.45 16.0117 2V6C16.0117 6.55 16.4613 7 17.0108 7C17.5604 7 18.01 6.55 18.01 6ZM16.4213 21.58L18.01 19.99L19.2989 21.28C19.6886 21.67 20.3181 21.67 20.7077 21.28C21.0974 20.89 21.0974 20.26 20.7077 19.87L19.4188 18.58C18.6395 17.8 17.3705 17.8 16.5912 18.58L15.0025 20.17L13.4138 18.58C12.6345 17.8 11.3655 17.8 10.5862 18.58L8.9975 20.17L7.40883 18.58C6.62948 17.8 5.36053 17.8 4.58118 18.58L3.29226 19.87C2.90258 20.26 2.90258 20.89 3.29226 21.28C3.68193 21.67 4.31141 21.67 4.70108 21.28L5.99001 19.99L7.57868 21.58C8.35803 22.36 9.62698 22.36 10.4063 21.58L11.995 19.99L13.5837 21.58C13.9734 21.97 14.4829 22.16 14.9925 22.16C15.5021 22.16 16.0117 21.97 16.4013 21.58H16.4213Z"></path></svg>',
  "smiley-rate4-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7.06927 7C6.51927 7 6.06927 6.55 6.06927 6V2C6.06927 1.45 6.51927 1 7.06927 1C7.61927 1 8.06927 1.45 8.06927 2V6C8.06927 6.55 7.61927 7 7.06927 7ZM18.0693 6V2C18.0693 1.45 17.6193 1 17.0693 1C16.5193 1 16.0693 1.45 16.0693 2V6C16.0693 6.55 16.5193 7 17.0693 7C17.6193 7 18.0693 6.55 18.0693 6ZM22.5693 21.9C23.0693 21.66 23.2793 21.07 23.0393 20.57C21.1093 16.52 16.9093 14 12.0693 14C7.22927 14 3.02927 16.52 1.09927 20.57C0.859273 21.07 1.06927 21.67 1.56927 21.9C2.06927 22.14 2.65927 21.93 2.89927 21.43C4.49927 18.08 8.00927 16 12.0593 16C16.1093 16 19.6293 18.08 21.2193 21.43C21.3893 21.79 21.7493 22 22.1193 22C22.2593 22 22.4093 21.97 22.5493 21.9H22.5693Z"></path></svg>',
  "smiley-rate5-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7.00572 7C6.45572 7 6.00572 6.55 6.00572 6V2C6.00572 1.45 6.45572 1 7.00572 1C7.55572 1 8.00572 1.45 8.00572 2V6C8.00572 6.55 7.55572 7 7.00572 7ZM18.0057 6V2C18.0057 1.45 17.5557 1 17.0057 1C16.4557 1 16.0057 1.45 16.0057 2V6C16.0057 6.55 16.4557 7 17.0057 7C17.5557 7 18.0057 6.55 18.0057 6ZM19.9457 21.33C20.1257 20.81 19.8557 20.24 19.3357 20.05C14.5457 18.35 9.45572 18.35 4.66572 20.05C4.14572 20.23 3.87572 20.81 4.05572 21.33C4.23572 21.85 4.80572 22.12 5.33572 21.94C9.69572 20.4 14.3057 20.4 18.6657 21.94C18.7757 21.98 18.8857 22 18.9957 22C19.4057 22 19.7957 21.74 19.9357 21.33H19.9457Z"></path></svg>',
  "smiley-rate6-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7 7C6.45 7 6 6.55 6 6V2C6 1.45 6.45 1 7 1C7.55 1 8 1.45 8 2V6C8 6.55 7.55 7 7 7ZM18 6V2C18 1.45 17.55 1 17 1C16.45 1 16 1.45 16 2V6C16 6.55 16.45 7 17 7C17.55 7 18 6.55 18 6ZM21 21C21 20.45 20.55 20 20 20H4C3.45 20 3 20.45 3 21C3 21.55 3.45 22 4 22H20C20.55 22 21 21.55 21 21Z"></path></svg>',
  "smiley-rate7-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.0022 23.99C11.452 23.99 11.0018 23.5402 11.0018 22.9904C11.0018 22.4407 11.452 21.9909 12.0022 21.9909C16.3137 21.9909 21.0755 19.472 22.0158 13.8344C22.1058 13.2947 22.616 12.9248 23.1662 13.0148C23.7064 13.1047 24.0765 13.6245 23.9865 14.1643C22.8561 20.9513 17.144 24 11.9922 24L12.0022 23.99ZM8.00072 5.99783V1.99957C8.00072 1.4498 7.55056 1 7.00036 1C6.45016 1 6 1.4498 6 1.99957V5.99783C6 6.54759 6.45016 6.99739 7.00036 6.99739C7.55056 6.99739 8.00072 6.54759 8.00072 5.99783ZM18.0043 5.99783V1.99957C18.0043 1.4498 17.5542 1 17.004 1C16.4538 1 16.0036 1.4498 16.0036 1.99957V5.99783C16.0036 6.54759 16.4538 6.99739 17.004 6.99739C17.5542 6.99739 18.0043 6.54759 18.0043 5.99783Z"></path></svg>',
  "smiley-rate8-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.01 24C6.85721 24 1.15412 20.96 0.0134987 14.16C-0.0765501 13.62 0.293651 13.1 0.833944 13.01C1.38424 12.92 1.89452 13.29 1.98457 13.83C2.92508 19.47 7.69767 21.99 12 21.99C16.3023 21.99 21.0749 19.47 22.0154 13.83C22.1055 13.29 22.6158 12.92 23.1661 13.01C23.7063 13.1 24.0765 13.62 23.9865 14.16C22.8559 20.95 17.1428 24 11.99 24H12.01ZM8.00783 6V2C8.00783 1.45 7.55759 1 7.00729 1C6.45699 1 6.00675 1.45 6.00675 2V6C6.00675 6.55 6.45699 7 7.00729 7C7.55759 7 8.00783 6.55 8.00783 6ZM18.0133 6V2C18.0133 1.45 17.563 1 17.0127 1C16.4624 1 16.0122 1.45 16.0122 2V6C16.0122 6.55 16.4624 7 17.0127 7C17.563 7 18.0133 6.55 18.0133 6Z"></path></svg>',
  "smiley-rate9-24x24": '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.01 24C6.85767 24 1.15509 20.96 0.0145752 14.16C-0.0354475 13.87 0.0445888 13.57 0.234675 13.35C0.424761 13.13 0.704888 13 0.995019 13H23.005C23.2951 13 23.5752 13.13 23.7653 13.35C23.9554 13.57 24.0354 13.87 23.9854 14.16C22.8549 20.95 17.1423 24 11.99 24H12.01ZM2.25559 15C3.61621 19.82 8.0182 22 12.01 22C16.0018 22 20.4038 19.82 21.7644 15H2.25559ZM8.00819 6V2C8.00819 1.45 7.55799 1 7.00774 1C6.45749 1 6.00729 1.45 6.00729 2V6C6.00729 6.55 6.45749 7 7.00774 7C7.55799 7 8.00819 6.55 8.00819 6ZM18.0127 6V2C18.0127 1.45 17.5625 1 17.0123 1C16.462 1 16.0118 1.45 16.0118 2V6C16.0118 6.55 16.462 7 17.0123 7C17.5625 7 18.0127 6.55 18.0127 6Z"></path></svg>'
};
var $o = ["lang", "dir"];
var Do = { onsubmit: "return false;" };
var Ao = {
  key: 0,
  class: "sv_custom_header"
};
var Po = { class: "sv-components-column sv-components-column--expandable" };
var No = ["id"];
var Eo = { key: 2 };
var Wo = ["innerHTML"];
var Fo = ["innerHTML"];
var Oo = ["innerHTML"];
addIconsToThemeSet("v1", Zo);
addIconsToThemeSet("v2", fe);
SvgRegistry.registerIcons(fe);
var le = defineComponent({
  __name: "Survey",
  props: {
    model: {},
    survey: {}
  },
  setup(u) {
    const e = u, n = ref(), s = ref(""), o = ref(1), t = computed(() => {
      const R = e.survey ? e.survey : e.model;
      return toRaw(R);
    }), l = computed(() => t.value.activePage ? t.value.activePage.id : ""), d = () => {
      const R = l.value;
      return !!t.value && R + o.value.toString();
    }, C = computed(
      () => t.value.showCompletedPage && t.value.state === "completed"
    ), L = computed(() => t.value.css), h = computed(() => "page" + d()), q = () => C.value ? (s.value || (s.value = t.value.processedCompletedHtml), s.value) : "", b = (R) => {
      if (R) {
        var N = n.value;
        N && R.afterRenderSurvey(N), R.renderCallback = () => {
          var K, j;
          o.value++, (j = (K = getCurrentInstance()) == null ? void 0 : K.proxy) == null || j.$forceUpdate();
        }, R.startTimerFromUI();
      }
    };
    return S(
      () => t.value,
      (R, N) => {
        R && N && b(R);
      },
      (R) => {
        R.stopTimer(), R.renderCallback = void 0;
      }
    ), onMounted(() => {
      b(t.value);
    }), onUnmounted(() => {
      t.value.stopTimer(), t.value.beforeDestroySurveyElement(), t.value.renderCallback = void 0;
    }), (R, N) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(t.value.getRootCss()),
      style: normalizeStyle(t.value.themeVariables),
      lang: t.value.locale || "en",
      dir: t.value.localeDir,
      ref_key: "root",
      ref: n
    }, [
      createVNode(m, {
        is: "sv-scroll",
        disabled: t.value.rootScrollDisabled
      }, {
        default: withCtx(() => [
          t.value.needRenderIcons ? (openBlock(), createBlock(m, {
            key: 0,
            is: "sv-svg-bundle"
          })) : createCommentVNode("", true),
          createBaseVNode("div", {
            class: normalizeClass(t.value.wrapperFormCss)
          }, [
            createVNode(m, { is: "survey-popup-modal" }),
            t.value.renderBackgroundImage ? (openBlock(), createElementBlock("div", {
              key: 0,
              class: normalizeClass(L.value.rootBackgroundImage),
              style: normalizeStyle(t.value.backgroundImageStyle)
            }, null, 6)) : createCommentVNode("", true),
            createBaseVNode("form", Do, [
              createVNode(m, {
                is: "sv-scroll",
                disabled: t.value.formScrollDisabled
              }, {
                default: withCtx(() => [
                  t.value.hasLogo ? createCommentVNode("", true) : (openBlock(), createElementBlock("div", Ao)),
                  createBaseVNode("div", {
                    class: normalizeClass(L.value.container)
                  }, [
                    t.value.headerView === "basic" ? (openBlock(), createBlock(m, {
                      key: 0,
                      is: "survey-header",
                      survey: t.value
                    }, null, 8, ["survey"])) : createCommentVNode("", true),
                    createVNode(m, {
                      is: "sv-components-container",
                      survey: t.value,
                      container: "header",
                      needRenderWrapper: false
                    }, null, 8, ["survey"]),
                    t.value.isShowingPage ? (openBlock(), createElementBlock("div", {
                      key: 1,
                      class: normalizeClass(t.value.bodyContainerCss)
                    }, [
                      createVNode(m, {
                        is: "sv-components-container",
                        survey: t.value,
                        container: "left",
                        needRenderWrapper: true
                      }, null, 8, ["survey"]),
                      createBaseVNode("div", Po, [
                        createVNode(m, {
                          is: "sv-components-container",
                          survey: t.value,
                          container: "center",
                          needRenderWrapper: true
                        }, null, 8, ["survey"]),
                        createBaseVNode("div", {
                          class: normalizeClass(t.value.bodyCss),
                          style: normalizeStyle({ maxWidth: t.value.renderedWidth }),
                          id: l.value
                        }, [
                          createVNode(m, {
                            is: "sv-components-container",
                            survey: t.value,
                            container: "contentTop",
                            needRenderWrapper: true
                          }, null, 8, ["survey"]),
                          (openBlock(), createBlock(m, {
                            is: "survey-page",
                            key: h.value,
                            survey: t.value,
                            page: t.value.activePage,
                            css: L.value
                          }, null, 8, ["survey", "page", "css"])),
                          createVNode(m, {
                            is: "sv-components-container",
                            survey: t.value,
                            container: "contentBottom",
                            needRenderWrapper: true
                          }, null, 8, ["survey"]),
                          t.value.showBrandInfo ? (openBlock(), createBlock(m, {
                            key: 0,
                            is: "sv-brand-info"
                          })) : createCommentVNode("", true)
                        ], 14, No)
                      ]),
                      createVNode(m, {
                        is: "sv-components-container",
                        survey: t.value,
                        container: "right",
                        needRenderWrapper: true
                      }, null, 8, ["survey"])
                    ], 2)) : createCommentVNode("", true),
                    createVNode(m, {
                      is: "sv-components-container",
                      survey: t.value,
                      container: "footer",
                      needRenderWrapper: false
                    }, null, 8, ["survey"]),
                    C.value ? (openBlock(), createElementBlock("div", Eo, [
                      createBaseVNode("div", {
                        innerHTML: q(),
                        class: normalizeClass(t.value.completedCss)
                      }, null, 10, Wo),
                      createVNode(m, {
                        is: "sv-components-container",
                        survey: t.value,
                        container: "completePage",
                        needRenderWrapper: true
                      }, null, 8, ["survey"])
                    ])) : createCommentVNode("", true),
                    t.value.state === "completedbefore" ? (openBlock(), createElementBlock("div", {
                      key: 3,
                      class: normalizeClass(t.value.completedBeforeCss),
                      innerHTML: t.value.processedCompletedBeforeHtml
                    }, null, 10, Fo)) : createCommentVNode("", true),
                    t.value.state === "loading" ? (openBlock(), createElementBlock("div", {
                      key: 4,
                      class: normalizeClass(t.value.loadingBodyCss),
                      innerHTML: t.value.processedLoadingHtml
                    }, null, 10, Oo)) : createCommentVNode("", true),
                    t.value.state === "empty" ? (openBlock(), createElementBlock("div", {
                      key: 5,
                      class: normalizeClass(L.value.bodyEmpty)
                    }, toDisplayString(t.value.emptySurveyText), 3)) : createCommentVNode("", true)
                  ], 2)
                ]),
                _: 1
              }, 8, ["disabled"])
            ]),
            createVNode(m, {
              is: "sv-notifier",
              model: t.value.notifier
            }, null, 8, ["model"])
          ], 2)
        ]),
        _: 1
      }, 8, ["disabled"])
    ], 14, $o));
  }
});
var zo = defineComponent({
  __name: "Notifier",
  props: {
    model: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.model), (n, s) => n.model.isDisplayed ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(n.model.css),
      style: normalizeStyle({ visibility: n.model.active ? "visible" : "hidden" }),
      role: "alert",
      "aria-live": "polite"
    }, [
      createBaseVNode("span", null, toDisplayString(n.model.message), 1),
      createVNode(m, {
        is: "sv-action-bar",
        model: n.model.actionBar
      }, null, 8, ["model"])
    ], 6)) : createCommentVNode("", true);
  }
});
var Uo = { key: 0 };
var Qo = defineComponent({
  __name: "QuestionOther",
  props: {
    question: {},
    item: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(e.question.getCommentAreaCss(true))
    }, [
      e.question.isReadOnlyRenderDiv() ? (openBlock(), createElementBlock("div", Uo, toDisplayString(e.question.getCommentValue(e.item)), 1)) : (openBlock(), createBlock(m, {
        key: 1,
        is: "sv-text-area",
        model: e.question.getCommentTextAreaModel(e.item)
      }, null, 8, ["model"]))
    ], 2));
  }
});
var Ko = ["disabled", "value", "title"];
var jo = defineComponent({
  __name: "SurveyNavigationButton",
  props: {
    item: {}
  },
  setup(u) {
    const e = u, n = () => e.item.data && e.item.data.mouseDown();
    return S(() => e.item), (s, o) => s.item.visible ? (openBlock(), createElementBlock("input", {
      key: 0,
      type: "button",
      disabled: s.item.disabled,
      value: s.item.title,
      class: normalizeClass(s.item.innerCss),
      title: s.item.getTooltip(),
      onMousedown: n,
      onClick: o[0] || (o[0] = //@ts-ignore
      (...t) => s.item.action && s.item.action(...t))
    }, null, 42, Ko)) : createCommentVNode("", true);
  }
});
var He = defineComponent({
  __name: "PopupSurvey",
  props: {
    survey: {},
    isExpanded: { type: Boolean },
    allowClose: { type: Boolean },
    allowFullScreen: { type: Boolean },
    onClose: { type: Function },
    closeOnCompleteTimeout: {}
  },
  setup(u) {
    const e = u, n = shallowRef(), s = () => {
      n.value.changeExpandCollapse();
    }, o = () => {
      n.value.hide(), e.onClose && e.onClose();
    }, t = () => {
      n.value.toggleFullScreen();
    }, l = () => {
      n.value.onScroll();
    }, d = () => {
      let L = n.value.cssHeaderRoot;
      return n.value.isCollapsed && (L += " " + n.value.cssRootCollapsedMod), L;
    };
    S(() => n.value);
    const C = watch(
      () => e.survey,
      (L) => {
        const h = new PopupSurveyModel(null, L);
        e.isExpanded !== void 0 && (h.isExpanded = e.isExpanded), e.closeOnCompleteTimeout !== void 0 && (h.closeOnCompleteTimeout = e.closeOnCompleteTimeout), e.allowClose !== void 0 && (h.allowClose = e.allowClose), e.allowFullScreen !== void 0 && (h.allowFullScreen = e.allowFullScreen), h.isShowing = true, n.value = h;
      },
      {
        immediate: true
      }
    );
    return onUnmounted(() => {
      C();
    }), (L, h) => n.value.isShowing ? (openBlock(), createElementBlock("div", {
      key: 0,
      style: normalizeStyle({
        maxWidth: n.value.renderedWidth,
        width: n.value.renderedWidth
      }),
      class: normalizeClass(n.value.cssRoot),
      onScroll: l
    }, [
      createBaseVNode("div", {
        class: normalizeClass(n.value.cssRootContent)
      }, [
        createBaseVNode("div", {
          class: normalizeClass(d())
        }, [
          n.value.isCollapsed && n.value.locTitle ? (openBlock(), createElementBlock("div", {
            key: 0,
            class: normalizeClass(n.value.cssHeaderTitleCollapsed)
          }, toDisplayString(n.value.locTitle.renderedHtml), 3)) : createCommentVNode("", true),
          createBaseVNode("div", {
            class: normalizeClass(n.value.cssHeaderButtonsContainer)
          }, [
            n.value.allowFullScreen ? (openBlock(), createElementBlock("div", {
              key: 0,
              class: normalizeClass(n.value.cssHeaderFullScreenButton),
              onClick: t
            }, [
              n.value.isFullScreen ? (openBlock(), createBlock(m, {
                key: 0,
                is: "sv-svg-icon",
                iconName: "icon-back-to-panel_16x16",
                size: 16
              })) : createCommentVNode("", true),
              n.value.isFullScreen ? createCommentVNode("", true) : (openBlock(), createBlock(m, {
                key: 1,
                is: "sv-svg-icon",
                iconName: "icon-full-screen_16x16",
                size: 16
              }))
            ], 2)) : createCommentVNode("", true),
            createBaseVNode("div", {
              class: normalizeClass(n.value.cssHeaderCollapseButton),
              onClick: s
            }, [
              n.value.isExpanded ? (openBlock(), createBlock(m, {
                key: 0,
                is: "sv-svg-icon",
                iconName: "icon-minimize_16x16",
                size: 16
              })) : createCommentVNode("", true),
              n.value.isCollapsed ? (openBlock(), createBlock(m, {
                key: 1,
                is: "sv-svg-icon",
                iconName: "icon-restore_16x16",
                size: 16
              })) : createCommentVNode("", true)
            ], 2),
            n.value.allowClose ? (openBlock(), createElementBlock("div", {
              key: 1,
              class: normalizeClass(n.value.cssHeaderCloseButton),
              onClick: o
            }, [
              createVNode(m, {
                is: "sv-svg-icon",
                iconName: "icon-close_16x16",
                size: 16
              })
            ], 2)) : createCommentVNode("", true)
          ], 2)
        ], 2),
        createBaseVNode("div", {
          class: normalizeClass(n.value.cssBody)
        }, [
          createVNode(le, { survey: L.survey }, null, 8, ["survey"])
        ], 2)
      ], 2)
    ], 38)) : createCommentVNode("", true);
  }
});
var Go = ["innerHTML"];
var Xo = defineComponent({
  __name: "CustomWidget",
  props: {
    question: {},
    css: {}
  },
  setup(u) {
    const e = u, n = ref(), s = computed(
      () => e.question.customWidget.isDefaultRender
    ), o = computed(
      () => !!e.question.customWidget.htmlTemplate
    ), t = computed(() => e.question.customWidget.htmlTemplate), l = computed(() => "survey-" + e.question.getTemplate());
    return onMounted(() => {
      e.question.customWidget.afterRender(e.question, n.value);
    }), onBeforeUnmount(() => {
      e.question.customWidget.willUnmount(e.question, n.value);
    }), (d, C) => (openBlock(), createElementBlock("div", {
      ref_key: "root",
      ref: n
    }, [
      o.value ? (openBlock(), createElementBlock("div", {
        key: 0,
        innerHTML: t.value
      }, null, 8, Go)) : createCommentVNode("", true),
      s.value ? (openBlock(), createBlock(m, {
        key: 1,
        is: l.value,
        question: d.question,
        css: d.css
      }, null, 8, ["is", "question", "css"])) : createCommentVNode("", true)
    ], 512));
  }
});
var Jo = defineComponent({
  __name: "PopupModal",
  setup(u) {
    const e = shallowRef();
    function n(s, o) {
      const t = createPopupModalViewModel(
        s,
        o
      ), l = (d, C) => {
        C.isVisible || (e.value = void 0, t.dispose(), t.onVisibilityChanged.remove(l));
      };
      return t.onVisibilityChanged.add(l), t.model.isVisible = true, e.value = t, t;
    }
    return settings.showDialog || (settings.showDialog = n, onUnmounted(() => {
      settings.showDialog = void 0;
    })), (s, o) => e.value ? (openBlock(), createBlock(Teleport, {
      key: 0,
      to: e.value.container
    }, [
      createVNode(m, {
        is: "sv-popup-container",
        model: e.value
      }, null, 8, ["model"])
    ], 8, ["to"])) : createCommentVNode("", true);
  }
});
var Yo = ["readonly", "disabled", "value", "id", "maxlength", "cols", "rows", "placeholder", "aria-required", "aria-label", "aria-labelledby", "aria-describedby", "aria-invalid", "aria-errormessage"];
var _o = defineComponent({
  __name: "TextArea",
  props: {
    model: {},
    getRef: { type: Function }
  },
  setup(u) {
    const e = u, n = ref(
      null
    ), s = function(t) {
      n.value = t, e.getRef && e.getRef(t);
    }, o = computed(() => e.model.getTextValue() || "");
    return onMounted(() => {
      e.model.setElement(n.value);
    }), onUpdated(() => {
      e.model.setElement(n.value);
    }), onUnmounted(() => {
      e.model.resetElement();
    }), (t, l) => (openBlock(), createElementBlock("textarea", {
      ref: (d) => s(d),
      readonly: t.model.isReadOnlyAttr,
      disabled: t.model.isDisabledAttr,
      value: o.value,
      id: t.model.id,
      maxlength: t.model.maxLength,
      cols: t.model.cols,
      rows: t.model.rows,
      placeholder: t.model.placeholder,
      class: normalizeClass(t.model.className),
      onBlur: l[0] || (l[0] = (d) => {
        t.model.onTextAreaBlur(d);
      }),
      onFocus: l[1] || (l[1] = (d) => {
        t.model.onTextAreaFocus(d);
      }),
      onChange: l[2] || (l[2] = (d) => {
        t.model.onTextAreaChange(d);
      }),
      onInput: l[3] || (l[3] = (d) => {
        t.model.onTextAreaInput(d);
      }),
      onKeydown: l[4] || (l[4] = (d) => {
        t.model.onTextAreaKeyDown(d);
      }),
      "aria-required": t.model.ariaRequired,
      "aria-label": t.model.ariaLabel,
      "aria-labelledby": t.model.ariaLabelledBy,
      "aria-describedby": t.model.ariaDescribedBy,
      "aria-invalid": t.model.ariaInvalid,
      "aria-errormessage": t.model.ariaErrormessage,
      style: normalizeStyle({ resize: t.model.question.resizeStyle })
    }, null, 46, Yo));
  }
});
var xo = defineComponent({
  __name: "CharacterCounter",
  props: {
    counter: {},
    remainingCharacterCounter: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.counter), (n, s) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(n.remainingCharacterCounter)
    }, toDisplayString(n.counter.remainingCharacterCounter), 3));
  }
});
var ei = defineComponent({
  inheritAttrs: false,
  __name: "Composite",
  props: {
    question: {},
    css: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = computed(() => e.question.contentPanel);
    return (o, t) => (openBlock(), createBlock(m, {
      is: "survey-panel",
      ref_key: "root",
      ref: n,
      element: s.value,
      css: o.css
    }, null, 8, ["element", "css"]));
  }
});
var si = defineComponent({
  inheritAttrs: false,
  __name: "Custom",
  props: {
    question: {},
    css: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    T(e, n);
    const s = computed(() => e.question.contentQuestion), o = (t) => ie(t);
    return (t, l) => (openBlock(), createBlock(m, {
      ref: n.value,
      is: o(s.value),
      question: s.value,
      css: t.css
    }, null, 8, ["is", "question", "css"]));
  }
});
var ni = createBaseVNode("use", { "xlink:href": "#icon-timercircle" }, null, -1);
var ti = [
  ni
];
var Ce = 440;
var oi = defineComponent({
  __name: "TimerPanel",
  props: {
    model: {},
    css: {}
  },
  setup(u) {
    const e = u, n = computed(() => Ce * e.model.progress), s = computed(() => e.model.text);
    return S(() => e.model), (o, t) => o.model.isRunning && o.model.showTimerAsClock ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(o.model.rootCss)
    }, [
      o.model.showProgress ? (openBlock(), createElementBlock("svg", {
        key: 0,
        class: normalizeClass(o.model.getProgressCss()),
        style: normalizeStyle({ strokeDasharray: Ce, strokeDashoffset: n.value })
      }, ti, 6)) : createCommentVNode("", true),
      createBaseVNode("div", {
        class: normalizeClass(o.model.textContainerCss)
      }, [
        createBaseVNode("span", {
          class: normalizeClass(o.model.majorTextCss)
        }, toDisplayString(o.model.clockMajorText), 3),
        o.model.clockMinorText ? (openBlock(), createElementBlock("span", {
          key: 0,
          class: normalizeClass(o.model.minorTextCss)
        }, toDisplayString(o.model.clockMinorText), 3)) : createCommentVNode("", true)
      ], 2)
    ], 2)) : withDirectives((openBlock(), createElementBlock("div", {
      key: 1,
      class: normalizeClass(o.model.survey.getCss().timerRoot)
    }, toDisplayString(s.value), 3)), [
      [vShow, o.model.isRunning && !o.model.showTimerAsClock]
    ]);
  }
});
var ii = { class: "sd-loading-indicator" };
var ri = defineComponent({
  __name: "LoadingIndicator",
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("div", ii, [
      createVNode(m, {
        is: "sv-svg-icon",
        iconName: "icon-loading",
        size: "'auto'"
      })
    ]));
  }
});
var li = { key: 2 };
var ai = defineComponent({
  __name: "Header",
  props: {
    model: {},
    survey: {}
  },
  setup(u) {
    const e = u;
    return S(() => {
      const n = e.model;
      return n.survey = e.survey, e.model;
    }), onMounted(() => {
      e.model.processResponsiveness();
    }), onUpdated(() => {
      e.model.processResponsiveness();
    }), (n, s) => n.survey.headerView === "advanced" && !n.model.isEmpty ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(n.model.headerClasses),
      style: normalizeStyle({ height: n.model.renderedHeight })
    }, [
      n.model.backgroundImage ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(n.model.backgroundImageClasses),
        style: normalizeStyle(n.model.backgroundImageStyle)
      }, null, 6)) : createCommentVNode("", true),
      n.survey.isMobile ? createCommentVNode("", true) : (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(n.model.contentClasses),
        style: normalizeStyle({ maxWidth: n.model.maxWidth })
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(n.model.cells, (o, t) => (openBlock(), createBlock(m, {
          is: "sv-header-cell",
          model: o,
          key: t
        }, null, 8, ["model"]))), 128))
      ], 6)),
      n.survey.isMobile ? (openBlock(), createElementBlock("div", li, [
        createVNode(m, {
          is: "sv-header-mobile",
          model: n.model
        }, null, 8, ["model"])
      ])) : createCommentVNode("", true)
    ], 6)) : createCommentVNode("", true);
  }
});
var ui = {
  key: 0,
  class: "sv-header__logo"
};
var di = ["src", "width", "height", "alt"];
var mi = defineComponent({
  __name: "HeaderCell",
  props: {
    model: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(e.model.css),
      style: normalizeStyle(e.model.style)
    }, [
      createBaseVNode("div", {
        class: "sv-header__cell-content",
        style: normalizeStyle(e.model.contentStyle)
      }, [
        e.model.showLogo ? (openBlock(), createElementBlock("div", ui, [
          createBaseVNode("div", {
            class: normalizeClass(e.model.survey.logoClassNames)
          }, [
            createBaseVNode("img", {
              class: normalizeClass(e.model.survey.css.logoImage),
              src: e.model.survey.locLogo.renderedHtml,
              width: e.model.survey.renderedLogoWidth,
              height: e.model.survey.renderedLogoHeight,
              alt: e.model.survey.locTitle.renderedHtml,
              style: normalizeStyle({ objectFit: e.model.survey.logoFit, width: e.model.survey.renderedStyleLogoWidth, height: e.model.survey.renderedStyleLogoHeight })
            }, null, 14, di)
          ], 2)
        ])) : createCommentVNode("", true),
        e.model.showTitle ? (openBlock(), createElementBlock("div", {
          key: 1,
          class: "sv-header__title",
          style: normalizeStyle({ maxWidth: e.model.textAreaWidth })
        }, [
          createVNode(m, {
            is: "survey-element-title",
            element: e.model.survey,
            css: e.model.survey.css
          }, null, 8, ["element", "css"])
        ], 4)) : createCommentVNode("", true),
        e.model.showDescription ? (openBlock(), createElementBlock("div", {
          key: 2,
          class: "sv-header__description",
          style: normalizeStyle({ maxWidth: e.model.textAreaWidth })
        }, [
          e.model.survey.renderedHasDescription ? (openBlock(), createElementBlock("div", {
            key: 0,
            class: normalizeClass(e.model.survey.css.description)
          }, [
            createVNode(m, {
              is: "survey-string",
              locString: e.model.survey.locDescription
            }, null, 8, ["locString"])
          ], 2)) : createCommentVNode("", true)
        ], 4)) : createCommentVNode("", true)
      ], 4)
    ], 6));
  }
});
var pi = { class: "sv-header--mobile" };
var vi = {
  key: 0,
  class: "sv-header__logo"
};
var Ci = ["src", "width", "height", "alt"];
var ci = defineComponent({
  __name: "HeaderMobile",
  props: {
    model: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("div", pi, [
      e.model.survey.hasLogo ? (openBlock(), createElementBlock("div", vi, [
        createBaseVNode("div", {
          class: normalizeClass(e.model.survey.logoClassNames)
        }, [
          createBaseVNode("img", {
            class: normalizeClass(e.model.survey.css.logoImage),
            src: e.model.survey.locLogo.renderedHtml,
            width: e.model.survey.renderedLogoWidth,
            height: e.model.survey.renderedLogoHeight,
            alt: e.model.survey.locTitle.renderedHtml,
            style: normalizeStyle({ objectFit: e.model.survey.logoFit, width: e.model.survey.renderedStyleLogoWidth, height: e.model.survey.renderedStyleLogoHeight })
          }, null, 14, Ci)
        ], 2)
      ])) : createCommentVNode("", true),
      e.model.survey.hasTitle ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: "sv-header__title",
        style: normalizeStyle({ maxWidth: e.model.renderedTextAreaWidth })
      }, [
        createVNode(m, {
          is: "survey-element-title",
          element: e.model.survey,
          css: e.model.survey.css
        }, null, 8, ["element", "css"])
      ], 4)) : createCommentVNode("", true),
      e.model.survey.renderedHasDescription ? (openBlock(), createElementBlock("div", {
        key: 2,
        class: "sv-header__description",
        style: normalizeStyle({ maxWidth: e.model.renderedTextAreaWidth })
      }, [
        e.model.survey.renderedHasDescription ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(e.model.survey.css.description)
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: e.model.survey.locDescription
          }, null, 8, ["locString"])
        ], 2)) : createCommentVNode("", true)
      ], 4)) : createCommentVNode("", true)
    ]));
  }
});
var gi = defineComponent({
  __name: "Element",
  props: {
    element: {},
    row: {},
    css: {}
  },
  setup(u) {
    const e = u, n = ref(), s = (C) => C.isPanel ? "survey-panel" : "survey-question", o = computed(() => {
      const C = e.element.survey;
      if (C) {
        const L = C.getElementWrapperComponentName(e.element);
        if (L)
          return L;
      }
      return s(e.element);
    }), t = (C) => C.cssClasses ? C.rootStyle : {}, l = computed(() => {
      const C = e.element, L = C.survey;
      let h;
      return L && (h = L.getElementWrapperComponentData(C)), {
        componentName: s(C),
        componentData: {
          element: C,
          survey: L,
          row: e.row,
          css: e.css,
          data: h
        }
      };
    }), d = watch(
      () => e.element,
      (C, L) => {
        L && L.setWrapperElement(void 0), C.setWrapperElement(n.value);
      }
    );
    return onMounted(() => {
      e.element.setWrapperElement(n.value);
    }), onUnmounted(() => {
      e.element.setWrapperElement(void 0), d();
    }), (C, L) => (openBlock(), createElementBlock("div", {
      ref_key: "root",
      ref: n,
      style: normalizeStyle(t(C.element)),
      class: normalizeClass(C.element.cssClasses.questionWrapper)
    }, [
      C.row.isNeedRender ? (openBlock(), createBlock(m, mergeProps({
        key: 0,
        is: o.value
      }, l.value), null, 16, ["is"])) : C.element.skeletonComponentName ? (openBlock(), createBlock(m, {
        key: 1,
        is: C.element.skeletonComponentName,
        element: C.element,
        css: C.css
      }, null, 8, ["is", "element", "css"])) : createCommentVNode("", true)
    ], 6));
  }
});
var yi = defineComponent({
  __name: "TemplateRenderer",
  props: {
    componentName: {},
    componentData: {}
  },
  setup(u) {
    const e = useSlots(), n = computed(() => !!e.default);
    return (s, o) => n.value && !s.componentName ? renderSlot(s.$slots, "default", { key: 0 }) : (openBlock(), createBlock(m, mergeProps({
      key: 1,
      is: s.componentName
    }, s.componentData), null, 16, ["is"]));
  }
});
var hi = defineComponent({
  __name: "FileCleanButton",
  props: {
    question: {},
    css: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("button", {
      type: "button",
      class: normalizeClass(e.css),
      onClick: n[0] || (n[0] = //@ts-ignore
      (...s) => e.question.doClean && e.question.doClean(...s))
    }, [
      createBaseVNode("span", null, toDisplayString(e.question.clearButtonCaption), 1),
      e.question.cssClasses.removeButtonIconId ? (openBlock(), createBlock(m, {
        key: 0,
        is: "sv-svg-icon",
        iconName: e.question.cssClasses.removeButtonIconId,
        size: "auto",
        title: e.question.clearButtonCaption
      }, null, 8, ["iconName", "title"])) : createCommentVNode("", true)
    ], 2));
  }
});
var qi = ["id"];
var wi = defineComponent({
  __name: "FileVideo",
  props: {
    question: {}
  },
  setup(u) {
    return (e, n) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(e.question.cssClasses.videoContainer)
    }, [
      createVNode(m, {
        is: "sv-action",
        item: e.question.changeCameraAction
      }, null, 8, ["item"]),
      createVNode(m, {
        is: "sv-action",
        item: e.question.closeCameraAction
      }, null, 8, ["item"]),
      createBaseVNode("video", {
        autoplay: "",
        playsinline: "",
        id: e.question.videoId,
        class: normalizeClass(e.question.cssClasses.video)
      }, null, 10, qi),
      createVNode(m, {
        is: "sv-action",
        item: e.question.takePictureAction
      }, null, 8, ["item"])
    ], 2));
  }
});
var bi = ["for", "aria-label"];
var Li = defineComponent({
  __name: "FileChooseButton",
  props: {
    data: {},
    item: {}
  },
  setup(u) {
    const e = u, n = computed(
      () => {
        var s, o;
        return ((s = e.data) == null ? void 0 : s.question) || ((o = e.item) == null ? void 0 : o.data.question);
      }
    );
    return (s, o) => withDirectives((openBlock(), createElementBlock("label", {
      tabindex: "0",
      class: normalizeClass(n.value.getChooseFileCss()),
      for: n.value.inputId,
      "aria-label": n.value.chooseButtonText,
      onClick: o[0] || (o[0] = (t) => n.value.chooseFile(t))
    }, [
      n.value.cssClasses.chooseFileIconId ? (openBlock(), createBlock(m, {
        key: 0,
        is: "sv-svg-icon",
        title: n.value.chooseButtonText,
        iconName: n.value.cssClasses.chooseFileIconId,
        size: "auto"
      }, null, 8, ["title", "iconName"])) : createCommentVNode("", true),
      createBaseVNode("span", null, toDisplayString(n.value.chooseButtonText), 1)
    ], 10, bi)), [
      [unref(Q)]
    ]);
  }
});
var ki = defineComponent({
  __name: "FilePreview",
  props: {
    question: {}
  },
  setup(u) {
    return (e, n) => e.question.showPreviewContainer ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(e.question.cssClasses.fileList || void 0)
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(e.question.renderedPages, (s) => (openBlock(), createBlock(m, {
        is: "sv-file-page",
        key: s.id,
        page: s,
        question: e.question
      }, null, 8, ["page", "question"]))), 128))
    ], 2)) : createCommentVNode("", true);
  }
});
var fi = defineComponent({
  __name: "ButtonGroup",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref();
    return T(e, n), (s, o) => (openBlock(), createElementBlock("div", {
      role: "group",
      class: normalizeClass(s.question.cssClasses.root),
      ref_key: "root",
      ref: n
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(s.question.visibleChoices, (t, l) => (openBlock(), createBlock(m, {
        is: "sv-button-group-item",
        question: s.question,
        key: l,
        item: t,
        index: l
      }, null, 8, ["question", "item", "index"]))), 128))
    ], 2));
  }
});
var Hi = ["title"];
var Mi = ["name", "id", "aria-required", "aria-label", "aria-invalid", "aria-errormessage", "disabled", "value"];
var Ii = ["title"];
var Vi = defineComponent({
  __name: "ButtonGroupItem",
  props: {
    item: {},
    question: {},
    index: {}
  },
  setup(u) {
    const e = u, n = computed(
      () => new ButtonGroupItemModel(e.question, e.item, e.index)
    ), s = computed({
      get: () => e.question.renderedValue,
      set: (o) => {
        const t = e.question;
        t.renderedValue = o;
      }
    });
    return (o, t) => (openBlock(), createElementBlock("label", {
      class: normalizeClass(n.value.css.label),
      title: n.value.caption.renderedHtml
    }, [
      withDirectives(createBaseVNode("input", {
        type: "radio",
        name: n.value.name,
        id: n.value.id,
        "aria-required": n.value.isRequired,
        "aria-label": n.value.caption.renderedHtml,
        "aria-invalid": n.value.hasErrors,
        "aria-errormessage": n.value.describedBy,
        disabled: n.value.readOnly,
        class: normalizeClass(n.value.css.control),
        "onUpdate:modelValue": t[0] || (t[0] = (l) => s.value = l),
        value: n.value.value
      }, null, 10, Mi), [
        [vModelRadio, s.value]
      ]),
      createBaseVNode("div", {
        class: normalizeClass(n.value.css.decorator)
      }, [
        n.value.iconName ? (openBlock(), createBlock(m, {
          key: 0,
          is: "sv-svg-icon",
          iconName: n.value.iconName,
          size: n.value.iconSize,
          class: normalizeClass(n.value.css.icon)
        }, null, 8, ["iconName", "size", "class"])) : createCommentVNode("", true),
        n.value.showCaption ? (openBlock(), createElementBlock("span", {
          key: 1,
          class: normalizeClass(n.value.css.caption),
          title: n.value.caption.renderedHtml
        }, [
          createVNode(m, {
            is: "survey-string",
            locString: n.value.caption
          }, null, 8, ["locString"])
        ], 10, Ii)) : createCommentVNode("", true)
      ], 2)
    ], 10, Hi));
  }
});
RendererFactory.Instance.registerRenderer(
  "buttongroup",
  "dropdown",
  "sv-buttongroup-dropdown"
);
var Si = defineComponent({
  inheritAttrs: false,
  __name: "ButtonGroupDropdown",
  props: {
    question: {}
  },
  setup(u) {
    const e = u, n = ref(null);
    return T(e, n), (s, o) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(s.question.cssClasses.rootDropdown),
      ref_key: "root",
      ref: n
    }, [
      createVNode(m, {
        is: "sv-dropdown",
        question: s.question
      }, null, 8, ["question"])
    ], 2));
  }
});
var Ri = ["src", "width", "height", "alt"];
var Ti = defineComponent({
  inheritAttrs: false,
  __name: "Logo",
  props: {
    data: {}
  },
  setup(u) {
    const e = u, n = computed(() => e.data), s = U(() => n.value.locLogo);
    return (o, t) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(n.value.logoClassNames)
    }, [
      createBaseVNode("img", {
        class: normalizeClass(n.value.css.logoImage),
        src: unref(s),
        width: n.value.renderedLogoWidth,
        height: n.value.renderedLogoHeight,
        alt: n.value.locTitle.renderedHtml,
        style: normalizeStyle({
          objectFit: n.value.logoFit,
          width: n.value.renderedStyleLogoWidth,
          height: n.value.renderedStyleLogoHeight
        })
      }, null, 14, Ri)
    ], 2));
  }
});
var Bi = defineComponent({
  __name: "SvgBundle",
  setup(u) {
    const e = ref(), n = () => {
      e.value && (e.value.innerHTML = SvgRegistry.iconsRenderedHtml());
    };
    return onMounted(() => {
      n(), SvgRegistry.onIconsChanged.add(n);
    }), onUnmounted(() => {
      SvgRegistry.onIconsChanged.remove(n);
    }), (s, o) => withDirectives((openBlock(), createElementBlock("svg", {
      id: "sv-icon-holder-global-container",
      ref_key: "root",
      ref: e
    }, null, 512)), [
      [vShow, false]
    ]);
  }
});
var Zi = ["id"];
var $i = defineComponent({
  __name: "FilePage",
  props: {
    page: {},
    question: {}
  },
  setup(u) {
    const e = u;
    return S(() => e.page), (n, s) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(n.page.css),
      id: n.page.id
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(n.page.items, (o) => (openBlock(), createBlock(m, {
        is: "sv-file-item",
        key: o,
        item: o,
        question: n.question
      }, null, 8, ["item", "question"]))), 128))
    ], 10, Zi));
  }
});
var Di = ["href", "title", "download"];
var Ai = ["src"];
var Pi = ["href", "title", "download"];
var Ni = defineComponent({
  __name: "FileItem",
  props: {
    item: {},
    question: {}
  },
  setup(u) {
    return (e, n) => withDirectives((openBlock(), createElementBlock("span", {
      class: normalizeClass(e.question.cssClasses.previewItem),
      onClick: n[3] || (n[3] = (s) => e.question.doDownloadFileFromContainer(s))
    }, [
      e.item.name && e.question.cssClasses.fileSign ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(e.question.cssClasses.fileSign)
      }, [
        createBaseVNode("a", {
          onClick: n[0] || (n[0] = (s) => e.question.doDownloadFile(s, e.item)),
          href: e.item.content,
          title: e.item.name,
          download: e.item.name,
          style: normalizeStyle({ width: e.question.imageWidth })
        }, toDisplayString(e.item.name), 13, Di)
      ], 2)) : createCommentVNode("", true),
      createBaseVNode("div", {
        class: normalizeClass(e.question.getImageWrapperCss(e.item))
      }, [
        e.question.canPreviewImage(e.item) ? (openBlock(), createElementBlock("img", {
          key: 0,
          src: e.item.content,
          style: normalizeStyle({
            height: e.question.imageHeight,
            width: e.question.imageWidth
          }),
          alt: "File preview"
        }, null, 12, Ai)) : createCommentVNode("", true),
        e.question.defaultImage(e.item) ? (openBlock(), createBlock(m, {
          key: 1,
          is: "sv-svg-icon",
          iconName: e.question.cssClasses.defaultImageIconId,
          class: normalizeClass(e.question.cssClasses.defaultImage),
          size: "auto"
        }, null, 8, ["iconName", "class"])) : createCommentVNode("", true),
        e.item.name && !e.question.isReadOnly ? (openBlock(), createElementBlock("div", {
          key: 2,
          class: normalizeClass(e.question.getRemoveButtonCss()),
          onClick: n[1] || (n[1] = (s) => e.question.doRemoveFile(e.item, s))
        }, [
          createBaseVNode("span", {
            class: normalizeClass(e.question.cssClasses.removeFile)
          }, toDisplayString(e.question.removeFileCaption), 3),
          e.question.cssClasses.removeFileSvgIconId ? (openBlock(), createBlock(m, {
            key: 0,
            is: "sv-svg-icon",
            title: e.question.removeFileCaption,
            class: normalizeClass(e.question.cssClasses.removeFileSvg),
            iconName: e.question.cssClasses.removeFileSvgIconId,
            size: "auto"
          }, null, 8, ["title", "class", "iconName"])) : createCommentVNode("", true)
        ], 2)) : createCommentVNode("", true)
      ], 2),
      e.item.name && e.question.cssClasses.fileSignBottom ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(e.question.cssClasses.fileSignBottom)
      }, [
        createBaseVNode("a", {
          onClick: n[2] || (n[2] = (s) => e.question.doDownloadFile(s, e.item)),
          href: e.item.content,
          title: e.item.name,
          download: e.item.name,
          style: normalizeStyle({ width: e.question.imageWidth })
        }, toDisplayString(e.item.name), 13, Pi)
      ], 2)) : createCommentVNode("", true)
    ], 2)), [
      [vShow, e.item]
    ]);
  }
});
SurveyModel.platform = "vue3";
function Ei(u, e, n) {
  u(e, n);
}
function Me(u) {
  const e = Ei.bind(
    void 0,
    u
  );
  e("sv-svg-bundle", Bi), e("popup-survey", He), e("survey-header", ts), e("sv-logo-image", Ti), e("survey-page", ns), e("survey-row", os), e("survey-question", us), e("survey-panel", vs), e("survey-element-header", cs), e("survey-string", gs), e("sv-string-viewer", hs), e("sv-string-editor", ws), e("sv-skeleton", Ls), e("sv-scroll", Ms), e("survey-text", Ss), e("survey-text-input", Bs), e("survey-checkbox", Ps), e("survey-checkbox-item", Ws), e("survey-radiogroup", Fs), e("survey-radiogroup-item", Us), e("survey-signaturepad", Gs), e("survey-html", Js), e("survey-image", e1), e("survey-expression", n1), e("survey-file", r1), e("sv-file-choose-btn", Li), e("sv-file-clean-btn", hi), e("sv-file-preview", ki), e("sv-file-page", $i), e("sv-file-item", Ni), e("sv-file-video", wi), e("survey-imagepicker", a1), e("survey-imagepicker-item", v1), e("survey-comment", C1), e("survey-dropdown", c1), e("sv-dropdown-select", q1), e("sv-dropdown-option-item", b1), e("sv-dropdown", M1), e("survey-tagbox", I1), e("sv-tagbox", R1), e("sv-tagbox-item", D1), e("sv-tagbox-filter", Z1), e("survey-ranking", A1), e("survey-ranking-item", O1), e("sv-ranking-item", z1), e("survey-rating", K1), e("sv-rating-item", X1), e("sv-rating-item-smiley", _1), e("sv-rating-item-star", sn), e("sv-rating-dropdown", ln), e("sv-rating-dropdown-item", rn), e("survey-boolean", un), e("sv-boolean-radio", dn), e("sv-boolean-radio-item", vn), e("sv-boolean-checkbox", qn), e("survey-multipletext", wn), e("survey-multipletext-item", kn), e("sv-breadcrumbs", fn), e("sv-single-input-summary", Sn), e("survey-slider", Bn), e("sv-slider-label-item", Zn), e("survey-matrix", Wn), e("survey-matrix-row", On), e("survey-matrix-cell", Qn), e("survey-matrixdropdown", Kn), e("survey-matrixtable", Xn), e("survey-matrixheaderrequired", Yn), e("survey-matrixdropdown-cell", xn), e("survey-matrixdynamic", et), e("survey-placeholder-matrixdynamic", st), e("sv-matrix-remove-button", tt), e("sv-matrix-drag-drop-icon", it), e("sv-matrix-detail-button", lt), e("survey-paneldynamic", ut), e("survey-paneldynamicprogress", mt), e("survey-paneldynamicprogress-v2", vt), e("survey-placeholder-paneldynamic", Ct), e("sv-paneldynamic-add-btn", gt), e("sv-paneldynamic-next-btn", ht), e("sv-paneldynamic-prev-btn", wt), e("sv-paneldynamic-remove-btn", Lt), e("sv-paneldynamic-progress-text", kt), e("sv-components-container", ko), e("sv-progress-buttons", To), e("sv-navigation-toc", Bo), e("sv-progress-pages", Y), e("sv-progress-questions", Y), e("sv-progress-correctquestions", Y), e("sv-progress-requiredquestions", Y), e("survey-errors", Ht), e("survey-question-comment", It), e("survey-element-title", Vt), e("survey-element-title-content", Zt), e("sv-title-actions", At), e("sv-brand-info", zt), e("sv-question-error", jt), e("sv-svg-icon", Kt), e("sv-action-bar", Gt), e("sv-action", Yt), e("sv-action-bar-item", eo), e("sv-action-bar-item-dropdown", to), e("sv-action-bar-separator", oo), e("sv-list", ao), e("sv-list-item-content", vo), e("sv-list-item-group", Co), e("sv-list-item", po), e("sv-popup", co), e("sv-popup-container", bo), e("popup-pointer", Lo), e("sv-notifier", zo), e("survey-other-choice", Qo), e("sv-nav-btn", jo), e("survey-customwidget", Xo), e("survey-popup-modal", Jo), e("survey-composite", ei), e("survey-custom", si), e("sv-timerpanel", oi), e("sv-loading-indicator", ri), e("sv-header", ai), e("sv-header-cell", mi), e("sv-header-mobile", ci), e("sv-template-renderer", yi), e("sv-character-counter", xo), e("sv-text-area", _o), e("survey-element", gi), e("survey-buttongroup", fi), e("sv-button-group-item", Vi), e("sv-buttongroup-dropdown", Si), e("survey", le);
}
Me(
  (u, e) => F.Instance.registerComponent(u, e)
);
var zi = {
  install(u) {
    u.component("SurveyComponent", le), u.component("PopupSurveyComponent", He), u.directive("key2click", Q), Me((e, n) => {
      u.component(e, n), F.Instance.registerComponent(e, e);
    });
  }
};
export {
  F as ComponentFactory,
  He as PopupSurveyComponent,
  le as SurveyComponent,
  m as SvComponent,
  Q as key2ClickDirective,
  zi as surveyPlugin,
  S as useBase,
  se as useComputedArray,
  U as useLocString,
  T as useQuestion
};
/*! Bundled license information:

survey-vue3-ui/survey-vue3-ui.es.js:
  (*!
   * surveyjs - Survey JavaScript library v2.3.1
   * Copyright (c) 2015-2025 Devsoft Baltic OÜ  - http://surveyjs.io/
   * License: MIT (http://www.opensource.org/licenses/mit-license.php)
   *)
*/
//# sourceMappingURL=survey-vue3-ui.js.map
