import{a as A}from"./index-Ca817Vow.js";import{aN as M,aR as z,cw as W,j as _,bl as P,bm as Y,aK as b,aG as $,aS as N,n as I,cx as X,bJ as q}from"./index-kdKfEdeI.js";import{_ as Z}from"./useDistrictsQuery-CeEXa47D.js";import{g as ee}from"./lodash-DAY8-RAI.js";import{_ as j}from"./tasks-DtSsBL6W.js";import{t as te,a6 as se}from"./tanstack-CsBZeLmk.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},o=new r.Error().stack;o&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[o]="4ac95d69-477b-43ec-941a-da6412defc68",r._sentryDebugIdIdentifier="sentry-dbid-4ac95d69-477b-43ec-941a-da6412defc68")}catch{}})();var re=M;function le(){var r=arguments,o=re(r[0]);return r.length<3?o:o.replace(r[1],r[2])}var ae=le;const ie=ee(ae),x=["name","assessmentPid","username","studentData","schools","classes","userType"],J=["assessments","assigningOrgs","completed","dateAssigned","dateClosed","dateOpened","id","legal","name","publicName","readOrgs","sequential","started"],K=({adminId:r,orgType:o,orgId:g,orgArray:h=[],aggregationQuery:l,pageLimit:D,page:S,paginate:w=!0,select:Q=J,filter:y={},orderBy:p=[],grades:a=[],isCollectionGroupQuery:n=!0})=>{const i={structuredQuery:{}};if(w&&(i.structuredQuery.limit=D,i.structuredQuery.offset=S*D),Q.length>0&&(i.structuredQuery.select={fields:Q.map(c=>({fieldPath:c}))}),i.structuredQuery.from=[{collectionId:"assignments",allDescendants:n}],r&&(g||h))i.structuredQuery.where={compositeFilter:{op:"AND",filters:[{fieldFilter:{field:{fieldPath:"id"},op:"EQUAL",value:{stringValue:r}}}]}},_(h)?i.structuredQuery.where.compositeFilter.filters.push({fieldFilter:{field:{fieldPath:`readOrgs.${q(o)}`},op:"ARRAY_CONTAINS",value:{stringValue:g}}}):i.structuredQuery.where.compositeFilter.filters.push({fieldFilter:{field:{fieldPath:`readOrgs.${q(o)}`},op:"ARRAY_CONTAINS_ANY",value:{arrayValue:{values:[h.map(c=>({stringValue:c}))]}}}}),_(a)||i.structuredQuery.where.compositeFilter.filters.push({fieldFilter:{field:{fieldPath:"userData.grade"},op:"IN",value:{arrayValue:{values:[...a.map(c=>({stringValue:c}))]}}}}),["Completed","Started","Assigned"].includes(y==null?void 0:y.value)?i.structuredQuery.where.compositeFilter.filters.push({fieldFilter:{field:{fieldPath:`progress.${y.taskId.replace(/-/g,"_")}`},op:"EQUAL",value:{stringValue:y.value.toLowerCase()}}}):_(y)||i.structuredQuery.where.compositeFilter.filters.push({fieldFilter:{field:{fieldPath:`userData.${y.field}`},op:"EQUAL",value:{stringValue:y.value}}});else{const c=new Date().toISOString();i.structuredQuery.where={fieldFilter:{field:{fieldPath:"dateClosed"},op:"GREATER_THAN_OR_EQUAL",value:{timestampValue:c}}}}return _(p)||(i.structuredQuery.orderBy=p),i},ue=({adminId:r,orgId:o,orgType:g,orgArray:h,filter:l,select:D=["scores","reliable","engagementFlags"],aggregationQuery:S,grades:w,paginate:Q=!0,page:y,pageLimit:p})=>{const a={structuredQuery:{}};return Q&&(a.structuredQuery.limit=p,a.structuredQuery.offset=y*p),a.structuredQuery.select={fields:D.map(n=>({fieldPath:n}))},a.structuredQuery.from=[{collectionId:"runs",allDescendants:!0}],a.structuredQuery.where={compositeFilter:{op:"AND",filters:[{fieldFilter:{field:{fieldPath:"assignmentId"},op:"EQUAL",value:{stringValue:r}}},{fieldFilter:{field:{fieldPath:"taskId"},op:"EQUAL",value:{stringValue:l.taskId}}},{fieldFilter:{field:{fieldPath:"bestRun"},op:"EQUAL",value:{booleanValue:!0}}}]}},_(h)?a.structuredQuery.where.compositeFilter.filters.push({fieldFilter:{field:{fieldPath:`readOrgs.${q(g)}`},op:"ARRAY_CONTAINS",value:{stringValue:o}}}):a.structuredQuery.where.compositeFilter.filters.push({fieldFilter:{field:{fieldPath:`readOrgs.${q(g)}`},op:"ARRAY_CONTAINS_ANY",value:{arrayValue:{values:[h.map(n=>({stringValue:n}))]}}}}),l&&(a.structuredQuery.where.compositeFilter.filters.push({compositeFilter:{op:"OR",filters:[{compositeFilter:{op:"AND",filters:[{compositeFilter:{op:"OR",filters:[{fieldFilter:{field:{fieldPath:"userData.schoolLevel"},op:"EQUAL",value:{stringValue:"elementary"}}},{fieldFilter:{field:{fieldPath:"userData.schoolLevel"},op:"EQUAL",value:{stringValue:"early-childhood"}}}]}}]}},{compositeFilter:{op:"AND",filters:[{compositeFilter:{op:"OR",filters:[{fieldFilter:{field:{fieldPath:"userData.schoolLevel"},op:"EQUAL",value:{stringValue:"middle"}}},{fieldFilter:{field:{fieldPath:"userData.schoolLevel"},op:"EQUAL",value:{stringValue:"high"}}},{fieldFilter:{field:{fieldPath:"userData.schoolLevel"},op:"Equal",value:{stringValue:"postsecondary"}}}]}}]}}]}}),l.value==="Green"?(a.structuredQuery.where.compositeFilter.filters[4].compositeFilter.filters[0].compositeFilter.filters.push({fieldFilter:{field:{fieldPath:l.field},op:"GREATER_THAN_OR_EQUAL",value:{doubleValue:50}}}),a.structuredQuery.where.compositeFilter.filters[4].compositeFilter.filters[1].compositeFilter.filters.push({fieldFilter:{field:{fieldPath:l.field},op:"GREATER_THAN_OR_EQUAL",value:{doubleValue:l.cutoffs.above}}})):l.value==="Yellow"?(a.structuredQuery.where.compositeFilter.filters[4].compositeFilter.filters[0].compositeFilter.filters.push({fieldFilter:{field:{fieldPath:l.field},op:"LESS_THAN",value:{doubleValue:50}}},{fieldFilter:{field:{fieldPath:l.field},op:"GREATER_THAN",value:{doubleValue:25}}}),a.structuredQuery.where.compositeFilter.filters[4].compositeFilter.filters[1].compositeFilter.filters.push({fieldFilter:{field:{fieldPath:l.field},op:"LESS_THAN",value:{doubleValue:l.cutoffs.above}}},{fieldFilter:{field:{fieldPath:l.field},op:"GREATER_THAN",value:{doubleValue:l.cutoffs.some}}})):l.value==="Pink"&&(a.structuredQuery.where.compositeFilter.filters[4].compositeFilter.filters[0].compositeFilter.filters.push({fieldFilter:{field:{fieldPath:l.field},op:"LESS_THAN_OR_EQUAL",value:{doubleValue:25}}}),a.structuredQuery.where.compositeFilter.filters[4].compositeFilter.filters[1].compositeFilter.filters.push({fieldFilter:{field:{fieldPath:l.field},op:"LESS_THAN_OR_EQUAL",value:{doubleValue:l.cutoffs.some}}})),_(w)||a.structuredQuery.where.compositeFilter.filters.push({fieldFilter:{field:{fieldPath:"userData.grade"},op:"IN",value:{arrayValue:{values:[...w.map(n=>({stringValue:n}))]}}}})),a},ne=async(r,o,g,h,l,D=!1,S=void 0,w=!0,Q=[],y=[])=>{const p=z(),a=W();let n=null,i=null,c=null;if(Q==null||Q.forEach(m=>{if(m.collection==="schools")i=m;else if(m.collection==="grade")c=m;else if(m.collection!=="schools"){if(n)throw new Error("You may specify at most one filter");n=m}}),n&&n.collection==="scores"){let m=null,E=null;i&&i.collection==="schools"&&!_(i.value)&&(m=i.value),c&&c.collection==="grade"&&(E=c.value);const L=ue({adminId:r,orgType:m?"school":o,orgId:m?null:g,orgArray:m,filter:n,aggregationQuery:!1,grades:E,paginate:!0,page:l.value,pageLimit:h.value});return console.log(`Fetching page ${l.value} for ${r} with filter ${Q[0].value} on field ${Q[0].field}`),p.post(`${P()}:runQuery`,L).then(async({data:O})=>{const R=Y(O,!0),T=j(b(O.map(e=>{var t;if((t=e.document)!=null&&t.name)return ie(e.document.name.split("/runs/")[0],a,a)}),void 0)),G=await p.post(`${P()}:batchGet`,{documents:T,mask:{fieldPaths:x}}).then(({data:e})=>b(e.map(({found:t})=>{if(t)return{name:t.name,userId:t.name.split("/users/")[1],data:$(t.fields,s=>N(s))}}),void 0)),B=T.map(e=>`${e}/assignments/${r}`),k=await p.post(`${P()}:batchGet`,{documents:B,mask:{fieldPaths:J}}).then(({data:e})=>b(e.map(({found:t})=>{if(t)return{name:t.name,userId:t.name.split("/users/")[1].split("/")[0],data:$(t.fields,s=>N(s))}}),void 0)),U=[],F=k.map(e=>{const t=b(e.data.assessments.map(s=>{const u=s.runId,f=I(A(R,{id:u}),"scores"),V=I(A(R,{id:u}),"reliable"),C=I(A(R,{id:u}),"engagementFlags");if(!f&&u){const H=`projects/${a}/databases/(default)/documents/users/${e.userId}/runs/${u}`;U.push(H)}return{...s,scores:f,reliable:V,engagementFlags:C}}),void 0);return{userId:e.userId,data:{...e.data,assessments:t}}}),d=await p.post(`${P()}:batchGet`,{documents:U,mask:{fieldPaths:["scores","reliable","engagementFlags"]}}).then(({data:e})=>b(e.map(({found:t})=>{if(t)return{id:t.name.split("/runs/")[1],...$(t.fields,s=>N(s))}}),void 0)),v=F.map(e=>{const t=e.data.assessments.map(s=>{const u=s.runId,f=I(A(d,{id:u}),"scores"),V=I(A(d,{id:u}),"reliable"),C=I(A(d,{id:u}),"engagementFlags");return f?{...s,scores:f,reliable:V,engagementFlags:C}:s});return{userId:e.userId,data:{...e.data,assessments:t}}});return b(O.map(e=>{if(I(e,"document")){const t=e.document.name.split("/users/")[1].split("/runs/")[0],s=A(v,{userId:t}),u=A(G,{userId:t});return{user:{...u.data,userId:u.userId},assignment:s.data}}else return}),void 0)})}else{let m=null,E=null,L=null;n&&n.collection==="users"&&(n.field==="grade"?L=n.value:m=n),i&&i.collection==="schools"&&!_(i.value)&&(E=i.value),c&&c.collection==="grade"&&(L=c.value);const O=K({adminId:r,orgType:E?"school":o,orgId:E?null:g,orgArray:E,aggregationQuery:!1,pageLimit:h.value,page:l.value,paginate:w,select:S,filter:m||n,grades:L,orderBy:te(y)});return console.log(`Fetching page ${l.value} for ${r}`),p.post(`${P()}:runQuery`,O).then(async({data:R})=>{const T=Y(R,!0),G=j(b(R.map(F=>{var d;if((d=F.document)!=null&&d.name)return F.document.name.split("/assignments/")[0]}),void 0)),B=await p.post(`${P()}:batchGet`,{documents:G,mask:{fieldPaths:x}}).then(({data:F})=>b(F.map(({found:d})=>{if(d){const v=d.name.split("/users/")[1];return{name:d.name,data:{...$(d.fields,e=>N(e)),userId:v}}}}),void 0));let k=[];console.log("adminId: ",r),k=await Promise.all(G.map(async F=>{const d=F.split("/users/")[1],v={structuredQuery:{from:[{collectionId:"surveyResponses"}],where:{fieldFilter:{field:{fieldPath:"administrationId"},op:"EQUAL",value:{stringValue:r}}}}};try{const{data:e}=await p.post(`${P()}/users/${d}:runQuery`,v),t=e.filter(s=>s.document).map(s=>({name:s.document.name,...$(s.document.fields,u=>N(u))}));return t.length>0?t[0]:null}catch(e){return console.error("Error fetching survey response: ",e),null}}));const U=T.map((F,d)=>{var s,u;const v=B.find(f=>f.name.includes(F.parentDoc)),e=k[d];let t="assigned";if(e){if(v.data.userType==="student")t=(s=e.general)!=null&&s.isComplete?"completed":"started";else if(["parent","teacher"].includes(v.data.userType)){const f=((u=e.general)==null?void 0:u.isComplete)||!1,V=(e==null?void 0:e.specific)||[];if(V.length>0){const C=V.every(H=>H.isComplete===!0);t=f&&C?"completed":"started"}else t="started"}}return{assignment:F,user:v.data,roarUid:v.name.split("/users/")[1],survey:{progress:t,...e}}});if(D){const F=X(T.map(e=>b(e.assessments.map(s=>s.runId),void 0).map(s=>`${P()}/runs/${s}`))),d=await p.post(`${P()}:batchGet`,{documents:F,mask:{fieldPaths:["scores","reliable","engagementFlags"]}}).then(({data:e})=>b(e.map(({found:t})=>{if(t)return{name:t.name,data:$(t.fields,s=>N(s))}}),void 0)),v=Z(d,e=>e.name.split("/users/")[1].split("/runs/")[0]);for(const e of U){const t=v[e.roarUid];for(const s of e.assignment.assessments){const u=s.runId;s.scores=I(A(t,f=>f.name.includes(u)),"data.scores"),s.reliable=I(A(t,f=>f.name.includes(u)),"data.reliable"),s.engagementFlags=I(A(t,f=>f.name.includes(u)),"data.engagementFlags")}}}return U})}},ge=async r=>{const o=z(),g=K({aggregationQuery:!1,paginate:!1,isCollectionGroupQuery:!1}),h=se(r);return await o.post(`${P()}/users/${h}:runQuery`,g).then(async({data:l})=>Y(l).filter(w=>new Date(w.dateOpened)<=new Date))},he=async(r,o,g,h=!1)=>await ne(r,o,g,{value:2**31-1},{value:0},h,!0,!0);export{he as a,ge as g};
//# sourceMappingURL=assignments-orZosl8K.js.map
