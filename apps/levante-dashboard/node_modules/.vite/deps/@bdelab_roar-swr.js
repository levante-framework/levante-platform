import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  require_crypto_browserify
} from "./chunk-XYVVPIYZ.js";
import {
  require_path_browserify,
  require_stream_browserify
} from "./chunk-BF6HGYRN.js";
import "./chunk-MFYSFUSL.js";
import {
  __publicField,
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-QX3VWGKS.js";

// ../../node_modules/@bdelab/roar-swr/lib/index.c3c86661.js
var import_dist = __toESM(require_dist());
var import_dist2 = __toESM(require_dist2());
var import_dist3 = __toESM(require_dist3());
var import_path = __toESM(require_path_browserify());
var import_stream = __toESM(require_stream_browserify());
!function() {
  try {
    var e8 = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {}, n2 = new e8.Error().stack;
    n2 && (e8._sentryDebugIds = e8._sentryDebugIds || {}, e8._sentryDebugIds[n2] = "a42d7e1e-9fad-4d06-ada4-66ef4ddea713", e8._sentryDebugIdIdentifier = "sentry-dbid-a42d7e1e-9fad-4d06-ada4-66ef4ddea713");
  } catch (e9) {
  }
}();
("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {}).SENTRY_RELEASE = { id: "6e66cafcf6e61ba8a720da4d2368e0a7e60235ad" };
var r = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
function t(e8) {
  return e8 && e8.__esModule && Object.prototype.hasOwnProperty.call(e8, "default") ? e8.default : e8;
}
var o;
var n = { exports: {} };
o = n, function(e8, a2) {
  var r2 = { version: "2.14.3", areas: {}, apis: {}, nsdelim: ".", inherit: function(e9, a3) {
    for (var r3 in e9) a3.hasOwnProperty(r3) || Object.defineProperty(a3, r3, Object.getOwnPropertyDescriptor(e9, r3));
    return a3;
  }, stringify: function(e9, a3) {
    return void 0 === e9 || "function" == typeof e9 ? e9 + "" : JSON.stringify(e9, a3 || r2.replace);
  }, parse: function(e9, a3) {
    try {
      return JSON.parse(e9, a3 || r2.revive);
    } catch (a4) {
      return e9;
    }
  }, fn: function(e9, a3) {
    for (var t3 in r2.storeAPI[e9] = a3, r2.apis) r2.apis[t3][e9] = a3;
  }, get: function(e9, a3) {
    return e9.getItem(a3);
  }, set: function(e9, a3, r3) {
    e9.setItem(a3, r3);
  }, remove: function(e9, a3) {
    e9.removeItem(a3);
  }, key: function(e9, a3) {
    return e9.key(a3);
  }, length: function(e9) {
    return e9.length;
  }, clear: function(e9) {
    e9.clear();
  }, Store: function(e9, a3, t3) {
    var o2 = r2.inherit(r2.storeAPI, function(e10, a4, r3) {
      return 0 === arguments.length ? o2.getAll() : "function" == typeof a4 ? o2.transact(e10, a4, r3) : void 0 !== a4 ? o2.set(e10, a4, r3) : "string" == typeof e10 || "number" == typeof e10 ? o2.get(e10) : "function" == typeof e10 ? o2.each(e10) : e10 ? o2.setAll(e10, a4) : o2.clear();
    });
    o2._id = e9;
    try {
      var n2 = "__store2_test";
      a3.setItem(n2, "ok"), o2._area = a3, a3.removeItem(n2);
    } catch (e10) {
      o2._area = r2.storage("fake");
    }
    return o2._ns = t3 || "", r2.areas[e9] || (r2.areas[e9] = o2._area), r2.apis[o2._ns + o2._id] || (r2.apis[o2._ns + o2._id] = o2), o2;
  }, storeAPI: { area: function(e9, a3) {
    var t3 = this[e9];
    return t3 && t3.area || (t3 = r2.Store(e9, a3, this._ns), this[e9] || (this[e9] = t3)), t3;
  }, namespace: function(e9, a3, t3) {
    if (t3 = t3 || this._delim || r2.nsdelim, !e9) return this._ns ? this._ns.substring(0, this._ns.length - t3.length) : "";
    var o2 = e9, n2 = this[o2];
    if (!(n2 && n2.namespace || ((n2 = r2.Store(this._id, this._area, this._ns + o2 + t3))._delim = t3, this[o2] || (this[o2] = n2), a3))) for (var s2 in r2.areas) n2.area(s2, r2.areas[s2]);
    return n2;
  }, isFake: function(e9) {
    return e9 ? (this._real = this._area, this._area = r2.storage("fake")) : false === e9 && (this._area = this._real || this._area), "fake" === this._area.name;
  }, toString: function() {
    return "store" + (this._ns ? "." + this.namespace() : "") + "[" + this._id + "]";
  }, has: function(e9) {
    return this._area.has ? this._area.has(this._in(e9)) : !!(this._in(e9) in this._area);
  }, size: function() {
    return this.keys().length;
  }, each: function(e9, a3) {
    for (var t3 = 0, o2 = r2.length(this._area); t3 < o2; t3++) {
      var n2 = this._out(r2.key(this._area, t3));
      if (void 0 !== n2 && false === e9.call(this, n2, this.get(n2), a3)) break;
      o2 > r2.length(this._area) && (o2--, t3--);
    }
    return a3 || this;
  }, keys: function(e9) {
    return this.each(function(e10, a3, r3) {
      r3.push(e10);
    }, e9 || []);
  }, get: function(e9, a3) {
    var t3, o2 = r2.get(this._area, this._in(e9));
    return "function" == typeof a3 && (t3 = a3, a3 = null), null !== o2 ? r2.parse(o2, t3) : null != a3 ? a3 : o2;
  }, getAll: function(e9) {
    return this.each(function(e10, a3, r3) {
      r3[e10] = a3;
    }, e9 || {});
  }, transact: function(e9, a3, r3) {
    var t3 = this.get(e9, r3), o2 = a3(t3);
    return this.set(e9, void 0 === o2 ? t3 : o2), this;
  }, set: function(e9, a3, t3) {
    var o2, n2 = this.get(e9);
    return null != n2 && false === t3 ? a3 : ("function" == typeof t3 && (o2 = t3, t3 = void 0), r2.set(this._area, this._in(e9), r2.stringify(a3, o2), t3) || n2);
  }, setAll: function(e9, a3) {
    var r3, t3;
    for (var o2 in e9) t3 = e9[o2], this.set(o2, t3, a3) !== t3 && (r3 = true);
    return r3;
  }, add: function(e9, a3, t3) {
    var o2 = this.get(e9);
    if (o2 instanceof Array) a3 = o2.concat(a3);
    else if (null !== o2) {
      var n2 = typeof o2;
      if (n2 === typeof a3 && "object" === n2) {
        for (var s2 in a3) o2[s2] = a3[s2];
        a3 = o2;
      } else a3 = o2 + a3;
    }
    return r2.set(this._area, this._in(e9), r2.stringify(a3, t3)), a3;
  }, remove: function(e9, a3) {
    var t3 = this.get(e9, a3);
    return r2.remove(this._area, this._in(e9)), t3;
  }, clear: function() {
    return this._ns ? this.each(function(e9) {
      r2.remove(this._area, this._in(e9));
    }, 1) : r2.clear(this._area), this;
  }, clearAll: function() {
    var e9 = this._area;
    for (var a3 in r2.areas) r2.areas.hasOwnProperty(a3) && (this._area = r2.areas[a3], this.clear());
    return this._area = e9, this;
  }, _in: function(e9) {
    return "string" != typeof e9 && (e9 = r2.stringify(e9)), this._ns ? this._ns + e9 : e9;
  }, _out: function(e9) {
    return this._ns ? e9 && 0 === e9.indexOf(this._ns) ? e9.substring(this._ns.length) : void 0 : e9;
  } }, storage: function(e9) {
    return r2.inherit(r2.storageAPI, { items: {}, name: e9 });
  }, storageAPI: { length: 0, has: function(e9) {
    return this.items.hasOwnProperty(e9);
  }, key: function(e9) {
    var a3 = 0;
    for (var r3 in this.items) if (this.has(r3) && e9 === a3++) return r3;
  }, setItem: function(e9, a3) {
    this.has(e9) || this.length++, this.items[e9] = a3;
  }, removeItem: function(e9) {
    this.has(e9) && (delete this.items[e9], this.length--);
  }, getItem: function(e9) {
    return this.has(e9) ? this.items[e9] : null;
  }, clear: function() {
    for (var e9 in this.items) this.removeItem(e9);
  } } }, t2 = r2.Store("local", function() {
    try {
      return localStorage;
    } catch (e9) {
    }
  }());
  t2.local = t2, t2._ = r2, t2.area("session", function() {
    try {
      return sessionStorage;
    } catch (e9) {
    }
  }()), t2.area("page", r2.storage("page")), "function" == typeof a2 && void 0 !== a2.amd ? a2("store2", [], function() {
    return t2;
  }) : o.exports ? o.exports = t2 : (e8.store && (r2.conflict = e8.store), e8.store = t2);
}(r, r && r.define);
var s = t(n.exports);
var i = function() {
  this.__data__ = [], this.size = 0;
};
var d = function(e8, a2) {
  return e8 === a2 || e8 != e8 && a2 != a2;
};
var c = d;
var u = function(e8, a2) {
  for (var r2 = e8.length; r2--; ) if (c(e8[r2][0], a2)) return r2;
  return -1;
};
var l = u;
var p = Array.prototype.splice;
var m = function(e8) {
  var a2 = this.__data__, r2 = l(a2, e8);
  return !(r2 < 0) && (r2 == a2.length - 1 ? a2.pop() : p.call(a2, r2, 1), --this.size, true);
};
var h = u;
var f = function(e8) {
  var a2 = this.__data__, r2 = h(a2, e8);
  return r2 < 0 ? void 0 : a2[r2][1];
};
var v = u;
var g = function(e8) {
  return v(this.__data__, e8) > -1;
};
var b = u;
var w = function(e8, a2) {
  var r2 = this.__data__, t2 = b(r2, e8);
  return t2 < 0 ? (++this.size, r2.push([e8, a2])) : r2[t2][1] = a2, this;
};
var y = i;
var x = m;
var _ = f;
var I = g;
var k = w;
function S(e8) {
  var a2 = -1, r2 = null == e8 ? 0 : e8.length;
  for (this.clear(); ++a2 < r2; ) {
    var t2 = e8[a2];
    this.set(t2[0], t2[1]);
  }
}
S.prototype.clear = y, S.prototype.delete = x, S.prototype.get = _, S.prototype.has = I, S.prototype.set = k;
var T = S;
var E = T;
var j = function() {
  this.__data__ = new E(), this.size = 0;
};
var O = function(e8) {
  var a2 = this.__data__, r2 = a2.delete(e8);
  return this.size = a2.size, r2;
};
var A = function(e8) {
  return this.__data__.get(e8);
};
var C = function(e8) {
  return this.__data__.has(e8);
};
var R = "object" == typeof r && r && r.Object === Object && r;
var N = R;
var P = "object" == typeof self && self && self.Object === Object && self;
var M = N || P || Function("return this")();
var L = M.Symbol;
var D = L;
var z = Object.prototype;
var F = z.hasOwnProperty;
var B = z.toString;
var q = D ? D.toStringTag : void 0;
var $ = function(e8) {
  var a2 = F.call(e8, q), r2 = e8[q];
  try {
    e8[q] = void 0;
    var t2 = true;
  } catch (e9) {
  }
  var o2 = B.call(e8);
  return t2 && (a2 ? e8[q] = r2 : delete e8[q]), o2;
};
var U = Object.prototype.toString;
var H = $;
var W = function(e8) {
  return U.call(e8);
};
var K = L ? L.toStringTag : void 0;
var V = function(e8) {
  return null == e8 ? void 0 === e8 ? "[object Undefined]" : "[object Null]" : K && K in Object(e8) ? H(e8) : W(e8);
};
var G = function(e8) {
  var a2 = typeof e8;
  return null != e8 && ("object" == a2 || "function" == a2);
};
var Y = V;
var J = G;
var X;
var Q = function(e8) {
  if (!J(e8)) return false;
  var a2 = Y(e8);
  return "[object Function]" == a2 || "[object GeneratorFunction]" == a2 || "[object AsyncFunction]" == a2 || "[object Proxy]" == a2;
};
var Z = M["__core-js_shared__"];
var ee = (X = /[^.]+$/.exec(Z && Z.keys && Z.keys.IE_PROTO || "")) ? "Symbol(src)_1." + X : "";
var ae = function(e8) {
  return !!ee && ee in e8;
};
var re = Function.prototype.toString;
var te = function(e8) {
  if (null != e8) {
    try {
      return re.call(e8);
    } catch (e9) {
    }
    try {
      return e8 + "";
    } catch (e9) {
    }
  }
  return "";
};
var oe = Q;
var ne = ae;
var se = G;
var ie = te;
var de = /^\[object .+?Constructor\]$/;
var ce = Function.prototype;
var ue = Object.prototype;
var le = ce.toString;
var pe = ue.hasOwnProperty;
var me = RegExp("^" + le.call(pe).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
var he = function(e8, a2) {
  return null == e8 ? void 0 : e8[a2];
};
var fe = function(e8) {
  return !(!se(e8) || ne(e8)) && (oe(e8) ? me : de).test(ie(e8));
};
var ve = he;
var ge = function(e8, a2) {
  var r2 = ve(e8, a2);
  return fe(r2) ? r2 : void 0;
};
var be = ge(M, "Map");
var we = ge(Object, "create");
var ye = we;
var xe = function() {
  this.__data__ = ye ? ye(null) : {}, this.size = 0;
};
var _e = function(e8) {
  var a2 = this.has(e8) && delete this.__data__[e8];
  return this.size -= a2 ? 1 : 0, a2;
};
var Ie = we;
var ke = Object.prototype.hasOwnProperty;
var Se = function(e8) {
  var a2 = this.__data__;
  if (Ie) {
    var r2 = a2[e8];
    return "__lodash_hash_undefined__" === r2 ? void 0 : r2;
  }
  return ke.call(a2, e8) ? a2[e8] : void 0;
};
var Te = we;
var Ee = Object.prototype.hasOwnProperty;
var je = function(e8) {
  var a2 = this.__data__;
  return Te ? void 0 !== a2[e8] : Ee.call(a2, e8);
};
var Oe = we;
var Ae = function(e8, a2) {
  var r2 = this.__data__;
  return this.size += this.has(e8) ? 0 : 1, r2[e8] = Oe && void 0 === a2 ? "__lodash_hash_undefined__" : a2, this;
};
var Ce = xe;
var Re = _e;
var Ne = Se;
var Pe = je;
var Me = Ae;
function Le(e8) {
  var a2 = -1, r2 = null == e8 ? 0 : e8.length;
  for (this.clear(); ++a2 < r2; ) {
    var t2 = e8[a2];
    this.set(t2[0], t2[1]);
  }
}
Le.prototype.clear = Ce, Le.prototype.delete = Re, Le.prototype.get = Ne, Le.prototype.has = Pe, Le.prototype.set = Me;
var De = Le;
var ze = T;
var Fe = be;
var Be = function(e8) {
  var a2 = typeof e8;
  return "string" == a2 || "number" == a2 || "symbol" == a2 || "boolean" == a2 ? "__proto__" !== e8 : null === e8;
};
var qe = function(e8, a2) {
  var r2 = e8.__data__;
  return Be(a2) ? r2["string" == typeof a2 ? "string" : "hash"] : r2.map;
};
var $e = qe;
var Ue = function(e8) {
  var a2 = $e(this, e8).delete(e8);
  return this.size -= a2 ? 1 : 0, a2;
};
var He = qe;
var We = function(e8) {
  return He(this, e8).get(e8);
};
var Ke = qe;
var Ve = function(e8) {
  return Ke(this, e8).has(e8);
};
var Ge = qe;
var Ye = function(e8, a2) {
  var r2 = Ge(this, e8), t2 = r2.size;
  return r2.set(e8, a2), this.size += r2.size == t2 ? 0 : 1, this;
};
var Je = function() {
  this.size = 0, this.__data__ = { hash: new De(), map: new (Fe || ze)(), string: new De() };
};
var Xe = Ue;
var Qe = We;
var Ze = Ve;
var ea = Ye;
function aa(e8) {
  var a2 = -1, r2 = null == e8 ? 0 : e8.length;
  for (this.clear(); ++a2 < r2; ) {
    var t2 = e8[a2];
    this.set(t2[0], t2[1]);
  }
}
aa.prototype.clear = Je, aa.prototype.delete = Xe, aa.prototype.get = Qe, aa.prototype.has = Ze, aa.prototype.set = ea;
var ra = aa;
var ta = T;
var oa = be;
var na = ra;
var sa = function(e8, a2) {
  var r2 = this.__data__;
  if (r2 instanceof ta) {
    var t2 = r2.__data__;
    if (!oa || t2.length < 199) return t2.push([e8, a2]), this.size = ++r2.size, this;
    r2 = this.__data__ = new na(t2);
  }
  return r2.set(e8, a2), this.size = r2.size, this;
};
var ia = T;
var da = j;
var ca = O;
var ua = A;
var la = C;
var pa = sa;
function ma(e8) {
  var a2 = this.__data__ = new ia(e8);
  this.size = a2.size;
}
ma.prototype.clear = da, ma.prototype.delete = ca, ma.prototype.get = ua, ma.prototype.has = la, ma.prototype.set = pa;
var ha = ma;
var fa = ra;
var va = function(e8) {
  return this.__data__.set(e8, "__lodash_hash_undefined__"), this;
};
var ga = function(e8) {
  return this.__data__.has(e8);
};
function ba(e8) {
  var a2 = -1, r2 = null == e8 ? 0 : e8.length;
  for (this.__data__ = new fa(); ++a2 < r2; ) this.add(e8[a2]);
}
ba.prototype.add = ba.prototype.push = va, ba.prototype.has = ga;
var wa = function(e8, a2) {
  return e8.has(a2);
};
var ya = ba;
var xa = function(e8, a2) {
  for (var r2 = -1, t2 = null == e8 ? 0 : e8.length; ++r2 < t2; ) if (a2(e8[r2], r2, e8)) return true;
  return false;
};
var _a = wa;
var Ia = function(e8, a2, r2, t2, o2, n2) {
  var s2 = 1 & r2, i2 = e8.length, d2 = a2.length;
  if (i2 != d2 && !(s2 && d2 > i2)) return false;
  var c2 = n2.get(e8), u2 = n2.get(a2);
  if (c2 && u2) return c2 == a2 && u2 == e8;
  var l2 = -1, p2 = true, m2 = 2 & r2 ? new ya() : void 0;
  for (n2.set(e8, a2), n2.set(a2, e8); ++l2 < i2; ) {
    var h2 = e8[l2], f2 = a2[l2];
    if (t2) var v2 = s2 ? t2(f2, h2, l2, a2, e8, n2) : t2(h2, f2, l2, e8, a2, n2);
    if (void 0 !== v2) {
      if (v2) continue;
      p2 = false;
      break;
    }
    if (m2) {
      if (!xa(a2, function(e9, a3) {
        if (!_a(m2, a3) && (h2 === e9 || o2(h2, e9, r2, t2, n2))) return m2.push(a3);
      })) {
        p2 = false;
        break;
      }
    } else if (h2 !== f2 && !o2(h2, f2, r2, t2, n2)) {
      p2 = false;
      break;
    }
  }
  return n2.delete(e8), n2.delete(a2), p2;
};
var ka = M.Uint8Array;
var Sa = function(e8) {
  var a2 = -1, r2 = Array(e8.size);
  return e8.forEach(function(e9, t2) {
    r2[++a2] = [t2, e9];
  }), r2;
};
var Ta = ka;
var Ea = d;
var ja = Ia;
var Oa = Sa;
var Aa = function(e8) {
  var a2 = -1, r2 = Array(e8.size);
  return e8.forEach(function(e9) {
    r2[++a2] = e9;
  }), r2;
};
var Ca = L ? L.prototype : void 0;
var Ra = Ca ? Ca.valueOf : void 0;
var Na = function(e8, a2, r2, t2, o2, n2, s2) {
  switch (r2) {
    case "[object DataView]":
      if (e8.byteLength != a2.byteLength || e8.byteOffset != a2.byteOffset) return false;
      e8 = e8.buffer, a2 = a2.buffer;
    case "[object ArrayBuffer]":
      return !(e8.byteLength != a2.byteLength || !n2(new Ta(e8), new Ta(a2)));
    case "[object Boolean]":
    case "[object Date]":
    case "[object Number]":
      return Ea(+e8, +a2);
    case "[object Error]":
      return e8.name == a2.name && e8.message == a2.message;
    case "[object RegExp]":
    case "[object String]":
      return e8 == a2 + "";
    case "[object Map]":
      var i2 = Oa;
    case "[object Set]":
      var d2 = 1 & t2;
      if (i2 || (i2 = Aa), e8.size != a2.size && !d2) return false;
      var c2 = s2.get(e8);
      if (c2) return c2 == a2;
      t2 |= 2, s2.set(e8, a2);
      var u2 = ja(i2(e8), i2(a2), t2, o2, n2, s2);
      return s2.delete(e8), u2;
    case "[object Symbol]":
      if (Ra) return Ra.call(e8) == Ra.call(a2);
  }
  return false;
};
var Pa = function(e8, a2) {
  for (var r2 = -1, t2 = a2.length, o2 = e8.length; ++r2 < t2; ) e8[o2 + r2] = a2[r2];
  return e8;
};
var Ma = Array.isArray;
var La = Pa;
var Da = Ma;
var za = function(e8, a2, r2) {
  var t2 = a2(e8);
  return Da(e8) ? t2 : La(t2, r2(e8));
};
var Fa = function() {
  return [];
};
var Ba = function(e8, a2) {
  for (var r2 = -1, t2 = null == e8 ? 0 : e8.length, o2 = 0, n2 = []; ++r2 < t2; ) {
    var s2 = e8[r2];
    a2(s2, r2, e8) && (n2[o2++] = s2);
  }
  return n2;
};
var qa = Fa;
var $a = Object.prototype.propertyIsEnumerable;
var Ua = Object.getOwnPropertySymbols;
var Ha = Ua ? function(e8) {
  return null == e8 ? [] : (e8 = Object(e8), Ba(Ua(e8), function(a2) {
    return $a.call(e8, a2);
  }));
} : qa;
var Wa = function(e8, a2) {
  for (var r2 = -1, t2 = Array(e8); ++r2 < e8; ) t2[r2] = a2(r2);
  return t2;
};
var Ka = function(e8) {
  return null != e8 && "object" == typeof e8;
};
var Va = V;
var Ga = Ka;
var Ya = function(e8) {
  return Ga(e8) && "[object Arguments]" == Va(e8);
};
var Ja = Ka;
var Xa = Object.prototype;
var Qa = Xa.hasOwnProperty;
var Za = Xa.propertyIsEnumerable;
var er = Ya(/* @__PURE__ */ function() {
  return arguments;
}()) ? Ya : function(e8) {
  return Ja(e8) && Qa.call(e8, "callee") && !Za.call(e8, "callee");
};
var ar = { exports: {} };
var rr = function() {
  return false;
};
!function(e8, a2) {
  var r2 = M, t2 = rr, o2 = a2 && !a2.nodeType && a2, n2 = o2 && e8 && !e8.nodeType && e8, s2 = n2 && n2.exports === o2 ? r2.Buffer : void 0, i2 = (s2 ? s2.isBuffer : void 0) || t2;
  e8.exports = i2;
}(ar, ar.exports);
var tr = ar.exports;
var or = /^(?:0|[1-9]\d*)$/;
var nr = function(e8, a2) {
  var r2 = typeof e8;
  return !!(a2 = null == a2 ? 9007199254740991 : a2) && ("number" == r2 || "symbol" != r2 && or.test(e8)) && e8 > -1 && e8 % 1 == 0 && e8 < a2;
};
var sr = function(e8) {
  return "number" == typeof e8 && e8 > -1 && e8 % 1 == 0 && e8 <= 9007199254740991;
};
var ir = V;
var dr = sr;
var cr = Ka;
var ur = {};
ur["[object Float32Array]"] = ur["[object Float64Array]"] = ur["[object Int8Array]"] = ur["[object Int16Array]"] = ur["[object Int32Array]"] = ur["[object Uint8Array]"] = ur["[object Uint8ClampedArray]"] = ur["[object Uint16Array]"] = ur["[object Uint32Array]"] = true, ur["[object Arguments]"] = ur["[object Array]"] = ur["[object ArrayBuffer]"] = ur["[object Boolean]"] = ur["[object DataView]"] = ur["[object Date]"] = ur["[object Error]"] = ur["[object Function]"] = ur["[object Map]"] = ur["[object Number]"] = ur["[object Object]"] = ur["[object RegExp]"] = ur["[object Set]"] = ur["[object String]"] = ur["[object WeakMap]"] = false;
var lr = function(e8) {
  return cr(e8) && dr(e8.length) && !!ur[ir(e8)];
};
var pr = function(e8) {
  return function(a2) {
    return e8(a2);
  };
};
var mr = { exports: {} };
!function(e8, a2) {
  var r2 = R, t2 = a2 && !a2.nodeType && a2, o2 = t2 && e8 && !e8.nodeType && e8, n2 = o2 && o2.exports === t2 && r2.process, s2 = function() {
    try {
      var e9 = o2 && o2.require && o2.require("util").types;
      return e9 || n2 && n2.binding && n2.binding("util");
    } catch (e10) {
    }
  }();
  e8.exports = s2;
}(mr, mr.exports);
var hr = mr.exports;
var fr = lr;
var vr = pr;
var gr = hr && hr.isTypedArray;
var br = gr ? vr(gr) : fr;
var wr = Wa;
var yr = er;
var xr = Ma;
var _r = tr;
var Ir = nr;
var kr = br;
var Sr = Object.prototype.hasOwnProperty;
var Tr = function(e8, a2) {
  var r2 = xr(e8), t2 = !r2 && yr(e8), o2 = !r2 && !t2 && _r(e8), n2 = !r2 && !t2 && !o2 && kr(e8), s2 = r2 || t2 || o2 || n2, i2 = s2 ? wr(e8.length, String) : [], d2 = i2.length;
  for (var c2 in e8) !a2 && !Sr.call(e8, c2) || s2 && ("length" == c2 || o2 && ("offset" == c2 || "parent" == c2) || n2 && ("buffer" == c2 || "byteLength" == c2 || "byteOffset" == c2) || Ir(c2, d2)) || i2.push(c2);
  return i2;
};
var Er = Object.prototype;
var jr = function(e8) {
  var a2 = e8 && e8.constructor;
  return e8 === ("function" == typeof a2 && a2.prototype || Er);
};
var Or = function(e8, a2) {
  return function(r2) {
    return e8(a2(r2));
  };
};
var Ar = Or(Object.keys, Object);
var Cr = jr;
var Rr = Ar;
var Nr = Object.prototype.hasOwnProperty;
var Pr = function(e8) {
  if (!Cr(e8)) return Rr(e8);
  var a2 = [];
  for (var r2 in Object(e8)) Nr.call(e8, r2) && "constructor" != r2 && a2.push(r2);
  return a2;
};
var Mr = Q;
var Lr = sr;
var Dr = function(e8) {
  return null != e8 && Lr(e8.length) && !Mr(e8);
};
var zr = Tr;
var Fr = Pr;
var Br = Dr;
var qr = function(e8) {
  return Br(e8) ? zr(e8) : Fr(e8);
};
var $r = za;
var Ur = Ha;
var Hr = qr;
var Wr = function(e8) {
  return $r(e8, Hr, Ur);
};
var Kr = Wr;
var Vr = Object.prototype.hasOwnProperty;
var Gr = function(e8, a2, r2, t2, o2, n2) {
  var s2 = 1 & r2, i2 = Kr(e8), d2 = i2.length;
  if (d2 != Kr(a2).length && !s2) return false;
  for (var c2 = d2; c2--; ) {
    var u2 = i2[c2];
    if (!(s2 ? u2 in a2 : Vr.call(a2, u2))) return false;
  }
  var l2 = n2.get(e8), p2 = n2.get(a2);
  if (l2 && p2) return l2 == a2 && p2 == e8;
  var m2 = true;
  n2.set(e8, a2), n2.set(a2, e8);
  for (var h2 = s2; ++c2 < d2; ) {
    var f2 = e8[u2 = i2[c2]], v2 = a2[u2];
    if (t2) var g2 = s2 ? t2(v2, f2, u2, a2, e8, n2) : t2(f2, v2, u2, e8, a2, n2);
    if (!(void 0 === g2 ? f2 === v2 || o2(f2, v2, r2, t2, n2) : g2)) {
      m2 = false;
      break;
    }
    h2 || (h2 = "constructor" == u2);
  }
  if (m2 && !h2) {
    var b2 = e8.constructor, w2 = a2.constructor;
    b2 == w2 || !("constructor" in e8) || !("constructor" in a2) || "function" == typeof b2 && b2 instanceof b2 && "function" == typeof w2 && w2 instanceof w2 || (m2 = false);
  }
  return n2.delete(e8), n2.delete(a2), m2;
};
var Yr = ge(M, "DataView");
var Jr = be;
var Xr = ge(M, "Promise");
var Qr = ge(M, "Set");
var Zr = ge(M, "WeakMap");
var et = V;
var at = te;
var rt = "[object Map]";
var tt = "[object Promise]";
var ot = "[object Set]";
var nt = "[object WeakMap]";
var st = "[object DataView]";
var it = at(Yr);
var dt = at(Jr);
var ct = at(Xr);
var ut = at(Qr);
var lt = at(Zr);
var pt = et;
(Yr && pt(new Yr(new ArrayBuffer(1))) != st || Jr && pt(new Jr()) != rt || Xr && pt(Xr.resolve()) != tt || Qr && pt(new Qr()) != ot || Zr && pt(new Zr()) != nt) && (pt = function(e8) {
  var a2 = et(e8), r2 = "[object Object]" == a2 ? e8.constructor : void 0, t2 = r2 ? at(r2) : "";
  if (t2) switch (t2) {
    case it:
      return st;
    case dt:
      return rt;
    case ct:
      return tt;
    case ut:
      return ot;
    case lt:
      return nt;
  }
  return a2;
});
var mt = pt;
var ht = ha;
var ft = Ia;
var vt = Na;
var gt = Gr;
var bt = mt;
var wt = Ma;
var yt = tr;
var xt = br;
var _t = "[object Arguments]";
var It = "[object Array]";
var kt = "[object Object]";
var St = Object.prototype.hasOwnProperty;
var Tt = function(e8, a2, r2, t2, o2, n2) {
  var s2 = wt(e8), i2 = wt(a2), d2 = s2 ? It : bt(e8), c2 = i2 ? It : bt(a2), u2 = (d2 = d2 == _t ? kt : d2) == kt, l2 = (c2 = c2 == _t ? kt : c2) == kt, p2 = d2 == c2;
  if (p2 && yt(e8)) {
    if (!yt(a2)) return false;
    s2 = true, u2 = false;
  }
  if (p2 && !u2) return n2 || (n2 = new ht()), s2 || xt(e8) ? ft(e8, a2, r2, t2, o2, n2) : vt(e8, a2, d2, r2, t2, o2, n2);
  if (!(1 & r2)) {
    var m2 = u2 && St.call(e8, "__wrapped__"), h2 = l2 && St.call(a2, "__wrapped__");
    if (m2 || h2) {
      var f2 = m2 ? e8.value() : e8, v2 = h2 ? a2.value() : a2;
      return n2 || (n2 = new ht()), o2(f2, v2, r2, t2, n2);
    }
  }
  return !!p2 && (n2 || (n2 = new ht()), gt(e8, a2, r2, t2, o2, n2));
};
var Et = Ka;
var jt = function e2(a2, r2, t2, o2, n2) {
  return a2 === r2 || (null == a2 || null == r2 || !Et(a2) && !Et(r2) ? a2 != a2 && r2 != r2 : Tt(a2, r2, t2, o2, e2, n2));
};
var Ot = ha;
var At = jt;
var Ct = function(e8, a2, r2, t2) {
  var o2 = r2.length, n2 = o2, s2 = !t2;
  if (null == e8) return !n2;
  for (e8 = Object(e8); o2--; ) {
    var i2 = r2[o2];
    if (s2 && i2[2] ? i2[1] !== e8[i2[0]] : !(i2[0] in e8)) return false;
  }
  for (; ++o2 < n2; ) {
    var d2 = (i2 = r2[o2])[0], c2 = e8[d2], u2 = i2[1];
    if (s2 && i2[2]) {
      if (void 0 === c2 && !(d2 in e8)) return false;
    } else {
      var l2 = new Ot();
      if (t2) var p2 = t2(c2, u2, d2, e8, a2, l2);
      if (!(void 0 === p2 ? At(u2, c2, 3, t2, l2) : p2)) return false;
    }
  }
  return true;
};
var Rt = G;
var Nt = function(e8) {
  return e8 == e8 && !Rt(e8);
};
var Pt = Nt;
var Mt = qr;
var Lt = function(e8) {
  for (var a2 = Mt(e8), r2 = a2.length; r2--; ) {
    var t2 = a2[r2], o2 = e8[t2];
    a2[r2] = [t2, o2, Pt(o2)];
  }
  return a2;
};
var Dt = function(e8, a2) {
  return function(r2) {
    return null != r2 && (r2[e8] === a2 && (void 0 !== a2 || e8 in Object(r2)));
  };
};
var zt = Ct;
var Ft = Lt;
var Bt = Dt;
var qt = function(e8) {
  var a2 = Ft(e8);
  return 1 == a2.length && a2[0][2] ? Bt(a2[0][0], a2[0][1]) : function(r2) {
    return r2 === e8 || zt(r2, e8, a2);
  };
};
var $t = V;
var Ut = Ka;
var Ht = function(e8) {
  return "symbol" == typeof e8 || Ut(e8) && "[object Symbol]" == $t(e8);
};
var Wt = Ma;
var Kt = Ht;
var Vt = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var Gt = /^\w*$/;
var Yt = function(e8, a2) {
  if (Wt(e8)) return false;
  var r2 = typeof e8;
  return !("number" != r2 && "symbol" != r2 && "boolean" != r2 && null != e8 && !Kt(e8)) || (Gt.test(e8) || !Vt.test(e8) || null != a2 && e8 in Object(a2));
};
var Jt = ra;
function Xt(e8, a2) {
  if ("function" != typeof e8 || null != a2 && "function" != typeof a2) throw new TypeError("Expected a function");
  var r2 = function() {
    var t2 = arguments, o2 = a2 ? a2.apply(this, t2) : t2[0], n2 = r2.cache;
    if (n2.has(o2)) return n2.get(o2);
    var s2 = e8.apply(this, t2);
    return r2.cache = n2.set(o2, s2) || n2, s2;
  };
  return r2.cache = new (Xt.Cache || Jt)(), r2;
}
Xt.Cache = Jt;
var Qt = Xt;
var Zt = function(e8) {
  var a2 = Qt(e8, function(e9) {
    return 500 === r2.size && r2.clear(), e9;
  }), r2 = a2.cache;
  return a2;
};
var eo = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var ao = /\\(\\)?/g;
var ro = Zt(function(e8) {
  var a2 = [];
  return 46 === e8.charCodeAt(0) && a2.push(""), e8.replace(eo, function(e9, r2, t2, o2) {
    a2.push(t2 ? o2.replace(ao, "$1") : r2 || e9);
  }), a2;
});
var to = function(e8, a2) {
  for (var r2 = -1, t2 = null == e8 ? 0 : e8.length, o2 = Array(t2); ++r2 < t2; ) o2[r2] = a2(e8[r2], r2, e8);
  return o2;
};
var oo = to;
var no = Ma;
var so = Ht;
var io = L ? L.prototype : void 0;
var co = io ? io.toString : void 0;
var uo = function e3(a2) {
  if ("string" == typeof a2) return a2;
  if (no(a2)) return oo(a2, e3) + "";
  if (so(a2)) return co ? co.call(a2) : "";
  var r2 = a2 + "";
  return "0" == r2 && 1 / a2 == -1 / 0 ? "-0" : r2;
};
var lo = uo;
var po = Ma;
var mo = Yt;
var ho = ro;
var fo = function(e8) {
  return null == e8 ? "" : lo(e8);
};
var vo = function(e8, a2) {
  return po(e8) ? e8 : mo(e8, a2) ? [e8] : ho(fo(e8));
};
var go = Ht;
var bo = function(e8) {
  if ("string" == typeof e8 || go(e8)) return e8;
  var a2 = e8 + "";
  return "0" == a2 && 1 / e8 == -1 / 0 ? "-0" : a2;
};
var wo = vo;
var yo = bo;
var xo = function(e8, a2) {
  for (var r2 = 0, t2 = (a2 = wo(a2, e8)).length; null != e8 && r2 < t2; ) e8 = e8[yo(a2[r2++])];
  return r2 && r2 == t2 ? e8 : void 0;
};
var _o = xo;
var Io = function(e8, a2, r2) {
  var t2 = null == e8 ? void 0 : _o(e8, a2);
  return void 0 === t2 ? r2 : t2;
};
var ko = function(e8, a2) {
  return null != e8 && a2 in Object(e8);
};
var So = vo;
var To = er;
var Eo = Ma;
var jo = nr;
var Oo = sr;
var Ao = bo;
var Co = function(e8, a2, r2) {
  for (var t2 = -1, o2 = (a2 = So(a2, e8)).length, n2 = false; ++t2 < o2; ) {
    var s2 = Ao(a2[t2]);
    if (!(n2 = null != e8 && r2(e8, s2))) break;
    e8 = e8[s2];
  }
  return n2 || ++t2 != o2 ? n2 : !!(o2 = null == e8 ? 0 : e8.length) && Oo(o2) && jo(s2, o2) && (Eo(e8) || To(e8));
};
var Ro = ko;
var No = Co;
var Po = function(e8, a2) {
  return null != e8 && No(e8, a2, Ro);
};
var Mo = jt;
var Lo = Io;
var Do = Po;
var zo = Yt;
var Fo = Nt;
var Bo = Dt;
var qo = bo;
var $o = function(e8, a2) {
  return zo(e8) && Fo(a2) ? Bo(qo(e8), a2) : function(r2) {
    var t2 = Lo(r2, e8);
    return void 0 === t2 && t2 === a2 ? Do(r2, e8) : Mo(a2, t2, 3);
  };
};
var Uo = function(e8) {
  return e8;
};
var Ho = function(e8) {
  return function(a2) {
    return null == a2 ? void 0 : a2[e8];
  };
};
var Wo = xo;
var Ko = function(e8) {
  return function(a2) {
    return Wo(a2, e8);
  };
};
var Vo = Ho;
var Go = Ko;
var Yo = Yt;
var Jo = bo;
var Xo = function(e8) {
  return Yo(e8) ? Vo(Jo(e8)) : Go(e8);
};
var Qo = qt;
var Zo = $o;
var en = Uo;
var an = Ma;
var rn = Xo;
var tn = function(e8) {
  return "function" == typeof e8 ? e8 : null == e8 ? en : "object" == typeof e8 ? an(e8) ? Zo(e8[0], e8[1]) : Qo(e8) : rn(e8);
};
var on = function(e8) {
  if ("function" != typeof e8) throw new TypeError("Expected a function");
  return function() {
    var a2 = arguments;
    switch (a2.length) {
      case 0:
        return !e8.call(this);
      case 1:
        return !e8.call(this, a2[0]);
      case 2:
        return !e8.call(this, a2[0], a2[1]);
      case 3:
        return !e8.call(this, a2[0], a2[1], a2[2]);
    }
    return !e8.apply(this, a2);
  };
};
var nn = ge;
var sn = function() {
  try {
    var e8 = nn(Object, "defineProperty");
    return e8({}, "", {}), e8;
  } catch (e9) {
  }
}();
var dn = sn;
var cn = function(e8, a2, r2) {
  "__proto__" == a2 && dn ? dn(e8, a2, { configurable: true, enumerable: true, value: r2, writable: true }) : e8[a2] = r2;
};
var un = cn;
var ln = d;
var pn = Object.prototype.hasOwnProperty;
var mn = function(e8, a2, r2) {
  var t2 = e8[a2];
  pn.call(e8, a2) && ln(t2, r2) && (void 0 !== r2 || a2 in e8) || un(e8, a2, r2);
};
var hn = mn;
var fn = vo;
var vn = nr;
var gn = G;
var bn = bo;
var wn = function(e8, a2, r2, t2) {
  if (!gn(e8)) return e8;
  for (var o2 = -1, n2 = (a2 = fn(a2, e8)).length, s2 = n2 - 1, i2 = e8; null != i2 && ++o2 < n2; ) {
    var d2 = bn(a2[o2]), c2 = r2;
    if ("__proto__" === d2 || "constructor" === d2 || "prototype" === d2) return e8;
    if (o2 != s2) {
      var u2 = i2[d2];
      void 0 === (c2 = t2 ? t2(u2, d2, i2) : void 0) && (c2 = gn(u2) ? u2 : vn(a2[o2 + 1]) ? [] : {});
    }
    hn(i2, d2, c2), i2 = i2[d2];
  }
  return e8;
};
var yn = xo;
var xn = wn;
var _n = vo;
var In = function(e8, a2, r2) {
  for (var t2 = -1, o2 = a2.length, n2 = {}; ++t2 < o2; ) {
    var s2 = a2[t2], i2 = yn(e8, s2);
    r2(i2, s2) && xn(n2, _n(s2, e8), i2);
  }
  return n2;
};
var kn = Or(Object.getPrototypeOf, Object);
var Sn = Pa;
var Tn = kn;
var En = Ha;
var jn = Fa;
var On = Object.getOwnPropertySymbols ? function(e8) {
  for (var a2 = []; e8; ) Sn(a2, En(e8)), e8 = Tn(e8);
  return a2;
} : jn;
var An = function(e8) {
  var a2 = [];
  if (null != e8) for (var r2 in Object(e8)) a2.push(r2);
  return a2;
};
var Cn = G;
var Rn = jr;
var Nn = An;
var Pn = Object.prototype.hasOwnProperty;
var Mn = function(e8) {
  if (!Cn(e8)) return Nn(e8);
  var a2 = Rn(e8), r2 = [];
  for (var t2 in e8) ("constructor" != t2 || !a2 && Pn.call(e8, t2)) && r2.push(t2);
  return r2;
};
var Ln = Tr;
var Dn = Mn;
var zn = Dr;
var Fn = function(e8) {
  return zn(e8) ? Ln(e8, true) : Dn(e8);
};
var Bn = za;
var qn = On;
var $n = Fn;
var Un = function(e8) {
  return Bn(e8, $n, qn);
};
var Hn = to;
var Wn = tn;
var Kn = In;
var Vn = Un;
var Gn = function(e8, a2) {
  if (null == e8) return {};
  var r2 = Hn(Vn(e8), function(e9) {
    return [e9];
  });
  return a2 = Wn(a2), Kn(e8, r2, function(e9, r3) {
    return a2(e9, r3[0]);
  });
};
var Yn = tn;
var Jn = on;
var Xn = Gn;
var Qn = t(function(e8, a2) {
  return Xn(e8, Jn(Yn(a2)));
});
var Zn = t(function(e8) {
  return null === e8;
});
var es = t(function(e8) {
  return void 0 === e8;
});
function as(e8) {
  if ("string" != typeof e8) throw new TypeError("Path must be a string. Received " + JSON.stringify(e8));
}
function rs(e8, a2) {
  for (var r2, t2 = "", o2 = 0, n2 = -1, s2 = 0, i2 = 0; i2 <= e8.length; ++i2) {
    if (i2 < e8.length) r2 = e8.charCodeAt(i2);
    else {
      if (47 === r2) break;
      r2 = 47;
    }
    if (47 === r2) {
      if (n2 === i2 - 1 || 1 === s2) ;
      else if (n2 !== i2 - 1 && 2 === s2) {
        if (t2.length < 2 || 2 !== o2 || 46 !== t2.charCodeAt(t2.length - 1) || 46 !== t2.charCodeAt(t2.length - 2)) {
          if (t2.length > 2) {
            var d2 = t2.lastIndexOf("/");
            if (d2 !== t2.length - 1) {
              -1 === d2 ? (t2 = "", o2 = 0) : o2 = (t2 = t2.slice(0, d2)).length - 1 - t2.lastIndexOf("/"), n2 = i2, s2 = 0;
              continue;
            }
          } else if (2 === t2.length || 1 === t2.length) {
            t2 = "", o2 = 0, n2 = i2, s2 = 0;
            continue;
          }
        }
        a2 && (t2.length > 0 ? t2 += "/.." : t2 = "..", o2 = 2);
      } else t2.length > 0 ? t2 += "/" + e8.slice(n2 + 1, i2) : t2 = e8.slice(n2 + 1, i2), o2 = i2 - n2 - 1;
      n2 = i2, s2 = 0;
    } else 46 === r2 && -1 !== s2 ? ++s2 : s2 = -1;
  }
  return t2;
}
var ts = { resolve: function() {
  for (var e8, a2 = "", r2 = false, t2 = arguments.length - 1; t2 >= -1 && !r2; t2--) {
    var o2;
    t2 >= 0 ? o2 = arguments[t2] : (void 0 === e8 && (e8 = process.cwd()), o2 = e8), as(o2), 0 !== o2.length && (a2 = o2 + "/" + a2, r2 = 47 === o2.charCodeAt(0));
  }
  return a2 = rs(a2, !r2), r2 ? a2.length > 0 ? "/" + a2 : "/" : a2.length > 0 ? a2 : ".";
}, normalize: function(e8) {
  if (as(e8), 0 === e8.length) return ".";
  var a2 = 47 === e8.charCodeAt(0), r2 = 47 === e8.charCodeAt(e8.length - 1);
  return 0 !== (e8 = rs(e8, !a2)).length || a2 || (e8 = "."), e8.length > 0 && r2 && (e8 += "/"), a2 ? "/" + e8 : e8;
}, isAbsolute: function(e8) {
  return as(e8), e8.length > 0 && 47 === e8.charCodeAt(0);
}, join: function() {
  if (0 === arguments.length) return ".";
  for (var e8, a2 = 0; a2 < arguments.length; ++a2) {
    var r2 = arguments[a2];
    as(r2), r2.length > 0 && (void 0 === e8 ? e8 = r2 : e8 += "/" + r2);
  }
  return void 0 === e8 ? "." : ts.normalize(e8);
}, relative: function(e8, a2) {
  if (as(e8), as(a2), e8 === a2) return "";
  if ((e8 = ts.resolve(e8)) === (a2 = ts.resolve(a2))) return "";
  for (var r2 = 1; r2 < e8.length && 47 === e8.charCodeAt(r2); ++r2) ;
  for (var t2 = e8.length, o2 = t2 - r2, n2 = 1; n2 < a2.length && 47 === a2.charCodeAt(n2); ++n2) ;
  for (var s2 = a2.length - n2, i2 = o2 < s2 ? o2 : s2, d2 = -1, c2 = 0; c2 <= i2; ++c2) {
    if (c2 === i2) {
      if (s2 > i2) {
        if (47 === a2.charCodeAt(n2 + c2)) return a2.slice(n2 + c2 + 1);
        if (0 === c2) return a2.slice(n2 + c2);
      } else o2 > i2 && (47 === e8.charCodeAt(r2 + c2) ? d2 = c2 : 0 === c2 && (d2 = 0));
      break;
    }
    var u2 = e8.charCodeAt(r2 + c2);
    if (u2 !== a2.charCodeAt(n2 + c2)) break;
    47 === u2 && (d2 = c2);
  }
  var l2 = "";
  for (c2 = r2 + d2 + 1; c2 <= t2; ++c2) c2 !== t2 && 47 !== e8.charCodeAt(c2) || (0 === l2.length ? l2 += ".." : l2 += "/..");
  return l2.length > 0 ? l2 + a2.slice(n2 + d2) : (n2 += d2, 47 === a2.charCodeAt(n2) && ++n2, a2.slice(n2));
}, _makeLong: function(e8) {
  return e8;
}, dirname: function(e8) {
  if (as(e8), 0 === e8.length) return ".";
  for (var a2 = e8.charCodeAt(0), r2 = 47 === a2, t2 = -1, o2 = true, n2 = e8.length - 1; n2 >= 1; --n2) if (47 === (a2 = e8.charCodeAt(n2))) {
    if (!o2) {
      t2 = n2;
      break;
    }
  } else o2 = false;
  return -1 === t2 ? r2 ? "/" : "." : r2 && 1 === t2 ? "//" : e8.slice(0, t2);
}, basename: function(e8, a2) {
  if (void 0 !== a2 && "string" != typeof a2) throw new TypeError('"ext" argument must be a string');
  as(e8);
  var r2, t2 = 0, o2 = -1, n2 = true;
  if (void 0 !== a2 && a2.length > 0 && a2.length <= e8.length) {
    if (a2.length === e8.length && a2 === e8) return "";
    var s2 = a2.length - 1, i2 = -1;
    for (r2 = e8.length - 1; r2 >= 0; --r2) {
      var d2 = e8.charCodeAt(r2);
      if (47 === d2) {
        if (!n2) {
          t2 = r2 + 1;
          break;
        }
      } else -1 === i2 && (n2 = false, i2 = r2 + 1), s2 >= 0 && (d2 === a2.charCodeAt(s2) ? -1 == --s2 && (o2 = r2) : (s2 = -1, o2 = i2));
    }
    return t2 === o2 ? o2 = i2 : -1 === o2 && (o2 = e8.length), e8.slice(t2, o2);
  }
  for (r2 = e8.length - 1; r2 >= 0; --r2) if (47 === e8.charCodeAt(r2)) {
    if (!n2) {
      t2 = r2 + 1;
      break;
    }
  } else -1 === o2 && (n2 = false, o2 = r2 + 1);
  return -1 === o2 ? "" : e8.slice(t2, o2);
}, extname: function(e8) {
  as(e8);
  for (var a2 = -1, r2 = 0, t2 = -1, o2 = true, n2 = 0, s2 = e8.length - 1; s2 >= 0; --s2) {
    var i2 = e8.charCodeAt(s2);
    if (47 !== i2) -1 === t2 && (o2 = false, t2 = s2 + 1), 46 === i2 ? -1 === a2 ? a2 = s2 : 1 !== n2 && (n2 = 1) : -1 !== a2 && (n2 = -1);
    else if (!o2) {
      r2 = s2 + 1;
      break;
    }
  }
  return -1 === a2 || -1 === t2 || 0 === n2 || 1 === n2 && a2 === t2 - 1 && a2 === r2 + 1 ? "" : e8.slice(a2, t2);
}, format: function(e8) {
  if (null === e8 || "object" != typeof e8) throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof e8);
  return function(e9, a2) {
    var r2 = a2.dir || a2.root, t2 = a2.base || (a2.name || "") + (a2.ext || "");
    return r2 ? r2 === a2.root ? r2 + t2 : r2 + e9 + t2 : t2;
  }("/", e8);
}, parse: function(e8) {
  as(e8);
  var a2 = { root: "", dir: "", base: "", ext: "", name: "" };
  if (0 === e8.length) return a2;
  var r2, t2 = e8.charCodeAt(0), o2 = 47 === t2;
  o2 ? (a2.root = "/", r2 = 1) : r2 = 0;
  for (var n2 = -1, s2 = 0, i2 = -1, d2 = true, c2 = e8.length - 1, u2 = 0; c2 >= r2; --c2) if (47 !== (t2 = e8.charCodeAt(c2))) -1 === i2 && (d2 = false, i2 = c2 + 1), 46 === t2 ? -1 === n2 ? n2 = c2 : 1 !== u2 && (u2 = 1) : -1 !== n2 && (u2 = -1);
  else if (!d2) {
    s2 = c2 + 1;
    break;
  }
  return -1 === n2 || -1 === i2 || 0 === u2 || 1 === u2 && n2 === i2 - 1 && n2 === s2 + 1 ? -1 !== i2 && (a2.base = a2.name = 0 === s2 && o2 ? e8.slice(1, i2) : e8.slice(s2, i2)) : (0 === s2 && o2 ? (a2.name = e8.slice(1, n2), a2.base = e8.slice(1, i2)) : (a2.name = e8.slice(s2, n2), a2.base = e8.slice(s2, i2)), a2.ext = e8.slice(n2, i2)), s2 > 0 ? a2.dir = e8.slice(0, s2 - 1) : o2 && (a2.dir = "/"), a2;
}, sep: "/", delimiter: ":", win32: null, posix: null };
ts.posix = ts;
var os = t(ts);
var ns = {};
var ss = { "application/1d-interleaved-parityfec": { source: "iana" }, "application/3gpdash-qoe-report+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/3gpp-ims+xml": { source: "iana", compressible: true }, "application/3gpphal+json": { source: "iana", compressible: true }, "application/3gpphalforms+json": { source: "iana", compressible: true }, "application/a2l": { source: "iana" }, "application/ace+cbor": { source: "iana" }, "application/activemessage": { source: "iana" }, "application/activity+json": { source: "iana", compressible: true }, "application/alto-costmap+json": { source: "iana", compressible: true }, "application/alto-costmapfilter+json": { source: "iana", compressible: true }, "application/alto-directory+json": { source: "iana", compressible: true }, "application/alto-endpointcost+json": { source: "iana", compressible: true }, "application/alto-endpointcostparams+json": { source: "iana", compressible: true }, "application/alto-endpointprop+json": { source: "iana", compressible: true }, "application/alto-endpointpropparams+json": { source: "iana", compressible: true }, "application/alto-error+json": { source: "iana", compressible: true }, "application/alto-networkmap+json": { source: "iana", compressible: true }, "application/alto-networkmapfilter+json": { source: "iana", compressible: true }, "application/alto-updatestreamcontrol+json": { source: "iana", compressible: true }, "application/alto-updatestreamparams+json": { source: "iana", compressible: true }, "application/aml": { source: "iana" }, "application/andrew-inset": { source: "iana", extensions: ["ez"] }, "application/applefile": { source: "iana" }, "application/applixware": { source: "apache", extensions: ["aw"] }, "application/at+jwt": { source: "iana" }, "application/atf": { source: "iana" }, "application/atfx": { source: "iana" }, "application/atom+xml": { source: "iana", compressible: true, extensions: ["atom"] }, "application/atomcat+xml": { source: "iana", compressible: true, extensions: ["atomcat"] }, "application/atomdeleted+xml": { source: "iana", compressible: true, extensions: ["atomdeleted"] }, "application/atomicmail": { source: "iana" }, "application/atomsvc+xml": { source: "iana", compressible: true, extensions: ["atomsvc"] }, "application/atsc-dwd+xml": { source: "iana", compressible: true, extensions: ["dwd"] }, "application/atsc-dynamic-event-message": { source: "iana" }, "application/atsc-held+xml": { source: "iana", compressible: true, extensions: ["held"] }, "application/atsc-rdt+json": { source: "iana", compressible: true }, "application/atsc-rsat+xml": { source: "iana", compressible: true, extensions: ["rsat"] }, "application/atxml": { source: "iana" }, "application/auth-policy+xml": { source: "iana", compressible: true }, "application/bacnet-xdd+zip": { source: "iana", compressible: false }, "application/batch-smtp": { source: "iana" }, "application/bdoc": { compressible: false, extensions: ["bdoc"] }, "application/beep+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/calendar+json": { source: "iana", compressible: true }, "application/calendar+xml": { source: "iana", compressible: true, extensions: ["xcs"] }, "application/call-completion": { source: "iana" }, "application/cals-1840": { source: "iana" }, "application/captive+json": { source: "iana", compressible: true }, "application/cbor": { source: "iana" }, "application/cbor-seq": { source: "iana" }, "application/cccex": { source: "iana" }, "application/ccmp+xml": { source: "iana", compressible: true }, "application/ccxml+xml": { source: "iana", compressible: true, extensions: ["ccxml"] }, "application/cdfx+xml": { source: "iana", compressible: true, extensions: ["cdfx"] }, "application/cdmi-capability": { source: "iana", extensions: ["cdmia"] }, "application/cdmi-container": { source: "iana", extensions: ["cdmic"] }, "application/cdmi-domain": { source: "iana", extensions: ["cdmid"] }, "application/cdmi-object": { source: "iana", extensions: ["cdmio"] }, "application/cdmi-queue": { source: "iana", extensions: ["cdmiq"] }, "application/cdni": { source: "iana" }, "application/cea": { source: "iana" }, "application/cea-2018+xml": { source: "iana", compressible: true }, "application/cellml+xml": { source: "iana", compressible: true }, "application/cfw": { source: "iana" }, "application/city+json": { source: "iana", compressible: true }, "application/clr": { source: "iana" }, "application/clue+xml": { source: "iana", compressible: true }, "application/clue_info+xml": { source: "iana", compressible: true }, "application/cms": { source: "iana" }, "application/cnrp+xml": { source: "iana", compressible: true }, "application/coap-group+json": { source: "iana", compressible: true }, "application/coap-payload": { source: "iana" }, "application/commonground": { source: "iana" }, "application/conference-info+xml": { source: "iana", compressible: true }, "application/cose": { source: "iana" }, "application/cose-key": { source: "iana" }, "application/cose-key-set": { source: "iana" }, "application/cpl+xml": { source: "iana", compressible: true, extensions: ["cpl"] }, "application/csrattrs": { source: "iana" }, "application/csta+xml": { source: "iana", compressible: true }, "application/cstadata+xml": { source: "iana", compressible: true }, "application/csvm+json": { source: "iana", compressible: true }, "application/cu-seeme": { source: "apache", extensions: ["cu"] }, "application/cwt": { source: "iana" }, "application/cybercash": { source: "iana" }, "application/dart": { compressible: true }, "application/dash+xml": { source: "iana", compressible: true, extensions: ["mpd"] }, "application/dash-patch+xml": { source: "iana", compressible: true, extensions: ["mpp"] }, "application/dashdelta": { source: "iana" }, "application/davmount+xml": { source: "iana", compressible: true, extensions: ["davmount"] }, "application/dca-rft": { source: "iana" }, "application/dcd": { source: "iana" }, "application/dec-dx": { source: "iana" }, "application/dialog-info+xml": { source: "iana", compressible: true }, "application/dicom": { source: "iana" }, "application/dicom+json": { source: "iana", compressible: true }, "application/dicom+xml": { source: "iana", compressible: true }, "application/dii": { source: "iana" }, "application/dit": { source: "iana" }, "application/dns": { source: "iana" }, "application/dns+json": { source: "iana", compressible: true }, "application/dns-message": { source: "iana" }, "application/docbook+xml": { source: "apache", compressible: true, extensions: ["dbk"] }, "application/dots+cbor": { source: "iana" }, "application/dskpp+xml": { source: "iana", compressible: true }, "application/dssc+der": { source: "iana", extensions: ["dssc"] }, "application/dssc+xml": { source: "iana", compressible: true, extensions: ["xdssc"] }, "application/dvcs": { source: "iana" }, "application/ecmascript": { source: "iana", compressible: true, extensions: ["es", "ecma"] }, "application/edi-consent": { source: "iana" }, "application/edi-x12": { source: "iana", compressible: false }, "application/edifact": { source: "iana", compressible: false }, "application/efi": { source: "iana" }, "application/elm+json": { source: "iana", charset: "UTF-8", compressible: true }, "application/elm+xml": { source: "iana", compressible: true }, "application/emergencycalldata.cap+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/emergencycalldata.comment+xml": { source: "iana", compressible: true }, "application/emergencycalldata.control+xml": { source: "iana", compressible: true }, "application/emergencycalldata.deviceinfo+xml": { source: "iana", compressible: true }, "application/emergencycalldata.ecall.msd": { source: "iana" }, "application/emergencycalldata.providerinfo+xml": { source: "iana", compressible: true }, "application/emergencycalldata.serviceinfo+xml": { source: "iana", compressible: true }, "application/emergencycalldata.subscriberinfo+xml": { source: "iana", compressible: true }, "application/emergencycalldata.veds+xml": { source: "iana", compressible: true }, "application/emma+xml": { source: "iana", compressible: true, extensions: ["emma"] }, "application/emotionml+xml": { source: "iana", compressible: true, extensions: ["emotionml"] }, "application/encaprtp": { source: "iana" }, "application/epp+xml": { source: "iana", compressible: true }, "application/epub+zip": { source: "iana", compressible: false, extensions: ["epub"] }, "application/eshop": { source: "iana" }, "application/exi": { source: "iana", extensions: ["exi"] }, "application/expect-ct-report+json": { source: "iana", compressible: true }, "application/express": { source: "iana", extensions: ["exp"] }, "application/fastinfoset": { source: "iana" }, "application/fastsoap": { source: "iana" }, "application/fdt+xml": { source: "iana", compressible: true, extensions: ["fdt"] }, "application/fhir+json": { source: "iana", charset: "UTF-8", compressible: true }, "application/fhir+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/fido.trusted-apps+json": { compressible: true }, "application/fits": { source: "iana" }, "application/flexfec": { source: "iana" }, "application/font-sfnt": { source: "iana" }, "application/font-tdpfr": { source: "iana", extensions: ["pfr"] }, "application/font-woff": { source: "iana", compressible: false }, "application/framework-attributes+xml": { source: "iana", compressible: true }, "application/geo+json": { source: "iana", compressible: true, extensions: ["geojson"] }, "application/geo+json-seq": { source: "iana" }, "application/geopackage+sqlite3": { source: "iana" }, "application/geoxacml+xml": { source: "iana", compressible: true }, "application/gltf-buffer": { source: "iana" }, "application/gml+xml": { source: "iana", compressible: true, extensions: ["gml"] }, "application/gpx+xml": { source: "apache", compressible: true, extensions: ["gpx"] }, "application/gxf": { source: "apache", extensions: ["gxf"] }, "application/gzip": { source: "iana", compressible: false, extensions: ["gz"] }, "application/h224": { source: "iana" }, "application/held+xml": { source: "iana", compressible: true }, "application/hjson": { extensions: ["hjson"] }, "application/http": { source: "iana" }, "application/hyperstudio": { source: "iana", extensions: ["stk"] }, "application/ibe-key-request+xml": { source: "iana", compressible: true }, "application/ibe-pkg-reply+xml": { source: "iana", compressible: true }, "application/ibe-pp-data": { source: "iana" }, "application/iges": { source: "iana" }, "application/im-iscomposing+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/index": { source: "iana" }, "application/index.cmd": { source: "iana" }, "application/index.obj": { source: "iana" }, "application/index.response": { source: "iana" }, "application/index.vnd": { source: "iana" }, "application/inkml+xml": { source: "iana", compressible: true, extensions: ["ink", "inkml"] }, "application/iotp": { source: "iana" }, "application/ipfix": { source: "iana", extensions: ["ipfix"] }, "application/ipp": { source: "iana" }, "application/isup": { source: "iana" }, "application/its+xml": { source: "iana", compressible: true, extensions: ["its"] }, "application/java-archive": { source: "apache", compressible: false, extensions: ["jar", "war", "ear"] }, "application/java-serialized-object": { source: "apache", compressible: false, extensions: ["ser"] }, "application/java-vm": { source: "apache", compressible: false, extensions: ["class"] }, "application/javascript": { source: "iana", charset: "UTF-8", compressible: true, extensions: ["js", "mjs"] }, "application/jf2feed+json": { source: "iana", compressible: true }, "application/jose": { source: "iana" }, "application/jose+json": { source: "iana", compressible: true }, "application/jrd+json": { source: "iana", compressible: true }, "application/jscalendar+json": { source: "iana", compressible: true }, "application/json": { source: "iana", charset: "UTF-8", compressible: true, extensions: ["json", "map"] }, "application/json-patch+json": { source: "iana", compressible: true }, "application/json-seq": { source: "iana" }, "application/json5": { extensions: ["json5"] }, "application/jsonml+json": { source: "apache", compressible: true, extensions: ["jsonml"] }, "application/jwk+json": { source: "iana", compressible: true }, "application/jwk-set+json": { source: "iana", compressible: true }, "application/jwt": { source: "iana" }, "application/kpml-request+xml": { source: "iana", compressible: true }, "application/kpml-response+xml": { source: "iana", compressible: true }, "application/ld+json": { source: "iana", compressible: true, extensions: ["jsonld"] }, "application/lgr+xml": { source: "iana", compressible: true, extensions: ["lgr"] }, "application/link-format": { source: "iana" }, "application/load-control+xml": { source: "iana", compressible: true }, "application/lost+xml": { source: "iana", compressible: true, extensions: ["lostxml"] }, "application/lostsync+xml": { source: "iana", compressible: true }, "application/lpf+zip": { source: "iana", compressible: false }, "application/lxf": { source: "iana" }, "application/mac-binhex40": { source: "iana", extensions: ["hqx"] }, "application/mac-compactpro": { source: "apache", extensions: ["cpt"] }, "application/macwriteii": { source: "iana" }, "application/mads+xml": { source: "iana", compressible: true, extensions: ["mads"] }, "application/manifest+json": { source: "iana", charset: "UTF-8", compressible: true, extensions: ["webmanifest"] }, "application/marc": { source: "iana", extensions: ["mrc"] }, "application/marcxml+xml": { source: "iana", compressible: true, extensions: ["mrcx"] }, "application/mathematica": { source: "iana", extensions: ["ma", "nb", "mb"] }, "application/mathml+xml": { source: "iana", compressible: true, extensions: ["mathml"] }, "application/mathml-content+xml": { source: "iana", compressible: true }, "application/mathml-presentation+xml": { source: "iana", compressible: true }, "application/mbms-associated-procedure-description+xml": { source: "iana", compressible: true }, "application/mbms-deregister+xml": { source: "iana", compressible: true }, "application/mbms-envelope+xml": { source: "iana", compressible: true }, "application/mbms-msk+xml": { source: "iana", compressible: true }, "application/mbms-msk-response+xml": { source: "iana", compressible: true }, "application/mbms-protection-description+xml": { source: "iana", compressible: true }, "application/mbms-reception-report+xml": { source: "iana", compressible: true }, "application/mbms-register+xml": { source: "iana", compressible: true }, "application/mbms-register-response+xml": { source: "iana", compressible: true }, "application/mbms-schedule+xml": { source: "iana", compressible: true }, "application/mbms-user-service-description+xml": { source: "iana", compressible: true }, "application/mbox": { source: "iana", extensions: ["mbox"] }, "application/media-policy-dataset+xml": { source: "iana", compressible: true, extensions: ["mpf"] }, "application/media_control+xml": { source: "iana", compressible: true }, "application/mediaservercontrol+xml": { source: "iana", compressible: true, extensions: ["mscml"] }, "application/merge-patch+json": { source: "iana", compressible: true }, "application/metalink+xml": { source: "apache", compressible: true, extensions: ["metalink"] }, "application/metalink4+xml": { source: "iana", compressible: true, extensions: ["meta4"] }, "application/mets+xml": { source: "iana", compressible: true, extensions: ["mets"] }, "application/mf4": { source: "iana" }, "application/mikey": { source: "iana" }, "application/mipc": { source: "iana" }, "application/missing-blocks+cbor-seq": { source: "iana" }, "application/mmt-aei+xml": { source: "iana", compressible: true, extensions: ["maei"] }, "application/mmt-usd+xml": { source: "iana", compressible: true, extensions: ["musd"] }, "application/mods+xml": { source: "iana", compressible: true, extensions: ["mods"] }, "application/moss-keys": { source: "iana" }, "application/moss-signature": { source: "iana" }, "application/mosskey-data": { source: "iana" }, "application/mosskey-request": { source: "iana" }, "application/mp21": { source: "iana", extensions: ["m21", "mp21"] }, "application/mp4": { source: "iana", extensions: ["mp4s", "m4p"] }, "application/mpeg4-generic": { source: "iana" }, "application/mpeg4-iod": { source: "iana" }, "application/mpeg4-iod-xmt": { source: "iana" }, "application/mrb-consumer+xml": { source: "iana", compressible: true }, "application/mrb-publish+xml": { source: "iana", compressible: true }, "application/msc-ivr+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/msc-mixer+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/msword": { source: "iana", compressible: false, extensions: ["doc", "dot"] }, "application/mud+json": { source: "iana", compressible: true }, "application/multipart-core": { source: "iana" }, "application/mxf": { source: "iana", extensions: ["mxf"] }, "application/n-quads": { source: "iana", extensions: ["nq"] }, "application/n-triples": { source: "iana", extensions: ["nt"] }, "application/nasdata": { source: "iana" }, "application/news-checkgroups": { source: "iana", charset: "US-ASCII" }, "application/news-groupinfo": { source: "iana", charset: "US-ASCII" }, "application/news-transmission": { source: "iana" }, "application/nlsml+xml": { source: "iana", compressible: true }, "application/node": { source: "iana", extensions: ["cjs"] }, "application/nss": { source: "iana" }, "application/oauth-authz-req+jwt": { source: "iana" }, "application/oblivious-dns-message": { source: "iana" }, "application/ocsp-request": { source: "iana" }, "application/ocsp-response": { source: "iana" }, "application/octet-stream": { source: "iana", compressible: false, extensions: ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"] }, "application/oda": { source: "iana", extensions: ["oda"] }, "application/odm+xml": { source: "iana", compressible: true }, "application/odx": { source: "iana" }, "application/oebps-package+xml": { source: "iana", compressible: true, extensions: ["opf"] }, "application/ogg": { source: "iana", compressible: false, extensions: ["ogx"] }, "application/omdoc+xml": { source: "apache", compressible: true, extensions: ["omdoc"] }, "application/onenote": { source: "apache", extensions: ["onetoc", "onetoc2", "onetmp", "onepkg"] }, "application/opc-nodeset+xml": { source: "iana", compressible: true }, "application/oscore": { source: "iana" }, "application/oxps": { source: "iana", extensions: ["oxps"] }, "application/p21": { source: "iana" }, "application/p21+zip": { source: "iana", compressible: false }, "application/p2p-overlay+xml": { source: "iana", compressible: true, extensions: ["relo"] }, "application/parityfec": { source: "iana" }, "application/passport": { source: "iana" }, "application/patch-ops-error+xml": { source: "iana", compressible: true, extensions: ["xer"] }, "application/pdf": { source: "iana", compressible: false, extensions: ["pdf"] }, "application/pdx": { source: "iana" }, "application/pem-certificate-chain": { source: "iana" }, "application/pgp-encrypted": { source: "iana", compressible: false, extensions: ["pgp"] }, "application/pgp-keys": { source: "iana", extensions: ["asc"] }, "application/pgp-signature": { source: "iana", extensions: ["asc", "sig"] }, "application/pics-rules": { source: "apache", extensions: ["prf"] }, "application/pidf+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/pidf-diff+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/pkcs10": { source: "iana", extensions: ["p10"] }, "application/pkcs12": { source: "iana" }, "application/pkcs7-mime": { source: "iana", extensions: ["p7m", "p7c"] }, "application/pkcs7-signature": { source: "iana", extensions: ["p7s"] }, "application/pkcs8": { source: "iana", extensions: ["p8"] }, "application/pkcs8-encrypted": { source: "iana" }, "application/pkix-attr-cert": { source: "iana", extensions: ["ac"] }, "application/pkix-cert": { source: "iana", extensions: ["cer"] }, "application/pkix-crl": { source: "iana", extensions: ["crl"] }, "application/pkix-pkipath": { source: "iana", extensions: ["pkipath"] }, "application/pkixcmp": { source: "iana", extensions: ["pki"] }, "application/pls+xml": { source: "iana", compressible: true, extensions: ["pls"] }, "application/poc-settings+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/postscript": { source: "iana", compressible: true, extensions: ["ai", "eps", "ps"] }, "application/ppsp-tracker+json": { source: "iana", compressible: true }, "application/problem+json": { source: "iana", compressible: true }, "application/problem+xml": { source: "iana", compressible: true }, "application/provenance+xml": { source: "iana", compressible: true, extensions: ["provx"] }, "application/prs.alvestrand.titrax-sheet": { source: "iana" }, "application/prs.cww": { source: "iana", extensions: ["cww"] }, "application/prs.cyn": { source: "iana", charset: "7-BIT" }, "application/prs.hpub+zip": { source: "iana", compressible: false }, "application/prs.nprend": { source: "iana" }, "application/prs.plucker": { source: "iana" }, "application/prs.rdf-xml-crypt": { source: "iana" }, "application/prs.xsf+xml": { source: "iana", compressible: true }, "application/pskc+xml": { source: "iana", compressible: true, extensions: ["pskcxml"] }, "application/pvd+json": { source: "iana", compressible: true }, "application/qsig": { source: "iana" }, "application/raml+yaml": { compressible: true, extensions: ["raml"] }, "application/raptorfec": { source: "iana" }, "application/rdap+json": { source: "iana", compressible: true }, "application/rdf+xml": { source: "iana", compressible: true, extensions: ["rdf", "owl"] }, "application/reginfo+xml": { source: "iana", compressible: true, extensions: ["rif"] }, "application/relax-ng-compact-syntax": { source: "iana", extensions: ["rnc"] }, "application/remote-printing": { source: "iana" }, "application/reputon+json": { source: "iana", compressible: true }, "application/resource-lists+xml": { source: "iana", compressible: true, extensions: ["rl"] }, "application/resource-lists-diff+xml": { source: "iana", compressible: true, extensions: ["rld"] }, "application/rfc+xml": { source: "iana", compressible: true }, "application/riscos": { source: "iana" }, "application/rlmi+xml": { source: "iana", compressible: true }, "application/rls-services+xml": { source: "iana", compressible: true, extensions: ["rs"] }, "application/route-apd+xml": { source: "iana", compressible: true, extensions: ["rapd"] }, "application/route-s-tsid+xml": { source: "iana", compressible: true, extensions: ["sls"] }, "application/route-usd+xml": { source: "iana", compressible: true, extensions: ["rusd"] }, "application/rpki-ghostbusters": { source: "iana", extensions: ["gbr"] }, "application/rpki-manifest": { source: "iana", extensions: ["mft"] }, "application/rpki-publication": { source: "iana" }, "application/rpki-roa": { source: "iana", extensions: ["roa"] }, "application/rpki-updown": { source: "iana" }, "application/rsd+xml": { source: "apache", compressible: true, extensions: ["rsd"] }, "application/rss+xml": { source: "apache", compressible: true, extensions: ["rss"] }, "application/rtf": { source: "iana", compressible: true, extensions: ["rtf"] }, "application/rtploopback": { source: "iana" }, "application/rtx": { source: "iana" }, "application/samlassertion+xml": { source: "iana", compressible: true }, "application/samlmetadata+xml": { source: "iana", compressible: true }, "application/sarif+json": { source: "iana", compressible: true }, "application/sarif-external-properties+json": { source: "iana", compressible: true }, "application/sbe": { source: "iana" }, "application/sbml+xml": { source: "iana", compressible: true, extensions: ["sbml"] }, "application/scaip+xml": { source: "iana", compressible: true }, "application/scim+json": { source: "iana", compressible: true }, "application/scvp-cv-request": { source: "iana", extensions: ["scq"] }, "application/scvp-cv-response": { source: "iana", extensions: ["scs"] }, "application/scvp-vp-request": { source: "iana", extensions: ["spq"] }, "application/scvp-vp-response": { source: "iana", extensions: ["spp"] }, "application/sdp": { source: "iana", extensions: ["sdp"] }, "application/secevent+jwt": { source: "iana" }, "application/senml+cbor": { source: "iana" }, "application/senml+json": { source: "iana", compressible: true }, "application/senml+xml": { source: "iana", compressible: true, extensions: ["senmlx"] }, "application/senml-etch+cbor": { source: "iana" }, "application/senml-etch+json": { source: "iana", compressible: true }, "application/senml-exi": { source: "iana" }, "application/sensml+cbor": { source: "iana" }, "application/sensml+json": { source: "iana", compressible: true }, "application/sensml+xml": { source: "iana", compressible: true, extensions: ["sensmlx"] }, "application/sensml-exi": { source: "iana" }, "application/sep+xml": { source: "iana", compressible: true }, "application/sep-exi": { source: "iana" }, "application/session-info": { source: "iana" }, "application/set-payment": { source: "iana" }, "application/set-payment-initiation": { source: "iana", extensions: ["setpay"] }, "application/set-registration": { source: "iana" }, "application/set-registration-initiation": { source: "iana", extensions: ["setreg"] }, "application/sgml": { source: "iana" }, "application/sgml-open-catalog": { source: "iana" }, "application/shf+xml": { source: "iana", compressible: true, extensions: ["shf"] }, "application/sieve": { source: "iana", extensions: ["siv", "sieve"] }, "application/simple-filter+xml": { source: "iana", compressible: true }, "application/simple-message-summary": { source: "iana" }, "application/simplesymbolcontainer": { source: "iana" }, "application/sipc": { source: "iana" }, "application/slate": { source: "iana" }, "application/smil": { source: "iana" }, "application/smil+xml": { source: "iana", compressible: true, extensions: ["smi", "smil"] }, "application/smpte336m": { source: "iana" }, "application/soap+fastinfoset": { source: "iana" }, "application/soap+xml": { source: "iana", compressible: true }, "application/sparql-query": { source: "iana", extensions: ["rq"] }, "application/sparql-results+xml": { source: "iana", compressible: true, extensions: ["srx"] }, "application/spdx+json": { source: "iana", compressible: true }, "application/spirits-event+xml": { source: "iana", compressible: true }, "application/sql": { source: "iana" }, "application/srgs": { source: "iana", extensions: ["gram"] }, "application/srgs+xml": { source: "iana", compressible: true, extensions: ["grxml"] }, "application/sru+xml": { source: "iana", compressible: true, extensions: ["sru"] }, "application/ssdl+xml": { source: "apache", compressible: true, extensions: ["ssdl"] }, "application/ssml+xml": { source: "iana", compressible: true, extensions: ["ssml"] }, "application/stix+json": { source: "iana", compressible: true }, "application/swid+xml": { source: "iana", compressible: true, extensions: ["swidtag"] }, "application/tamp-apex-update": { source: "iana" }, "application/tamp-apex-update-confirm": { source: "iana" }, "application/tamp-community-update": { source: "iana" }, "application/tamp-community-update-confirm": { source: "iana" }, "application/tamp-error": { source: "iana" }, "application/tamp-sequence-adjust": { source: "iana" }, "application/tamp-sequence-adjust-confirm": { source: "iana" }, "application/tamp-status-query": { source: "iana" }, "application/tamp-status-response": { source: "iana" }, "application/tamp-update": { source: "iana" }, "application/tamp-update-confirm": { source: "iana" }, "application/tar": { compressible: true }, "application/taxii+json": { source: "iana", compressible: true }, "application/td+json": { source: "iana", compressible: true }, "application/tei+xml": { source: "iana", compressible: true, extensions: ["tei", "teicorpus"] }, "application/tetra_isi": { source: "iana" }, "application/thraud+xml": { source: "iana", compressible: true, extensions: ["tfi"] }, "application/timestamp-query": { source: "iana" }, "application/timestamp-reply": { source: "iana" }, "application/timestamped-data": { source: "iana", extensions: ["tsd"] }, "application/tlsrpt+gzip": { source: "iana" }, "application/tlsrpt+json": { source: "iana", compressible: true }, "application/tnauthlist": { source: "iana" }, "application/token-introspection+jwt": { source: "iana" }, "application/toml": { compressible: true, extensions: ["toml"] }, "application/trickle-ice-sdpfrag": { source: "iana" }, "application/trig": { source: "iana", extensions: ["trig"] }, "application/ttml+xml": { source: "iana", compressible: true, extensions: ["ttml"] }, "application/tve-trigger": { source: "iana" }, "application/tzif": { source: "iana" }, "application/tzif-leap": { source: "iana" }, "application/ubjson": { compressible: false, extensions: ["ubj"] }, "application/ulpfec": { source: "iana" }, "application/urc-grpsheet+xml": { source: "iana", compressible: true }, "application/urc-ressheet+xml": { source: "iana", compressible: true, extensions: ["rsheet"] }, "application/urc-targetdesc+xml": { source: "iana", compressible: true, extensions: ["td"] }, "application/urc-uisocketdesc+xml": { source: "iana", compressible: true }, "application/vcard+json": { source: "iana", compressible: true }, "application/vcard+xml": { source: "iana", compressible: true }, "application/vemmi": { source: "iana" }, "application/vividence.scriptfile": { source: "apache" }, "application/vnd.1000minds.decision-model+xml": { source: "iana", compressible: true, extensions: ["1km"] }, "application/vnd.3gpp-prose+xml": { source: "iana", compressible: true }, "application/vnd.3gpp-prose-pc3ch+xml": { source: "iana", compressible: true }, "application/vnd.3gpp-v2x-local-service-information": { source: "iana" }, "application/vnd.3gpp.5gnas": { source: "iana" }, "application/vnd.3gpp.access-transfer-events+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.bsf+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.gmop+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.gtpc": { source: "iana" }, "application/vnd.3gpp.interworking-data": { source: "iana" }, "application/vnd.3gpp.lpp": { source: "iana" }, "application/vnd.3gpp.mc-signalling-ear": { source: "iana" }, "application/vnd.3gpp.mcdata-affiliation-command+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcdata-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcdata-payload": { source: "iana" }, "application/vnd.3gpp.mcdata-service-config+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcdata-signalling": { source: "iana" }, "application/vnd.3gpp.mcdata-ue-config+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcdata-user-profile+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-affiliation-command+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-floor-request+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-location-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-mbms-usage-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-service-config+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-signed+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-ue-config+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-ue-init-config+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcptt-user-profile+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcvideo-affiliation-command+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcvideo-affiliation-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcvideo-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcvideo-location-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcvideo-mbms-usage-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcvideo-service-config+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcvideo-transmission-request+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcvideo-ue-config+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mcvideo-user-profile+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.mid-call+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.ngap": { source: "iana" }, "application/vnd.3gpp.pfcp": { source: "iana" }, "application/vnd.3gpp.pic-bw-large": { source: "iana", extensions: ["plb"] }, "application/vnd.3gpp.pic-bw-small": { source: "iana", extensions: ["psb"] }, "application/vnd.3gpp.pic-bw-var": { source: "iana", extensions: ["pvb"] }, "application/vnd.3gpp.s1ap": { source: "iana" }, "application/vnd.3gpp.sms": { source: "iana" }, "application/vnd.3gpp.sms+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.srvcc-ext+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.srvcc-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.state-and-event-info+xml": { source: "iana", compressible: true }, "application/vnd.3gpp.ussd+xml": { source: "iana", compressible: true }, "application/vnd.3gpp2.bcmcsinfo+xml": { source: "iana", compressible: true }, "application/vnd.3gpp2.sms": { source: "iana" }, "application/vnd.3gpp2.tcap": { source: "iana", extensions: ["tcap"] }, "application/vnd.3lightssoftware.imagescal": { source: "iana" }, "application/vnd.3m.post-it-notes": { source: "iana", extensions: ["pwn"] }, "application/vnd.accpac.simply.aso": { source: "iana", extensions: ["aso"] }, "application/vnd.accpac.simply.imp": { source: "iana", extensions: ["imp"] }, "application/vnd.acucobol": { source: "iana", extensions: ["acu"] }, "application/vnd.acucorp": { source: "iana", extensions: ["atc", "acutc"] }, "application/vnd.adobe.air-application-installer-package+zip": { source: "apache", compressible: false, extensions: ["air"] }, "application/vnd.adobe.flash.movie": { source: "iana" }, "application/vnd.adobe.formscentral.fcdt": { source: "iana", extensions: ["fcdt"] }, "application/vnd.adobe.fxp": { source: "iana", extensions: ["fxp", "fxpl"] }, "application/vnd.adobe.partial-upload": { source: "iana" }, "application/vnd.adobe.xdp+xml": { source: "iana", compressible: true, extensions: ["xdp"] }, "application/vnd.adobe.xfdf": { source: "iana", extensions: ["xfdf"] }, "application/vnd.aether.imp": { source: "iana" }, "application/vnd.afpc.afplinedata": { source: "iana" }, "application/vnd.afpc.afplinedata-pagedef": { source: "iana" }, "application/vnd.afpc.cmoca-cmresource": { source: "iana" }, "application/vnd.afpc.foca-charset": { source: "iana" }, "application/vnd.afpc.foca-codedfont": { source: "iana" }, "application/vnd.afpc.foca-codepage": { source: "iana" }, "application/vnd.afpc.modca": { source: "iana" }, "application/vnd.afpc.modca-cmtable": { source: "iana" }, "application/vnd.afpc.modca-formdef": { source: "iana" }, "application/vnd.afpc.modca-mediummap": { source: "iana" }, "application/vnd.afpc.modca-objectcontainer": { source: "iana" }, "application/vnd.afpc.modca-overlay": { source: "iana" }, "application/vnd.afpc.modca-pagesegment": { source: "iana" }, "application/vnd.age": { source: "iana", extensions: ["age"] }, "application/vnd.ah-barcode": { source: "iana" }, "application/vnd.ahead.space": { source: "iana", extensions: ["ahead"] }, "application/vnd.airzip.filesecure.azf": { source: "iana", extensions: ["azf"] }, "application/vnd.airzip.filesecure.azs": { source: "iana", extensions: ["azs"] }, "application/vnd.amadeus+json": { source: "iana", compressible: true }, "application/vnd.amazon.ebook": { source: "apache", extensions: ["azw"] }, "application/vnd.amazon.mobi8-ebook": { source: "iana" }, "application/vnd.americandynamics.acc": { source: "iana", extensions: ["acc"] }, "application/vnd.amiga.ami": { source: "iana", extensions: ["ami"] }, "application/vnd.amundsen.maze+xml": { source: "iana", compressible: true }, "application/vnd.android.ota": { source: "iana" }, "application/vnd.android.package-archive": { source: "apache", compressible: false, extensions: ["apk"] }, "application/vnd.anki": { source: "iana" }, "application/vnd.anser-web-certificate-issue-initiation": { source: "iana", extensions: ["cii"] }, "application/vnd.anser-web-funds-transfer-initiation": { source: "apache", extensions: ["fti"] }, "application/vnd.antix.game-component": { source: "iana", extensions: ["atx"] }, "application/vnd.apache.arrow.file": { source: "iana" }, "application/vnd.apache.arrow.stream": { source: "iana" }, "application/vnd.apache.thrift.binary": { source: "iana" }, "application/vnd.apache.thrift.compact": { source: "iana" }, "application/vnd.apache.thrift.json": { source: "iana" }, "application/vnd.api+json": { source: "iana", compressible: true }, "application/vnd.aplextor.warrp+json": { source: "iana", compressible: true }, "application/vnd.apothekende.reservation+json": { source: "iana", compressible: true }, "application/vnd.apple.installer+xml": { source: "iana", compressible: true, extensions: ["mpkg"] }, "application/vnd.apple.keynote": { source: "iana", extensions: ["key"] }, "application/vnd.apple.mpegurl": { source: "iana", extensions: ["m3u8"] }, "application/vnd.apple.numbers": { source: "iana", extensions: ["numbers"] }, "application/vnd.apple.pages": { source: "iana", extensions: ["pages"] }, "application/vnd.apple.pkpass": { compressible: false, extensions: ["pkpass"] }, "application/vnd.arastra.swi": { source: "iana" }, "application/vnd.aristanetworks.swi": { source: "iana", extensions: ["swi"] }, "application/vnd.artisan+json": { source: "iana", compressible: true }, "application/vnd.artsquare": { source: "iana" }, "application/vnd.astraea-software.iota": { source: "iana", extensions: ["iota"] }, "application/vnd.audiograph": { source: "iana", extensions: ["aep"] }, "application/vnd.autopackage": { source: "iana" }, "application/vnd.avalon+json": { source: "iana", compressible: true }, "application/vnd.avistar+xml": { source: "iana", compressible: true }, "application/vnd.balsamiq.bmml+xml": { source: "iana", compressible: true, extensions: ["bmml"] }, "application/vnd.balsamiq.bmpr": { source: "iana" }, "application/vnd.banana-accounting": { source: "iana" }, "application/vnd.bbf.usp.error": { source: "iana" }, "application/vnd.bbf.usp.msg": { source: "iana" }, "application/vnd.bbf.usp.msg+json": { source: "iana", compressible: true }, "application/vnd.bekitzur-stech+json": { source: "iana", compressible: true }, "application/vnd.bint.med-content": { source: "iana" }, "application/vnd.biopax.rdf+xml": { source: "iana", compressible: true }, "application/vnd.blink-idb-value-wrapper": { source: "iana" }, "application/vnd.blueice.multipass": { source: "iana", extensions: ["mpm"] }, "application/vnd.bluetooth.ep.oob": { source: "iana" }, "application/vnd.bluetooth.le.oob": { source: "iana" }, "application/vnd.bmi": { source: "iana", extensions: ["bmi"] }, "application/vnd.bpf": { source: "iana" }, "application/vnd.bpf3": { source: "iana" }, "application/vnd.businessobjects": { source: "iana", extensions: ["rep"] }, "application/vnd.byu.uapi+json": { source: "iana", compressible: true }, "application/vnd.cab-jscript": { source: "iana" }, "application/vnd.canon-cpdl": { source: "iana" }, "application/vnd.canon-lips": { source: "iana" }, "application/vnd.capasystems-pg+json": { source: "iana", compressible: true }, "application/vnd.cendio.thinlinc.clientconf": { source: "iana" }, "application/vnd.century-systems.tcp_stream": { source: "iana" }, "application/vnd.chemdraw+xml": { source: "iana", compressible: true, extensions: ["cdxml"] }, "application/vnd.chess-pgn": { source: "iana" }, "application/vnd.chipnuts.karaoke-mmd": { source: "iana", extensions: ["mmd"] }, "application/vnd.ciedi": { source: "iana" }, "application/vnd.cinderella": { source: "iana", extensions: ["cdy"] }, "application/vnd.cirpack.isdn-ext": { source: "iana" }, "application/vnd.citationstyles.style+xml": { source: "iana", compressible: true, extensions: ["csl"] }, "application/vnd.claymore": { source: "iana", extensions: ["cla"] }, "application/vnd.cloanto.rp9": { source: "iana", extensions: ["rp9"] }, "application/vnd.clonk.c4group": { source: "iana", extensions: ["c4g", "c4d", "c4f", "c4p", "c4u"] }, "application/vnd.cluetrust.cartomobile-config": { source: "iana", extensions: ["c11amc"] }, "application/vnd.cluetrust.cartomobile-config-pkg": { source: "iana", extensions: ["c11amz"] }, "application/vnd.coffeescript": { source: "iana" }, "application/vnd.collabio.xodocuments.document": { source: "iana" }, "application/vnd.collabio.xodocuments.document-template": { source: "iana" }, "application/vnd.collabio.xodocuments.presentation": { source: "iana" }, "application/vnd.collabio.xodocuments.presentation-template": { source: "iana" }, "application/vnd.collabio.xodocuments.spreadsheet": { source: "iana" }, "application/vnd.collabio.xodocuments.spreadsheet-template": { source: "iana" }, "application/vnd.collection+json": { source: "iana", compressible: true }, "application/vnd.collection.doc+json": { source: "iana", compressible: true }, "application/vnd.collection.next+json": { source: "iana", compressible: true }, "application/vnd.comicbook+zip": { source: "iana", compressible: false }, "application/vnd.comicbook-rar": { source: "iana" }, "application/vnd.commerce-battelle": { source: "iana" }, "application/vnd.commonspace": { source: "iana", extensions: ["csp"] }, "application/vnd.contact.cmsg": { source: "iana", extensions: ["cdbcmsg"] }, "application/vnd.coreos.ignition+json": { source: "iana", compressible: true }, "application/vnd.cosmocaller": { source: "iana", extensions: ["cmc"] }, "application/vnd.crick.clicker": { source: "iana", extensions: ["clkx"] }, "application/vnd.crick.clicker.keyboard": { source: "iana", extensions: ["clkk"] }, "application/vnd.crick.clicker.palette": { source: "iana", extensions: ["clkp"] }, "application/vnd.crick.clicker.template": { source: "iana", extensions: ["clkt"] }, "application/vnd.crick.clicker.wordbank": { source: "iana", extensions: ["clkw"] }, "application/vnd.criticaltools.wbs+xml": { source: "iana", compressible: true, extensions: ["wbs"] }, "application/vnd.cryptii.pipe+json": { source: "iana", compressible: true }, "application/vnd.crypto-shade-file": { source: "iana" }, "application/vnd.cryptomator.encrypted": { source: "iana" }, "application/vnd.cryptomator.vault": { source: "iana" }, "application/vnd.ctc-posml": { source: "iana", extensions: ["pml"] }, "application/vnd.ctct.ws+xml": { source: "iana", compressible: true }, "application/vnd.cups-pdf": { source: "iana" }, "application/vnd.cups-postscript": { source: "iana" }, "application/vnd.cups-ppd": { source: "iana", extensions: ["ppd"] }, "application/vnd.cups-raster": { source: "iana" }, "application/vnd.cups-raw": { source: "iana" }, "application/vnd.curl": { source: "iana" }, "application/vnd.curl.car": { source: "apache", extensions: ["car"] }, "application/vnd.curl.pcurl": { source: "apache", extensions: ["pcurl"] }, "application/vnd.cyan.dean.root+xml": { source: "iana", compressible: true }, "application/vnd.cybank": { source: "iana" }, "application/vnd.cyclonedx+json": { source: "iana", compressible: true }, "application/vnd.cyclonedx+xml": { source: "iana", compressible: true }, "application/vnd.d2l.coursepackage1p0+zip": { source: "iana", compressible: false }, "application/vnd.d3m-dataset": { source: "iana" }, "application/vnd.d3m-problem": { source: "iana" }, "application/vnd.dart": { source: "iana", compressible: true, extensions: ["dart"] }, "application/vnd.data-vision.rdz": { source: "iana", extensions: ["rdz"] }, "application/vnd.datapackage+json": { source: "iana", compressible: true }, "application/vnd.dataresource+json": { source: "iana", compressible: true }, "application/vnd.dbf": { source: "iana", extensions: ["dbf"] }, "application/vnd.debian.binary-package": { source: "iana" }, "application/vnd.dece.data": { source: "iana", extensions: ["uvf", "uvvf", "uvd", "uvvd"] }, "application/vnd.dece.ttml+xml": { source: "iana", compressible: true, extensions: ["uvt", "uvvt"] }, "application/vnd.dece.unspecified": { source: "iana", extensions: ["uvx", "uvvx"] }, "application/vnd.dece.zip": { source: "iana", extensions: ["uvz", "uvvz"] }, "application/vnd.denovo.fcselayout-link": { source: "iana", extensions: ["fe_launch"] }, "application/vnd.desmume.movie": { source: "iana" }, "application/vnd.dir-bi.plate-dl-nosuffix": { source: "iana" }, "application/vnd.dm.delegation+xml": { source: "iana", compressible: true }, "application/vnd.dna": { source: "iana", extensions: ["dna"] }, "application/vnd.document+json": { source: "iana", compressible: true }, "application/vnd.dolby.mlp": { source: "apache", extensions: ["mlp"] }, "application/vnd.dolby.mobile.1": { source: "iana" }, "application/vnd.dolby.mobile.2": { source: "iana" }, "application/vnd.doremir.scorecloud-binary-document": { source: "iana" }, "application/vnd.dpgraph": { source: "iana", extensions: ["dpg"] }, "application/vnd.dreamfactory": { source: "iana", extensions: ["dfac"] }, "application/vnd.drive+json": { source: "iana", compressible: true }, "application/vnd.ds-keypoint": { source: "apache", extensions: ["kpxx"] }, "application/vnd.dtg.local": { source: "iana" }, "application/vnd.dtg.local.flash": { source: "iana" }, "application/vnd.dtg.local.html": { source: "iana" }, "application/vnd.dvb.ait": { source: "iana", extensions: ["ait"] }, "application/vnd.dvb.dvbisl+xml": { source: "iana", compressible: true }, "application/vnd.dvb.dvbj": { source: "iana" }, "application/vnd.dvb.esgcontainer": { source: "iana" }, "application/vnd.dvb.ipdcdftnotifaccess": { source: "iana" }, "application/vnd.dvb.ipdcesgaccess": { source: "iana" }, "application/vnd.dvb.ipdcesgaccess2": { source: "iana" }, "application/vnd.dvb.ipdcesgpdd": { source: "iana" }, "application/vnd.dvb.ipdcroaming": { source: "iana" }, "application/vnd.dvb.iptv.alfec-base": { source: "iana" }, "application/vnd.dvb.iptv.alfec-enhancement": { source: "iana" }, "application/vnd.dvb.notif-aggregate-root+xml": { source: "iana", compressible: true }, "application/vnd.dvb.notif-container+xml": { source: "iana", compressible: true }, "application/vnd.dvb.notif-generic+xml": { source: "iana", compressible: true }, "application/vnd.dvb.notif-ia-msglist+xml": { source: "iana", compressible: true }, "application/vnd.dvb.notif-ia-registration-request+xml": { source: "iana", compressible: true }, "application/vnd.dvb.notif-ia-registration-response+xml": { source: "iana", compressible: true }, "application/vnd.dvb.notif-init+xml": { source: "iana", compressible: true }, "application/vnd.dvb.pfr": { source: "iana" }, "application/vnd.dvb.service": { source: "iana", extensions: ["svc"] }, "application/vnd.dxr": { source: "iana" }, "application/vnd.dynageo": { source: "iana", extensions: ["geo"] }, "application/vnd.dzr": { source: "iana" }, "application/vnd.easykaraoke.cdgdownload": { source: "iana" }, "application/vnd.ecdis-update": { source: "iana" }, "application/vnd.ecip.rlp": { source: "iana" }, "application/vnd.eclipse.ditto+json": { source: "iana", compressible: true }, "application/vnd.ecowin.chart": { source: "iana", extensions: ["mag"] }, "application/vnd.ecowin.filerequest": { source: "iana" }, "application/vnd.ecowin.fileupdate": { source: "iana" }, "application/vnd.ecowin.series": { source: "iana" }, "application/vnd.ecowin.seriesrequest": { source: "iana" }, "application/vnd.ecowin.seriesupdate": { source: "iana" }, "application/vnd.efi.img": { source: "iana" }, "application/vnd.efi.iso": { source: "iana" }, "application/vnd.emclient.accessrequest+xml": { source: "iana", compressible: true }, "application/vnd.enliven": { source: "iana", extensions: ["nml"] }, "application/vnd.enphase.envoy": { source: "iana" }, "application/vnd.eprints.data+xml": { source: "iana", compressible: true }, "application/vnd.epson.esf": { source: "iana", extensions: ["esf"] }, "application/vnd.epson.msf": { source: "iana", extensions: ["msf"] }, "application/vnd.epson.quickanime": { source: "iana", extensions: ["qam"] }, "application/vnd.epson.salt": { source: "iana", extensions: ["slt"] }, "application/vnd.epson.ssf": { source: "iana", extensions: ["ssf"] }, "application/vnd.ericsson.quickcall": { source: "iana" }, "application/vnd.espass-espass+zip": { source: "iana", compressible: false }, "application/vnd.eszigno3+xml": { source: "iana", compressible: true, extensions: ["es3", "et3"] }, "application/vnd.etsi.aoc+xml": { source: "iana", compressible: true }, "application/vnd.etsi.asic-e+zip": { source: "iana", compressible: false }, "application/vnd.etsi.asic-s+zip": { source: "iana", compressible: false }, "application/vnd.etsi.cug+xml": { source: "iana", compressible: true }, "application/vnd.etsi.iptvcommand+xml": { source: "iana", compressible: true }, "application/vnd.etsi.iptvdiscovery+xml": { source: "iana", compressible: true }, "application/vnd.etsi.iptvprofile+xml": { source: "iana", compressible: true }, "application/vnd.etsi.iptvsad-bc+xml": { source: "iana", compressible: true }, "application/vnd.etsi.iptvsad-cod+xml": { source: "iana", compressible: true }, "application/vnd.etsi.iptvsad-npvr+xml": { source: "iana", compressible: true }, "application/vnd.etsi.iptvservice+xml": { source: "iana", compressible: true }, "application/vnd.etsi.iptvsync+xml": { source: "iana", compressible: true }, "application/vnd.etsi.iptvueprofile+xml": { source: "iana", compressible: true }, "application/vnd.etsi.mcid+xml": { source: "iana", compressible: true }, "application/vnd.etsi.mheg5": { source: "iana" }, "application/vnd.etsi.overload-control-policy-dataset+xml": { source: "iana", compressible: true }, "application/vnd.etsi.pstn+xml": { source: "iana", compressible: true }, "application/vnd.etsi.sci+xml": { source: "iana", compressible: true }, "application/vnd.etsi.simservs+xml": { source: "iana", compressible: true }, "application/vnd.etsi.timestamp-token": { source: "iana" }, "application/vnd.etsi.tsl+xml": { source: "iana", compressible: true }, "application/vnd.etsi.tsl.der": { source: "iana" }, "application/vnd.eu.kasparian.car+json": { source: "iana", compressible: true }, "application/vnd.eudora.data": { source: "iana" }, "application/vnd.evolv.ecig.profile": { source: "iana" }, "application/vnd.evolv.ecig.settings": { source: "iana" }, "application/vnd.evolv.ecig.theme": { source: "iana" }, "application/vnd.exstream-empower+zip": { source: "iana", compressible: false }, "application/vnd.exstream-package": { source: "iana" }, "application/vnd.ezpix-album": { source: "iana", extensions: ["ez2"] }, "application/vnd.ezpix-package": { source: "iana", extensions: ["ez3"] }, "application/vnd.f-secure.mobile": { source: "iana" }, "application/vnd.familysearch.gedcom+zip": { source: "iana", compressible: false }, "application/vnd.fastcopy-disk-image": { source: "iana" }, "application/vnd.fdf": { source: "iana", extensions: ["fdf"] }, "application/vnd.fdsn.mseed": { source: "iana", extensions: ["mseed"] }, "application/vnd.fdsn.seed": { source: "iana", extensions: ["seed", "dataless"] }, "application/vnd.ffsns": { source: "iana" }, "application/vnd.ficlab.flb+zip": { source: "iana", compressible: false }, "application/vnd.filmit.zfc": { source: "iana" }, "application/vnd.fints": { source: "iana" }, "application/vnd.firemonkeys.cloudcell": { source: "iana" }, "application/vnd.flographit": { source: "iana", extensions: ["gph"] }, "application/vnd.fluxtime.clip": { source: "iana", extensions: ["ftc"] }, "application/vnd.font-fontforge-sfd": { source: "iana" }, "application/vnd.framemaker": { source: "iana", extensions: ["fm", "frame", "maker", "book"] }, "application/vnd.frogans.fnc": { source: "iana", extensions: ["fnc"] }, "application/vnd.frogans.ltf": { source: "iana", extensions: ["ltf"] }, "application/vnd.fsc.weblaunch": { source: "iana", extensions: ["fsc"] }, "application/vnd.fujifilm.fb.docuworks": { source: "iana" }, "application/vnd.fujifilm.fb.docuworks.binder": { source: "iana" }, "application/vnd.fujifilm.fb.docuworks.container": { source: "iana" }, "application/vnd.fujifilm.fb.jfi+xml": { source: "iana", compressible: true }, "application/vnd.fujitsu.oasys": { source: "iana", extensions: ["oas"] }, "application/vnd.fujitsu.oasys2": { source: "iana", extensions: ["oa2"] }, "application/vnd.fujitsu.oasys3": { source: "iana", extensions: ["oa3"] }, "application/vnd.fujitsu.oasysgp": { source: "iana", extensions: ["fg5"] }, "application/vnd.fujitsu.oasysprs": { source: "iana", extensions: ["bh2"] }, "application/vnd.fujixerox.art-ex": { source: "iana" }, "application/vnd.fujixerox.art4": { source: "iana" }, "application/vnd.fujixerox.ddd": { source: "iana", extensions: ["ddd"] }, "application/vnd.fujixerox.docuworks": { source: "iana", extensions: ["xdw"] }, "application/vnd.fujixerox.docuworks.binder": { source: "iana", extensions: ["xbd"] }, "application/vnd.fujixerox.docuworks.container": { source: "iana" }, "application/vnd.fujixerox.hbpl": { source: "iana" }, "application/vnd.fut-misnet": { source: "iana" }, "application/vnd.futoin+cbor": { source: "iana" }, "application/vnd.futoin+json": { source: "iana", compressible: true }, "application/vnd.fuzzysheet": { source: "iana", extensions: ["fzs"] }, "application/vnd.genomatix.tuxedo": { source: "iana", extensions: ["txd"] }, "application/vnd.gentics.grd+json": { source: "iana", compressible: true }, "application/vnd.geo+json": { source: "iana", compressible: true }, "application/vnd.geocube+xml": { source: "iana", compressible: true }, "application/vnd.geogebra.file": { source: "iana", extensions: ["ggb"] }, "application/vnd.geogebra.slides": { source: "iana" }, "application/vnd.geogebra.tool": { source: "iana", extensions: ["ggt"] }, "application/vnd.geometry-explorer": { source: "iana", extensions: ["gex", "gre"] }, "application/vnd.geonext": { source: "iana", extensions: ["gxt"] }, "application/vnd.geoplan": { source: "iana", extensions: ["g2w"] }, "application/vnd.geospace": { source: "iana", extensions: ["g3w"] }, "application/vnd.gerber": { source: "iana" }, "application/vnd.globalplatform.card-content-mgt": { source: "iana" }, "application/vnd.globalplatform.card-content-mgt-response": { source: "iana" }, "application/vnd.gmx": { source: "iana", extensions: ["gmx"] }, "application/vnd.google-apps.document": { compressible: false, extensions: ["gdoc"] }, "application/vnd.google-apps.presentation": { compressible: false, extensions: ["gslides"] }, "application/vnd.google-apps.spreadsheet": { compressible: false, extensions: ["gsheet"] }, "application/vnd.google-earth.kml+xml": { source: "iana", compressible: true, extensions: ["kml"] }, "application/vnd.google-earth.kmz": { source: "iana", compressible: false, extensions: ["kmz"] }, "application/vnd.gov.sk.e-form+xml": { source: "iana", compressible: true }, "application/vnd.gov.sk.e-form+zip": { source: "iana", compressible: false }, "application/vnd.gov.sk.xmldatacontainer+xml": { source: "iana", compressible: true }, "application/vnd.grafeq": { source: "iana", extensions: ["gqf", "gqs"] }, "application/vnd.gridmp": { source: "iana" }, "application/vnd.groove-account": { source: "iana", extensions: ["gac"] }, "application/vnd.groove-help": { source: "iana", extensions: ["ghf"] }, "application/vnd.groove-identity-message": { source: "iana", extensions: ["gim"] }, "application/vnd.groove-injector": { source: "iana", extensions: ["grv"] }, "application/vnd.groove-tool-message": { source: "iana", extensions: ["gtm"] }, "application/vnd.groove-tool-template": { source: "iana", extensions: ["tpl"] }, "application/vnd.groove-vcard": { source: "iana", extensions: ["vcg"] }, "application/vnd.hal+json": { source: "iana", compressible: true }, "application/vnd.hal+xml": { source: "iana", compressible: true, extensions: ["hal"] }, "application/vnd.handheld-entertainment+xml": { source: "iana", compressible: true, extensions: ["zmm"] }, "application/vnd.hbci": { source: "iana", extensions: ["hbci"] }, "application/vnd.hc+json": { source: "iana", compressible: true }, "application/vnd.hcl-bireports": { source: "iana" }, "application/vnd.hdt": { source: "iana" }, "application/vnd.heroku+json": { source: "iana", compressible: true }, "application/vnd.hhe.lesson-player": { source: "iana", extensions: ["les"] }, "application/vnd.hl7cda+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/vnd.hl7v2+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/vnd.hp-hpgl": { source: "iana", extensions: ["hpgl"] }, "application/vnd.hp-hpid": { source: "iana", extensions: ["hpid"] }, "application/vnd.hp-hps": { source: "iana", extensions: ["hps"] }, "application/vnd.hp-jlyt": { source: "iana", extensions: ["jlt"] }, "application/vnd.hp-pcl": { source: "iana", extensions: ["pcl"] }, "application/vnd.hp-pclxl": { source: "iana", extensions: ["pclxl"] }, "application/vnd.httphone": { source: "iana" }, "application/vnd.hydrostatix.sof-data": { source: "iana", extensions: ["sfd-hdstx"] }, "application/vnd.hyper+json": { source: "iana", compressible: true }, "application/vnd.hyper-item+json": { source: "iana", compressible: true }, "application/vnd.hyperdrive+json": { source: "iana", compressible: true }, "application/vnd.hzn-3d-crossword": { source: "iana" }, "application/vnd.ibm.afplinedata": { source: "iana" }, "application/vnd.ibm.electronic-media": { source: "iana" }, "application/vnd.ibm.minipay": { source: "iana", extensions: ["mpy"] }, "application/vnd.ibm.modcap": { source: "iana", extensions: ["afp", "listafp", "list3820"] }, "application/vnd.ibm.rights-management": { source: "iana", extensions: ["irm"] }, "application/vnd.ibm.secure-container": { source: "iana", extensions: ["sc"] }, "application/vnd.iccprofile": { source: "iana", extensions: ["icc", "icm"] }, "application/vnd.ieee.1905": { source: "iana" }, "application/vnd.igloader": { source: "iana", extensions: ["igl"] }, "application/vnd.imagemeter.folder+zip": { source: "iana", compressible: false }, "application/vnd.imagemeter.image+zip": { source: "iana", compressible: false }, "application/vnd.immervision-ivp": { source: "iana", extensions: ["ivp"] }, "application/vnd.immervision-ivu": { source: "iana", extensions: ["ivu"] }, "application/vnd.ims.imsccv1p1": { source: "iana" }, "application/vnd.ims.imsccv1p2": { source: "iana" }, "application/vnd.ims.imsccv1p3": { source: "iana" }, "application/vnd.ims.lis.v2.result+json": { source: "iana", compressible: true }, "application/vnd.ims.lti.v2.toolconsumerprofile+json": { source: "iana", compressible: true }, "application/vnd.ims.lti.v2.toolproxy+json": { source: "iana", compressible: true }, "application/vnd.ims.lti.v2.toolproxy.id+json": { source: "iana", compressible: true }, "application/vnd.ims.lti.v2.toolsettings+json": { source: "iana", compressible: true }, "application/vnd.ims.lti.v2.toolsettings.simple+json": { source: "iana", compressible: true }, "application/vnd.informedcontrol.rms+xml": { source: "iana", compressible: true }, "application/vnd.informix-visionary": { source: "iana" }, "application/vnd.infotech.project": { source: "iana" }, "application/vnd.infotech.project+xml": { source: "iana", compressible: true }, "application/vnd.innopath.wamp.notification": { source: "iana" }, "application/vnd.insors.igm": { source: "iana", extensions: ["igm"] }, "application/vnd.intercon.formnet": { source: "iana", extensions: ["xpw", "xpx"] }, "application/vnd.intergeo": { source: "iana", extensions: ["i2g"] }, "application/vnd.intertrust.digibox": { source: "iana" }, "application/vnd.intertrust.nncp": { source: "iana" }, "application/vnd.intu.qbo": { source: "iana", extensions: ["qbo"] }, "application/vnd.intu.qfx": { source: "iana", extensions: ["qfx"] }, "application/vnd.iptc.g2.catalogitem+xml": { source: "iana", compressible: true }, "application/vnd.iptc.g2.conceptitem+xml": { source: "iana", compressible: true }, "application/vnd.iptc.g2.knowledgeitem+xml": { source: "iana", compressible: true }, "application/vnd.iptc.g2.newsitem+xml": { source: "iana", compressible: true }, "application/vnd.iptc.g2.newsmessage+xml": { source: "iana", compressible: true }, "application/vnd.iptc.g2.packageitem+xml": { source: "iana", compressible: true }, "application/vnd.iptc.g2.planningitem+xml": { source: "iana", compressible: true }, "application/vnd.ipunplugged.rcprofile": { source: "iana", extensions: ["rcprofile"] }, "application/vnd.irepository.package+xml": { source: "iana", compressible: true, extensions: ["irp"] }, "application/vnd.is-xpr": { source: "iana", extensions: ["xpr"] }, "application/vnd.isac.fcs": { source: "iana", extensions: ["fcs"] }, "application/vnd.iso11783-10+zip": { source: "iana", compressible: false }, "application/vnd.jam": { source: "iana", extensions: ["jam"] }, "application/vnd.japannet-directory-service": { source: "iana" }, "application/vnd.japannet-jpnstore-wakeup": { source: "iana" }, "application/vnd.japannet-payment-wakeup": { source: "iana" }, "application/vnd.japannet-registration": { source: "iana" }, "application/vnd.japannet-registration-wakeup": { source: "iana" }, "application/vnd.japannet-setstore-wakeup": { source: "iana" }, "application/vnd.japannet-verification": { source: "iana" }, "application/vnd.japannet-verification-wakeup": { source: "iana" }, "application/vnd.jcp.javame.midlet-rms": { source: "iana", extensions: ["rms"] }, "application/vnd.jisp": { source: "iana", extensions: ["jisp"] }, "application/vnd.joost.joda-archive": { source: "iana", extensions: ["joda"] }, "application/vnd.jsk.isdn-ngn": { source: "iana" }, "application/vnd.kahootz": { source: "iana", extensions: ["ktz", "ktr"] }, "application/vnd.kde.karbon": { source: "iana", extensions: ["karbon"] }, "application/vnd.kde.kchart": { source: "iana", extensions: ["chrt"] }, "application/vnd.kde.kformula": { source: "iana", extensions: ["kfo"] }, "application/vnd.kde.kivio": { source: "iana", extensions: ["flw"] }, "application/vnd.kde.kontour": { source: "iana", extensions: ["kon"] }, "application/vnd.kde.kpresenter": { source: "iana", extensions: ["kpr", "kpt"] }, "application/vnd.kde.kspread": { source: "iana", extensions: ["ksp"] }, "application/vnd.kde.kword": { source: "iana", extensions: ["kwd", "kwt"] }, "application/vnd.kenameaapp": { source: "iana", extensions: ["htke"] }, "application/vnd.kidspiration": { source: "iana", extensions: ["kia"] }, "application/vnd.kinar": { source: "iana", extensions: ["kne", "knp"] }, "application/vnd.koan": { source: "iana", extensions: ["skp", "skd", "skt", "skm"] }, "application/vnd.kodak-descriptor": { source: "iana", extensions: ["sse"] }, "application/vnd.las": { source: "iana" }, "application/vnd.las.las+json": { source: "iana", compressible: true }, "application/vnd.las.las+xml": { source: "iana", compressible: true, extensions: ["lasxml"] }, "application/vnd.laszip": { source: "iana" }, "application/vnd.leap+json": { source: "iana", compressible: true }, "application/vnd.liberty-request+xml": { source: "iana", compressible: true }, "application/vnd.llamagraphics.life-balance.desktop": { source: "iana", extensions: ["lbd"] }, "application/vnd.llamagraphics.life-balance.exchange+xml": { source: "iana", compressible: true, extensions: ["lbe"] }, "application/vnd.logipipe.circuit+zip": { source: "iana", compressible: false }, "application/vnd.loom": { source: "iana" }, "application/vnd.lotus-1-2-3": { source: "iana", extensions: ["123"] }, "application/vnd.lotus-approach": { source: "iana", extensions: ["apr"] }, "application/vnd.lotus-freelance": { source: "iana", extensions: ["pre"] }, "application/vnd.lotus-notes": { source: "iana", extensions: ["nsf"] }, "application/vnd.lotus-organizer": { source: "iana", extensions: ["org"] }, "application/vnd.lotus-screencam": { source: "iana", extensions: ["scm"] }, "application/vnd.lotus-wordpro": { source: "iana", extensions: ["lwp"] }, "application/vnd.macports.portpkg": { source: "iana", extensions: ["portpkg"] }, "application/vnd.mapbox-vector-tile": { source: "iana", extensions: ["mvt"] }, "application/vnd.marlin.drm.actiontoken+xml": { source: "iana", compressible: true }, "application/vnd.marlin.drm.conftoken+xml": { source: "iana", compressible: true }, "application/vnd.marlin.drm.license+xml": { source: "iana", compressible: true }, "application/vnd.marlin.drm.mdcf": { source: "iana" }, "application/vnd.mason+json": { source: "iana", compressible: true }, "application/vnd.maxar.archive.3tz+zip": { source: "iana", compressible: false }, "application/vnd.maxmind.maxmind-db": { source: "iana" }, "application/vnd.mcd": { source: "iana", extensions: ["mcd"] }, "application/vnd.medcalcdata": { source: "iana", extensions: ["mc1"] }, "application/vnd.mediastation.cdkey": { source: "iana", extensions: ["cdkey"] }, "application/vnd.meridian-slingshot": { source: "iana" }, "application/vnd.mfer": { source: "iana", extensions: ["mwf"] }, "application/vnd.mfmp": { source: "iana", extensions: ["mfm"] }, "application/vnd.micro+json": { source: "iana", compressible: true }, "application/vnd.micrografx.flo": { source: "iana", extensions: ["flo"] }, "application/vnd.micrografx.igx": { source: "iana", extensions: ["igx"] }, "application/vnd.microsoft.portable-executable": { source: "iana" }, "application/vnd.microsoft.windows.thumbnail-cache": { source: "iana" }, "application/vnd.miele+json": { source: "iana", compressible: true }, "application/vnd.mif": { source: "iana", extensions: ["mif"] }, "application/vnd.minisoft-hp3000-save": { source: "iana" }, "application/vnd.mitsubishi.misty-guard.trustweb": { source: "iana" }, "application/vnd.mobius.daf": { source: "iana", extensions: ["daf"] }, "application/vnd.mobius.dis": { source: "iana", extensions: ["dis"] }, "application/vnd.mobius.mbk": { source: "iana", extensions: ["mbk"] }, "application/vnd.mobius.mqy": { source: "iana", extensions: ["mqy"] }, "application/vnd.mobius.msl": { source: "iana", extensions: ["msl"] }, "application/vnd.mobius.plc": { source: "iana", extensions: ["plc"] }, "application/vnd.mobius.txf": { source: "iana", extensions: ["txf"] }, "application/vnd.mophun.application": { source: "iana", extensions: ["mpn"] }, "application/vnd.mophun.certificate": { source: "iana", extensions: ["mpc"] }, "application/vnd.motorola.flexsuite": { source: "iana" }, "application/vnd.motorola.flexsuite.adsi": { source: "iana" }, "application/vnd.motorola.flexsuite.fis": { source: "iana" }, "application/vnd.motorola.flexsuite.gotap": { source: "iana" }, "application/vnd.motorola.flexsuite.kmr": { source: "iana" }, "application/vnd.motorola.flexsuite.ttc": { source: "iana" }, "application/vnd.motorola.flexsuite.wem": { source: "iana" }, "application/vnd.motorola.iprm": { source: "iana" }, "application/vnd.mozilla.xul+xml": { source: "iana", compressible: true, extensions: ["xul"] }, "application/vnd.ms-3mfdocument": { source: "iana" }, "application/vnd.ms-artgalry": { source: "iana", extensions: ["cil"] }, "application/vnd.ms-asf": { source: "iana" }, "application/vnd.ms-cab-compressed": { source: "iana", extensions: ["cab"] }, "application/vnd.ms-color.iccprofile": { source: "apache" }, "application/vnd.ms-excel": { source: "iana", compressible: false, extensions: ["xls", "xlm", "xla", "xlc", "xlt", "xlw"] }, "application/vnd.ms-excel.addin.macroenabled.12": { source: "iana", extensions: ["xlam"] }, "application/vnd.ms-excel.sheet.binary.macroenabled.12": { source: "iana", extensions: ["xlsb"] }, "application/vnd.ms-excel.sheet.macroenabled.12": { source: "iana", extensions: ["xlsm"] }, "application/vnd.ms-excel.template.macroenabled.12": { source: "iana", extensions: ["xltm"] }, "application/vnd.ms-fontobject": { source: "iana", compressible: true, extensions: ["eot"] }, "application/vnd.ms-htmlhelp": { source: "iana", extensions: ["chm"] }, "application/vnd.ms-ims": { source: "iana", extensions: ["ims"] }, "application/vnd.ms-lrm": { source: "iana", extensions: ["lrm"] }, "application/vnd.ms-office.activex+xml": { source: "iana", compressible: true }, "application/vnd.ms-officetheme": { source: "iana", extensions: ["thmx"] }, "application/vnd.ms-opentype": { source: "apache", compressible: true }, "application/vnd.ms-outlook": { compressible: false, extensions: ["msg"] }, "application/vnd.ms-package.obfuscated-opentype": { source: "apache" }, "application/vnd.ms-pki.seccat": { source: "apache", extensions: ["cat"] }, "application/vnd.ms-pki.stl": { source: "apache", extensions: ["stl"] }, "application/vnd.ms-playready.initiator+xml": { source: "iana", compressible: true }, "application/vnd.ms-powerpoint": { source: "iana", compressible: false, extensions: ["ppt", "pps", "pot"] }, "application/vnd.ms-powerpoint.addin.macroenabled.12": { source: "iana", extensions: ["ppam"] }, "application/vnd.ms-powerpoint.presentation.macroenabled.12": { source: "iana", extensions: ["pptm"] }, "application/vnd.ms-powerpoint.slide.macroenabled.12": { source: "iana", extensions: ["sldm"] }, "application/vnd.ms-powerpoint.slideshow.macroenabled.12": { source: "iana", extensions: ["ppsm"] }, "application/vnd.ms-powerpoint.template.macroenabled.12": { source: "iana", extensions: ["potm"] }, "application/vnd.ms-printdevicecapabilities+xml": { source: "iana", compressible: true }, "application/vnd.ms-printing.printticket+xml": { source: "apache", compressible: true }, "application/vnd.ms-printschematicket+xml": { source: "iana", compressible: true }, "application/vnd.ms-project": { source: "iana", extensions: ["mpp", "mpt"] }, "application/vnd.ms-tnef": { source: "iana" }, "application/vnd.ms-windows.devicepairing": { source: "iana" }, "application/vnd.ms-windows.nwprinting.oob": { source: "iana" }, "application/vnd.ms-windows.printerpairing": { source: "iana" }, "application/vnd.ms-windows.wsd.oob": { source: "iana" }, "application/vnd.ms-wmdrm.lic-chlg-req": { source: "iana" }, "application/vnd.ms-wmdrm.lic-resp": { source: "iana" }, "application/vnd.ms-wmdrm.meter-chlg-req": { source: "iana" }, "application/vnd.ms-wmdrm.meter-resp": { source: "iana" }, "application/vnd.ms-word.document.macroenabled.12": { source: "iana", extensions: ["docm"] }, "application/vnd.ms-word.template.macroenabled.12": { source: "iana", extensions: ["dotm"] }, "application/vnd.ms-works": { source: "iana", extensions: ["wps", "wks", "wcm", "wdb"] }, "application/vnd.ms-wpl": { source: "iana", extensions: ["wpl"] }, "application/vnd.ms-xpsdocument": { source: "iana", compressible: false, extensions: ["xps"] }, "application/vnd.msa-disk-image": { source: "iana" }, "application/vnd.mseq": { source: "iana", extensions: ["mseq"] }, "application/vnd.msign": { source: "iana" }, "application/vnd.multiad.creator": { source: "iana" }, "application/vnd.multiad.creator.cif": { source: "iana" }, "application/vnd.music-niff": { source: "iana" }, "application/vnd.musician": { source: "iana", extensions: ["mus"] }, "application/vnd.muvee.style": { source: "iana", extensions: ["msty"] }, "application/vnd.mynfc": { source: "iana", extensions: ["taglet"] }, "application/vnd.nacamar.ybrid+json": { source: "iana", compressible: true }, "application/vnd.ncd.control": { source: "iana" }, "application/vnd.ncd.reference": { source: "iana" }, "application/vnd.nearst.inv+json": { source: "iana", compressible: true }, "application/vnd.nebumind.line": { source: "iana" }, "application/vnd.nervana": { source: "iana" }, "application/vnd.netfpx": { source: "iana" }, "application/vnd.neurolanguage.nlu": { source: "iana", extensions: ["nlu"] }, "application/vnd.nimn": { source: "iana" }, "application/vnd.nintendo.nitro.rom": { source: "iana" }, "application/vnd.nintendo.snes.rom": { source: "iana" }, "application/vnd.nitf": { source: "iana", extensions: ["ntf", "nitf"] }, "application/vnd.noblenet-directory": { source: "iana", extensions: ["nnd"] }, "application/vnd.noblenet-sealer": { source: "iana", extensions: ["nns"] }, "application/vnd.noblenet-web": { source: "iana", extensions: ["nnw"] }, "application/vnd.nokia.catalogs": { source: "iana" }, "application/vnd.nokia.conml+wbxml": { source: "iana" }, "application/vnd.nokia.conml+xml": { source: "iana", compressible: true }, "application/vnd.nokia.iptv.config+xml": { source: "iana", compressible: true }, "application/vnd.nokia.isds-radio-presets": { source: "iana" }, "application/vnd.nokia.landmark+wbxml": { source: "iana" }, "application/vnd.nokia.landmark+xml": { source: "iana", compressible: true }, "application/vnd.nokia.landmarkcollection+xml": { source: "iana", compressible: true }, "application/vnd.nokia.n-gage.ac+xml": { source: "iana", compressible: true, extensions: ["ac"] }, "application/vnd.nokia.n-gage.data": { source: "iana", extensions: ["ngdat"] }, "application/vnd.nokia.n-gage.symbian.install": { source: "iana", extensions: ["n-gage"] }, "application/vnd.nokia.ncd": { source: "iana" }, "application/vnd.nokia.pcd+wbxml": { source: "iana" }, "application/vnd.nokia.pcd+xml": { source: "iana", compressible: true }, "application/vnd.nokia.radio-preset": { source: "iana", extensions: ["rpst"] }, "application/vnd.nokia.radio-presets": { source: "iana", extensions: ["rpss"] }, "application/vnd.novadigm.edm": { source: "iana", extensions: ["edm"] }, "application/vnd.novadigm.edx": { source: "iana", extensions: ["edx"] }, "application/vnd.novadigm.ext": { source: "iana", extensions: ["ext"] }, "application/vnd.ntt-local.content-share": { source: "iana" }, "application/vnd.ntt-local.file-transfer": { source: "iana" }, "application/vnd.ntt-local.ogw_remote-access": { source: "iana" }, "application/vnd.ntt-local.sip-ta_remote": { source: "iana" }, "application/vnd.ntt-local.sip-ta_tcp_stream": { source: "iana" }, "application/vnd.oasis.opendocument.chart": { source: "iana", extensions: ["odc"] }, "application/vnd.oasis.opendocument.chart-template": { source: "iana", extensions: ["otc"] }, "application/vnd.oasis.opendocument.database": { source: "iana", extensions: ["odb"] }, "application/vnd.oasis.opendocument.formula": { source: "iana", extensions: ["odf"] }, "application/vnd.oasis.opendocument.formula-template": { source: "iana", extensions: ["odft"] }, "application/vnd.oasis.opendocument.graphics": { source: "iana", compressible: false, extensions: ["odg"] }, "application/vnd.oasis.opendocument.graphics-template": { source: "iana", extensions: ["otg"] }, "application/vnd.oasis.opendocument.image": { source: "iana", extensions: ["odi"] }, "application/vnd.oasis.opendocument.image-template": { source: "iana", extensions: ["oti"] }, "application/vnd.oasis.opendocument.presentation": { source: "iana", compressible: false, extensions: ["odp"] }, "application/vnd.oasis.opendocument.presentation-template": { source: "iana", extensions: ["otp"] }, "application/vnd.oasis.opendocument.spreadsheet": { source: "iana", compressible: false, extensions: ["ods"] }, "application/vnd.oasis.opendocument.spreadsheet-template": { source: "iana", extensions: ["ots"] }, "application/vnd.oasis.opendocument.text": { source: "iana", compressible: false, extensions: ["odt"] }, "application/vnd.oasis.opendocument.text-master": { source: "iana", extensions: ["odm"] }, "application/vnd.oasis.opendocument.text-template": { source: "iana", extensions: ["ott"] }, "application/vnd.oasis.opendocument.text-web": { source: "iana", extensions: ["oth"] }, "application/vnd.obn": { source: "iana" }, "application/vnd.ocf+cbor": { source: "iana" }, "application/vnd.oci.image.manifest.v1+json": { source: "iana", compressible: true }, "application/vnd.oftn.l10n+json": { source: "iana", compressible: true }, "application/vnd.oipf.contentaccessdownload+xml": { source: "iana", compressible: true }, "application/vnd.oipf.contentaccessstreaming+xml": { source: "iana", compressible: true }, "application/vnd.oipf.cspg-hexbinary": { source: "iana" }, "application/vnd.oipf.dae.svg+xml": { source: "iana", compressible: true }, "application/vnd.oipf.dae.xhtml+xml": { source: "iana", compressible: true }, "application/vnd.oipf.mippvcontrolmessage+xml": { source: "iana", compressible: true }, "application/vnd.oipf.pae.gem": { source: "iana" }, "application/vnd.oipf.spdiscovery+xml": { source: "iana", compressible: true }, "application/vnd.oipf.spdlist+xml": { source: "iana", compressible: true }, "application/vnd.oipf.ueprofile+xml": { source: "iana", compressible: true }, "application/vnd.oipf.userprofile+xml": { source: "iana", compressible: true }, "application/vnd.olpc-sugar": { source: "iana", extensions: ["xo"] }, "application/vnd.oma-scws-config": { source: "iana" }, "application/vnd.oma-scws-http-request": { source: "iana" }, "application/vnd.oma-scws-http-response": { source: "iana" }, "application/vnd.oma.bcast.associated-procedure-parameter+xml": { source: "iana", compressible: true }, "application/vnd.oma.bcast.drm-trigger+xml": { source: "iana", compressible: true }, "application/vnd.oma.bcast.imd+xml": { source: "iana", compressible: true }, "application/vnd.oma.bcast.ltkm": { source: "iana" }, "application/vnd.oma.bcast.notification+xml": { source: "iana", compressible: true }, "application/vnd.oma.bcast.provisioningtrigger": { source: "iana" }, "application/vnd.oma.bcast.sgboot": { source: "iana" }, "application/vnd.oma.bcast.sgdd+xml": { source: "iana", compressible: true }, "application/vnd.oma.bcast.sgdu": { source: "iana" }, "application/vnd.oma.bcast.simple-symbol-container": { source: "iana" }, "application/vnd.oma.bcast.smartcard-trigger+xml": { source: "iana", compressible: true }, "application/vnd.oma.bcast.sprov+xml": { source: "iana", compressible: true }, "application/vnd.oma.bcast.stkm": { source: "iana" }, "application/vnd.oma.cab-address-book+xml": { source: "iana", compressible: true }, "application/vnd.oma.cab-feature-handler+xml": { source: "iana", compressible: true }, "application/vnd.oma.cab-pcc+xml": { source: "iana", compressible: true }, "application/vnd.oma.cab-subs-invite+xml": { source: "iana", compressible: true }, "application/vnd.oma.cab-user-prefs+xml": { source: "iana", compressible: true }, "application/vnd.oma.dcd": { source: "iana" }, "application/vnd.oma.dcdc": { source: "iana" }, "application/vnd.oma.dd2+xml": { source: "iana", compressible: true, extensions: ["dd2"] }, "application/vnd.oma.drm.risd+xml": { source: "iana", compressible: true }, "application/vnd.oma.group-usage-list+xml": { source: "iana", compressible: true }, "application/vnd.oma.lwm2m+cbor": { source: "iana" }, "application/vnd.oma.lwm2m+json": { source: "iana", compressible: true }, "application/vnd.oma.lwm2m+tlv": { source: "iana" }, "application/vnd.oma.pal+xml": { source: "iana", compressible: true }, "application/vnd.oma.poc.detailed-progress-report+xml": { source: "iana", compressible: true }, "application/vnd.oma.poc.final-report+xml": { source: "iana", compressible: true }, "application/vnd.oma.poc.groups+xml": { source: "iana", compressible: true }, "application/vnd.oma.poc.invocation-descriptor+xml": { source: "iana", compressible: true }, "application/vnd.oma.poc.optimized-progress-report+xml": { source: "iana", compressible: true }, "application/vnd.oma.push": { source: "iana" }, "application/vnd.oma.scidm.messages+xml": { source: "iana", compressible: true }, "application/vnd.oma.xcap-directory+xml": { source: "iana", compressible: true }, "application/vnd.omads-email+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/vnd.omads-file+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/vnd.omads-folder+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/vnd.omaloc-supl-init": { source: "iana" }, "application/vnd.onepager": { source: "iana" }, "application/vnd.onepagertamp": { source: "iana" }, "application/vnd.onepagertamx": { source: "iana" }, "application/vnd.onepagertat": { source: "iana" }, "application/vnd.onepagertatp": { source: "iana" }, "application/vnd.onepagertatx": { source: "iana" }, "application/vnd.openblox.game+xml": { source: "iana", compressible: true, extensions: ["obgx"] }, "application/vnd.openblox.game-binary": { source: "iana" }, "application/vnd.openeye.oeb": { source: "iana" }, "application/vnd.openofficeorg.extension": { source: "apache", extensions: ["oxt"] }, "application/vnd.openstreetmap.data+xml": { source: "iana", compressible: true, extensions: ["osm"] }, "application/vnd.opentimestamps.ots": { source: "iana" }, "application/vnd.openxmlformats-officedocument.custom-properties+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.drawing+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.extended-properties+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.presentation": { source: "iana", compressible: false, extensions: ["pptx"] }, "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.slide": { source: "iana", extensions: ["sldx"] }, "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.slideshow": { source: "iana", extensions: ["ppsx"] }, "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.template": { source: "iana", extensions: ["potx"] }, "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": { source: "iana", compressible: false, extensions: ["xlsx"] }, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.template": { source: "iana", extensions: ["xltx"] }, "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.theme+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.themeoverride+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.vmldrawing": { source: "iana" }, "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.document": { source: "iana", compressible: false, extensions: ["docx"] }, "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.template": { source: "iana", extensions: ["dotx"] }, "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-package.core-properties+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": { source: "iana", compressible: true }, "application/vnd.openxmlformats-package.relationships+xml": { source: "iana", compressible: true }, "application/vnd.oracle.resource+json": { source: "iana", compressible: true }, "application/vnd.orange.indata": { source: "iana" }, "application/vnd.osa.netdeploy": { source: "iana" }, "application/vnd.osgeo.mapguide.package": { source: "iana", extensions: ["mgp"] }, "application/vnd.osgi.bundle": { source: "iana" }, "application/vnd.osgi.dp": { source: "iana", extensions: ["dp"] }, "application/vnd.osgi.subsystem": { source: "iana", extensions: ["esa"] }, "application/vnd.otps.ct-kip+xml": { source: "iana", compressible: true }, "application/vnd.oxli.countgraph": { source: "iana" }, "application/vnd.pagerduty+json": { source: "iana", compressible: true }, "application/vnd.palm": { source: "iana", extensions: ["pdb", "pqa", "oprc"] }, "application/vnd.panoply": { source: "iana" }, "application/vnd.paos.xml": { source: "iana" }, "application/vnd.patentdive": { source: "iana" }, "application/vnd.patientecommsdoc": { source: "iana" }, "application/vnd.pawaafile": { source: "iana", extensions: ["paw"] }, "application/vnd.pcos": { source: "iana" }, "application/vnd.pg.format": { source: "iana", extensions: ["str"] }, "application/vnd.pg.osasli": { source: "iana", extensions: ["ei6"] }, "application/vnd.piaccess.application-licence": { source: "iana" }, "application/vnd.picsel": { source: "iana", extensions: ["efif"] }, "application/vnd.pmi.widget": { source: "iana", extensions: ["wg"] }, "application/vnd.poc.group-advertisement+xml": { source: "iana", compressible: true }, "application/vnd.pocketlearn": { source: "iana", extensions: ["plf"] }, "application/vnd.powerbuilder6": { source: "iana", extensions: ["pbd"] }, "application/vnd.powerbuilder6-s": { source: "iana" }, "application/vnd.powerbuilder7": { source: "iana" }, "application/vnd.powerbuilder7-s": { source: "iana" }, "application/vnd.powerbuilder75": { source: "iana" }, "application/vnd.powerbuilder75-s": { source: "iana" }, "application/vnd.preminet": { source: "iana" }, "application/vnd.previewsystems.box": { source: "iana", extensions: ["box"] }, "application/vnd.proteus.magazine": { source: "iana", extensions: ["mgz"] }, "application/vnd.psfs": { source: "iana" }, "application/vnd.publishare-delta-tree": { source: "iana", extensions: ["qps"] }, "application/vnd.pvi.ptid1": { source: "iana", extensions: ["ptid"] }, "application/vnd.pwg-multiplexed": { source: "iana" }, "application/vnd.pwg-xhtml-print+xml": { source: "iana", compressible: true }, "application/vnd.qualcomm.brew-app-res": { source: "iana" }, "application/vnd.quarantainenet": { source: "iana" }, "application/vnd.quark.quarkxpress": { source: "iana", extensions: ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"] }, "application/vnd.quobject-quoxdocument": { source: "iana" }, "application/vnd.radisys.moml+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-audit+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-audit-conf+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-audit-conn+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-audit-dialog+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-audit-stream+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-conf+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-dialog+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-dialog-base+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-dialog-fax-detect+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-dialog-group+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-dialog-speech+xml": { source: "iana", compressible: true }, "application/vnd.radisys.msml-dialog-transform+xml": { source: "iana", compressible: true }, "application/vnd.rainstor.data": { source: "iana" }, "application/vnd.rapid": { source: "iana" }, "application/vnd.rar": { source: "iana", extensions: ["rar"] }, "application/vnd.realvnc.bed": { source: "iana", extensions: ["bed"] }, "application/vnd.recordare.musicxml": { source: "iana", extensions: ["mxl"] }, "application/vnd.recordare.musicxml+xml": { source: "iana", compressible: true, extensions: ["musicxml"] }, "application/vnd.renlearn.rlprint": { source: "iana" }, "application/vnd.resilient.logic": { source: "iana" }, "application/vnd.restful+json": { source: "iana", compressible: true }, "application/vnd.rig.cryptonote": { source: "iana", extensions: ["cryptonote"] }, "application/vnd.rim.cod": { source: "apache", extensions: ["cod"] }, "application/vnd.rn-realmedia": { source: "apache", extensions: ["rm"] }, "application/vnd.rn-realmedia-vbr": { source: "apache", extensions: ["rmvb"] }, "application/vnd.route66.link66+xml": { source: "iana", compressible: true, extensions: ["link66"] }, "application/vnd.rs-274x": { source: "iana" }, "application/vnd.ruckus.download": { source: "iana" }, "application/vnd.s3sms": { source: "iana" }, "application/vnd.sailingtracker.track": { source: "iana", extensions: ["st"] }, "application/vnd.sar": { source: "iana" }, "application/vnd.sbm.cid": { source: "iana" }, "application/vnd.sbm.mid2": { source: "iana" }, "application/vnd.scribus": { source: "iana" }, "application/vnd.sealed.3df": { source: "iana" }, "application/vnd.sealed.csf": { source: "iana" }, "application/vnd.sealed.doc": { source: "iana" }, "application/vnd.sealed.eml": { source: "iana" }, "application/vnd.sealed.mht": { source: "iana" }, "application/vnd.sealed.net": { source: "iana" }, "application/vnd.sealed.ppt": { source: "iana" }, "application/vnd.sealed.tiff": { source: "iana" }, "application/vnd.sealed.xls": { source: "iana" }, "application/vnd.sealedmedia.softseal.html": { source: "iana" }, "application/vnd.sealedmedia.softseal.pdf": { source: "iana" }, "application/vnd.seemail": { source: "iana", extensions: ["see"] }, "application/vnd.seis+json": { source: "iana", compressible: true }, "application/vnd.sema": { source: "iana", extensions: ["sema"] }, "application/vnd.semd": { source: "iana", extensions: ["semd"] }, "application/vnd.semf": { source: "iana", extensions: ["semf"] }, "application/vnd.shade-save-file": { source: "iana" }, "application/vnd.shana.informed.formdata": { source: "iana", extensions: ["ifm"] }, "application/vnd.shana.informed.formtemplate": { source: "iana", extensions: ["itp"] }, "application/vnd.shana.informed.interchange": { source: "iana", extensions: ["iif"] }, "application/vnd.shana.informed.package": { source: "iana", extensions: ["ipk"] }, "application/vnd.shootproof+json": { source: "iana", compressible: true }, "application/vnd.shopkick+json": { source: "iana", compressible: true }, "application/vnd.shp": { source: "iana" }, "application/vnd.shx": { source: "iana" }, "application/vnd.sigrok.session": { source: "iana" }, "application/vnd.simtech-mindmapper": { source: "iana", extensions: ["twd", "twds"] }, "application/vnd.siren+json": { source: "iana", compressible: true }, "application/vnd.smaf": { source: "iana", extensions: ["mmf"] }, "application/vnd.smart.notebook": { source: "iana" }, "application/vnd.smart.teacher": { source: "iana", extensions: ["teacher"] }, "application/vnd.snesdev-page-table": { source: "iana" }, "application/vnd.software602.filler.form+xml": { source: "iana", compressible: true, extensions: ["fo"] }, "application/vnd.software602.filler.form-xml-zip": { source: "iana" }, "application/vnd.solent.sdkm+xml": { source: "iana", compressible: true, extensions: ["sdkm", "sdkd"] }, "application/vnd.spotfire.dxp": { source: "iana", extensions: ["dxp"] }, "application/vnd.spotfire.sfs": { source: "iana", extensions: ["sfs"] }, "application/vnd.sqlite3": { source: "iana" }, "application/vnd.sss-cod": { source: "iana" }, "application/vnd.sss-dtf": { source: "iana" }, "application/vnd.sss-ntf": { source: "iana" }, "application/vnd.stardivision.calc": { source: "apache", extensions: ["sdc"] }, "application/vnd.stardivision.draw": { source: "apache", extensions: ["sda"] }, "application/vnd.stardivision.impress": { source: "apache", extensions: ["sdd"] }, "application/vnd.stardivision.math": { source: "apache", extensions: ["smf"] }, "application/vnd.stardivision.writer": { source: "apache", extensions: ["sdw", "vor"] }, "application/vnd.stardivision.writer-global": { source: "apache", extensions: ["sgl"] }, "application/vnd.stepmania.package": { source: "iana", extensions: ["smzip"] }, "application/vnd.stepmania.stepchart": { source: "iana", extensions: ["sm"] }, "application/vnd.street-stream": { source: "iana" }, "application/vnd.sun.wadl+xml": { source: "iana", compressible: true, extensions: ["wadl"] }, "application/vnd.sun.xml.calc": { source: "apache", extensions: ["sxc"] }, "application/vnd.sun.xml.calc.template": { source: "apache", extensions: ["stc"] }, "application/vnd.sun.xml.draw": { source: "apache", extensions: ["sxd"] }, "application/vnd.sun.xml.draw.template": { source: "apache", extensions: ["std"] }, "application/vnd.sun.xml.impress": { source: "apache", extensions: ["sxi"] }, "application/vnd.sun.xml.impress.template": { source: "apache", extensions: ["sti"] }, "application/vnd.sun.xml.math": { source: "apache", extensions: ["sxm"] }, "application/vnd.sun.xml.writer": { source: "apache", extensions: ["sxw"] }, "application/vnd.sun.xml.writer.global": { source: "apache", extensions: ["sxg"] }, "application/vnd.sun.xml.writer.template": { source: "apache", extensions: ["stw"] }, "application/vnd.sus-calendar": { source: "iana", extensions: ["sus", "susp"] }, "application/vnd.svd": { source: "iana", extensions: ["svd"] }, "application/vnd.swiftview-ics": { source: "iana" }, "application/vnd.sycle+xml": { source: "iana", compressible: true }, "application/vnd.syft+json": { source: "iana", compressible: true }, "application/vnd.symbian.install": { source: "apache", extensions: ["sis", "sisx"] }, "application/vnd.syncml+xml": { source: "iana", charset: "UTF-8", compressible: true, extensions: ["xsm"] }, "application/vnd.syncml.dm+wbxml": { source: "iana", charset: "UTF-8", extensions: ["bdm"] }, "application/vnd.syncml.dm+xml": { source: "iana", charset: "UTF-8", compressible: true, extensions: ["xdm"] }, "application/vnd.syncml.dm.notification": { source: "iana" }, "application/vnd.syncml.dmddf+wbxml": { source: "iana" }, "application/vnd.syncml.dmddf+xml": { source: "iana", charset: "UTF-8", compressible: true, extensions: ["ddf"] }, "application/vnd.syncml.dmtnds+wbxml": { source: "iana" }, "application/vnd.syncml.dmtnds+xml": { source: "iana", charset: "UTF-8", compressible: true }, "application/vnd.syncml.ds.notification": { source: "iana" }, "application/vnd.tableschema+json": { source: "iana", compressible: true }, "application/vnd.tao.intent-module-archive": { source: "iana", extensions: ["tao"] }, "application/vnd.tcpdump.pcap": { source: "iana", extensions: ["pcap", "cap", "dmp"] }, "application/vnd.think-cell.ppttc+json": { source: "iana", compressible: true }, "application/vnd.tmd.mediaflex.api+xml": { source: "iana", compressible: true }, "application/vnd.tml": { source: "iana" }, "application/vnd.tmobile-livetv": { source: "iana", extensions: ["tmo"] }, "application/vnd.tri.onesource": { source: "iana" }, "application/vnd.trid.tpt": { source: "iana", extensions: ["tpt"] }, "application/vnd.triscape.mxs": { source: "iana", extensions: ["mxs"] }, "application/vnd.trueapp": { source: "iana", extensions: ["tra"] }, "application/vnd.truedoc": { source: "iana" }, "application/vnd.ubisoft.webplayer": { source: "iana" }, "application/vnd.ufdl": { source: "iana", extensions: ["ufd", "ufdl"] }, "application/vnd.uiq.theme": { source: "iana", extensions: ["utz"] }, "application/vnd.umajin": { source: "iana", extensions: ["umj"] }, "application/vnd.unity": { source: "iana", extensions: ["unityweb"] }, "application/vnd.uoml+xml": { source: "iana", compressible: true, extensions: ["uoml"] }, "application/vnd.uplanet.alert": { source: "iana" }, "application/vnd.uplanet.alert-wbxml": { source: "iana" }, "application/vnd.uplanet.bearer-choice": { source: "iana" }, "application/vnd.uplanet.bearer-choice-wbxml": { source: "iana" }, "application/vnd.uplanet.cacheop": { source: "iana" }, "application/vnd.uplanet.cacheop-wbxml": { source: "iana" }, "application/vnd.uplanet.channel": { source: "iana" }, "application/vnd.uplanet.channel-wbxml": { source: "iana" }, "application/vnd.uplanet.list": { source: "iana" }, "application/vnd.uplanet.list-wbxml": { source: "iana" }, "application/vnd.uplanet.listcmd": { source: "iana" }, "application/vnd.uplanet.listcmd-wbxml": { source: "iana" }, "application/vnd.uplanet.signal": { source: "iana" }, "application/vnd.uri-map": { source: "iana" }, "application/vnd.valve.source.material": { source: "iana" }, "application/vnd.vcx": { source: "iana", extensions: ["vcx"] }, "application/vnd.vd-study": { source: "iana" }, "application/vnd.vectorworks": { source: "iana" }, "application/vnd.vel+json": { source: "iana", compressible: true }, "application/vnd.verimatrix.vcas": { source: "iana" }, "application/vnd.veritone.aion+json": { source: "iana", compressible: true }, "application/vnd.veryant.thin": { source: "iana" }, "application/vnd.ves.encrypted": { source: "iana" }, "application/vnd.vidsoft.vidconference": { source: "iana" }, "application/vnd.visio": { source: "iana", extensions: ["vsd", "vst", "vss", "vsw"] }, "application/vnd.visionary": { source: "iana", extensions: ["vis"] }, "application/vnd.vividence.scriptfile": { source: "iana" }, "application/vnd.vsf": { source: "iana", extensions: ["vsf"] }, "application/vnd.wap.sic": { source: "iana" }, "application/vnd.wap.slc": { source: "iana" }, "application/vnd.wap.wbxml": { source: "iana", charset: "UTF-8", extensions: ["wbxml"] }, "application/vnd.wap.wmlc": { source: "iana", extensions: ["wmlc"] }, "application/vnd.wap.wmlscriptc": { source: "iana", extensions: ["wmlsc"] }, "application/vnd.webturbo": { source: "iana", extensions: ["wtb"] }, "application/vnd.wfa.dpp": { source: "iana" }, "application/vnd.wfa.p2p": { source: "iana" }, "application/vnd.wfa.wsc": { source: "iana" }, "application/vnd.windows.devicepairing": { source: "iana" }, "application/vnd.wmc": { source: "iana" }, "application/vnd.wmf.bootstrap": { source: "iana" }, "application/vnd.wolfram.mathematica": { source: "iana" }, "application/vnd.wolfram.mathematica.package": { source: "iana" }, "application/vnd.wolfram.player": { source: "iana", extensions: ["nbp"] }, "application/vnd.wordperfect": { source: "iana", extensions: ["wpd"] }, "application/vnd.wqd": { source: "iana", extensions: ["wqd"] }, "application/vnd.wrq-hp3000-labelled": { source: "iana" }, "application/vnd.wt.stf": { source: "iana", extensions: ["stf"] }, "application/vnd.wv.csp+wbxml": { source: "iana" }, "application/vnd.wv.csp+xml": { source: "iana", compressible: true }, "application/vnd.wv.ssp+xml": { source: "iana", compressible: true }, "application/vnd.xacml+json": { source: "iana", compressible: true }, "application/vnd.xara": { source: "iana", extensions: ["xar"] }, "application/vnd.xfdl": { source: "iana", extensions: ["xfdl"] }, "application/vnd.xfdl.webform": { source: "iana" }, "application/vnd.xmi+xml": { source: "iana", compressible: true }, "application/vnd.xmpie.cpkg": { source: "iana" }, "application/vnd.xmpie.dpkg": { source: "iana" }, "application/vnd.xmpie.plan": { source: "iana" }, "application/vnd.xmpie.ppkg": { source: "iana" }, "application/vnd.xmpie.xlim": { source: "iana" }, "application/vnd.yamaha.hv-dic": { source: "iana", extensions: ["hvd"] }, "application/vnd.yamaha.hv-script": { source: "iana", extensions: ["hvs"] }, "application/vnd.yamaha.hv-voice": { source: "iana", extensions: ["hvp"] }, "application/vnd.yamaha.openscoreformat": { source: "iana", extensions: ["osf"] }, "application/vnd.yamaha.openscoreformat.osfpvg+xml": { source: "iana", compressible: true, extensions: ["osfpvg"] }, "application/vnd.yamaha.remote-setup": { source: "iana" }, "application/vnd.yamaha.smaf-audio": { source: "iana", extensions: ["saf"] }, "application/vnd.yamaha.smaf-phrase": { source: "iana", extensions: ["spf"] }, "application/vnd.yamaha.through-ngn": { source: "iana" }, "application/vnd.yamaha.tunnel-udpencap": { source: "iana" }, "application/vnd.yaoweme": { source: "iana" }, "application/vnd.yellowriver-custom-menu": { source: "iana", extensions: ["cmp"] }, "application/vnd.youtube.yt": { source: "iana" }, "application/vnd.zul": { source: "iana", extensions: ["zir", "zirz"] }, "application/vnd.zzazz.deck+xml": { source: "iana", compressible: true, extensions: ["zaz"] }, "application/voicexml+xml": { source: "iana", compressible: true, extensions: ["vxml"] }, "application/voucher-cms+json": { source: "iana", compressible: true }, "application/vq-rtcpxr": { source: "iana" }, "application/wasm": { source: "iana", compressible: true, extensions: ["wasm"] }, "application/watcherinfo+xml": { source: "iana", compressible: true, extensions: ["wif"] }, "application/webpush-options+json": { source: "iana", compressible: true }, "application/whoispp-query": { source: "iana" }, "application/whoispp-response": { source: "iana" }, "application/widget": { source: "iana", extensions: ["wgt"] }, "application/winhlp": { source: "apache", extensions: ["hlp"] }, "application/wita": { source: "iana" }, "application/wordperfect5.1": { source: "iana" }, "application/wsdl+xml": { source: "iana", compressible: true, extensions: ["wsdl"] }, "application/wspolicy+xml": { source: "iana", compressible: true, extensions: ["wspolicy"] }, "application/x-7z-compressed": { source: "apache", compressible: false, extensions: ["7z"] }, "application/x-abiword": { source: "apache", extensions: ["abw"] }, "application/x-ace-compressed": { source: "apache", extensions: ["ace"] }, "application/x-amf": { source: "apache" }, "application/x-apple-diskimage": { source: "apache", extensions: ["dmg"] }, "application/x-arj": { compressible: false, extensions: ["arj"] }, "application/x-authorware-bin": { source: "apache", extensions: ["aab", "x32", "u32", "vox"] }, "application/x-authorware-map": { source: "apache", extensions: ["aam"] }, "application/x-authorware-seg": { source: "apache", extensions: ["aas"] }, "application/x-bcpio": { source: "apache", extensions: ["bcpio"] }, "application/x-bdoc": { compressible: false, extensions: ["bdoc"] }, "application/x-bittorrent": { source: "apache", extensions: ["torrent"] }, "application/x-blorb": { source: "apache", extensions: ["blb", "blorb"] }, "application/x-bzip": { source: "apache", compressible: false, extensions: ["bz"] }, "application/x-bzip2": { source: "apache", compressible: false, extensions: ["bz2", "boz"] }, "application/x-cbr": { source: "apache", extensions: ["cbr", "cba", "cbt", "cbz", "cb7"] }, "application/x-cdlink": { source: "apache", extensions: ["vcd"] }, "application/x-cfs-compressed": { source: "apache", extensions: ["cfs"] }, "application/x-chat": { source: "apache", extensions: ["chat"] }, "application/x-chess-pgn": { source: "apache", extensions: ["pgn"] }, "application/x-chrome-extension": { extensions: ["crx"] }, "application/x-cocoa": { source: "nginx", extensions: ["cco"] }, "application/x-compress": { source: "apache" }, "application/x-conference": { source: "apache", extensions: ["nsc"] }, "application/x-cpio": { source: "apache", extensions: ["cpio"] }, "application/x-csh": { source: "apache", extensions: ["csh"] }, "application/x-deb": { compressible: false }, "application/x-debian-package": { source: "apache", extensions: ["deb", "udeb"] }, "application/x-dgc-compressed": { source: "apache", extensions: ["dgc"] }, "application/x-director": { source: "apache", extensions: ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"] }, "application/x-doom": { source: "apache", extensions: ["wad"] }, "application/x-dtbncx+xml": { source: "apache", compressible: true, extensions: ["ncx"] }, "application/x-dtbook+xml": { source: "apache", compressible: true, extensions: ["dtb"] }, "application/x-dtbresource+xml": { source: "apache", compressible: true, extensions: ["res"] }, "application/x-dvi": { source: "apache", compressible: false, extensions: ["dvi"] }, "application/x-envoy": { source: "apache", extensions: ["evy"] }, "application/x-eva": { source: "apache", extensions: ["eva"] }, "application/x-font-bdf": { source: "apache", extensions: ["bdf"] }, "application/x-font-dos": { source: "apache" }, "application/x-font-framemaker": { source: "apache" }, "application/x-font-ghostscript": { source: "apache", extensions: ["gsf"] }, "application/x-font-libgrx": { source: "apache" }, "application/x-font-linux-psf": { source: "apache", extensions: ["psf"] }, "application/x-font-pcf": { source: "apache", extensions: ["pcf"] }, "application/x-font-snf": { source: "apache", extensions: ["snf"] }, "application/x-font-speedo": { source: "apache" }, "application/x-font-sunos-news": { source: "apache" }, "application/x-font-type1": { source: "apache", extensions: ["pfa", "pfb", "pfm", "afm"] }, "application/x-font-vfont": { source: "apache" }, "application/x-freearc": { source: "apache", extensions: ["arc"] }, "application/x-futuresplash": { source: "apache", extensions: ["spl"] }, "application/x-gca-compressed": { source: "apache", extensions: ["gca"] }, "application/x-glulx": { source: "apache", extensions: ["ulx"] }, "application/x-gnumeric": { source: "apache", extensions: ["gnumeric"] }, "application/x-gramps-xml": { source: "apache", extensions: ["gramps"] }, "application/x-gtar": { source: "apache", extensions: ["gtar"] }, "application/x-gzip": { source: "apache" }, "application/x-hdf": { source: "apache", extensions: ["hdf"] }, "application/x-httpd-php": { compressible: true, extensions: ["php"] }, "application/x-install-instructions": { source: "apache", extensions: ["install"] }, "application/x-iso9660-image": { source: "apache", extensions: ["iso"] }, "application/x-iwork-keynote-sffkey": { extensions: ["key"] }, "application/x-iwork-numbers-sffnumbers": { extensions: ["numbers"] }, "application/x-iwork-pages-sffpages": { extensions: ["pages"] }, "application/x-java-archive-diff": { source: "nginx", extensions: ["jardiff"] }, "application/x-java-jnlp-file": { source: "apache", compressible: false, extensions: ["jnlp"] }, "application/x-javascript": { compressible: true }, "application/x-keepass2": { extensions: ["kdbx"] }, "application/x-latex": { source: "apache", compressible: false, extensions: ["latex"] }, "application/x-lua-bytecode": { extensions: ["luac"] }, "application/x-lzh-compressed": { source: "apache", extensions: ["lzh", "lha"] }, "application/x-makeself": { source: "nginx", extensions: ["run"] }, "application/x-mie": { source: "apache", extensions: ["mie"] }, "application/x-mobipocket-ebook": { source: "apache", extensions: ["prc", "mobi"] }, "application/x-mpegurl": { compressible: false }, "application/x-ms-application": { source: "apache", extensions: ["application"] }, "application/x-ms-shortcut": { source: "apache", extensions: ["lnk"] }, "application/x-ms-wmd": { source: "apache", extensions: ["wmd"] }, "application/x-ms-wmz": { source: "apache", extensions: ["wmz"] }, "application/x-ms-xbap": { source: "apache", extensions: ["xbap"] }, "application/x-msaccess": { source: "apache", extensions: ["mdb"] }, "application/x-msbinder": { source: "apache", extensions: ["obd"] }, "application/x-mscardfile": { source: "apache", extensions: ["crd"] }, "application/x-msclip": { source: "apache", extensions: ["clp"] }, "application/x-msdos-program": { extensions: ["exe"] }, "application/x-msdownload": { source: "apache", extensions: ["exe", "dll", "com", "bat", "msi"] }, "application/x-msmediaview": { source: "apache", extensions: ["mvb", "m13", "m14"] }, "application/x-msmetafile": { source: "apache", extensions: ["wmf", "wmz", "emf", "emz"] }, "application/x-msmoney": { source: "apache", extensions: ["mny"] }, "application/x-mspublisher": { source: "apache", extensions: ["pub"] }, "application/x-msschedule": { source: "apache", extensions: ["scd"] }, "application/x-msterminal": { source: "apache", extensions: ["trm"] }, "application/x-mswrite": { source: "apache", extensions: ["wri"] }, "application/x-netcdf": { source: "apache", extensions: ["nc", "cdf"] }, "application/x-ns-proxy-autoconfig": { compressible: true, extensions: ["pac"] }, "application/x-nzb": { source: "apache", extensions: ["nzb"] }, "application/x-perl": { source: "nginx", extensions: ["pl", "pm"] }, "application/x-pilot": { source: "nginx", extensions: ["prc", "pdb"] }, "application/x-pkcs12": { source: "apache", compressible: false, extensions: ["p12", "pfx"] }, "application/x-pkcs7-certificates": { source: "apache", extensions: ["p7b", "spc"] }, "application/x-pkcs7-certreqresp": { source: "apache", extensions: ["p7r"] }, "application/x-pki-message": { source: "iana" }, "application/x-rar-compressed": { source: "apache", compressible: false, extensions: ["rar"] }, "application/x-redhat-package-manager": { source: "nginx", extensions: ["rpm"] }, "application/x-research-info-systems": { source: "apache", extensions: ["ris"] }, "application/x-sea": { source: "nginx", extensions: ["sea"] }, "application/x-sh": { source: "apache", compressible: true, extensions: ["sh"] }, "application/x-shar": { source: "apache", extensions: ["shar"] }, "application/x-shockwave-flash": { source: "apache", compressible: false, extensions: ["swf"] }, "application/x-silverlight-app": { source: "apache", extensions: ["xap"] }, "application/x-sql": { source: "apache", extensions: ["sql"] }, "application/x-stuffit": { source: "apache", compressible: false, extensions: ["sit"] }, "application/x-stuffitx": { source: "apache", extensions: ["sitx"] }, "application/x-subrip": { source: "apache", extensions: ["srt"] }, "application/x-sv4cpio": { source: "apache", extensions: ["sv4cpio"] }, "application/x-sv4crc": { source: "apache", extensions: ["sv4crc"] }, "application/x-t3vm-image": { source: "apache", extensions: ["t3"] }, "application/x-tads": { source: "apache", extensions: ["gam"] }, "application/x-tar": { source: "apache", compressible: true, extensions: ["tar"] }, "application/x-tcl": { source: "apache", extensions: ["tcl", "tk"] }, "application/x-tex": { source: "apache", extensions: ["tex"] }, "application/x-tex-tfm": { source: "apache", extensions: ["tfm"] }, "application/x-texinfo": { source: "apache", extensions: ["texinfo", "texi"] }, "application/x-tgif": { source: "apache", extensions: ["obj"] }, "application/x-ustar": { source: "apache", extensions: ["ustar"] }, "application/x-virtualbox-hdd": { compressible: true, extensions: ["hdd"] }, "application/x-virtualbox-ova": { compressible: true, extensions: ["ova"] }, "application/x-virtualbox-ovf": { compressible: true, extensions: ["ovf"] }, "application/x-virtualbox-vbox": { compressible: true, extensions: ["vbox"] }, "application/x-virtualbox-vbox-extpack": { compressible: false, extensions: ["vbox-extpack"] }, "application/x-virtualbox-vdi": { compressible: true, extensions: ["vdi"] }, "application/x-virtualbox-vhd": { compressible: true, extensions: ["vhd"] }, "application/x-virtualbox-vmdk": { compressible: true, extensions: ["vmdk"] }, "application/x-wais-source": { source: "apache", extensions: ["src"] }, "application/x-web-app-manifest+json": { compressible: true, extensions: ["webapp"] }, "application/x-www-form-urlencoded": { source: "iana", compressible: true }, "application/x-x509-ca-cert": { source: "iana", extensions: ["der", "crt", "pem"] }, "application/x-x509-ca-ra-cert": { source: "iana" }, "application/x-x509-next-ca-cert": { source: "iana" }, "application/x-xfig": { source: "apache", extensions: ["fig"] }, "application/x-xliff+xml": { source: "apache", compressible: true, extensions: ["xlf"] }, "application/x-xpinstall": { source: "apache", compressible: false, extensions: ["xpi"] }, "application/x-xz": { source: "apache", extensions: ["xz"] }, "application/x-zmachine": { source: "apache", extensions: ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"] }, "application/x400-bp": { source: "iana" }, "application/xacml+xml": { source: "iana", compressible: true }, "application/xaml+xml": { source: "apache", compressible: true, extensions: ["xaml"] }, "application/xcap-att+xml": { source: "iana", compressible: true, extensions: ["xav"] }, "application/xcap-caps+xml": { source: "iana", compressible: true, extensions: ["xca"] }, "application/xcap-diff+xml": { source: "iana", compressible: true, extensions: ["xdf"] }, "application/xcap-el+xml": { source: "iana", compressible: true, extensions: ["xel"] }, "application/xcap-error+xml": { source: "iana", compressible: true }, "application/xcap-ns+xml": { source: "iana", compressible: true, extensions: ["xns"] }, "application/xcon-conference-info+xml": { source: "iana", compressible: true }, "application/xcon-conference-info-diff+xml": { source: "iana", compressible: true }, "application/xenc+xml": { source: "iana", compressible: true, extensions: ["xenc"] }, "application/xhtml+xml": { source: "iana", compressible: true, extensions: ["xhtml", "xht"] }, "application/xhtml-voice+xml": { source: "apache", compressible: true }, "application/xliff+xml": { source: "iana", compressible: true, extensions: ["xlf"] }, "application/xml": { source: "iana", compressible: true, extensions: ["xml", "xsl", "xsd", "rng"] }, "application/xml-dtd": { source: "iana", compressible: true, extensions: ["dtd"] }, "application/xml-external-parsed-entity": { source: "iana" }, "application/xml-patch+xml": { source: "iana", compressible: true }, "application/xmpp+xml": { source: "iana", compressible: true }, "application/xop+xml": { source: "iana", compressible: true, extensions: ["xop"] }, "application/xproc+xml": { source: "apache", compressible: true, extensions: ["xpl"] }, "application/xslt+xml": { source: "iana", compressible: true, extensions: ["xsl", "xslt"] }, "application/xspf+xml": { source: "apache", compressible: true, extensions: ["xspf"] }, "application/xv+xml": { source: "iana", compressible: true, extensions: ["mxml", "xhvml", "xvml", "xvm"] }, "application/yang": { source: "iana", extensions: ["yang"] }, "application/yang-data+json": { source: "iana", compressible: true }, "application/yang-data+xml": { source: "iana", compressible: true }, "application/yang-patch+json": { source: "iana", compressible: true }, "application/yang-patch+xml": { source: "iana", compressible: true }, "application/yin+xml": { source: "iana", compressible: true, extensions: ["yin"] }, "application/zip": { source: "iana", compressible: false, extensions: ["zip"] }, "application/zlib": { source: "iana" }, "application/zstd": { source: "iana" }, "audio/1d-interleaved-parityfec": { source: "iana" }, "audio/32kadpcm": { source: "iana" }, "audio/3gpp": { source: "iana", compressible: false, extensions: ["3gpp"] }, "audio/3gpp2": { source: "iana" }, "audio/aac": { source: "iana" }, "audio/ac3": { source: "iana" }, "audio/adpcm": { source: "apache", extensions: ["adp"] }, "audio/amr": { source: "iana", extensions: ["amr"] }, "audio/amr-wb": { source: "iana" }, "audio/amr-wb+": { source: "iana" }, "audio/aptx": { source: "iana" }, "audio/asc": { source: "iana" }, "audio/atrac-advanced-lossless": { source: "iana" }, "audio/atrac-x": { source: "iana" }, "audio/atrac3": { source: "iana" }, "audio/basic": { source: "iana", compressible: false, extensions: ["au", "snd"] }, "audio/bv16": { source: "iana" }, "audio/bv32": { source: "iana" }, "audio/clearmode": { source: "iana" }, "audio/cn": { source: "iana" }, "audio/dat12": { source: "iana" }, "audio/dls": { source: "iana" }, "audio/dsr-es201108": { source: "iana" }, "audio/dsr-es202050": { source: "iana" }, "audio/dsr-es202211": { source: "iana" }, "audio/dsr-es202212": { source: "iana" }, "audio/dv": { source: "iana" }, "audio/dvi4": { source: "iana" }, "audio/eac3": { source: "iana" }, "audio/encaprtp": { source: "iana" }, "audio/evrc": { source: "iana" }, "audio/evrc-qcp": { source: "iana" }, "audio/evrc0": { source: "iana" }, "audio/evrc1": { source: "iana" }, "audio/evrcb": { source: "iana" }, "audio/evrcb0": { source: "iana" }, "audio/evrcb1": { source: "iana" }, "audio/evrcnw": { source: "iana" }, "audio/evrcnw0": { source: "iana" }, "audio/evrcnw1": { source: "iana" }, "audio/evrcwb": { source: "iana" }, "audio/evrcwb0": { source: "iana" }, "audio/evrcwb1": { source: "iana" }, "audio/evs": { source: "iana" }, "audio/flexfec": { source: "iana" }, "audio/fwdred": { source: "iana" }, "audio/g711-0": { source: "iana" }, "audio/g719": { source: "iana" }, "audio/g722": { source: "iana" }, "audio/g7221": { source: "iana" }, "audio/g723": { source: "iana" }, "audio/g726-16": { source: "iana" }, "audio/g726-24": { source: "iana" }, "audio/g726-32": { source: "iana" }, "audio/g726-40": { source: "iana" }, "audio/g728": { source: "iana" }, "audio/g729": { source: "iana" }, "audio/g7291": { source: "iana" }, "audio/g729d": { source: "iana" }, "audio/g729e": { source: "iana" }, "audio/gsm": { source: "iana" }, "audio/gsm-efr": { source: "iana" }, "audio/gsm-hr-08": { source: "iana" }, "audio/ilbc": { source: "iana" }, "audio/ip-mr_v2.5": { source: "iana" }, "audio/isac": { source: "apache" }, "audio/l16": { source: "iana" }, "audio/l20": { source: "iana" }, "audio/l24": { source: "iana", compressible: false }, "audio/l8": { source: "iana" }, "audio/lpc": { source: "iana" }, "audio/melp": { source: "iana" }, "audio/melp1200": { source: "iana" }, "audio/melp2400": { source: "iana" }, "audio/melp600": { source: "iana" }, "audio/mhas": { source: "iana" }, "audio/midi": { source: "apache", extensions: ["mid", "midi", "kar", "rmi"] }, "audio/mobile-xmf": { source: "iana", extensions: ["mxmf"] }, "audio/mp3": { compressible: false, extensions: ["mp3"] }, "audio/mp4": { source: "iana", compressible: false, extensions: ["m4a", "mp4a"] }, "audio/mp4a-latm": { source: "iana" }, "audio/mpa": { source: "iana" }, "audio/mpa-robust": { source: "iana" }, "audio/mpeg": { source: "iana", compressible: false, extensions: ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"] }, "audio/mpeg4-generic": { source: "iana" }, "audio/musepack": { source: "apache" }, "audio/ogg": { source: "iana", compressible: false, extensions: ["oga", "ogg", "spx", "opus"] }, "audio/opus": { source: "iana" }, "audio/parityfec": { source: "iana" }, "audio/pcma": { source: "iana" }, "audio/pcma-wb": { source: "iana" }, "audio/pcmu": { source: "iana" }, "audio/pcmu-wb": { source: "iana" }, "audio/prs.sid": { source: "iana" }, "audio/qcelp": { source: "iana" }, "audio/raptorfec": { source: "iana" }, "audio/red": { source: "iana" }, "audio/rtp-enc-aescm128": { source: "iana" }, "audio/rtp-midi": { source: "iana" }, "audio/rtploopback": { source: "iana" }, "audio/rtx": { source: "iana" }, "audio/s3m": { source: "apache", extensions: ["s3m"] }, "audio/scip": { source: "iana" }, "audio/silk": { source: "apache", extensions: ["sil"] }, "audio/smv": { source: "iana" }, "audio/smv-qcp": { source: "iana" }, "audio/smv0": { source: "iana" }, "audio/sofa": { source: "iana" }, "audio/sp-midi": { source: "iana" }, "audio/speex": { source: "iana" }, "audio/t140c": { source: "iana" }, "audio/t38": { source: "iana" }, "audio/telephone-event": { source: "iana" }, "audio/tetra_acelp": { source: "iana" }, "audio/tetra_acelp_bb": { source: "iana" }, "audio/tone": { source: "iana" }, "audio/tsvcis": { source: "iana" }, "audio/uemclip": { source: "iana" }, "audio/ulpfec": { source: "iana" }, "audio/usac": { source: "iana" }, "audio/vdvi": { source: "iana" }, "audio/vmr-wb": { source: "iana" }, "audio/vnd.3gpp.iufp": { source: "iana" }, "audio/vnd.4sb": { source: "iana" }, "audio/vnd.audiokoz": { source: "iana" }, "audio/vnd.celp": { source: "iana" }, "audio/vnd.cisco.nse": { source: "iana" }, "audio/vnd.cmles.radio-events": { source: "iana" }, "audio/vnd.cns.anp1": { source: "iana" }, "audio/vnd.cns.inf1": { source: "iana" }, "audio/vnd.dece.audio": { source: "iana", extensions: ["uva", "uvva"] }, "audio/vnd.digital-winds": { source: "iana", extensions: ["eol"] }, "audio/vnd.dlna.adts": { source: "iana" }, "audio/vnd.dolby.heaac.1": { source: "iana" }, "audio/vnd.dolby.heaac.2": { source: "iana" }, "audio/vnd.dolby.mlp": { source: "iana" }, "audio/vnd.dolby.mps": { source: "iana" }, "audio/vnd.dolby.pl2": { source: "iana" }, "audio/vnd.dolby.pl2x": { source: "iana" }, "audio/vnd.dolby.pl2z": { source: "iana" }, "audio/vnd.dolby.pulse.1": { source: "iana" }, "audio/vnd.dra": { source: "iana", extensions: ["dra"] }, "audio/vnd.dts": { source: "iana", extensions: ["dts"] }, "audio/vnd.dts.hd": { source: "iana", extensions: ["dtshd"] }, "audio/vnd.dts.uhd": { source: "iana" }, "audio/vnd.dvb.file": { source: "iana" }, "audio/vnd.everad.plj": { source: "iana" }, "audio/vnd.hns.audio": { source: "iana" }, "audio/vnd.lucent.voice": { source: "iana", extensions: ["lvp"] }, "audio/vnd.ms-playready.media.pya": { source: "iana", extensions: ["pya"] }, "audio/vnd.nokia.mobile-xmf": { source: "iana" }, "audio/vnd.nortel.vbk": { source: "iana" }, "audio/vnd.nuera.ecelp4800": { source: "iana", extensions: ["ecelp4800"] }, "audio/vnd.nuera.ecelp7470": { source: "iana", extensions: ["ecelp7470"] }, "audio/vnd.nuera.ecelp9600": { source: "iana", extensions: ["ecelp9600"] }, "audio/vnd.octel.sbc": { source: "iana" }, "audio/vnd.presonus.multitrack": { source: "iana" }, "audio/vnd.qcelp": { source: "iana" }, "audio/vnd.rhetorex.32kadpcm": { source: "iana" }, "audio/vnd.rip": { source: "iana", extensions: ["rip"] }, "audio/vnd.rn-realaudio": { compressible: false }, "audio/vnd.sealedmedia.softseal.mpeg": { source: "iana" }, "audio/vnd.vmx.cvsd": { source: "iana" }, "audio/vnd.wave": { compressible: false }, "audio/vorbis": { source: "iana", compressible: false }, "audio/vorbis-config": { source: "iana" }, "audio/wav": { compressible: false, extensions: ["wav"] }, "audio/wave": { compressible: false, extensions: ["wav"] }, "audio/webm": { source: "apache", compressible: false, extensions: ["weba"] }, "audio/x-aac": { source: "apache", compressible: false, extensions: ["aac"] }, "audio/x-aiff": { source: "apache", extensions: ["aif", "aiff", "aifc"] }, "audio/x-caf": { source: "apache", compressible: false, extensions: ["caf"] }, "audio/x-flac": { source: "apache", extensions: ["flac"] }, "audio/x-m4a": { source: "nginx", extensions: ["m4a"] }, "audio/x-matroska": { source: "apache", extensions: ["mka"] }, "audio/x-mpegurl": { source: "apache", extensions: ["m3u"] }, "audio/x-ms-wax": { source: "apache", extensions: ["wax"] }, "audio/x-ms-wma": { source: "apache", extensions: ["wma"] }, "audio/x-pn-realaudio": { source: "apache", extensions: ["ram", "ra"] }, "audio/x-pn-realaudio-plugin": { source: "apache", extensions: ["rmp"] }, "audio/x-realaudio": { source: "nginx", extensions: ["ra"] }, "audio/x-tta": { source: "apache" }, "audio/x-wav": { source: "apache", extensions: ["wav"] }, "audio/xm": { source: "apache", extensions: ["xm"] }, "chemical/x-cdx": { source: "apache", extensions: ["cdx"] }, "chemical/x-cif": { source: "apache", extensions: ["cif"] }, "chemical/x-cmdf": { source: "apache", extensions: ["cmdf"] }, "chemical/x-cml": { source: "apache", extensions: ["cml"] }, "chemical/x-csml": { source: "apache", extensions: ["csml"] }, "chemical/x-pdb": { source: "apache" }, "chemical/x-xyz": { source: "apache", extensions: ["xyz"] }, "font/collection": { source: "iana", extensions: ["ttc"] }, "font/otf": { source: "iana", compressible: true, extensions: ["otf"] }, "font/sfnt": { source: "iana" }, "font/ttf": { source: "iana", compressible: true, extensions: ["ttf"] }, "font/woff": { source: "iana", extensions: ["woff"] }, "font/woff2": { source: "iana", extensions: ["woff2"] }, "image/aces": { source: "iana", extensions: ["exr"] }, "image/apng": { compressible: false, extensions: ["apng"] }, "image/avci": { source: "iana", extensions: ["avci"] }, "image/avcs": { source: "iana", extensions: ["avcs"] }, "image/avif": { source: "iana", compressible: false, extensions: ["avif"] }, "image/bmp": { source: "iana", compressible: true, extensions: ["bmp"] }, "image/cgm": { source: "iana", extensions: ["cgm"] }, "image/dicom-rle": { source: "iana", extensions: ["drle"] }, "image/emf": { source: "iana", extensions: ["emf"] }, "image/fits": { source: "iana", extensions: ["fits"] }, "image/g3fax": { source: "iana", extensions: ["g3"] }, "image/gif": { source: "iana", compressible: false, extensions: ["gif"] }, "image/heic": { source: "iana", extensions: ["heic"] }, "image/heic-sequence": { source: "iana", extensions: ["heics"] }, "image/heif": { source: "iana", extensions: ["heif"] }, "image/heif-sequence": { source: "iana", extensions: ["heifs"] }, "image/hej2k": { source: "iana", extensions: ["hej2"] }, "image/hsj2": { source: "iana", extensions: ["hsj2"] }, "image/ief": { source: "iana", extensions: ["ief"] }, "image/jls": { source: "iana", extensions: ["jls"] }, "image/jp2": { source: "iana", compressible: false, extensions: ["jp2", "jpg2"] }, "image/jpeg": { source: "iana", compressible: false, extensions: ["jpeg", "jpg", "jpe"] }, "image/jph": { source: "iana", extensions: ["jph"] }, "image/jphc": { source: "iana", extensions: ["jhc"] }, "image/jpm": { source: "iana", compressible: false, extensions: ["jpm"] }, "image/jpx": { source: "iana", compressible: false, extensions: ["jpx", "jpf"] }, "image/jxr": { source: "iana", extensions: ["jxr"] }, "image/jxra": { source: "iana", extensions: ["jxra"] }, "image/jxrs": { source: "iana", extensions: ["jxrs"] }, "image/jxs": { source: "iana", extensions: ["jxs"] }, "image/jxsc": { source: "iana", extensions: ["jxsc"] }, "image/jxsi": { source: "iana", extensions: ["jxsi"] }, "image/jxss": { source: "iana", extensions: ["jxss"] }, "image/ktx": { source: "iana", extensions: ["ktx"] }, "image/ktx2": { source: "iana", extensions: ["ktx2"] }, "image/naplps": { source: "iana" }, "image/pjpeg": { compressible: false }, "image/png": { source: "iana", compressible: false, extensions: ["png"] }, "image/prs.btif": { source: "iana", extensions: ["btif"] }, "image/prs.pti": { source: "iana", extensions: ["pti"] }, "image/pwg-raster": { source: "iana" }, "image/sgi": { source: "apache", extensions: ["sgi"] }, "image/svg+xml": { source: "iana", compressible: true, extensions: ["svg", "svgz"] }, "image/t38": { source: "iana", extensions: ["t38"] }, "image/tiff": { source: "iana", compressible: false, extensions: ["tif", "tiff"] }, "image/tiff-fx": { source: "iana", extensions: ["tfx"] }, "image/vnd.adobe.photoshop": { source: "iana", compressible: true, extensions: ["psd"] }, "image/vnd.airzip.accelerator.azv": { source: "iana", extensions: ["azv"] }, "image/vnd.cns.inf2": { source: "iana" }, "image/vnd.dece.graphic": { source: "iana", extensions: ["uvi", "uvvi", "uvg", "uvvg"] }, "image/vnd.djvu": { source: "iana", extensions: ["djvu", "djv"] }, "image/vnd.dvb.subtitle": { source: "iana", extensions: ["sub"] }, "image/vnd.dwg": { source: "iana", extensions: ["dwg"] }, "image/vnd.dxf": { source: "iana", extensions: ["dxf"] }, "image/vnd.fastbidsheet": { source: "iana", extensions: ["fbs"] }, "image/vnd.fpx": { source: "iana", extensions: ["fpx"] }, "image/vnd.fst": { source: "iana", extensions: ["fst"] }, "image/vnd.fujixerox.edmics-mmr": { source: "iana", extensions: ["mmr"] }, "image/vnd.fujixerox.edmics-rlc": { source: "iana", extensions: ["rlc"] }, "image/vnd.globalgraphics.pgb": { source: "iana" }, "image/vnd.microsoft.icon": { source: "iana", compressible: true, extensions: ["ico"] }, "image/vnd.mix": { source: "iana" }, "image/vnd.mozilla.apng": { source: "iana" }, "image/vnd.ms-dds": { compressible: true, extensions: ["dds"] }, "image/vnd.ms-modi": { source: "iana", extensions: ["mdi"] }, "image/vnd.ms-photo": { source: "apache", extensions: ["wdp"] }, "image/vnd.net-fpx": { source: "iana", extensions: ["npx"] }, "image/vnd.pco.b16": { source: "iana", extensions: ["b16"] }, "image/vnd.radiance": { source: "iana" }, "image/vnd.sealed.png": { source: "iana" }, "image/vnd.sealedmedia.softseal.gif": { source: "iana" }, "image/vnd.sealedmedia.softseal.jpg": { source: "iana" }, "image/vnd.svf": { source: "iana" }, "image/vnd.tencent.tap": { source: "iana", extensions: ["tap"] }, "image/vnd.valve.source.texture": { source: "iana", extensions: ["vtf"] }, "image/vnd.wap.wbmp": { source: "iana", extensions: ["wbmp"] }, "image/vnd.xiff": { source: "iana", extensions: ["xif"] }, "image/vnd.zbrush.pcx": { source: "iana", extensions: ["pcx"] }, "image/webp": { source: "apache", extensions: ["webp"] }, "image/wmf": { source: "iana", extensions: ["wmf"] }, "image/x-3ds": { source: "apache", extensions: ["3ds"] }, "image/x-cmu-raster": { source: "apache", extensions: ["ras"] }, "image/x-cmx": { source: "apache", extensions: ["cmx"] }, "image/x-freehand": { source: "apache", extensions: ["fh", "fhc", "fh4", "fh5", "fh7"] }, "image/x-icon": { source: "apache", compressible: true, extensions: ["ico"] }, "image/x-jng": { source: "nginx", extensions: ["jng"] }, "image/x-mrsid-image": { source: "apache", extensions: ["sid"] }, "image/x-ms-bmp": { source: "nginx", compressible: true, extensions: ["bmp"] }, "image/x-pcx": { source: "apache", extensions: ["pcx"] }, "image/x-pict": { source: "apache", extensions: ["pic", "pct"] }, "image/x-portable-anymap": { source: "apache", extensions: ["pnm"] }, "image/x-portable-bitmap": { source: "apache", extensions: ["pbm"] }, "image/x-portable-graymap": { source: "apache", extensions: ["pgm"] }, "image/x-portable-pixmap": { source: "apache", extensions: ["ppm"] }, "image/x-rgb": { source: "apache", extensions: ["rgb"] }, "image/x-tga": { source: "apache", extensions: ["tga"] }, "image/x-xbitmap": { source: "apache", extensions: ["xbm"] }, "image/x-xcf": { compressible: false }, "image/x-xpixmap": { source: "apache", extensions: ["xpm"] }, "image/x-xwindowdump": { source: "apache", extensions: ["xwd"] }, "message/cpim": { source: "iana" }, "message/delivery-status": { source: "iana" }, "message/disposition-notification": { source: "iana", extensions: ["disposition-notification"] }, "message/external-body": { source: "iana" }, "message/feedback-report": { source: "iana" }, "message/global": { source: "iana", extensions: ["u8msg"] }, "message/global-delivery-status": { source: "iana", extensions: ["u8dsn"] }, "message/global-disposition-notification": { source: "iana", extensions: ["u8mdn"] }, "message/global-headers": { source: "iana", extensions: ["u8hdr"] }, "message/http": { source: "iana", compressible: false }, "message/imdn+xml": { source: "iana", compressible: true }, "message/news": { source: "iana" }, "message/partial": { source: "iana", compressible: false }, "message/rfc822": { source: "iana", compressible: true, extensions: ["eml", "mime"] }, "message/s-http": { source: "iana" }, "message/sip": { source: "iana" }, "message/sipfrag": { source: "iana" }, "message/tracking-status": { source: "iana" }, "message/vnd.si.simp": { source: "iana" }, "message/vnd.wfa.wsc": { source: "iana", extensions: ["wsc"] }, "model/3mf": { source: "iana", extensions: ["3mf"] }, "model/e57": { source: "iana" }, "model/gltf+json": { source: "iana", compressible: true, extensions: ["gltf"] }, "model/gltf-binary": { source: "iana", compressible: true, extensions: ["glb"] }, "model/iges": { source: "iana", compressible: false, extensions: ["igs", "iges"] }, "model/mesh": { source: "iana", compressible: false, extensions: ["msh", "mesh", "silo"] }, "model/mtl": { source: "iana", extensions: ["mtl"] }, "model/obj": { source: "iana", extensions: ["obj"] }, "model/step": { source: "iana" }, "model/step+xml": { source: "iana", compressible: true, extensions: ["stpx"] }, "model/step+zip": { source: "iana", compressible: false, extensions: ["stpz"] }, "model/step-xml+zip": { source: "iana", compressible: false, extensions: ["stpxz"] }, "model/stl": { source: "iana", extensions: ["stl"] }, "model/vnd.collada+xml": { source: "iana", compressible: true, extensions: ["dae"] }, "model/vnd.dwf": { source: "iana", extensions: ["dwf"] }, "model/vnd.flatland.3dml": { source: "iana" }, "model/vnd.gdl": { source: "iana", extensions: ["gdl"] }, "model/vnd.gs-gdl": { source: "apache" }, "model/vnd.gs.gdl": { source: "iana" }, "model/vnd.gtw": { source: "iana", extensions: ["gtw"] }, "model/vnd.moml+xml": { source: "iana", compressible: true }, "model/vnd.mts": { source: "iana", extensions: ["mts"] }, "model/vnd.opengex": { source: "iana", extensions: ["ogex"] }, "model/vnd.parasolid.transmit.binary": { source: "iana", extensions: ["x_b"] }, "model/vnd.parasolid.transmit.text": { source: "iana", extensions: ["x_t"] }, "model/vnd.pytha.pyox": { source: "iana" }, "model/vnd.rosette.annotated-data-model": { source: "iana" }, "model/vnd.sap.vds": { source: "iana", extensions: ["vds"] }, "model/vnd.usdz+zip": { source: "iana", compressible: false, extensions: ["usdz"] }, "model/vnd.valve.source.compiled-map": { source: "iana", extensions: ["bsp"] }, "model/vnd.vtu": { source: "iana", extensions: ["vtu"] }, "model/vrml": { source: "iana", compressible: false, extensions: ["wrl", "vrml"] }, "model/x3d+binary": { source: "apache", compressible: false, extensions: ["x3db", "x3dbz"] }, "model/x3d+fastinfoset": { source: "iana", extensions: ["x3db"] }, "model/x3d+vrml": { source: "apache", compressible: false, extensions: ["x3dv", "x3dvz"] }, "model/x3d+xml": { source: "iana", compressible: true, extensions: ["x3d", "x3dz"] }, "model/x3d-vrml": { source: "iana", extensions: ["x3dv"] }, "multipart/alternative": { source: "iana", compressible: false }, "multipart/appledouble": { source: "iana" }, "multipart/byteranges": { source: "iana" }, "multipart/digest": { source: "iana" }, "multipart/encrypted": { source: "iana", compressible: false }, "multipart/form-data": { source: "iana", compressible: false }, "multipart/header-set": { source: "iana" }, "multipart/mixed": { source: "iana" }, "multipart/multilingual": { source: "iana" }, "multipart/parallel": { source: "iana" }, "multipart/related": { source: "iana", compressible: false }, "multipart/report": { source: "iana" }, "multipart/signed": { source: "iana", compressible: false }, "multipart/vnd.bint.med-plus": { source: "iana" }, "multipart/voice-message": { source: "iana" }, "multipart/x-mixed-replace": { source: "iana" }, "text/1d-interleaved-parityfec": { source: "iana" }, "text/cache-manifest": { source: "iana", compressible: true, extensions: ["appcache", "manifest"] }, "text/calendar": { source: "iana", extensions: ["ics", "ifb"] }, "text/calender": { compressible: true }, "text/cmd": { compressible: true }, "text/coffeescript": { extensions: ["coffee", "litcoffee"] }, "text/cql": { source: "iana" }, "text/cql-expression": { source: "iana" }, "text/cql-identifier": { source: "iana" }, "text/css": { source: "iana", charset: "UTF-8", compressible: true, extensions: ["css"] }, "text/csv": { source: "iana", compressible: true, extensions: ["csv"] }, "text/csv-schema": { source: "iana" }, "text/directory": { source: "iana" }, "text/dns": { source: "iana" }, "text/ecmascript": { source: "iana" }, "text/encaprtp": { source: "iana" }, "text/enriched": { source: "iana" }, "text/fhirpath": { source: "iana" }, "text/flexfec": { source: "iana" }, "text/fwdred": { source: "iana" }, "text/gff3": { source: "iana" }, "text/grammar-ref-list": { source: "iana" }, "text/html": { source: "iana", compressible: true, extensions: ["html", "htm", "shtml"] }, "text/jade": { extensions: ["jade"] }, "text/javascript": { source: "iana", compressible: true }, "text/jcr-cnd": { source: "iana" }, "text/jsx": { compressible: true, extensions: ["jsx"] }, "text/less": { compressible: true, extensions: ["less"] }, "text/markdown": { source: "iana", compressible: true, extensions: ["markdown", "md"] }, "text/mathml": { source: "nginx", extensions: ["mml"] }, "text/mdx": { compressible: true, extensions: ["mdx"] }, "text/mizar": { source: "iana" }, "text/n3": { source: "iana", charset: "UTF-8", compressible: true, extensions: ["n3"] }, "text/parameters": { source: "iana", charset: "UTF-8" }, "text/parityfec": { source: "iana" }, "text/plain": { source: "iana", compressible: true, extensions: ["txt", "text", "conf", "def", "list", "log", "in", "ini"] }, "text/provenance-notation": { source: "iana", charset: "UTF-8" }, "text/prs.fallenstein.rst": { source: "iana" }, "text/prs.lines.tag": { source: "iana", extensions: ["dsc"] }, "text/prs.prop.logic": { source: "iana" }, "text/raptorfec": { source: "iana" }, "text/red": { source: "iana" }, "text/rfc822-headers": { source: "iana" }, "text/richtext": { source: "iana", compressible: true, extensions: ["rtx"] }, "text/rtf": { source: "iana", compressible: true, extensions: ["rtf"] }, "text/rtp-enc-aescm128": { source: "iana" }, "text/rtploopback": { source: "iana" }, "text/rtx": { source: "iana" }, "text/sgml": { source: "iana", extensions: ["sgml", "sgm"] }, "text/shaclc": { source: "iana" }, "text/shex": { source: "iana", extensions: ["shex"] }, "text/slim": { extensions: ["slim", "slm"] }, "text/spdx": { source: "iana", extensions: ["spdx"] }, "text/strings": { source: "iana" }, "text/stylus": { extensions: ["stylus", "styl"] }, "text/t140": { source: "iana" }, "text/tab-separated-values": { source: "iana", compressible: true, extensions: ["tsv"] }, "text/troff": { source: "iana", extensions: ["t", "tr", "roff", "man", "me", "ms"] }, "text/turtle": { source: "iana", charset: "UTF-8", extensions: ["ttl"] }, "text/ulpfec": { source: "iana" }, "text/uri-list": { source: "iana", compressible: true, extensions: ["uri", "uris", "urls"] }, "text/vcard": { source: "iana", compressible: true, extensions: ["vcard"] }, "text/vnd.a": { source: "iana" }, "text/vnd.abc": { source: "iana" }, "text/vnd.ascii-art": { source: "iana" }, "text/vnd.curl": { source: "iana", extensions: ["curl"] }, "text/vnd.curl.dcurl": { source: "apache", extensions: ["dcurl"] }, "text/vnd.curl.mcurl": { source: "apache", extensions: ["mcurl"] }, "text/vnd.curl.scurl": { source: "apache", extensions: ["scurl"] }, "text/vnd.debian.copyright": { source: "iana", charset: "UTF-8" }, "text/vnd.dmclientscript": { source: "iana" }, "text/vnd.dvb.subtitle": { source: "iana", extensions: ["sub"] }, "text/vnd.esmertec.theme-descriptor": { source: "iana", charset: "UTF-8" }, "text/vnd.familysearch.gedcom": { source: "iana", extensions: ["ged"] }, "text/vnd.ficlab.flt": { source: "iana" }, "text/vnd.fly": { source: "iana", extensions: ["fly"] }, "text/vnd.fmi.flexstor": { source: "iana", extensions: ["flx"] }, "text/vnd.gml": { source: "iana" }, "text/vnd.graphviz": { source: "iana", extensions: ["gv"] }, "text/vnd.hans": { source: "iana" }, "text/vnd.hgl": { source: "iana" }, "text/vnd.in3d.3dml": { source: "iana", extensions: ["3dml"] }, "text/vnd.in3d.spot": { source: "iana", extensions: ["spot"] }, "text/vnd.iptc.newsml": { source: "iana" }, "text/vnd.iptc.nitf": { source: "iana" }, "text/vnd.latex-z": { source: "iana" }, "text/vnd.motorola.reflex": { source: "iana" }, "text/vnd.ms-mediapackage": { source: "iana" }, "text/vnd.net2phone.commcenter.command": { source: "iana" }, "text/vnd.radisys.msml-basic-layout": { source: "iana" }, "text/vnd.senx.warpscript": { source: "iana" }, "text/vnd.si.uricatalogue": { source: "iana" }, "text/vnd.sosi": { source: "iana" }, "text/vnd.sun.j2me.app-descriptor": { source: "iana", charset: "UTF-8", extensions: ["jad"] }, "text/vnd.trolltech.linguist": { source: "iana", charset: "UTF-8" }, "text/vnd.wap.si": { source: "iana" }, "text/vnd.wap.sl": { source: "iana" }, "text/vnd.wap.wml": { source: "iana", extensions: ["wml"] }, "text/vnd.wap.wmlscript": { source: "iana", extensions: ["wmls"] }, "text/vtt": { source: "iana", charset: "UTF-8", compressible: true, extensions: ["vtt"] }, "text/x-asm": { source: "apache", extensions: ["s", "asm"] }, "text/x-c": { source: "apache", extensions: ["c", "cc", "cxx", "cpp", "h", "hh", "dic"] }, "text/x-component": { source: "nginx", extensions: ["htc"] }, "text/x-fortran": { source: "apache", extensions: ["f", "for", "f77", "f90"] }, "text/x-gwt-rpc": { compressible: true }, "text/x-handlebars-template": { extensions: ["hbs"] }, "text/x-java-source": { source: "apache", extensions: ["java"] }, "text/x-jquery-tmpl": { compressible: true }, "text/x-lua": { extensions: ["lua"] }, "text/x-markdown": { compressible: true, extensions: ["mkd"] }, "text/x-nfo": { source: "apache", extensions: ["nfo"] }, "text/x-opml": { source: "apache", extensions: ["opml"] }, "text/x-org": { compressible: true, extensions: ["org"] }, "text/x-pascal": { source: "apache", extensions: ["p", "pas"] }, "text/x-processing": { compressible: true, extensions: ["pde"] }, "text/x-sass": { extensions: ["sass"] }, "text/x-scss": { extensions: ["scss"] }, "text/x-setext": { source: "apache", extensions: ["etx"] }, "text/x-sfv": { source: "apache", extensions: ["sfv"] }, "text/x-suse-ymp": { compressible: true, extensions: ["ymp"] }, "text/x-uuencode": { source: "apache", extensions: ["uu"] }, "text/x-vcalendar": { source: "apache", extensions: ["vcs"] }, "text/x-vcard": { source: "apache", extensions: ["vcf"] }, "text/xml": { source: "iana", compressible: true, extensions: ["xml"] }, "text/xml-external-parsed-entity": { source: "iana" }, "text/yaml": { compressible: true, extensions: ["yaml", "yml"] }, "video/1d-interleaved-parityfec": { source: "iana" }, "video/3gpp": { source: "iana", extensions: ["3gp", "3gpp"] }, "video/3gpp-tt": { source: "iana" }, "video/3gpp2": { source: "iana", extensions: ["3g2"] }, "video/av1": { source: "iana" }, "video/bmpeg": { source: "iana" }, "video/bt656": { source: "iana" }, "video/celb": { source: "iana" }, "video/dv": { source: "iana" }, "video/encaprtp": { source: "iana" }, "video/ffv1": { source: "iana" }, "video/flexfec": { source: "iana" }, "video/h261": { source: "iana", extensions: ["h261"] }, "video/h263": { source: "iana", extensions: ["h263"] }, "video/h263-1998": { source: "iana" }, "video/h263-2000": { source: "iana" }, "video/h264": { source: "iana", extensions: ["h264"] }, "video/h264-rcdo": { source: "iana" }, "video/h264-svc": { source: "iana" }, "video/h265": { source: "iana" }, "video/iso.segment": { source: "iana", extensions: ["m4s"] }, "video/jpeg": { source: "iana", extensions: ["jpgv"] }, "video/jpeg2000": { source: "iana" }, "video/jpm": { source: "apache", extensions: ["jpm", "jpgm"] }, "video/jxsv": { source: "iana" }, "video/mj2": { source: "iana", extensions: ["mj2", "mjp2"] }, "video/mp1s": { source: "iana" }, "video/mp2p": { source: "iana" }, "video/mp2t": { source: "iana", extensions: ["ts"] }, "video/mp4": { source: "iana", compressible: false, extensions: ["mp4", "mp4v", "mpg4"] }, "video/mp4v-es": { source: "iana" }, "video/mpeg": { source: "iana", compressible: false, extensions: ["mpeg", "mpg", "mpe", "m1v", "m2v"] }, "video/mpeg4-generic": { source: "iana" }, "video/mpv": { source: "iana" }, "video/nv": { source: "iana" }, "video/ogg": { source: "iana", compressible: false, extensions: ["ogv"] }, "video/parityfec": { source: "iana" }, "video/pointer": { source: "iana" }, "video/quicktime": { source: "iana", compressible: false, extensions: ["qt", "mov"] }, "video/raptorfec": { source: "iana" }, "video/raw": { source: "iana" }, "video/rtp-enc-aescm128": { source: "iana" }, "video/rtploopback": { source: "iana" }, "video/rtx": { source: "iana" }, "video/scip": { source: "iana" }, "video/smpte291": { source: "iana" }, "video/smpte292m": { source: "iana" }, "video/ulpfec": { source: "iana" }, "video/vc1": { source: "iana" }, "video/vc2": { source: "iana" }, "video/vnd.cctv": { source: "iana" }, "video/vnd.dece.hd": { source: "iana", extensions: ["uvh", "uvvh"] }, "video/vnd.dece.mobile": { source: "iana", extensions: ["uvm", "uvvm"] }, "video/vnd.dece.mp4": { source: "iana" }, "video/vnd.dece.pd": { source: "iana", extensions: ["uvp", "uvvp"] }, "video/vnd.dece.sd": { source: "iana", extensions: ["uvs", "uvvs"] }, "video/vnd.dece.video": { source: "iana", extensions: ["uvv", "uvvv"] }, "video/vnd.directv.mpeg": { source: "iana" }, "video/vnd.directv.mpeg-tts": { source: "iana" }, "video/vnd.dlna.mpeg-tts": { source: "iana" }, "video/vnd.dvb.file": { source: "iana", extensions: ["dvb"] }, "video/vnd.fvt": { source: "iana", extensions: ["fvt"] }, "video/vnd.hns.video": { source: "iana" }, "video/vnd.iptvforum.1dparityfec-1010": { source: "iana" }, "video/vnd.iptvforum.1dparityfec-2005": { source: "iana" }, "video/vnd.iptvforum.2dparityfec-1010": { source: "iana" }, "video/vnd.iptvforum.2dparityfec-2005": { source: "iana" }, "video/vnd.iptvforum.ttsavc": { source: "iana" }, "video/vnd.iptvforum.ttsmpeg2": { source: "iana" }, "video/vnd.motorola.video": { source: "iana" }, "video/vnd.motorola.videop": { source: "iana" }, "video/vnd.mpegurl": { source: "iana", extensions: ["mxu", "m4u"] }, "video/vnd.ms-playready.media.pyv": { source: "iana", extensions: ["pyv"] }, "video/vnd.nokia.interleaved-multimedia": { source: "iana" }, "video/vnd.nokia.mp4vr": { source: "iana" }, "video/vnd.nokia.videovoip": { source: "iana" }, "video/vnd.objectvideo": { source: "iana" }, "video/vnd.radgamettools.bink": { source: "iana" }, "video/vnd.radgamettools.smacker": { source: "iana" }, "video/vnd.sealed.mpeg1": { source: "iana" }, "video/vnd.sealed.mpeg4": { source: "iana" }, "video/vnd.sealed.swf": { source: "iana" }, "video/vnd.sealedmedia.softseal.mov": { source: "iana" }, "video/vnd.uvvu.mp4": { source: "iana", extensions: ["uvu", "uvvu"] }, "video/vnd.vivo": { source: "iana", extensions: ["viv"] }, "video/vnd.youtube.yt": { source: "iana" }, "video/vp8": { source: "iana" }, "video/vp9": { source: "iana" }, "video/webm": { source: "apache", compressible: false, extensions: ["webm"] }, "video/x-f4v": { source: "apache", extensions: ["f4v"] }, "video/x-fli": { source: "apache", extensions: ["fli"] }, "video/x-flv": { source: "apache", compressible: false, extensions: ["flv"] }, "video/x-m4v": { source: "apache", extensions: ["m4v"] }, "video/x-matroska": { source: "apache", compressible: false, extensions: ["mkv", "mk3d", "mks"] }, "video/x-mng": { source: "apache", extensions: ["mng"] }, "video/x-ms-asf": { source: "apache", extensions: ["asf", "asx"] }, "video/x-ms-vob": { source: "apache", extensions: ["vob"] }, "video/x-ms-wm": { source: "apache", extensions: ["wm"] }, "video/x-ms-wmv": { source: "apache", compressible: false, extensions: ["wmv"] }, "video/x-ms-wmx": { source: "apache", extensions: ["wmx"] }, "video/x-ms-wvx": { source: "apache", extensions: ["wvx"] }, "video/x-msvideo": { source: "apache", extensions: ["avi"] }, "video/x-sgi-movie": { source: "apache", extensions: ["movie"] }, "video/x-smv": { source: "apache", extensions: ["smv"] }, "x-conference/x-cooltalk": { source: "apache", extensions: ["ice"] }, "x-shader/x-fragment": { compressible: true }, "x-shader/x-vertex": { compressible: true } };
!function(a2) {
  var r2, t2, o2, n2 = ss, s2 = import_path.default.extname, i2 = /^\s*([^;\s]*)(?:;|\s|$)/, d2 = /^text\//i;
  function c2(e8) {
    if (!e8 || "string" != typeof e8) return false;
    var a3 = i2.exec(e8), r3 = a3 && n2[a3[1].toLowerCase()];
    return r3 && r3.charset ? r3.charset : !(!a3 || !d2.test(a3[1])) && "UTF-8";
  }
  a2.charset = c2, a2.charsets = { lookup: c2 }, a2.contentType = function(e8) {
    if (!e8 || "string" != typeof e8) return false;
    var r3 = -1 === e8.indexOf("/") ? a2.lookup(e8) : e8;
    if (!r3) return false;
    if (-1 === r3.indexOf("charset")) {
      var t3 = a2.charset(r3);
      t3 && (r3 += "; charset=" + t3.toLowerCase());
    }
    return r3;
  }, a2.extension = function(e8) {
    if (!e8 || "string" != typeof e8) return false;
    var r3 = i2.exec(e8), t3 = r3 && a2.extensions[r3[1].toLowerCase()];
    if (!t3 || !t3.length) return false;
    return t3[0];
  }, a2.extensions = /* @__PURE__ */ Object.create(null), a2.lookup = function(e8) {
    if (!e8 || "string" != typeof e8) return false;
    var r3 = s2("x." + e8).toLowerCase().substr(1);
    if (!r3) return false;
    return a2.types[r3] || false;
  }, a2.types = /* @__PURE__ */ Object.create(null), r2 = a2.extensions, t2 = a2.types, o2 = ["nginx", "apache", void 0, "iana"], Object.keys(n2).forEach(function(e8) {
    var a3 = n2[e8], s3 = a3.extensions;
    if (s3 && s3.length) {
      r2[e8] = s3;
      for (var i3 = 0; i3 < s3.length; i3++) {
        var d3 = s3[i3];
        if (t2[d3]) {
          var c3 = o2.indexOf(n2[t2[d3]].source), u2 = o2.indexOf(a3.source);
          if ("application/octet-stream" !== t2[d3] && (c3 > u2 || c3 === u2 && "application/" === t2[d3].substr(0, 12))) continue;
        }
        t2[d3] = e8;
      }
    }
  });
}(ns);
var is = t(ns);
var ds = "undefined" != typeof window ? window : { screen: {}, navigator: {} };
var cs = (ds.matchMedia || function() {
  return { matches: false };
}).bind(ds);
var us = { get passive() {
  return true;
} };
var ls = function() {
};
ds.addEventListener && ds.addEventListener("p", ls, us), ds.removeEventListener && ds.removeEventListener("p", ls, false);
var ps = "ontouchstart" in ds;
var ms = ps || "TouchEvent" in ds && cs("(any-pointer: coarse)").matches;
var hs = (ds.navigator.maxTouchPoints || 0) > 0 || ms;
var fs = ds.navigator.userAgent || "";
var vs = cs("(pointer: coarse)").matches && /iPad|Macintosh/.test(fs) && Math.min(ds.screen.width || 0, ds.screen.height || 0) >= 768;
var gs = (cs("(pointer: coarse)").matches || !cs("(pointer: fine)").matches && ps) && !/Windows.*Firefox/.test(fs);
var bs = cs("(any-pointer: fine)").matches || cs("(any-hover: hover)").matches || vs || !ps;
var ws = !hs || !bs && gs ? hs ? "touchOnly" : "mouseOnly" : "hybrid";
var ys = "mouseOnly" === ws ? "mouse" : "touchOnly" === ws || gs ? "touch" : "mouse";
function xs(e8) {
  return xs = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e9) {
    return typeof e9;
  } : function(e9) {
    return e9 && "function" == typeof Symbol && e9.constructor === Symbol && e9 !== Symbol.prototype ? "symbol" : typeof e9;
  }, xs(e8);
}
function _s(e8) {
  return function(e9) {
    if (Array.isArray(e9)) return Ss(e9);
  }(e8) || function(e9) {
    if ("undefined" != typeof Symbol && null != e9[Symbol.iterator] || null != e9["@@iterator"]) return Array.from(e9);
  }(e8) || function(e9, a2) {
    if (!e9) return;
    if ("string" == typeof e9) return Ss(e9, a2);
    var r2 = Object.prototype.toString.call(e9).slice(8, -1);
    "Object" === r2 && e9.constructor && (r2 = e9.constructor.name);
    if ("Map" === r2 || "Set" === r2) return Array.from(e9);
    if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2)) return Ss(e9, a2);
  }(e8) || function() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function Is(e8, a2) {
  for (var r2 = 0; r2 < a2.length; r2++) {
    var t2 = a2[r2];
    t2.enumerable = t2.enumerable || false, t2.configurable = true, "value" in t2 && (t2.writable = true), Object.defineProperty(e8, ks(t2.key), t2);
  }
}
function ks(e8) {
  var a2 = function(e9, a3) {
    if ("object" !== xs(e9) || null === e9) return e9;
    var r2 = e9[Symbol.toPrimitive];
    if (void 0 !== r2) {
      var t2 = r2.call(e9, a3 || "default");
      if ("object" !== xs(t2)) return t2;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === a3 ? String : Number)(e9);
  }(e8, "string");
  return "symbol" === xs(a2) ? a2 : String(a2);
}
function Ss(e8, a2) {
  (null == a2 || a2 > e8.length) && (a2 = e8.length);
  for (var r2 = 0, t2 = new Array(a2); r2 < a2; r2++) t2[r2] = e8[r2];
  return t2;
}
function Ts(e8) {
  return e8 || (new URLSearchParams(window.location.search).get("lng") || "en");
}
function Es() {
  return "touchOnly" === ws || "hybrid" === ws && "touch" === ys ? "mobile" : "desktop";
}
function js(e8, a2, r2, t2, o2, n2, s2) {
  return s2 && n2 && "device" === o2 || n2 && "device" === o2 ? "".concat(e8, "/").concat(r2, "/").concat(t2, "/").concat(a2) : s2 && n2 && "shared" === o2 || n2 && "shared" === o2 ? "".concat(e8, "/").concat(r2, "/shared/").concat(a2) : "device" === o2 ? "".concat(e8, "/").concat(t2, "/").concat(a2) : "shared/device" === o2 ? "".concat(e8, "/shared/").concat(t2, "/").concat(a2) : "languageSpecific" === o2 ? "".concat(e8, "/").concat(r2, "/").concat(a2) : "default" === o2 ? "".concat(e8, "/").concat(a2) : "".concat(e8, "/shared/").concat(a2);
}
function Os(e8) {
  var a2 = is.lookup(e8);
  if (!a2) throw new Error("Unrecognized file extension in path: ".concat(e8));
  if (a2.startsWith("image/")) return "images";
  if (a2.startsWith("audio/")) return "audio";
  if (a2.startsWith("video/")) return "video";
  throw new Error("Unsupported MIME type for file: ".concat(e8, ". Only image, audio, and video files are supported."));
}
var As = function(e8, a2, r2, t2) {
  var o2 = 315576e5, n2 = /* @__PURE__ */ new Date(), s2 = function(e9) {
    var a3 = Number(e9);
    return Object.is(a3, NaN) || 0 === a3 ? null : a3;
  }, i2 = s2(e8), d2 = s2(a2), c2 = s2(r2), u2 = s2(t2), l2 = { age: c2, ageMonths: u2 };
  if (i2 && d2) {
    l2.birthMonth = i2, l2.birthYear = d2;
    var p2 = new Date(d2, i2 - 1, n2.getDate()), m2 = (n2 - p2) / o2;
    l2.age = Math.floor(m2), l2.ageMonths = u2 || Math.floor(12 * m2);
  } else if (d2) {
    l2.birthYear = d2, l2.birthMonth = n2.getMonth() + 1;
    var h2 = new Date(d2, l2.birthMonth - 1, n2.getDate()), f2 = (n2 - h2) / o2;
    l2.age = Math.floor(f2), l2.ageMonths = u2 || Math.floor(12 * f2);
  } else if (u2) {
    var v2 = /* @__PURE__ */ new Date();
    v2.setMonth(v2.getMonth() - u2), l2.birthYear = v2.getFullYear(), l2.birthMonth = v2.getMonth() + 1, l2.age = Math.floor((n2 - v2) / o2);
  } else c2 ? (l2.birthYear = n2.getFullYear() - c2, l2.birthMonth = n2.getMonth() + 1, l2.ageMonths = 12 * c2) : (l2.birthMonth = null, l2.birthYear = null);
  return l2;
};
var Cs = function(e8) {
  var a2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 13, t2 = Number(e8);
  if (null != e8) {
    if (Number.isNaN(t2)) {
      var o2 = { k: 0, tk: 0, pk: 0, preschool: 0, prekindergarten: 0, transitionalkindergarten: 0, kindergarten: 0, infanttoddler: 0, infant: 0, toddler: 0, first: 1, firstgrade: 1, second: 2, secondgrade: 2, third: 3, thirdgrade: 3, fourth: 4, fourthgrade: 4, fifth: 5, fifthgrade: 5, sixth: 6, sixthgrade: 6, seventh: 7, seventhgrade: 7, eighth: 8, eighthgrade: 8, ninth: 9, ninthgrade: 9, tenth: 10, tenthgrade: 10, eleventh: 11, eleventhgrade: 11, twelfth: 12, twelfthgrade: 12, freshman: 9, sophomore: 10, junior: 11, senior: 12, postgraduate: 13, university: 13, graduate: 13, master: 13, doctorate: 13, masters: 13 }[e8.toLowerCase().replace(/\s/g, "").replace(/-/g, "")];
      if (void 0 === o2) return;
      return o2 < a2 ? a2 : o2 > r2 ? r2 : o2;
    }
    return t2 < a2 ? a2 : t2 > r2 ? r2 : t2;
  }
};
var Rs = function(e8) {
  e8.sort(function(e9, a3) {
    return a3 - e9;
  });
  var a2 = e8.length;
  return a2 % 2 == 0 ? (e8[a2 / 2] + e8[a2 / 2 - 1]) / 2 : e8[Math.floor(a2 / 2)];
};
function Ns(e8) {
  var a2 = e8.responseTimeLowThreshold, r2 = void 0 === a2 ? 400 : a2, t2 = e8.responseTimeHighThreshold, o2 = void 0 === t2 ? 1e4 : t2, n2 = e8.accuracyThreshold, s2 = void 0 === n2 ? 0.2 : n2, i2 = e8.minResponsesRequired, d2 = void 0 === i2 ? 0 : i2, c2 = e8.includedReliabilityFlags, u2 = void 0 === c2 ? ["responseTimeTooFast"] : c2;
  return function(e9) {
    var a3 = e9.responseTimes;
    e9.responses;
    var t3, n3 = e9.correct, i3 = e9.completed, c3 = [], l2 = false;
    a3.length < d2 ? c3.push("notEnoughResponses") : (Rs(a3) <= r2 && c3.push("responseTimeTooFast"), Rs(a3) >= o2 && c3.push("responseTimeTooSlow"), false === i3 && u2.includes("incomplete") && c3.push("incomplete"), (null !== (t3 = null == n3 ? void 0 : n3.filter(function(e10) {
      return 1 === e10;
    }).length) && void 0 !== t3 ? t3 : 0) / n3.length <= s2 && c3.push("accuracyTooLow"), l2 = 0 === c3.filter(function(e10) {
      return u2.includes(e10);
    }).length, c3 = c3.filter(function(e10) {
      return u2.includes(e10);
    }));
    return { flags: c3, isReliable: l2 };
  };
}
var Ps = function() {
  function e8(a3) {
    var r3 = a3.evaluateValidity, t3 = void 0 === r3 ? Ns() : r3, o2 = a3.handleEngagementFlags, n2 = void 0 === o2 ? function() {
    } : o2;
    !function(e9, a4) {
      if (!(e9 instanceof a4)) throw new TypeError("Cannot call a class as a function");
    }(this, e8), this.evaluateValidity = t3, this.handleEngagementFlags = n2, this._responseTimes = [], this._responses = [], this._correct = [], this._preserveFlags = [], this.currentBlock = void 0, this.reliabilityByBlock = {}, this.completed = false;
  }
  var a2, r2, t2;
  return a2 = e8, r2 = [{ key: "appendCurrentBlockToFlags", value: function(e9) {
    var a3 = this;
    return void 0 !== this.currentBlock ? e9.map(function(e10) {
      return "incomplete" !== e10 ? "".concat(e10, "_").concat(a3.currentBlock) : e10;
    }) : e9;
  } }, { key: "calculateReliabilityWithBlocks", value: function() {
    return Object.values(this.reliabilityByBlock).every(function(e9) {
      return true === e9;
    });
  } }, { key: "startNewBlockValidation", value: function(e9) {
    var a3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.evaluateValidity;
    if (this._responseTimes.length > 0 && void 0 !== e9) {
      var r3 = this.calculateAndUpdateFlags();
      this._preserveFlags = [].concat(_s(this._preserveFlags), _s(this.appendCurrentBlockToFlags(r3)));
    }
    this.currentBlock = e9, this.evaluateValidity = a3, this._responseTimes = [], this._responses = [], this._correct = [], this.completed = false;
  } }, { key: "markAsCompleted", value: function() {
    this.completed = true, this.calculateAndUpdateFlags();
  } }, { key: "calculateAndUpdateFlags", value: function() {
    var e9 = this.evaluateValidity({ responseTimes: this._responseTimes, responses: this._responses, correct: this._correct, completed: this.completed }), a3 = e9.flags, r3 = e9.isReliable;
    return void 0 !== this.currentBlock ? (this.reliabilityByBlock[this.currentBlock] = r3, this.handleEngagementFlags([].concat(_s(this._preserveFlags), _s(this.appendCurrentBlockToFlags(a3))), this.calculateReliabilityWithBlocks(), this.reliabilityByBlock)) : this.handleEngagementFlags(a3, r3), a3;
  } }, { key: "addResponseData", value: function(e9, a3, r3) {
    this._responseTimes.push(e9), this._responses.push(a3), this._correct.push(r3), this.calculateAndUpdateFlags();
  } }], r2 && Is(a2.prototype, r2), t2 && Is(a2, t2), Object.defineProperty(a2, "prototype", { writable: false }), e8;
}();
function Ms(e8, a2, r2, t2) {
  return new (r2 || (r2 = Promise))(function(o2, n2) {
    function s2(e9) {
      try {
        d2(t2.next(e9));
      } catch (e10) {
        n2(e10);
      }
    }
    function i2(e9) {
      try {
        d2(t2.throw(e9));
      } catch (e10) {
        n2(e10);
      }
    }
    function d2(e9) {
      var a3;
      e9.done ? o2(e9.value) : (a3 = e9.value, a3 instanceof r2 ? a3 : new r2(function(e10) {
        e10(a3);
      })).then(s2, i2);
    }
    d2((t2 = t2.apply(e8, a2 || [])).next());
  });
}
var Ls = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
function Ds(e8) {
  return e8 && e8.__esModule && Object.prototype.hasOwnProperty.call(e8, "default") ? e8.default : e8;
}
var zs = (e8, { include: a2, exclude: r2 } = {}) => {
  const t2 = (e9) => {
    const t3 = (a3) => "string" == typeof a3 ? e9 === a3 : a3.test(e9);
    return a2 ? a2.some(t3) : !r2 || !r2.some(t3);
  };
  for (const [a3, r3] of ((e9) => {
    const a4 = /* @__PURE__ */ new Set();
    do {
      for (const r4 of Reflect.ownKeys(e9)) a4.add([e9, r4]);
    } while ((e9 = Reflect.getPrototypeOf(e9)) && e9 !== Object.prototype);
    return a4;
  })(e8.constructor.prototype)) {
    if ("constructor" === r3 || !t2(r3)) continue;
    const o2 = Reflect.getOwnPropertyDescriptor(a3, r3);
    o2 && "function" == typeof o2.value && (e8[r3] = e8[r3].bind(e8));
  }
  return e8;
};
var Fs = Ds(zs);
var Bs = class extends Error {
  constructor(e8 = "The global `jsPsych` variable is no longer available in jsPsych v7.") {
    super(`${e8} Please follow the migration guide at https://www.jspsych.org/7.0/support/migration-v7/ to update your experiment.`), this.name = "MigrationError";
  }
};
function qs(e8) {
  return [...new Set(e8)];
}
function $s(e8) {
  if (!e8) return e8;
  let a2;
  if (Array.isArray(e8)) {
    a2 = [];
    for (const r2 of e8) a2.push($s(r2));
    return a2;
  }
  if ("object" == typeof e8 && null !== e8) {
    a2 = {};
    for (const r2 in e8) e8.hasOwnProperty(r2) && (a2[r2] = $s(e8[r2]));
    return a2;
  }
  return e8;
}
window.jsPsych = { get init() {
  throw new Bs("`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.");
}, get data() {
  throw new Bs();
}, get randomization() {
  throw new Bs();
}, get turk() {
  throw new Bs();
}, get pluginAPI() {
  throw new Bs();
}, get ALL_KEYS() {
  throw new Bs('jsPsych.ALL_KEYS was replaced by the "ALL_KEYS" string in jsPsych v7.');
}, get NO_KEYS() {
  throw new Bs('jsPsych.NO_KEYS was replaced by the "NO_KEYS" string in jsPsych v7.');
} };
var Us;
var Hs = Object.freeze({ __proto__: null, deepCopy: $s, deepMerge: function e4(a2, r2) {
  let t2 = {};
  for (const o2 in a2) a2.hasOwnProperty(o2) && ("object" == typeof a2[o2] && r2.hasOwnProperty(o2) ? t2[o2] = e4(a2[o2], r2[o2]) : t2[o2] = a2[o2]);
  for (const a3 in r2) r2.hasOwnProperty(a3) && (t2.hasOwnProperty(a3) && "object" == typeof r2[a3] ? t2[a3] = e4(t2[a3], r2[a3]) : t2[a3] = r2[a3]);
  return t2;
}, unique: qs });
var Ws = class _Ws {
  constructor(e8 = []) {
    this.values = e8;
  }
  sum() {
    let e8 = 0;
    for (const a2 of this.values) e8 += a2;
    return e8;
  }
  mean() {
    return this.sum() / this.count();
  }
  median() {
    if (0 === this.values.length) return;
    const e8 = this.values.slice(0).sort(function(e9, a3) {
      return e9 - a3;
    }), a2 = Math.floor(e8.length / 2);
    return e8.length % 2 == 0 ? (e8[a2] + e8[a2 - 1]) / 2 : e8[a2];
  }
  min() {
    return Math.min.apply(null, this.values);
  }
  max() {
    return Math.max.apply(null, this.values);
  }
  count() {
    return this.values.length;
  }
  variance() {
    const e8 = this.mean();
    let a2 = 0;
    for (const r2 of this.values) a2 += Math.pow(r2 - e8, 2);
    return a2 / (this.values.length - 1);
  }
  sd() {
    const e8 = this.variance();
    return Math.sqrt(e8);
  }
  frequencies() {
    const e8 = {};
    for (const a2 of this.values) void 0 === e8[a2] ? e8[a2] = 1 : e8[a2]++;
    return e8;
  }
  all(e8) {
    for (const a2 of this.values) if (!e8(a2)) return false;
    return true;
  }
  subset(e8) {
    const a2 = [];
    for (const r2 of this.values) e8(r2) && a2.push(r2);
    return new _Ws(a2);
  }
};
var Ks = class _Ks {
  constructor(e8 = []) {
    this.trials = e8;
  }
  push(e8) {
    return this.trials.push(e8), this;
  }
  join(e8) {
    return this.trials = this.trials.concat(e8.values()), this;
  }
  top() {
    return this.trials.length <= 1 ? this : new _Ks([this.trials[this.trials.length - 1]]);
  }
  first(e8 = 1) {
    if (e8 < 1) throw "You must query with a positive nonzero integer. Please use a\n               different value for n.";
    return 0 === this.trials.length ? new _Ks() : (e8 > this.trials.length && (e8 = this.trials.length), new _Ks(this.trials.slice(0, e8)));
  }
  last(e8 = 1) {
    if (e8 < 1) throw "You must query with a positive nonzero integer. Please use a\n               different value for n.";
    return 0 === this.trials.length ? new _Ks() : (e8 > this.trials.length && (e8 = this.trials.length), new _Ks(this.trials.slice(this.trials.length - e8, this.trials.length)));
  }
  values() {
    return this.trials;
  }
  count() {
    return this.trials.length;
  }
  readOnly() {
    return new _Ks($s(this.trials));
  }
  addToAll(e8) {
    for (const a2 of this.trials) Object.assign(a2, e8);
    return this;
  }
  addToLast(e8) {
    return 0 != this.trials.length && Object.assign(this.trials[this.trials.length - 1], e8), this;
  }
  filter(e8) {
    let a2;
    a2 = Array.isArray(e8) ? $s(e8) : $s([e8]);
    const r2 = [];
    for (const e9 of this.trials) {
      let t2 = false;
      for (const r3 of a2) {
        let a3 = true;
        for (const t3 of Object.keys(r3)) void 0 !== e9[t3] && e9[t3] === r3[t3] || (a3 = false);
        if (a3) {
          t2 = true;
          break;
        }
      }
      t2 && r2.push(e9);
    }
    return new _Ks(r2);
  }
  filterCustom(e8) {
    return new _Ks(this.trials.filter(e8));
  }
  filterColumns(e8) {
    return new _Ks(this.trials.map((a2) => Object.fromEntries(e8.filter((e9) => e9 in a2).map((e9) => [e9, a2[e9]]))));
  }
  select(e8) {
    const a2 = [];
    for (const r2 of this.trials) void 0 !== r2[e8] && a2.push(r2[e8]);
    return new Ws(a2);
  }
  ignore(e8) {
    Array.isArray(e8) || (e8 = [e8]);
    const a2 = $s(this.trials);
    for (const r2 of a2) for (const a3 of e8) delete r2[a3];
    return new _Ks(a2);
  }
  uniqueNames() {
    const e8 = [];
    for (const a2 of this.trials) for (const r2 of Object.keys(a2)) e8.includes(r2) || e8.push(r2);
    return e8;
  }
  csv() {
    return function(e8) {
      const a2 = "object" != typeof e8 ? JSON.parse(e8) : e8;
      let r2 = "", t2 = "";
      const o2 = [];
      for (const e9 of a2) for (const a3 in e9) {
        let e10 = a3 + "";
        e10 = '"' + e10.replace(/"/g, '""') + '",', o2.includes(a3) || (o2.push(a3), r2 += e10);
      }
      r2 = r2.slice(0, -1), t2 += r2 + "\r\n";
      for (const e9 of a2) {
        r2 = "";
        for (const a3 of o2) {
          let t3 = void 0 === e9[a3] ? "" : e9[a3];
          "object" == typeof t3 && (t3 = JSON.stringify(t3)), r2 += '"' + (t3 + "").replace(/"/g, '""') + '",';
        }
        r2 = r2.slice(0, -1), t2 += r2 + "\r\n";
      }
      return t2;
    }(this.trials);
  }
  json(e8 = false) {
    return e8 ? JSON.stringify(this.trials, null, "	") : JSON.stringify(this.trials);
  }
  localSave(e8, a2) {
    let r2;
    if ("json" === (e8 = e8.toLowerCase())) r2 = this.json();
    else {
      if ("csv" !== e8) throw new Error('Invalid format specified for localSave. Must be "json" or "csv".');
      r2 = this.csv();
    }
    !function(e9, a3) {
      const r3 = new Blob([e9], { type: "text/plain" });
      let t2 = "";
      t2 = void 0 !== window.webkitURL ? window.webkitURL.createObjectURL(r3) : window.URL.createObjectURL(r3);
      const o2 = document.createElement("a");
      o2.id = "jspsych-download-as-text-link", o2.style.display = "none", o2.download = a3, o2.href = t2, o2.click();
    }(r2, a2);
  }
};
var Vs = class {
  constructor(e8) {
    this.jsPsych = e8, this.dataProperties = {}, this.reset();
  }
  reset() {
    this.allData = new Ks(), this.interactionData = new Ks();
  }
  get() {
    return this.allData;
  }
  getInteractionData() {
    return this.interactionData;
  }
  write(e8) {
    const a2 = this.jsPsych.getProgress(), r2 = this.jsPsych.getCurrentTrial(), t2 = { trial_type: r2.type.info.name, trial_index: a2.current_trial_global, time_elapsed: this.jsPsych.getTotalTime(), internal_node_id: this.jsPsych.getCurrentTimelineNodeID() };
    this.allData.push(Object.assign(Object.assign(Object.assign(Object.assign({}, e8), r2.data), t2), this.dataProperties));
  }
  addProperties(e8) {
    this.allData.addToAll(e8), this.dataProperties = Object.assign({}, this.dataProperties, e8);
  }
  addDataToLastTrial(e8) {
    this.allData.addToLast(e8);
  }
  getDataByTimelineNode(e8) {
    return this.allData.filterCustom((a2) => a2.internal_node_id.slice(0, e8.length) === e8);
  }
  getLastTrialData() {
    return this.allData.top();
  }
  getLastTimelineData() {
    const e8 = this.getLastTrialData().select("internal_node_id").values[0];
    if (void 0 === e8) return new Ks();
    {
      const a2 = e8.substr(0, e8.lastIndexOf("-"));
      return this.getDataByTimelineNode(a2);
    }
  }
  displayData(e8 = "json") {
    "json" != (e8 = e8.toLowerCase()) && "csv" != e8 && (console.log("Invalid format declared for displayData function. Using json as default."), e8 = "json");
    const a2 = "json" === e8 ? this.allData.json(true) : this.allData.csv();
    this.jsPsych.getDisplayElement().innerHTML = '<pre id="jspsych-data-display"></pre>', document.getElementById("jspsych-data-display").textContent = a2;
  }
  urlVariables() {
    return void 0 === this.query_string && (this.query_string = function() {
      const e8 = window.location.search.substr(1).split("&"), a2 = {};
      for (let r2 = 0; r2 < e8.length; ++r2) {
        const t2 = e8[r2].split("=", 2);
        1 == t2.length ? a2[t2[0]] = "" : a2[t2[0]] = decodeURIComponent(t2[1].replace(/\+/g, " "));
      }
      return a2;
    }()), this.query_string;
  }
  getURLVariable(e8) {
    return this.urlVariables()[e8];
  }
  createInteractionListeners() {
    window.addEventListener("blur", () => {
      const e9 = { event: "blur", trial: this.jsPsych.getProgress().current_trial_global, time: this.jsPsych.getTotalTime() };
      this.interactionData.push(e9), this.jsPsych.getInitSettings().on_interaction_data_update(e9);
    }), window.addEventListener("focus", () => {
      const e9 = { event: "focus", trial: this.jsPsych.getProgress().current_trial_global, time: this.jsPsych.getTotalTime() };
      this.interactionData.push(e9), this.jsPsych.getInitSettings().on_interaction_data_update(e9);
    });
    const e8 = () => {
      const e9 = { event: document.isFullScreen || document.webkitIsFullScreen || document.mozIsFullScreen || document.fullscreenElement ? "fullscreenenter" : "fullscreenexit", trial: this.jsPsych.getProgress().current_trial_global, time: this.jsPsych.getTotalTime() };
      this.interactionData.push(e9), this.jsPsych.getInitSettings().on_interaction_data_update(e9);
    };
    document.addEventListener("fullscreenchange", e8), document.addEventListener("mozfullscreenchange", e8), document.addEventListener("webkitfullscreenchange", e8);
  }
  _customInsert(e8) {
    this.allData = new Ks(e8);
  }
  _fullreset() {
    this.reset(), this.dataProperties = {};
  }
};
var Gs = class {
  constructor() {
    this.hardwareConnected = false, document.addEventListener("jspsych-activate", (e8) => {
      this.hardwareConnected = true;
    });
  }
  hardware(e8) {
    const a2 = new CustomEvent("jspsych", { detail: e8 });
    document.dispatchEvent(a2);
  }
};
var Ys = class {
  constructor(e8, a2 = false, r2 = 0) {
    this.getRootElement = e8, this.areResponsesCaseSensitive = a2, this.minimumValidRt = r2, this.listeners = /* @__PURE__ */ new Set(), this.heldKeys = /* @__PURE__ */ new Set(), this.areRootListenersRegistered = false, Fs(this), this.registerRootListeners();
  }
  registerRootListeners() {
    if (!this.areRootListenersRegistered) {
      const e8 = this.getRootElement();
      e8 && (e8.addEventListener("keydown", this.rootKeydownListener), e8.addEventListener("keyup", this.rootKeyupListener), this.areRootListenersRegistered = true);
    }
  }
  rootKeydownListener(e8) {
    for (const a2 of Array.from(this.listeners)) a2(e8);
    this.heldKeys.add(this.toLowerCaseIfInsensitive(e8.key));
  }
  toLowerCaseIfInsensitive(e8) {
    return this.areResponsesCaseSensitive ? e8 : e8.toLowerCase();
  }
  rootKeyupListener(e8) {
    this.heldKeys.delete(this.toLowerCaseIfInsensitive(e8.key));
  }
  isResponseValid(e8, a2, r2) {
    return !(!a2 && this.heldKeys.has(r2)) && ("ALL_KEYS" === e8 || "NO_KEYS" !== e8 && e8.includes(r2));
  }
  getKeyboardResponse({ callback_function: e8, valid_responses: a2 = "ALL_KEYS", rt_method: r2 = "performance", persist: t2, audio_context: o2, audio_context_start_time: n2, allow_held_key: s2 = false, minimum_valid_rt: i2 = this.minimumValidRt }) {
    "performance" !== r2 && "audio" !== r2 && (console.log('Invalid RT method specified in getKeyboardResponse. Defaulting to "performance" method.'), r2 = "performance");
    const d2 = "performance" === r2 ? performance.now() : 1e3 * n2;
    this.registerRootListeners(), this.areResponsesCaseSensitive || "string" == typeof a2 || (a2 = a2.map((e9) => e9.toLowerCase()));
    const c2 = (n3) => {
      const u2 = Math.round(("performance" == r2 ? performance.now() : 1e3 * o2.currentTime) - d2);
      if (u2 < i2) return;
      const l2 = this.toLowerCaseIfInsensitive(n3.key);
      this.isResponseValid(a2, s2, l2) && (n3.preventDefault(), t2 || this.cancelKeyboardResponse(c2), e8({ key: l2, rt: u2 }));
    };
    return this.listeners.add(c2), c2;
  }
  cancelKeyboardResponse(e8) {
    this.listeners.delete(e8);
  }
  cancelAllKeyboardResponses() {
    this.listeners.clear();
  }
  compareKeys(e8, a2) {
    if (!("string" != typeof e8 && null !== e8 || "string" != typeof a2 && null !== a2)) return "string" == typeof e8 && "string" == typeof a2 ? this.areResponsesCaseSensitive ? e8 === a2 : e8.toLowerCase() === a2.toLowerCase() : null === e8 && null === a2;
    console.error("Error in jsPsych.pluginAPI.compareKeys: arguments must be key strings or null.");
  }
};
!function(e8) {
  e8[e8.BOOL = 0] = "BOOL", e8[e8.STRING = 1] = "STRING", e8[e8.INT = 2] = "INT", e8[e8.FLOAT = 3] = "FLOAT", e8[e8.FUNCTION = 4] = "FUNCTION", e8[e8.KEY = 5] = "KEY", e8[e8.KEYS = 6] = "KEYS", e8[e8.SELECT = 7] = "SELECT", e8[e8.HTML_STRING = 8] = "HTML_STRING", e8[e8.IMAGE = 9] = "IMAGE", e8[e8.AUDIO = 10] = "AUDIO", e8[e8.VIDEO = 11] = "VIDEO", e8[e8.OBJECT = 12] = "OBJECT", e8[e8.COMPLEX = 13] = "COMPLEX", e8[e8.TIMELINE = 14] = "TIMELINE";
}(Us || (Us = {}));
var Js = { data: { type: Us.OBJECT, pretty_name: "Data", default: {} }, on_start: { type: Us.FUNCTION, pretty_name: "On start", default: function() {
} }, on_finish: { type: Us.FUNCTION, pretty_name: "On finish", default: function() {
} }, on_load: { type: Us.FUNCTION, pretty_name: "On load", default: function() {
} }, post_trial_gap: { type: Us.INT, pretty_name: "Post trial gap", default: null }, css_classes: { type: Us.STRING, pretty_name: "Custom CSS classes", default: null }, simulation_options: { type: Us.COMPLEX, default: null } };
var Xs = [Us.AUDIO, Us.IMAGE, Us.VIDEO];
var Qs = class {
  constructor(e8, a2) {
    this.useWebaudio = e8, this.webaudioContext = a2, this.video_buffers = {}, this.context = null, this.audio_buffers = [], this.preload_requests = [], this.img_cache = {}, this.preloadMap = /* @__PURE__ */ new Map(), this.microphone_recorder = null, this.camera_stream = null, this.camera_recorder = null;
  }
  getVideoBuffer(e8) {
    return e8.startsWith("blob:") && (this.video_buffers[e8] = e8), this.video_buffers[e8];
  }
  initAudio() {
    this.context = this.useWebaudio ? this.webaudioContext : null;
  }
  audioContext() {
    return null !== this.context && "running" !== this.context.state && this.context.resume(), this.context;
  }
  getAudioBuffer(e8) {
    return new Promise((a2, r2) => {
      void 0 === this.audio_buffers[e8] || "tmp" == this.audio_buffers[e8] ? this.preloadAudio([e8], () => {
        a2(this.audio_buffers[e8]);
      }, () => {
      }, (e9) => {
        r2(e9.error);
      }) : a2(this.audio_buffers[e8]);
    });
  }
  preloadAudio(e8, a2 = () => {
  }, r2 = (e9) => {
  }, t2 = (e9) => {
  }) {
    e8 = qs(e8.flat());
    let o2 = 0;
    if (0 == e8.length) return void a2();
    const n2 = (n3, s3 = 1) => {
      const i2 = new XMLHttpRequest();
      i2.open("GET", n3, true), i2.responseType = "arraybuffer", i2.onload = () => {
        this.context.decodeAudioData(i2.response, (t3) => {
          this.audio_buffers[n3] = t3, o2++, r2(n3), o2 == e8.length && a2();
        }, (e9) => {
          t2({ source: n3, error: e9 });
        });
      }, i2.onerror = (e9) => {
        let a3 = e9;
        404 == i2.status && (a3 = "404"), t2({ source: n3, error: a3 });
      }, i2.onloadend = (e9) => {
        404 == i2.status && t2({ source: n3, error: "404" });
      }, i2.send(), this.preload_requests.push(i2);
    }, s2 = (n3, s3 = 1) => {
      const i2 = new Audio(), d2 = () => {
        this.audio_buffers[n3] = i2, o2++, r2(n3), o2 == e8.length && a2(), i2.removeEventListener("canplaythrough", d2);
      };
      i2.addEventListener("canplaythrough", d2), i2.addEventListener("error", function e9(a3) {
        t2({ source: i2.src, error: a3 }), i2.removeEventListener("error", e9);
      }), i2.addEventListener("abort", function e9(a3) {
        t2({ source: i2.src, error: a3 }), i2.removeEventListener("abort", e9);
      }), i2.src = n3, this.preload_requests.push(i2);
    };
    for (const t3 of e8) void 0 !== this.audio_buffers[t3] ? (o2++, r2(t3), o2 == e8.length && a2()) : (this.audio_buffers[t3] = "tmp", null !== this.audioContext() ? n2(t3) : s2(t3));
  }
  preloadImages(e8, a2 = () => {
  }, r2 = (e9) => {
  }, t2 = (e9) => {
  }) {
    e8 = qs(e8.flat());
    var o2 = 0;
    if (0 !== e8.length) for (let n2 = 0; n2 < e8.length; n2++) {
      const s2 = new Image(), i2 = e8[n2];
      s2.onload = () => {
        o2++, r2(i2), o2 === e8.length && a2();
      }, s2.onerror = (e9) => {
        t2({ source: i2, error: e9 });
      }, s2.src = i2, this.img_cache[i2] = s2, this.preload_requests.push(s2);
    }
    else a2();
  }
  preloadVideo(e8, a2 = () => {
  }, r2 = (e9) => {
  }, t2 = (e9) => {
  }) {
    e8 = qs(e8.flat());
    let o2 = 0;
    if (0 !== e8.length) for (const n2 of e8) {
      const s2 = this.video_buffers, i2 = new XMLHttpRequest();
      i2.open("GET", n2, true), i2.responseType = "blob", i2.onload = () => {
        if (200 === i2.status || 0 === i2.status) {
          const t3 = i2.response;
          s2[n2] = URL.createObjectURL(t3), o2++, r2(n2), o2 === e8.length && a2();
        }
      }, i2.onerror = (e9) => {
        let a3 = e9;
        404 == i2.status && (a3 = "404"), t2({ source: n2, error: a3 });
      }, i2.onloadend = (e9) => {
        404 == i2.status && t2({ source: n2, error: "404" });
      }, i2.send(), this.preload_requests.push(i2);
    }
    else a2();
  }
  getAutoPreloadList(e8) {
    const a2 = Object.fromEntries(Xs.map((e9) => [e9, /* @__PURE__ */ new Set()])), r2 = (e9, t2) => {
      var o2, n2, s2, i2;
      if (void 0 !== e9.timeline) for (const a3 of e9.timeline) r2(a3, null !== (o2 = e9.type) && void 0 !== o2 ? o2 : t2);
      else if (null === (s2 = null !== (n2 = e9.type) && void 0 !== n2 ? n2 : t2) || void 0 === s2 ? void 0 : s2.info) {
        const { name: r3, parameters: o3 } = (null !== (i2 = e9.type) && void 0 !== i2 ? i2 : t2).info;
        this.preloadMap.has(r3) || this.preloadMap.set(r3, Object.fromEntries(Object.entries(o3).filter(([e10, { type: a3, preload: r4 }]) => Xs.includes(a3) && (null == r4 || r4)).map(([e10, { type: a3 }]) => [e10, a3])));
        for (const [t3, o4] of Object.entries(this.preloadMap.get(r3))) {
          const r4 = e9[t3], n3 = a2[o4];
          if ("string" == typeof r4) n3.add(r4);
          else if (Array.isArray(r4)) for (const e10 of r4.flat()) "string" == typeof e10 && n3.add(e10);
        }
      }
    };
    return r2({ timeline: e8 }), { images: [...a2[Us.IMAGE]], audio: [...a2[Us.AUDIO]], video: [...a2[Us.VIDEO]] };
  }
  cancelPreloads() {
    for (const e8 of this.preload_requests) e8.onload = () => {
    }, e8.onerror = () => {
    }, e8.oncanplaythrough = () => {
    }, e8.onabort = () => {
    };
    this.preload_requests = [];
  }
  initializeMicrophoneRecorder(e8) {
    const a2 = new MediaRecorder(e8);
    this.microphone_recorder = a2;
  }
  getMicrophoneRecorder() {
    return this.microphone_recorder;
  }
  initializeCameraRecorder(e8, a2) {
    this.camera_stream = e8;
    const r2 = new MediaRecorder(e8, a2);
    this.camera_recorder = r2;
  }
  getCameraStream() {
    return this.camera_stream;
  }
  getCameraRecorder() {
    return this.camera_recorder;
  }
};
var Zs = class {
  constructor(e8, a2) {
    this.getDisplayContainerElement = e8, this.setJsPsychTimeout = a2;
  }
  dispatchEvent(e8) {
    this.getDisplayContainerElement().dispatchEvent(e8);
  }
  keyDown(e8) {
    this.dispatchEvent(new KeyboardEvent("keydown", { key: e8 }));
  }
  keyUp(e8) {
    this.dispatchEvent(new KeyboardEvent("keyup", { key: e8 }));
  }
  pressKey(e8, a2 = 0) {
    a2 > 0 ? this.setJsPsychTimeout(() => {
      this.keyDown(e8), this.keyUp(e8);
    }, a2) : (this.keyDown(e8), this.keyUp(e8));
  }
  clickTarget(e8, a2 = 0) {
    a2 > 0 ? this.setJsPsychTimeout(() => {
      e8.dispatchEvent(new MouseEvent("mousedown", { bubbles: true })), e8.dispatchEvent(new MouseEvent("mouseup", { bubbles: true })), e8.dispatchEvent(new MouseEvent("click", { bubbles: true }));
    }, a2) : (e8.dispatchEvent(new MouseEvent("mousedown", { bubbles: true })), e8.dispatchEvent(new MouseEvent("mouseup", { bubbles: true })), e8.dispatchEvent(new MouseEvent("click", { bubbles: true })));
  }
  fillTextInput(e8, a2, r2 = 0) {
    r2 > 0 ? this.setJsPsychTimeout(() => {
      e8.value = a2;
    }, r2) : e8.value = a2;
  }
  getValidKey(e8) {
    const a2 = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", " "];
    let r2;
    if ("NO_KEYS" == e8) r2 = null;
    else if ("ALL_KEYS" == e8) r2 = a2[Math.floor(Math.random() * a2.length)];
    else {
      const a3 = e8.flat();
      r2 = a3[Math.floor(Math.random() * a3.length)];
    }
    return r2;
  }
  mergeSimulationData(e8, a2) {
    return Object.assign(Object.assign({}, e8), null == a2 ? void 0 : a2.data);
  }
  ensureSimulationDataConsistency(e8, a2) {
    if (a2.rt && (a2.rt = Math.round(a2.rt)), e8.trial_duration && a2.rt && a2.rt > e8.trial_duration && (a2.rt = null, a2.response && (a2.response = null), a2.correct && (a2.correct = false)), e8.choices && "NO_KEYS" == e8.choices && (a2.rt && (a2.rt = null), a2.response && (a2.response = null)), e8.allow_response_before_complete && e8.sequence_reps && e8.frame_time) {
      const r2 = e8.sequence_reps * e8.frame_time * e8.stimuli.length;
      a2.rt < r2 && (a2.rt = null, a2.response = null);
    }
  }
};
var ei = class {
  constructor() {
    this.timeout_handlers = [];
  }
  setTimeout(e8, a2) {
    const r2 = window.setTimeout(e8, a2);
    return this.timeout_handlers.push(r2), r2;
  }
  clearAllTimeouts() {
    for (const e8 of this.timeout_handlers) clearTimeout(e8);
    this.timeout_handlers = [];
  }
};
var ai = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this, r3 = /* @__PURE__ */ function() {
      var e10 = 4022871197, a4 = function(a5) {
        a5 = String(a5);
        for (var r4 = 0; r4 < a5.length; r4++) {
          var t3 = 0.02519603282416938 * (e10 += a5.charCodeAt(r4));
          t3 -= e10 = t3 >>> 0, e10 = (t3 *= e10) >>> 0, e10 += 4294967296 * (t3 -= e10);
        }
        return 23283064365386963e-26 * (e10 >>> 0);
      };
      return a4;
    }();
    a3.next = function() {
      var e10 = 2091639 * a3.s0 + 23283064365386963e-26 * a3.c;
      return a3.s0 = a3.s1, a3.s1 = a3.s2, a3.s2 = e10 - (a3.c = 0 | e10);
    }, a3.c = 1, a3.s0 = r3(" "), a3.s1 = r3(" "), a3.s2 = r3(" "), a3.s0 -= r3(e9), a3.s0 < 0 && (a3.s0 += 1), a3.s1 -= r3(e9), a3.s1 < 0 && (a3.s1 += 1), a3.s2 -= r3(e9), a3.s2 < 0 && (a3.s2 += 1), r3 = null;
  }
  function o2(e9, a3) {
    return a3.c = e9.c, a3.s0 = e9.s0, a3.s1 = e9.s1, a3.s2 = e9.s2, a3;
  }
  function n2(e9, a3) {
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = r3.next;
    return s2.int32 = function() {
      return 4294967296 * r3.next() | 0;
    }, s2.double = function() {
      return s2() + 11102230246251565e-32 * (2097152 * s2() | 0);
    }, s2.quick = s2, n3 && ("object" == typeof n3 && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.alea = n2;
}(0, ai, false);
var ri = ai.exports;
var ti = Ds(ri);
var oi = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this, r3 = "";
    a3.x = 0, a3.y = 0, a3.z = 0, a3.w = 0, a3.next = function() {
      var e10 = a3.x ^ a3.x << 11;
      return a3.x = a3.y, a3.y = a3.z, a3.z = a3.w, a3.w ^= a3.w >>> 19 ^ e10 ^ e10 >>> 8;
    }, e9 === (0 | e9) ? a3.x = e9 : r3 += e9;
    for (var t3 = 0; t3 < r3.length + 64; t3++) a3.x ^= 0 | r3.charCodeAt(t3), a3.next();
  }
  function o2(e9, a3) {
    return a3.x = e9.x, a3.y = e9.y, a3.z = e9.z, a3.w = e9.w, a3;
  }
  function n2(e9, a3) {
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && ("object" == typeof n3 && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.xor128 = n2;
}(0, oi, false);
var ni = oi.exports;
var si = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this, r3 = "";
    a3.next = function() {
      var e10 = a3.x ^ a3.x >>> 2;
      return a3.x = a3.y, a3.y = a3.z, a3.z = a3.w, a3.w = a3.v, (a3.d = a3.d + 362437 | 0) + (a3.v = a3.v ^ a3.v << 4 ^ e10 ^ e10 << 1) | 0;
    }, a3.x = 0, a3.y = 0, a3.z = 0, a3.w = 0, a3.v = 0, e9 === (0 | e9) ? a3.x = e9 : r3 += e9;
    for (var t3 = 0; t3 < r3.length + 64; t3++) a3.x ^= 0 | r3.charCodeAt(t3), t3 == r3.length && (a3.d = a3.x << 10 ^ a3.x >>> 4), a3.next();
  }
  function o2(e9, a3) {
    return a3.x = e9.x, a3.y = e9.y, a3.z = e9.z, a3.w = e9.w, a3.v = e9.v, a3.d = e9.d, a3;
  }
  function n2(e9, a3) {
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && ("object" == typeof n3 && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.xorwow = n2;
}(0, si, false);
var ii = si.exports;
var di = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this;
    a3.next = function() {
      var e10, r3, t3 = a3.x, o3 = a3.i;
      return e10 = t3[o3], r3 = (e10 ^= e10 >>> 7) ^ e10 << 24, r3 ^= (e10 = t3[o3 + 1 & 7]) ^ e10 >>> 10, r3 ^= (e10 = t3[o3 + 3 & 7]) ^ e10 >>> 3, r3 ^= (e10 = t3[o3 + 4 & 7]) ^ e10 << 7, e10 = t3[o3 + 7 & 7], r3 ^= (e10 ^= e10 << 13) ^ e10 << 9, t3[o3] = r3, a3.i = o3 + 1 & 7, r3;
    }, function(e10, a4) {
      var r3, t3 = [];
      if (a4 === (0 | a4)) t3[0] = a4;
      else for (a4 = "" + a4, r3 = 0; r3 < a4.length; ++r3) t3[7 & r3] = t3[7 & r3] << 15 ^ a4.charCodeAt(r3) + t3[r3 + 1 & 7] << 13;
      for (; t3.length < 8; ) t3.push(0);
      for (r3 = 0; r3 < 8 && 0 === t3[r3]; ++r3) ;
      for (8 == r3 ? t3[7] = -1 : t3[r3], e10.x = t3, e10.i = 0, r3 = 256; r3 > 0; --r3) e10.next();
    }(a3, e9);
  }
  function o2(e9, a3) {
    return a3.x = e9.x.slice(), a3.i = e9.i, a3;
  }
  function n2(e9, a3) {
    null == e9 && (e9 = +/* @__PURE__ */ new Date());
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && (n3.x && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.xorshift7 = n2;
}(0, di, false);
var ci = di.exports;
var ui = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this;
    a3.next = function() {
      var e10, r3, t3 = a3.w, o3 = a3.X, n3 = a3.i;
      return a3.w = t3 = t3 + 1640531527 | 0, r3 = o3[n3 + 34 & 127], e10 = o3[n3 = n3 + 1 & 127], r3 ^= r3 << 13, e10 ^= e10 << 17, r3 ^= r3 >>> 15, e10 ^= e10 >>> 12, r3 = o3[n3] = r3 ^ e10, a3.i = n3, r3 + (t3 ^ t3 >>> 16) | 0;
    }, function(e10, a4) {
      var r3, t3, o3, n3, s2, i2 = [], d2 = 128;
      for (a4 === (0 | a4) ? (t3 = a4, a4 = null) : (a4 += "\0", t3 = 0, d2 = Math.max(d2, a4.length)), o3 = 0, n3 = -32; n3 < d2; ++n3) a4 && (t3 ^= a4.charCodeAt((n3 + 32) % a4.length)), 0 === n3 && (s2 = t3), t3 ^= t3 << 10, t3 ^= t3 >>> 15, t3 ^= t3 << 4, t3 ^= t3 >>> 13, n3 >= 0 && (s2 = s2 + 1640531527 | 0, o3 = 0 == (r3 = i2[127 & n3] ^= t3 + s2) ? o3 + 1 : 0);
      for (o3 >= 128 && (i2[127 & (a4 && a4.length || 0)] = -1), o3 = 127, n3 = 512; n3 > 0; --n3) t3 = i2[o3 + 34 & 127], r3 = i2[o3 = o3 + 1 & 127], t3 ^= t3 << 13, r3 ^= r3 << 17, t3 ^= t3 >>> 15, r3 ^= r3 >>> 12, i2[o3] = t3 ^ r3;
      e10.w = s2, e10.X = i2, e10.i = o3;
    }(a3, e9);
  }
  function o2(e9, a3) {
    return a3.i = e9.i, a3.w = e9.w, a3.X = e9.X.slice(), a3;
  }
  function n2(e9, a3) {
    null == e9 && (e9 = +/* @__PURE__ */ new Date());
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && (n3.X && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.xor4096 = n2;
}(0, ui, false);
var li = ui.exports;
var pi = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this, r3 = "";
    a3.next = function() {
      var e10 = a3.b, r4 = a3.c, t4 = a3.d, o3 = a3.a;
      return e10 = e10 << 25 ^ e10 >>> 7 ^ r4, r4 = r4 - t4 | 0, t4 = t4 << 24 ^ t4 >>> 8 ^ o3, o3 = o3 - e10 | 0, a3.b = e10 = e10 << 20 ^ e10 >>> 12 ^ r4, a3.c = r4 = r4 - t4 | 0, a3.d = t4 << 16 ^ r4 >>> 16 ^ o3, a3.a = o3 - e10 | 0;
    }, a3.a = 0, a3.b = 0, a3.c = -1640531527, a3.d = 1367130551, e9 === Math.floor(e9) ? (a3.a = e9 / 4294967296 | 0, a3.b = 0 | e9) : r3 += e9;
    for (var t3 = 0; t3 < r3.length + 20; t3++) a3.b ^= 0 | r3.charCodeAt(t3), a3.next();
  }
  function o2(e9, a3) {
    return a3.a = e9.a, a3.b = e9.b, a3.c = e9.c, a3.d = e9.d, a3;
  }
  function n2(e9, a3) {
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && ("object" == typeof n3 && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.tychei = n2;
}(0, pi, false);
var mi = pi.exports;
var hi = { exports: {} };
!function(e8) {
  !function(a2, r2, t2) {
    var o2, n2 = 256, s2 = "random", i2 = t2.pow(n2, 6), d2 = t2.pow(2, 52), c2 = 2 * d2, u2 = 255;
    function l2(e9, u3, l3) {
      var g2 = [], b2 = f2(h2((u3 = 1 == u3 ? { entropy: true } : u3 || {}).entropy ? [e9, v2(r2)] : null == e9 ? function() {
        try {
          var e10;
          return o2 && (e10 = o2.randomBytes) ? e10 = e10(n2) : (e10 = new Uint8Array(n2), (a2.crypto || a2.msCrypto).getRandomValues(e10)), v2(e10);
        } catch (e11) {
          var t3 = a2.navigator, s3 = t3 && t3.plugins;
          return [+/* @__PURE__ */ new Date(), a2, s3, a2.screen, v2(r2)];
        }
      }() : e9, 3), g2), w2 = new p2(g2), y2 = function() {
        for (var e10 = w2.g(6), a3 = i2, r3 = 0; e10 < d2; ) e10 = (e10 + r3) * n2, a3 *= n2, r3 = w2.g(1);
        for (; e10 >= c2; ) e10 /= 2, a3 /= 2, r3 >>>= 1;
        return (e10 + r3) / a3;
      };
      return y2.int32 = function() {
        return 0 | w2.g(4);
      }, y2.quick = function() {
        return w2.g(4) / 4294967296;
      }, y2.double = y2, f2(v2(w2.S), r2), (u3.pass || l3 || function(e10, a3, r3, o3) {
        return o3 && (o3.S && m2(o3, w2), e10.state = function() {
          return m2(w2, {});
        }), r3 ? (t2[s2] = e10, a3) : e10;
      })(y2, b2, "global" in u3 ? u3.global : this == t2, u3.state);
    }
    function p2(e9) {
      var a3, r3 = e9.length, t3 = this, o3 = 0, s3 = t3.i = t3.j = 0, i3 = t3.S = [];
      for (r3 || (e9 = [r3++]); o3 < n2; ) i3[o3] = o3++;
      for (o3 = 0; o3 < n2; o3++) i3[o3] = i3[s3 = u2 & s3 + e9[o3 % r3] + (a3 = i3[o3])], i3[s3] = a3;
      (t3.g = function(e10) {
        for (var a4, r4 = 0, o4 = t3.i, s4 = t3.j, i4 = t3.S; e10--; ) a4 = i4[o4 = u2 & o4 + 1], r4 = r4 * n2 + i4[u2 & (i4[o4] = i4[s4 = u2 & s4 + a4]) + (i4[s4] = a4)];
        return t3.i = o4, t3.j = s4, r4;
      })(n2);
    }
    function m2(e9, a3) {
      return a3.i = e9.i, a3.j = e9.j, a3.S = e9.S.slice(), a3;
    }
    function h2(e9, a3) {
      var r3, t3 = [], o3 = typeof e9;
      if (a3 && "object" == o3) for (r3 in e9) try {
        t3.push(h2(e9[r3], a3 - 1));
      } catch (e10) {
      }
      return t3.length ? t3 : "string" == o3 ? e9 : e9 + "\0";
    }
    function f2(e9, a3) {
      for (var r3, t3 = e9 + "", o3 = 0; o3 < t3.length; ) a3[u2 & o3] = u2 & (r3 ^= 19 * a3[u2 & o3]) + t3.charCodeAt(o3++);
      return v2(a3);
    }
    function v2(e9) {
      return String.fromCharCode.apply(0, e9);
    }
    if (f2(t2.random(), r2), e8.exports) {
      e8.exports = l2;
      try {
        o2 = require_crypto_browserify();
      } catch (e9) {
      }
    } else t2["seed" + s2] = l2;
  }("undefined" != typeof self ? self : Ls, [], Math);
}(hi);
var fi = ri;
var vi = ni;
var gi = ii;
var bi = ci;
var wi = li;
var yi = mi;
var xi = hi.exports;
xi.alea = fi, xi.xor128 = vi, xi.xorwow = gi, xi.xorshift7 = bi, xi.xor4096 = wi, xi.tychei = yi;
var _i = xi;
var Ii = ["ability", "able", "aboard", "about", "above", "accept", "accident", "according", "account", "accurate", "acres", "across", "act", "action", "active", "activity", "actual", "actually", "add", "addition", "additional", "adjective", "adult", "adventure", "advice", "affect", "afraid", "after", "afternoon", "again", "against", "age", "ago", "agree", "ahead", "aid", "air", "airplane", "alike", "alive", "all", "allow", "almost", "alone", "along", "aloud", "alphabet", "already", "also", "although", "am", "among", "amount", "ancient", "angle", "angry", "animal", "announced", "another", "answer", "ants", "any", "anybody", "anyone", "anything", "anyway", "anywhere", "apart", "apartment", "appearance", "apple", "applied", "appropriate", "are", "area", "arm", "army", "around", "arrange", "arrangement", "arrive", "arrow", "art", "article", "as", "aside", "ask", "asleep", "at", "ate", "atmosphere", "atom", "atomic", "attached", "attack", "attempt", "attention", "audience", "author", "automobile", "available", "average", "avoid", "aware", "away", "baby", "back", "bad", "badly", "bag", "balance", "ball", "balloon", "band", "bank", "bar", "bare", "bark", "barn", "base", "baseball", "basic", "basis", "basket", "bat", "battle", "be", "bean", "bear", "beat", "beautiful", "beauty", "became", "because", "become", "becoming", "bee", "been", "before", "began", "beginning", "begun", "behavior", "behind", "being", "believed", "bell", "belong", "below", "belt", "bend", "beneath", "bent", "beside", "best", "bet", "better", "between", "beyond", "bicycle", "bigger", "biggest", "bill", "birds", "birth", "birthday", "bit", "bite", "black", "blank", "blanket", "blew", "blind", "block", "blood", "blow", "blue", "board", "boat", "body", "bone", "book", "border", "born", "both", "bottle", "bottom", "bound", "bow", "bowl", "box", "boy", "brain", "branch", "brass", "brave", "bread", "break", "breakfast", "breath", "breathe", "breathing", "breeze", "brick", "bridge", "brief", "bright", "bring", "broad", "broke", "broken", "brother", "brought", "brown", "brush", "buffalo", "build", "building", "built", "buried", "burn", "burst", "bus", "bush", "business", "busy", "but", "butter", "buy", "by", "cabin", "cage", "cake", "call", "calm", "came", "camera", "camp", "can", "canal", "cannot", "cap", "capital", "captain", "captured", "car", "carbon", "card", "care", "careful", "carefully", "carried", "carry", "case", "cast", "castle", "cat", "catch", "cattle", "caught", "cause", "cave", "cell", "cent", "center", "central", "century", "certain", "certainly", "chain", "chair", "chamber", "chance", "change", "changing", "chapter", "character", "characteristic", "charge", "chart", "check", "cheese", "chemical", "chest", "chicken", "chief", "child", "children", "choice", "choose", "chose", "chosen", "church", "circle", "circus", "citizen", "city", "class", "classroom", "claws", "clay", "clean", "clear", "clearly", "climate", "climb", "clock", "close", "closely", "closer", "cloth", "clothes", "clothing", "cloud", "club", "coach", "coal", "coast", "coat", "coffee", "cold", "collect", "college", "colony", "color", "column", "combination", "combine", "come", "comfortable", "coming", "command", "common", "community", "company", "compare", "compass", "complete", "completely", "complex", "composed", "composition", "compound", "concerned", "condition", "congress", "connected", "consider", "consist", "consonant", "constantly", "construction", "contain", "continent", "continued", "contrast", "control", "conversation", "cook", "cookies", "cool", "copper", "copy", "corn", "corner", "correct", "correctly", "cost", "cotton", "could", "count", "country", "couple", "courage", "course", "court", "cover", "cow", "cowboy", "crack", "cream", "create", "creature", "crew", "crop", "cross", "crowd", "cry", "cup", "curious", "current", "curve", "customs", "cut", "cutting", "daily", "damage", "dance", "danger", "dangerous", "dark", "darkness", "date", "daughter", "dawn", "day", "dead", "deal", "dear", "death", "decide", "declared", "deep", "deeply", "deer", "definition", "degree", "depend", "depth", "describe", "desert", "design", "desk", "detail", "determine", "develop", "development", "diagram", "diameter", "did", "die", "differ", "difference", "different", "difficult", "difficulty", "dig", "dinner", "direct", "direction", "directly", "dirt", "dirty", "disappear", "discover", "discovery", "discuss", "discussion", "disease", "dish", "distance", "distant", "divide", "division", "do", "doctor", "does", "dog", "doing", "doll", "dollar", "done", "donkey", "door", "dot", "double", "doubt", "down", "dozen", "draw", "drawn", "dream", "dress", "drew", "dried", "drink", "drive", "driven", "driver", "driving", "drop", "dropped", "drove", "dry", "duck", "due", "dug", "dull", "during", "dust", "duty", "each", "eager", "ear", "earlier", "early", "earn", "earth", "easier", "easily", "east", "easy", "eat", "eaten", "edge", "education", "effect", "effort", "egg", "eight", "either", "electric", "electricity", "element", "elephant", "eleven", "else", "empty", "end", "enemy", "energy", "engine", "engineer", "enjoy", "enough", "enter", "entire", "entirely", "environment", "equal", "equally", "equator", "equipment", "escape", "especially", "essential", "establish", "even", "evening", "event", "eventually", "ever", "every", "everybody", "everyone", "everything", "everywhere", "evidence", "exact", "exactly", "examine", "example", "excellent", "except", "exchange", "excited", "excitement", "exciting", "exclaimed", "exercise", "exist", "expect", "experience", "experiment", "explain", "explanation", "explore", "express", "expression", "extra", "eye", "face", "facing", "fact", "factor", "factory", "failed", "fair", "fairly", "fall", "fallen", "familiar", "family", "famous", "far", "farm", "farmer", "farther", "fast", "fastened", "faster", "fat", "father", "favorite", "fear", "feathers", "feature", "fed", "feed", "feel", "feet", "fell", "fellow", "felt", "fence", "few", "fewer", "field", "fierce", "fifteen", "fifth", "fifty", "fight", "fighting", "figure", "fill", "film", "final", "finally", "find", "fine", "finest", "finger", "finish", "fire", "fireplace", "firm", "first", "fish", "five", "fix", "flag", "flame", "flat", "flew", "flies", "flight", "floating", "floor", "flow", "flower", "fly", "fog", "folks", "follow", "food", "foot", "football", "for", "force", "foreign", "forest", "forget", "forgot", "forgotten", "form", "former", "fort", "forth", "forty", "forward", "fought", "found", "four", "fourth", "fox", "frame", "free", "freedom", "frequently", "fresh", "friend", "friendly", "frighten", "frog", "from", "front", "frozen", "fruit", "fuel", "full", "fully", "fun", "function", "funny", "fur", "furniture", "further", "future", "gain", "game", "garage", "garden", "gas", "gasoline", "gate", "gather", "gave", "general", "generally", "gentle", "gently", "get", "getting", "giant", "gift", "girl", "give", "given", "giving", "glad", "glass", "globe", "go", "goes", "gold", "golden", "gone", "good", "goose", "got", "government", "grabbed", "grade", "gradually", "grain", "grandfather", "grandmother", "graph", "grass", "gravity", "gray", "great", "greater", "greatest", "greatly", "green", "grew", "ground", "group", "grow", "grown", "growth", "guard", "guess", "guide", "gulf", "gun", "habit", "had", "hair", "half", "halfway", "hall", "hand", "handle", "handsome", "hang", "happen", "happened", "happily", "happy", "harbor", "hard", "harder", "hardly", "has", "hat", "have", "having", "hay", "he", "headed", "heading", "health", "heard", "hearing", "heart", "heat", "heavy", "height", "held", "hello", "help", "helpful", "her", "herd", "here", "herself", "hidden", "hide", "high", "higher", "highest", "highway", "hill", "him", "himself", "his", "history", "hit", "hold", "hole", "hollow", "home", "honor", "hope", "horn", "horse", "hospital", "hot", "hour", "house", "how", "however", "huge", "human", "hundred", "hung", "hungry", "hunt", "hunter", "hurried", "hurry", "hurt", "husband", "ice", "idea", "identity", "if", "ill", "image", "imagine", "immediately", "importance", "important", "impossible", "improve", "in", "inch", "include", "including", "income", "increase", "indeed", "independent", "indicate", "individual", "industrial", "industry", "influence", "information", "inside", "instance", "instant", "instead", "instrument", "interest", "interior", "into", "introduced", "invented", "involved", "iron", "is", "island", "it", "its", "itself", "jack", "jar", "jet", "job", "join", "joined", "journey", "joy", "judge", "jump", "jungle", "just", "keep", "kept", "key", "kids", "kill", "kind", "kitchen", "knew", "knife", "know", "knowledge", "known", "label", "labor", "lack", "lady", "laid", "lake", "lamp", "land", "language", "large", "larger", "largest", "last", "late", "later", "laugh", "law", "lay", "layers", "lead", "leader", "leaf", "learn", "least", "leather", "leave", "leaving", "led", "left", "leg", "length", "lesson", "let", "letter", "level", "library", "lie", "life", "lift", "light", "like", "likely", "limited", "line", "lion", "lips", "liquid", "list", "listen", "little", "live", "living", "load", "local", "locate", "location", "log", "lonely", "long", "longer", "look", "loose", "lose", "loss", "lost", "lot", "loud", "love", "lovely", "low", "lower", "luck", "lucky", "lunch", "lungs", "lying", "machine", "machinery", "mad", "made", "magic", "magnet", "mail", "main", "mainly", "major", "make", "making", "man", "managed", "manner", "manufacturing", "many", "map", "mark", "market", "married", "mass", "massage", "master", "material", "mathematics", "matter", "may", "maybe", "me", "meal", "mean", "means", "meant", "measure", "meat", "medicine", "meet", "melted", "member", "memory", "men", "mental", "merely", "met", "metal", "method", "mice", "middle", "might", "mighty", "mile", "military", "milk", "mill", "mind", "mine", "minerals", "minute", "mirror", "missing", "mission", "mistake", "mix", "mixture", "model", "modern", "molecular", "moment", "money", "monkey", "month", "mood", "moon", "more", "morning", "most", "mostly", "mother", "motion", "motor", "mountain", "mouse", "mouth", "move", "movement", "movie", "moving", "mud", "muscle", "music", "musical", "must", "my", "myself", "mysterious", "nails", "name", "nation", "national", "native", "natural", "naturally", "nature", "near", "nearby", "nearer", "nearest", "nearly", "necessary", "neck", "needed", "needle", "needs", "negative", "neighbor", "neighborhood", "nervous", "nest", "never", "new", "news", "newspaper", "next", "nice", "night", "nine", "no", "nobody", "nodded", "noise", "none", "noon", "nor", "north", "nose", "not", "note", "noted", "nothing", "notice", "noun", "now", "number", "numeral", "nuts", "object", "observe", "obtain", "occasionally", "occur", "ocean", "of", "off", "offer", "office", "officer", "official", "oil", "old", "older", "oldest", "on", "once", "one", "only", "onto", "open", "operation", "opinion", "opportunity", "opposite", "or", "orange", "orbit", "order", "ordinary", "organization", "organized", "origin", "original", "other", "ought", "our", "ourselves", "out", "outer", "outline", "outside", "over", "own", "owner", "oxygen", "pack", "package", "page", "paid", "pain", "paint", "pair", "palace", "pale", "pan", "paper", "paragraph", "parallel", "parent", "park", "part", "particles", "particular", "particularly", "partly", "parts", "party", "pass", "passage", "past", "path", "pattern", "pay", "peace", "pen", "pencil", "people", "per", "percent", "perfect", "perfectly", "perhaps", "period", "person", "personal", "pet", "phrase", "physical", "piano", "pick", "picture", "pictured", "pie", "piece", "pig", "pile", "pilot", "pine", "pink", "pipe", "pitch", "place", "plain", "plan", "plane", "planet", "planned", "planning", "plant", "plastic", "plate", "plates", "play", "pleasant", "please", "pleasure", "plenty", "plural", "plus", "pocket", "poem", "poet", "poetry", "point", "pole", "police", "policeman", "political", "pond", "pony", "pool", "poor", "popular", "population", "porch", "port", "position", "positive", "possible", "possibly", "post", "pot", "potatoes", "pound", "pour", "powder", "power", "powerful", "practical", "practice", "prepare", "present", "president", "press", "pressure", "pretty", "prevent", "previous", "price", "pride", "primitive", "principal", "principle", "printed", "private", "prize", "probably", "problem", "process", "produce", "product", "production", "program", "progress", "promised", "proper", "properly", "property", "protection", "proud", "prove", "provide", "public", "pull", "pupil", "pure", "purple", "purpose", "push", "put", "putting", "quarter", "queen", "question", "quick", "quickly", "quiet", "quietly", "quite", "rabbit", "race", "radio", "railroad", "rain", "raise", "ran", "ranch", "range", "rapidly", "rate", "rather", "raw", "rays", "reach", "read", "reader", "ready", "real", "realize", "rear", "reason", "recall", "receive", "recent", "recently", "recognize", "record", "red", "refer", "refused", "region", "regular", "related", "relationship", "religious", "remain", "remarkable", "remember", "remove", "repeat", "replace", "replied", "report", "represent", "require", "research", "respect", "rest", "result", "return", "review", "rhyme", "rhythm", "rice", "rich", "ride", "riding", "right", "ring", "rise", "rising", "river", "road", "roar", "rock", "rocket", "rocky", "rod", "roll", "roof", "room", "root", "rope", "rose", "rough", "round", "route", "row", "rubbed", "rubber", "rule", "ruler", "run", "running", "rush", "sad", "saddle", "safe", "safety", "said", "sail", "sale", "salmon", "salt", "same", "sand", "sang", "sat", "satellites", "satisfied", "save", "saved", "saw", "say", "scale", "scared", "scene", "school", "science", "scientific", "scientist", "score", "screen", "sea", "search", "season", "seat", "second", "secret", "section", "see", "seed", "seeing", "seems", "seen", "seldom", "select", "selection", "sell", "send", "sense", "sent", "sentence", "separate", "series", "serious", "serve", "service", "sets", "setting", "settle", "settlers", "seven", "several", "shade", "shadow", "shake", "shaking", "shall", "shallow", "shape", "share", "sharp", "she", "sheep", "sheet", "shelf", "shells", "shelter", "shine", "shinning", "ship", "shirt", "shoe", "shoot", "shop", "shore", "short", "shorter", "shot", "should", "shoulder", "shout", "show", "shown", "shut", "sick", "sides", "sight", "sign", "signal", "silence", "silent", "silk", "silly", "silver", "similar", "simple", "simplest", "simply", "since", "sing", "single", "sink", "sister", "sit", "sitting", "situation", "six", "size", "skill", "skin", "sky", "slabs", "slave", "sleep", "slept", "slide", "slight", "slightly", "slip", "slipped", "slope", "slow", "slowly", "small", "smaller", "smallest", "smell", "smile", "smoke", "smooth", "snake", "snow", "so", "soap", "social", "society", "soft", "softly", "soil", "solar", "sold", "soldier", "solid", "solution", "solve", "some", "somebody", "somehow", "someone", "something", "sometime", "somewhere", "son", "song", "soon", "sort", "sound", "source", "south", "southern", "space", "speak", "special", "species", "specific", "speech", "speed", "spell", "spend", "spent", "spider", "spin", "spirit", "spite", "split", "spoken", "sport", "spread", "spring", "square", "stage", "stairs", "stand", "standard", "star", "stared", "start", "state", "statement", "station", "stay", "steady", "steam", "steel", "steep", "stems", "step", "stepped", "stick", "stiff", "still", "stock", "stomach", "stone", "stood", "stop", "stopped", "store", "storm", "story", "stove", "straight", "strange", "stranger", "straw", "stream", "street", "strength", "stretch", "strike", "string", "strip", "strong", "stronger", "struck", "structure", "struggle", "stuck", "student", "studied", "studying", "subject", "substance", "success", "successful", "such", "sudden", "suddenly", "sugar", "suggest", "suit", "sum", "summer", "sun", "sunlight", "supper", "supply", "support", "suppose", "sure", "surface", "surprise", "surrounded", "swam", "sweet", "swept", "swim", "swimming", "swing", "swung", "syllable", "symbol", "system", "table", "tail", "take", "taken", "tales", "talk", "tall", "tank", "tape", "task", "taste", "taught", "tax", "tea", "teach", "teacher", "team", "tears", "teeth", "telephone", "television", "tell", "temperature", "ten", "tent", "term", "terrible", "test", "than", "thank", "that", "thee", "them", "themselves", "then", "theory", "there", "therefore", "these", "they", "thick", "thin", "thing", "think", "third", "thirty", "this", "those", "thou", "though", "thought", "thousand", "thread", "three", "threw", "throat", "through", "throughout", "throw", "thrown", "thumb", "thus", "thy", "tide", "tie", "tight", "tightly", "till", "time", "tin", "tiny", "tip", "tired", "title", "to", "tobacco", "today", "together", "told", "tomorrow", "tone", "tongue", "tonight", "too", "took", "tool", "top", "topic", "torn", "total", "touch", "toward", "tower", "town", "toy", "trace", "track", "trade", "traffic", "trail", "train", "transportation", "trap", "travel", "treated", "tree", "triangle", "tribe", "trick", "tried", "trip", "troops", "tropical", "trouble", "truck", "trunk", "truth", "try", "tube", "tune", "turn", "twelve", "twenty", "twice", "two", "type", "typical", "uncle", "under", "underline", "understanding", "unhappy", "union", "unit", "universe", "unknown", "unless", "until", "unusual", "up", "upon", "upper", "upward", "us", "use", "useful", "using", "usual", "usually", "valley", "valuable", "value", "vapor", "variety", "various", "vast", "vegetable", "verb", "vertical", "very", "vessels", "victory", "view", "village", "visit", "visitor", "voice", "volume", "vote", "vowel", "voyage", "wagon", "wait", "walk", "wall", "want", "war", "warm", "warn", "was", "wash", "waste", "watch", "water", "wave", "way", "we", "weak", "wealth", "wear", "weather", "week", "weigh", "weight", "welcome", "well", "went", "were", "west", "western", "wet", "whale", "what", "whatever", "wheat", "wheel", "when", "whenever", "where", "wherever", "whether", "which", "while", "whispered", "whistle", "white", "who", "whole", "whom", "whose", "why", "wide", "widely", "wife", "wild", "will", "willing", "win", "wind", "window", "wing", "winter", "wire", "wise", "wish", "with", "within", "without", "wolf", "women", "won", "wonder", "wonderful", "wood", "wooden", "wool", "word", "wore", "work", "worker", "world", "worried", "worry", "worse", "worth", "would", "wrapped", "write", "writer", "writing", "written", "wrong", "wrote", "yard", "year", "yellow", "yes", "yesterday", "yet", "you", "young", "younger", "your", "yourself", "youth", "zero", "zebra", "zipper", "zoo", "zulu"];
function ki(e8) {
  const a2 = (e8 == null ? void 0 : e8.seed) ? new _i(e8.seed) : null;
  function r2() {
    return e8 && e8.maxLength > 1 ? function() {
      var a3, r3 = false;
      for (; !r3; ) (a3 = t2()).length <= e8.maxLength && (r3 = true);
      return a3;
    }() : t2();
  }
  function t2() {
    return Ii[o2(Ii.length)];
  }
  function o2(e9) {
    const r3 = a2 ? a2() : Math.random();
    return Math.floor(r3 * e9);
  }
  if (void 0 === e8) return r2();
  "number" == typeof e8 && (e8 = { exactly: e8 }), e8.exactly && (e8.min = e8.exactly, e8.max = e8.exactly), "number" != typeof e8.wordsPerString && (e8.wordsPerString = 1), "function" != typeof e8.formatter && (e8.formatter = (e9) => e9), "string" != typeof e8.separator && (e8.separator = " ");
  for (var n2 = e8.min + o2(e8.max + 1 - e8.min), s2 = [], i2 = "", d2 = 0, c2 = 0; c2 < n2 * e8.wordsPerString; c2++) d2 === e8.wordsPerString - 1 ? i2 += e8.formatter(r2(), d2) : i2 += e8.formatter(r2(), d2) + e8.separator, d2++, (c2 + 1) % e8.wordsPerString == 0 && (s2.push(i2), i2 = "", d2 = 0);
  return "string" == typeof e8.join && (s2 = s2.join(e8.join)), s2;
}
var Si = ki;
ki.wordList = Ii;
var Ti = Ds(Si);
function Ei(e8, a2, r2 = false) {
  const t2 = Array.isArray(e8), o2 = Array.isArray(a2);
  if (t2) if (o2) {
    if (e8.length != a2.length) if (console.warn("Unclear parameters given to randomization.repeat. Items and repetitions are unequal lengths. Behavior may not be as expected."), a2.length < e8.length) {
      let r3 = [];
      for (let t3 = 0; t3 < e8.length; t3++) r3.push(a2);
      a2 = r3;
    } else a2 = a2.slice(0, e8.length);
  } else {
    let r3 = [];
    for (let t3 = 0; t3 < e8.length; t3++) r3.push(a2);
    a2 = r3;
  }
  else o2 ? (a2 = [a2[0]], console.log("Unclear parameters given to randomization.repeat. Multiple set sizes specified, but only one item exists to sample. Proceeding using the first set size.")) : (e8 = [e8], a2 = [a2]);
  let n2 = [];
  for (let r3 = 0; r3 < e8.length; r3++) for (let t3 = 0; t3 < a2[r3]; t3++) null == e8[r3] || "object" != typeof e8[r3] ? n2.push(e8[r3]) : n2.push(Object.assign({}, e8[r3]));
  let s2 = ji(n2);
  return r2 && (s2 = function(e9) {
    const a3 = {};
    for (const r3 of e9) for (const e10 of Object.keys(r3)) void 0 === a3[e10] && (a3[e10] = []), a3[e10].push(r3[e10]);
    return a3;
  }(s2)), s2;
}
function ji(e8) {
  Array.isArray(e8) || console.error("Argument to shuffle() must be an array.");
  const a2 = e8.slice(0);
  let r2, t2, o2 = a2.length;
  for (; o2; ) t2 = Math.floor(Math.random() * o2--), r2 = a2[o2], a2[o2] = a2[t2], a2[t2] = r2;
  return a2;
}
function Oi(e8, a2 = false) {
  const r2 = e8.length;
  if (1 == r2) return console.warn("shuffleAlternateGroups() was called with only one group. Defaulting to simple shuffle."), ji(e8[0]);
  let t2 = [];
  for (let e9 = 0; e9 < r2; e9++) t2.push(e9);
  a2 && (t2 = ji(t2));
  const o2 = [];
  let n2 = null;
  for (let a3 = 0; a3 < r2; a3++) n2 = null === n2 ? e8[a3].length : Math.min(n2, e8[a3].length), o2.push(ji(e8[a3]));
  const s2 = [];
  for (let e9 = 0; e9 < n2; e9++) for (let a3 = 0; a3 < t2.length; a3++) s2.push(o2[t2[a3]][e9]);
  return s2;
}
function Ai(e8, a2) {
  return Array.isArray(e8) || console.error("First argument to sampleWithoutReplacement() must be an array"), a2 > e8.length && console.error("Cannot take a sample larger than the size of the set of items to sample."), ji(e8).slice(0, a2);
}
function Ci(e8, a2, r2) {
  Array.isArray(e8) || console.error("First argument to sampleWithReplacement() must be an array");
  const t2 = [];
  if (void 0 !== r2) {
    r2.length !== e8.length && console.error("The length of the weights array must equal the length of the array to be sampled from.");
    let a3 = 0;
    for (const e9 of r2) a3 += e9;
    for (const e9 of r2) t2.push(e9 / a3);
  } else for (let a3 = 0; a3 < e8.length; a3++) t2.push(1 / e8.length);
  const o2 = [t2[0]];
  for (let e9 = 1; e9 < t2.length; e9++) o2.push(t2[e9] + o2[e9 - 1]);
  const n2 = [];
  for (let r3 = 0; r3 < a2; r3++) {
    const a3 = Math.random();
    let r4 = 0;
    for (; a3 > o2[r4]; ) r4++;
    n2.push(e8[r4]);
  }
  return n2;
}
function Ri(e8, a2) {
  return function() {
    var e9 = 0, a3 = 0;
    for (; 0 === e9; ) e9 = Math.random();
    for (; 0 === a3; ) a3 = Math.random();
    return Math.sqrt(-2 * Math.log(e9)) * Math.cos(2 * Math.PI * a3);
  }() * a2 + e8;
}
function Ni(e8) {
  return -Math.log(Math.random()) / e8;
}
var Pi = Object.freeze({ __proto__: null, factorial: function(e8, a2 = 1, r2 = false) {
  let t2 = [{}];
  for (const [a3, r3] of Object.entries(e8)) {
    const e9 = [];
    for (const o2 of r3) for (const r4 of t2) e9.push(Object.assign(Object.assign({}, r4), { [a3]: o2 }));
    t2 = e9;
  }
  return Ei(t2, a2, r2);
}, randomID: function(e8 = 32) {
  let a2 = "";
  const r2 = "0123456789abcdefghjklmnopqrstuvwxyz";
  for (let t2 = 0; t2 < e8; t2++) a2 += r2[Math.floor(35 * Math.random())];
  return a2;
}, randomInt: function(e8, a2) {
  if (a2 < e8) throw new Error("Upper boundary must be less than or equal to lower boundary");
  return e8 + Math.floor(Math.random() * (a2 - e8 + 1));
}, randomWords: function(e8) {
  return Ti(e8);
}, repeat: Ei, sampleBernoulli: function(e8) {
  return Math.random() <= e8 ? 1 : 0;
}, sampleExGaussian: function(e8, a2, r2, t2 = false) {
  let o2 = Ri(e8, a2) + Ni(r2);
  if (t2) for (; o2 <= 0; ) o2 = Ri(e8, a2) + Ni(r2);
  return o2;
}, sampleExponential: Ni, sampleNormal: Ri, sampleWithReplacement: Ci, sampleWithoutReplacement: Ai, setSeed: function(e8 = Math.random().toString()) {
  return Math.random = ti(e8), e8;
}, shuffle: ji, shuffleAlternateGroups: Oi, shuffleNoRepeats: function(e8, a2) {
  Array.isArray(e8) || console.error("First argument to shuffleNoRepeats() must be an array."), void 0 !== a2 && "function" != typeof a2 && console.error("Second argument to shuffleNoRepeats() must be a function."), void 0 === a2 && (a2 = function(e9, a3) {
    return e9 === a3;
  });
  const r2 = ji(e8);
  for (let e9 = 0; e9 < r2.length - 1; e9++) if (a2(r2[e9], r2[e9 + 1])) {
    let t2 = Math.floor(Math.random() * (r2.length - 2)) + 1;
    for (; a2(r2[e9 + 1], r2[t2]) || a2(r2[e9 + 1], r2[t2 + 1]) || a2(r2[e9 + 1], r2[t2 - 1]) || a2(r2[e9], r2[t2]); ) t2 = Math.floor(Math.random() * (r2.length - 2)) + 1;
    const o2 = r2[t2];
    r2[t2] = r2[e9 + 1], r2[e9 + 1] = o2;
  }
  return r2;
} });
function Mi() {
  const e8 = { previewMode: false, outsideTurk: false, hitId: "INVALID_URL_PARAMETER", assignmentId: "INVALID_URL_PARAMETER", workerId: "INVALID_URL_PARAMETER", turkSubmitTo: "INVALID_URL_PARAMETER" }, a2 = function(e9, a3) {
    a3 = a3.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    const r3 = new RegExp("[\\?&]" + a3 + "=([^&#]*)").exec(e9);
    return null == r3 ? "" : r3[1];
  }, r2 = a2(window.location.href, "assignmentId") ? window.location.href : document.referrer;
  return ["assignmentId", "hitId", "workerId", "turkSubmitTo"].map(function(t2) {
    e8[t2] = unescape(a2(r2, t2));
  }), e8.previewMode = "ASSIGNMENT_ID_NOT_AVAILABLE" == e8.assignmentId, e8.outsideTurk = !e8.previewMode && "" === e8.hitId && "" == e8.assignmentId && "" == e8.workerId, e8;
}
var Li = Object.freeze({ __proto__: null, submitToTurk: function(e8) {
  const a2 = Mi(), r2 = a2.assignmentId, t2 = a2.turkSubmitTo;
  if (!r2 || !t2) return;
  const o2 = document.createElement("form");
  o2.method = "POST", o2.action = t2 + "/mturk/externalSubmit?assignmentId=" + r2;
  for (const a3 in e8) if (e8.hasOwnProperty(a3)) {
    const r3 = document.createElement("input");
    r3.type = "hidden", r3.name = a3, r3.id = a3, r3.value = e8[a3], o2.appendChild(r3);
  }
  document.body.appendChild(o2), o2.submit();
}, turkInfo: Mi });
var Di = class _Di {
  constructor(e8, a2, r2, t2) {
    if (this.jsPsych = e8, this.progress = { current_location: -1, current_variable_set: 0, current_repetition: 0, current_iteration: 0, done: false }, this.parent_node = r2, this.relative_id = void 0 === r2 ? 0 : t2, void 0 !== a2.timeline) {
      this.timeline_parameters = { timeline: [], loop_function: a2.loop_function, conditional_function: a2.conditional_function, sample: a2.sample, randomize_order: void 0 !== a2.randomize_order && a2.randomize_order, repetitions: void 0 === a2.repetitions ? 1 : a2.repetitions, timeline_variables: void 0 === a2.timeline_variables ? [{}] : a2.timeline_variables, on_timeline_finish: a2.on_timeline_finish, on_timeline_start: a2.on_timeline_start }, this.setTimelineVariablesOrder();
      var o2 = Object.assign({}, a2);
      delete o2.timeline, delete o2.conditional_function, delete o2.loop_function, delete o2.randomize_order, delete o2.repetitions, delete o2.timeline_variables, delete o2.sample, delete o2.on_timeline_start, delete o2.on_timeline_finish, this.node_trial_data = o2;
      for (var n2 = 0; n2 < a2.timeline.length; n2++) {
        var s2 = Object.assign({}, o2, a2.timeline[n2]);
        if ("object" == typeof o2.data && "object" == typeof a2.timeline[n2].data) {
          var i2 = Object.assign({}, o2.data, a2.timeline[n2].data);
          s2.data = i2;
        }
        this.timeline_parameters.timeline.push(new _Di(this.jsPsych, s2, this, n2));
      }
    } else void 0 === a2.type && console.error('Trial level node is missing the "type" parameter. The parameters for the node are: ' + JSON.stringify(a2)), this.trial_parameters = Object.assign({}, a2);
  }
  trial() {
    return void 0 === this.timeline_parameters ? $s(this.trial_parameters) : this.progress.current_location >= this.timeline_parameters.timeline.length ? null : this.timeline_parameters.timeline[this.progress.current_location].trial();
  }
  markCurrentTrialComplete() {
    void 0 === this.timeline_parameters ? this.progress.done = true : this.timeline_parameters.timeline[this.progress.current_location].markCurrentTrialComplete();
  }
  nextRepetiton() {
    this.setTimelineVariablesOrder(), this.progress.current_location = -1, this.progress.current_variable_set = 0, this.progress.current_repetition++;
    for (var e8 = 0; e8 < this.timeline_parameters.timeline.length; e8++) this.timeline_parameters.timeline[e8].reset();
  }
  setTimelineVariablesOrder() {
    const e8 = this.timeline_parameters;
    if (void 0 !== e8 && void 0 !== e8.timeline_variables) {
      for (var a2 = [], r2 = 0; r2 < e8.timeline_variables.length; r2++) a2.push(r2);
      void 0 !== e8.sample && ("custom" == e8.sample.type ? a2 = e8.sample.fn(a2) : "with-replacement" == e8.sample.type ? a2 = Ci(a2, e8.sample.size, e8.sample.weights) : "without-replacement" == e8.sample.type ? a2 = Ai(a2, e8.sample.size) : "fixed-repetitions" == e8.sample.type ? a2 = Ei(a2, e8.sample.size, false) : "alternate-groups" == e8.sample.type ? a2 = Oi(e8.sample.groups, e8.sample.randomize_group_order) : console.error('Invalid type in timeline sample parameters. Valid options for type are "custom", "with-replacement", "without-replacement", "fixed-repetitions", and "alternate-groups"')), e8.randomize_order && (a2 = ji(a2)), this.progress.order = a2;
    }
  }
  nextSet() {
    this.progress.current_location = -1, this.progress.current_variable_set++;
    for (var e8 = 0; e8 < this.timeline_parameters.timeline.length; e8++) this.timeline_parameters.timeline[e8].reset();
  }
  advance() {
    const e8 = this.progress, a2 = this.timeline_parameters, r2 = this.jsPsych.internal;
    if (e8.done) return true;
    if (-1 == e8.current_location) {
      if (void 0 !== a2) {
        if (void 0 !== a2.conditional_function && 0 == e8.current_repetition && 0 == e8.current_variable_set) {
          r2.call_immediate = true;
          var t2 = a2.conditional_function();
          if (r2.call_immediate = false, 0 == t2) return e8.done = true, true;
        }
        void 0 !== a2.on_timeline_start && 0 == e8.current_variable_set && a2.on_timeline_start();
      }
      return e8.current_location = 0, this.advance();
    }
    if (void 0 !== a2) {
      for (var o2 = false; e8.current_location < a2.timeline.length && 0 == o2; ) {
        if (!a2.timeline[e8.current_location].advance()) return o2 = true, false;
        e8.current_location++;
      }
      return e8.current_variable_set < e8.order.length - 1 ? (this.nextSet(), this.advance()) : e8.current_repetition < a2.repetitions - 1 ? (this.nextRepetiton(), void 0 !== a2.on_timeline_finish && a2.on_timeline_finish(), this.advance()) : (void 0 !== a2.on_timeline_finish && a2.on_timeline_finish(), void 0 !== a2.loop_function ? (r2.call_immediate = true, a2.loop_function(this.generatedData()) ? (this.reset(), r2.call_immediate = false, this.parent_node.advance()) : (e8.done = true, r2.call_immediate = false, true)) : (e8.done = true, true));
    }
  }
  isComplete() {
    return this.progress.done;
  }
  getTimelineVariableValue(e8) {
    if (void 0 !== this.timeline_parameters) return this.timeline_parameters.timeline_variables[this.progress.order[this.progress.current_variable_set]][e8];
  }
  findTimelineVariable(e8) {
    var a2 = this.getTimelineVariableValue(e8);
    return void 0 === a2 ? void 0 !== this.parent_node ? this.parent_node.findTimelineVariable(e8) : void 0 : a2;
  }
  timelineVariable(e8) {
    if (void 0 === this.timeline_parameters) {
      const a3 = this.findTimelineVariable(e8);
      return void 0 === a3 && console.warn("Timeline variable " + e8 + " not found."), a3;
    }
    {
      var a2 = Math.max(0, this.progress.current_location);
      a2 == this.timeline_parameters.timeline.length && (a2 -= 1);
      const r2 = this.timeline_parameters.timeline[a2].timelineVariable(e8);
      return void 0 === r2 && console.warn("Timeline variable " + e8 + " not found."), r2;
    }
  }
  allTimelineVariables() {
    for (var e8 = this.allTimelineVariablesNames(), a2 = {}, r2 = 0; r2 < e8.length; r2++) a2[e8[r2]] = this.timelineVariable(e8[r2]);
    return a2;
  }
  allTimelineVariablesNames(e8 = []) {
    if (void 0 !== this.timeline_parameters) {
      e8 = e8.concat(Object.keys(this.timeline_parameters.timeline_variables[this.progress.order[this.progress.current_variable_set]]));
      var a2 = Math.max(0, this.progress.current_location);
      return a2 == this.timeline_parameters.timeline.length && (a2 -= 1), this.timeline_parameters.timeline[a2].allTimelineVariablesNames(e8);
    }
    if (void 0 === this.timeline_parameters) return e8;
  }
  length() {
    var e8 = 0;
    if (void 0 === this.timeline_parameters) return 1;
    for (var a2 = 0; a2 < this.timeline_parameters.timeline.length; a2++) e8 += this.timeline_parameters.timeline[a2].length();
    return e8;
  }
  percentComplete() {
    for (var e8 = this.length(), a2 = 0, r2 = 0; r2 < this.timeline_parameters.timeline.length; r2++) this.timeline_parameters.timeline[r2].isComplete() && (a2 += this.timeline_parameters.timeline[r2].length());
    return a2 / e8 * 100;
  }
  reset() {
    if (this.progress.current_location = -1, this.progress.current_repetition = 0, this.progress.current_variable_set = 0, this.progress.current_iteration++, this.progress.done = false, this.setTimelineVariablesOrder(), void 0 !== this.timeline_parameters) for (var e8 = 0; e8 < this.timeline_parameters.timeline.length; e8++) this.timeline_parameters.timeline[e8].reset();
  }
  end() {
    this.progress.done = true;
  }
  endActiveNode() {
    void 0 === this.timeline_parameters ? (this.end(), this.parent_node.end()) : this.timeline_parameters.timeline[this.progress.current_location].endActiveNode();
  }
  ID() {
    var e8 = "";
    return void 0 === this.parent_node ? "0." + this.progress.current_iteration : (e8 += this.parent_node.ID() + "-", e8 += this.relative_id + "." + this.progress.current_iteration);
  }
  activeID() {
    return void 0 === this.timeline_parameters ? this.ID() : this.timeline_parameters.timeline[this.progress.current_location].activeID();
  }
  generatedData() {
    return this.jsPsych.data.getDataByTimelineNode(this.ID());
  }
  trialsOfType(e8) {
    if (void 0 === this.timeline_parameters) return this.trial_parameters.type == e8 ? this.trial_parameters : [];
    for (var a2 = [], r2 = 0; r2 < this.timeline_parameters.timeline.length; r2++) {
      var t2 = this.timeline_parameters.timeline[r2].trialsOfType(e8);
      a2 = a2.concat(t2);
    }
    return a2;
  }
  insert(e8) {
    void 0 === this.timeline_parameters ? console.error("Cannot add new trials to a trial-level node.") : this.timeline_parameters.timeline.push(new _Di(this.jsPsych, Object.assign(Object.assign({}, this.node_trial_data), e8), this, this.timeline_parameters.timeline.length));
  }
};
function zi(e8) {
  return new Promise((a2) => setTimeout(a2, e8));
}
var Fi = class {
  version() {
    return "7.3.4";
  }
  constructor(e8) {
    this.extensions = {}, this.turk = Li, this.randomization = Pi, this.utils = Hs, this.opts = {}, this.global_trial_index = 0, this.current_trial = {}, this.current_trial_finished = false, this.paused = false, this.waiting = false, this.file_protocol = false, this.simulation_mode = null, this.webaudio_context = null, this.internal = { call_immediate: false }, this.progress_bar_amount = 0, e8 = Object.assign({ display_element: void 0, on_finish: () => {
    }, on_trial_start: () => {
    }, on_trial_finish: () => {
    }, on_data_update: () => {
    }, on_interaction_data_update: () => {
    }, on_close: () => {
    }, use_webaudio: true, exclusions: {}, show_progress_bar: false, message_progress_bar: "Completion Progress", auto_update_progress_bar: true, default_iti: 0, minimum_valid_rt: 0, experiment_width: null, override_safe_mode: false, case_sensitive_responses: false, extensions: [] }, e8), this.opts = e8, Fs(this), this.webaudio_context = "undefined" != typeof window && void 0 !== window.AudioContext ? new AudioContext() : null, "file:" != window.location.protocol || false !== e8.override_safe_mode && void 0 !== e8.override_safe_mode || (e8.use_webaudio = false, this.file_protocol = true, console.warn("jsPsych detected that it is running via the file:// protocol and not on a web server. To prevent issues with cross-origin requests, Web Audio and video preloading have been disabled. If you would like to override this setting, you can set 'override_safe_mode' to 'true' in initJsPsych. For more information, see: https://www.jspsych.org/overview/running-experiments")), this.data = new Vs(this), this.pluginAPI = function(e9) {
      const a2 = e9.getInitSettings(), r2 = Fs(new Ys(e9.getDisplayContainerElement, a2.case_sensitive_responses, a2.minimum_valid_rt)), t2 = Fs(new ei()), o2 = Fs(new Qs(a2.use_webaudio, e9.webaudio_context)), n2 = Fs(new Gs()), s2 = Fs(new Zs(e9.getDisplayContainerElement, t2.setTimeout));
      return Object.assign({}, r2, t2, o2, n2, s2);
    }(this);
    for (const a2 of e8.extensions) this.extensions[a2.type.info.name] = new a2.type(this);
    this.pluginAPI.initAudio();
  }
  run(e8) {
    return Ms(this, void 0, void 0, function* () {
      void 0 === e8 && console.error("No timeline declared in jsPsych.run. Cannot start experiment."), 0 === e8.length && console.error("No trials have been added to the timeline (the timeline is an empty array). Cannot start experiment."), this.timelineDescription = e8, this.timeline = new Di(this, { timeline: e8 }), yield this.prepareDom(), yield this.checkExclusions(this.opts.exclusions), yield this.loadExtensions(this.opts.extensions), document.documentElement.setAttribute("jspsych", "present"), this.startExperiment(), yield this.finished;
    });
  }
  simulate(e8, a2 = "data-only", r2 = {}) {
    return Ms(this, void 0, void 0, function* () {
      this.simulation_mode = a2, this.simulation_options = r2, yield this.run(e8);
    });
  }
  getProgress() {
    return { total_trials: void 0 === this.timeline ? void 0 : this.timeline.length(), current_trial_global: this.global_trial_index, percent_complete: void 0 === this.timeline ? 0 : this.timeline.percentComplete() };
  }
  getStartTime() {
    return this.exp_start_time;
  }
  getTotalTime() {
    return void 0 === this.exp_start_time ? 0 : (/* @__PURE__ */ new Date()).getTime() - this.exp_start_time.getTime();
  }
  getDisplayElement() {
    return this.DOM_target;
  }
  getDisplayContainerElement() {
    return this.DOM_container;
  }
  finishTrial(e8 = {}) {
    var a2;
    if (this.current_trial_finished) return;
    this.current_trial_finished = true, void 0 !== this.current_trial.css_classes && Array.isArray(this.current_trial.css_classes) && this.DOM_target.classList.remove(...this.current_trial.css_classes), this.data.write(e8);
    const r2 = this.data.getLastTrialData().values()[0], t2 = this.current_trial;
    if ("object" == typeof t2.save_trial_parameters) for (const e9 of Object.keys(t2.save_trial_parameters)) {
      const a3 = t2.save_trial_parameters[e9];
      true === a3 && (void 0 === t2[e9] ? console.warn(`Invalid parameter specified in save_trial_parameters. Trial has no property called "${e9}".`) : "function" == typeof t2[e9] ? r2[e9] = t2[e9].toString() : r2[e9] = t2[e9]), false === a3 && "internal_node_id" !== e9 && "trial_index" !== e9 && delete r2[e9];
    }
    const o2 = (null !== (a2 = t2.extensions) && void 0 !== a2 ? a2 : []).map((e9) => this.extensions[e9.type.info.name].on_finish(e9.params)), n2 = () => {
      this.internal.call_immediate = true, "function" == typeof t2.on_finish && t2.on_finish(r2), this.opts.on_trial_finish(r2), this.opts.on_data_update(r2), this.internal.call_immediate = false, "data-only" === this.simulation_mode ? this.nextTrial() : null === typeof t2.post_trial_gap || void 0 === t2.post_trial_gap ? this.opts.default_iti > 0 ? setTimeout(this.nextTrial, this.opts.default_iti) : this.nextTrial() : t2.post_trial_gap > 0 ? setTimeout(this.nextTrial, t2.post_trial_gap) : this.nextTrial();
    };
    if (o2.some((e9) => "function" == typeof e9.then)) Promise.all(o2.map((e9) => Promise.resolve(e9).then((e10) => {
      Object.assign(r2, e10);
    }))).then(n2);
    else {
      for (const e9 of o2) Object.assign(r2, e9);
      n2();
    }
  }
  endExperiment(e8 = "", a2 = {}) {
    this.timeline.end_message = e8, this.timeline.end(), this.pluginAPI.cancelAllKeyboardResponses(), this.pluginAPI.clearAllTimeouts(), this.finishTrial(a2);
  }
  endCurrentTimeline() {
    this.timeline.endActiveNode();
  }
  getCurrentTrial() {
    return this.current_trial;
  }
  getInitSettings() {
    return this.opts;
  }
  getCurrentTimelineNodeID() {
    return this.timeline.activeID();
  }
  timelineVariable(e8, a2 = false) {
    return this.internal.call_immediate || true === a2 ? this.timeline.timelineVariable(e8) : { timelineVariablePlaceholder: true, timelineVariableFunction: () => this.timeline.timelineVariable(e8) };
  }
  getAllTimelineVariables() {
    return this.timeline.allTimelineVariables();
  }
  addNodeToEndOfTimeline(e8, a2) {
    this.timeline.insert(e8);
  }
  pauseExperiment() {
    this.paused = true;
  }
  resumeExperiment() {
    this.paused = false, this.waiting && (this.waiting = false, this.nextTrial());
  }
  loadFail(e8) {
    e8 = e8 || "<p>The experiment failed to load.</p>", this.DOM_target.innerHTML = e8;
  }
  getSafeModeStatus() {
    return this.file_protocol;
  }
  getTimeline() {
    return this.timelineDescription;
  }
  prepareDom() {
    return Ms(this, void 0, void 0, function* () {
      "complete" !== document.readyState && (yield new Promise((e9) => {
        window.addEventListener("load", e9);
      }));
      const e8 = this.opts;
      if (void 0 === e8.display_element) {
        null === document.querySelector("body") && document.documentElement.appendChild(document.createElement("body")), document.querySelector("html").style.height = "100%", document.querySelector("body").style.margin = "0px", document.querySelector("body").style.height = "100%", document.querySelector("body").style.width = "100%", e8.display_element = document.querySelector("body");
      } else {
        const a2 = e8.display_element instanceof Element ? e8.display_element : document.querySelector("#" + e8.display_element);
        null === a2 ? console.error("The display_element specified in initJsPsych() does not exist in the DOM.") : e8.display_element = a2;
      }
      e8.display_element.innerHTML = '<div class="jspsych-content-wrapper"><div id="jspsych-content"></div></div>', this.DOM_container = e8.display_element, this.DOM_target = document.querySelector("#jspsych-content"), null !== e8.experiment_width && (this.DOM_target.style.width = e8.experiment_width + "px"), e8.display_element.tabIndex = 0, -1 === e8.display_element.className.indexOf("jspsych-display-element") && (e8.display_element.className += " jspsych-display-element"), this.DOM_target.className += "jspsych-content", this.data.createInteractionListeners(), window.addEventListener("beforeunload", e8.on_close);
    });
  }
  loadExtensions(e8) {
    return Ms(this, void 0, void 0, function* () {
      try {
        yield Promise.all(e8.map((e9) => this.extensions[e9.type.info.name].initialize(e9.params || {})));
      } catch (e9) {
        throw console.error(e9), new Error(e9);
      }
    });
  }
  startExperiment() {
    this.finished = new Promise((e8) => {
      this.resolveFinishedPromise = e8;
    }), true === this.opts.show_progress_bar && this.drawProgressBar(this.opts.message_progress_bar), this.exp_start_time = /* @__PURE__ */ new Date(), this.timeline.advance(), this.doTrial(this.timeline.trial());
  }
  finishExperiment() {
    const e8 = this.opts.on_finish(this.data.get()), a2 = () => {
      void 0 !== this.timeline.end_message && (this.DOM_target.innerHTML = this.timeline.end_message), this.resolveFinishedPromise();
    };
    e8 ? Promise.resolve(e8).then(a2) : a2();
  }
  nextTrial() {
    if (this.paused) return void (this.waiting = true);
    this.global_trial_index++, this.timeline.markCurrentTrialComplete();
    const e8 = this.timeline.advance();
    true === this.opts.show_progress_bar && true === this.opts.auto_update_progress_bar && this.updateProgressBar(), e8 ? this.finishExperiment() : this.doTrial(this.timeline.trial());
  }
  doTrial(e8) {
    if (this.current_trial = e8, this.current_trial_finished = false, this.evaluateTimelineVariables(e8), "string" == typeof e8.type) throw new Bs("A string was provided as the trial's `type` parameter. Since jsPsych v7, the `type` parameter needs to be a plugin object.");
    if (e8.type = Object.assign(Object.assign({}, Fs(new e8.type(this))), { info: e8.type.info }), this.evaluateFunctionParameters(e8), this.setDefaultValues(e8), this.internal.call_immediate = true, this.opts.on_trial_start(e8), "function" == typeof e8.on_start && e8.on_start(e8), Array.isArray(e8.extensions)) for (const a3 of e8.extensions) this.extensions[a3.type.info.name].on_start(a3.params);
    this.DOM_container.focus(), this.DOM_target.scrollTop = 0, void 0 !== e8.css_classes && (Array.isArray(e8.css_classes) || "string" != typeof e8.css_classes || (e8.css_classes = [e8.css_classes]), Array.isArray(e8.css_classes) && this.DOM_target.classList.add(...e8.css_classes));
    const a2 = () => {
      if ("function" == typeof e8.on_load && e8.on_load(), Array.isArray(e8.extensions)) for (const a3 of e8.extensions) this.extensions[a3.type.info.name].on_load(a3.params);
    };
    let r2, t2, o2;
    this.simulation_mode || (r2 = e8.type.trial(this.DOM_target, e8, a2)), this.simulation_mode && (e8.type.simulate ? (e8.simulation_options || (t2 = this.simulation_options.default), e8.simulation_options && ("string" == typeof e8.simulation_options ? this.simulation_options[e8.simulation_options] ? t2 = this.simulation_options[e8.simulation_options] : this.simulation_options.default ? (console.log(`No matching simulation options found for "${e8.simulation_options}". Using "default" options.`), t2 = this.simulation_options.default) : (console.log(`No matching simulation options found for "${e8.simulation_options}" and no "default" options provided. Using the default values provided by the plugin.`), t2 = {}) : t2 = e8.simulation_options), o2 = this.utils.deepMerge(this.simulation_options.default, t2), o2 = this.utils.deepCopy(o2), o2 = this.replaceFunctionsWithValues(o2, null), r2 = false === (null == o2 ? void 0 : o2.simulate) ? e8.type.trial(this.DOM_target, e8, a2) : e8.type.simulate(e8, (null == o2 ? void 0 : o2.mode) || this.simulation_mode, o2, a2)) : r2 = e8.type.trial(this.DOM_target, e8, a2));
    r2 && "function" == typeof r2.then || this.simulation_mode && (!this.simulation_mode || false !== (null == o2 ? void 0 : o2.simulate)) || a2(), this.internal.call_immediate = false;
  }
  evaluateTimelineVariables(e8) {
    for (const a2 of Object.keys(e8)) "object" == typeof e8[a2] && null !== e8[a2] && void 0 !== e8[a2].timelineVariablePlaceholder && (e8[a2] = e8[a2].timelineVariableFunction()), "object" == typeof e8[a2] && null !== e8[a2] && "timeline" !== a2 && "timeline_variables" !== a2 && this.evaluateTimelineVariables(e8[a2]);
  }
  evaluateFunctionParameters(e8) {
    this.internal.call_immediate = true;
    for (const a2 of Object.keys(e8)) "type" !== a2 && (void 0 !== Js[a2] && Js[a2].type !== Us.FUNCTION && (e8[a2] = this.replaceFunctionsWithValues(e8[a2], null)), void 0 !== e8.type.info.parameters[a2] && e8.type.info.parameters[a2].type !== Us.FUNCTION && (e8[a2] = this.replaceFunctionsWithValues(e8[a2], e8.type.info.parameters[a2])));
    this.internal.call_immediate = false;
  }
  replaceFunctionsWithValues(e8, a2) {
    if (null === e8) return e8;
    if (Array.isArray(e8)) for (let r2 = 0; r2 < e8.length; r2++) e8[r2] = this.replaceFunctionsWithValues(e8[r2], a2);
    else if ("object" == typeof e8) if (null !== a2 && a2.nested) for (const r2 of Object.keys(e8)) "object" == typeof a2.nested[r2] && a2.nested[r2].type !== Us.FUNCTION && (e8[r2] = this.replaceFunctionsWithValues(e8[r2], a2.nested[r2]));
    else for (const a3 of Object.keys(e8)) "type" !== a3 && "timeline" !== a3 && "timeline_variables" !== a3 && (e8[a3] = this.replaceFunctionsWithValues(e8[a3], null));
    else if ("function" == typeof e8) return e8();
    return e8;
  }
  setDefaultValues(e8) {
    for (const a2 in e8.type.info.parameters) e8.type.info.parameters[a2].type === Us.COMPLEX ? (void 0 === e8[a2] && e8.type.info.parameters[a2].default && (e8[a2] = e8.type.info.parameters[a2].default), true === e8.type.info.parameters[a2].array && Array.isArray(e8[a2]) && e8[a2].forEach(function(r2, t2) {
      for (const r3 in e8.type.info.parameters[a2].nested) void 0 !== e8[a2][t2][r3] && null !== e8[a2][t2][r3] || (void 0 === e8.type.info.parameters[a2].nested[r3].default ? console.error(`You must specify a value for the ${r3} parameter (nested in the ${a2} parameter) in the ${e8.type.info.name} plugin.`) : e8[a2][t2][r3] = e8.type.info.parameters[a2].nested[r3].default);
    })) : void 0 !== e8[a2] && null !== e8[a2] || (void 0 === e8.type.info.parameters[a2].default ? console.error(`You must specify a value for the ${a2} parameter in the ${e8.type.info.name} plugin.`) : e8[a2] = e8.type.info.parameters[a2].default);
  }
  checkExclusions(e8) {
    return Ms(this, void 0, void 0, function* () {
      if ((e8.min_width || e8.min_height || e8.audio) && console.warn("The exclusions option in `initJsPsych()` is deprecated and will be removed in a future version. We recommend using the browser-check plugin instead. See https://www.jspsych.org/latest/plugins/browser-check/."), e8.min_width || e8.min_height) {
        const a2 = e8.min_width || 0, r2 = e8.min_height || 0;
        if (window.innerWidth < a2 || window.innerHeight < r2) {
          for (this.getDisplayElement().innerHTML = "<p>Your browser window is too small to complete this experiment. Please maximize the size of your browser window. If your browser window is already maximized, you will not be able to complete this experiment.</p><p>The minimum width is " + a2 + "px. Your current width is " + window.innerWidth + "px.</p><p>The minimum height is " + r2 + "px. Your current height is " + window.innerHeight + "px.</p>"; window.innerWidth < a2 || window.innerHeight < r2; ) yield zi(100);
          this.getDisplayElement().innerHTML = "";
        }
      }
      if (void 0 !== e8.audio && e8.audio && !window.hasOwnProperty("AudioContext") && !window.hasOwnProperty("webkitAudioContext")) throw this.getDisplayElement().innerHTML = "<p>Your browser does not support the WebAudio API, which means that you will not be able to complete the experiment.</p><p>Browsers that support the WebAudio API include Chrome, Firefox, Safari, and Edge.</p>", new Error();
    });
  }
  drawProgressBar(e8) {
    document.querySelector(".jspsych-display-element").insertAdjacentHTML("afterbegin", '<div id="jspsych-progressbar-container"><span>' + e8 + '</span><div id="jspsych-progressbar-outer"><div id="jspsych-progressbar-inner"></div></div></div>');
  }
  updateProgressBar() {
    this.setProgressBar(this.getProgress().percent_complete / 100);
  }
  setProgressBar(e8) {
    e8 = Math.max(Math.min(1, e8), 0), document.querySelector("#jspsych-progressbar-inner").style.width = 100 * e8 + "%", this.progress_bar_amount = e8;
  }
  getProgressBarCompleted() {
    return this.progress_bar_amount;
  }
};
"undefined" != typeof window && window.hasOwnProperty("webkitAudioContext") && !window.hasOwnProperty("AudioContext") && (window.AudioContext = webkitAudioContext);
var Bi = { name: "preload", parameters: { auto_preload: { type: Us.BOOL, pretty_name: "Auto-preload", default: false }, trials: { type: Us.TIMELINE, pretty_name: "Trials", default: [] }, images: { type: Us.STRING, pretty_name: "Images", default: [], array: true }, audio: { type: Us.STRING, pretty_name: "Audio", default: [], array: true }, video: { type: Us.STRING, pretty_name: "Video", default: [], array: true }, message: { type: Us.HTML_STRING, pretty_name: "Message", default: null }, show_progress_bar: { type: Us.BOOL, pretty_name: "Show progress bar", default: true }, continue_after_error: { type: Us.BOOL, pretty_name: "Continue after error", default: false }, error_message: { type: Us.HTML_STRING, pretty_name: "Error message", default: "The experiment failed to load." }, show_detailed_errors: { type: Us.BOOL, pretty_name: "Show detailed errors", default: false }, max_load_time: { type: Us.INT, pretty_name: "Max load time", default: null }, on_error: { type: Us.FUNCTION, pretty_name: "On error", default: null }, on_success: { type: Us.FUNCTION, pretty_name: "On success", default: null } } };
var qi = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2) {
    var r2 = null, t2 = false, o2 = [], n2 = [], s2 = [], i2 = [], d2 = this.jsPsych.getSafeModeStatus(), c2 = [], u2 = [], l2 = [];
    if (a2.auto_preload) {
      var p2 = this.jsPsych.getTimeline(), m2 = this.jsPsych.pluginAPI.getAutoPreloadList(p2);
      c2 = c2.concat(m2.images), u2 = u2.concat(m2.audio), l2 = l2.concat(m2.video);
    }
    if (a2.trials.length > 0) {
      var h2 = this.jsPsych.pluginAPI.getAutoPreloadList(a2.trials);
      c2 = c2.concat(h2.images), u2 = u2.concat(h2.audio), l2 = l2.concat(h2.video);
    }
    c2 = c2.concat(a2.images), u2 = u2.concat(a2.audio), l2 = l2.concat(a2.video), c2 = this.jsPsych.utils.unique(c2.flat()), u2 = this.jsPsych.utils.unique(u2.flat()), l2 = this.jsPsych.utils.unique(l2.flat()), d2 && (l2 = []);
    var f2 = "";
    null !== a2.message && (f2 += a2.message), a2.show_progress_bar && (f2 += "\n            <div id='jspsych-loading-progress-bar-container' style='height: 10px; width: 300px; background-color: #ddd; margin: auto;'>\n              <div id='jspsych-loading-progress-bar' style='height: 10px; width: 0%; background-color: #777;'></div>\n            </div>"), e8.innerHTML = f2;
    const v2 = () => {
      if (_2++, a2.show_progress_bar) {
        var r3 = _2 / x2 * 100, t3 = e8.querySelector("#jspsych-loading-progress-bar");
        null !== t3 && (t3.style.width = r3 + "%");
      }
    }, g2 = () => {
      void 0 !== t2 && false === t2 && (this.jsPsych.pluginAPI.clearAllTimeouts(), this.jsPsych.pluginAPI.cancelPreloads(), r2 = true, y2());
    }, b2 = () => {
      this.jsPsych.pluginAPI.cancelPreloads(), void 0 === r2 || false !== r2 && null !== r2 || (t2 = true, I2 < x2 && (r2 = false), T2("timeout"), i2.push("<p><strong>Loading timed out.</strong><br>Consider compressing your stimuli files, loading your files in smaller batches,<br>and/or increasing the <i>max_load_time</i> parameter.</p>"), a2.continue_after_error ? y2() : w2());
    }, w2 = () => {
      this.jsPsych.pluginAPI.clearAllTimeouts(), this.jsPsych.pluginAPI.cancelPreloads(), e8.innerHTML = a2.error_message, a2.show_detailed_errors && (e8.innerHTML += "<p><strong>Error details:</strong></p>", i2.forEach((a3) => {
        e8.innerHTML += a3;
      }));
    }, y2 = () => {
      this.jsPsych.pluginAPI.clearAllTimeouts();
      var a3 = { success: r2, timeout: t2, failed_images: o2, failed_audio: n2, failed_video: s2 };
      e8.innerHTML = "", this.jsPsych.finishTrial(a3);
    };
    null !== a2.max_load_time && this.jsPsych.pluginAPI.setTimeout(b2, a2.max_load_time);
    var x2 = c2.length + u2.length + l2.length, _2 = 0, I2 = 0;
    if (0 == x2) g2();
    else {
      const e9 = (e10) => {
        this.jsPsych.pluginAPI.preloadVideo(l2, e10, S2, k2);
      }, a3 = (e10) => {
        this.jsPsych.pluginAPI.preloadAudio(u2, e10, S2, k2);
      }, r3 = (e10) => {
        this.jsPsych.pluginAPI.preloadImages(c2, e10, S2, k2);
      };
      l2.length > 0 && e9(() => {
      }), u2.length > 0 && a3(() => {
      }), c2.length > 0 && r3(() => {
      });
    }
    function k2(e9) {
      v2(), null == r2 && (r2 = false);
      var t3 = "unknown file";
      e9.source && (t3 = e9.source), e9.error && e9.error.path && e9.error.path.length > 0 && ("img" == e9.error.path[0].localName ? o2.push(t3) : "audio" == e9.error.path[0].localName ? n2.push(t3) : "video" == e9.error.path[0].localName && s2.push(t3));
      var d3 = "<p><strong>Error loading file: " + t3 + "</strong><br>";
      e9.error.statusText && (d3 += "File request response status: " + e9.error.statusText + "<br>"), "404" == e9.error && (d3 += "404 - file not found.<br>"), void 0 !== e9.error.loaded && null !== e9.error.loaded && 0 !== e9.error.loaded ? d3 += e9.error.loaded + " bytes transferred." : d3 += "File did not begin loading. Check that file path is correct and reachable by the browser,<br>and that loading is not blocked by cross-origin resource sharing (CORS) errors.", d3 += "</p>", i2.push(d3), T2(t3), _2 == x2 && (a2.continue_after_error ? y2() : w2());
    }
    function S2(e9) {
      v2(), function(e10) {
        null !== a2.on_success && a2.on_success(e10);
      }(e9), ++I2 == x2 ? g2() : _2 == x2 && (a2.continue_after_error ? y2() : w2());
    }
    function T2(e9) {
      null !== a2.on_error && a2.on_error(e9);
    }
  }
  simulate(e8, a2, r2, t2) {
    "data-only" == a2 && (t2(), this.simulate_data_only(e8, r2)), "visual" == a2 && this.simulate_visual(e8, r2, t2);
  }
  create_simulation_data(e8, a2) {
    return this.jsPsych.pluginAPI.mergeSimulationData({ success: true, timeout: false, failed_images: [], failed_audio: [], failed_video: [] }, a2);
  }
  simulate_data_only(e8, a2) {
    const r2 = this.create_simulation_data(e8, a2);
    this.jsPsych.finishTrial(r2);
  }
  simulate_visual(e8, a2, r2) {
    const t2 = this.jsPsych.getDisplayElement();
    this.trial(t2, e8), r2();
  }
};
function $i(e8, a2) {
  return function(e9) {
    if (Array.isArray(e9)) return e9;
  }(e8) || function(e9, a3) {
    var r2 = null == e9 ? null : "undefined" != typeof Symbol && e9[Symbol.iterator] || e9["@@iterator"];
    if (null != r2) {
      var t2, o2, n2, s2, i2 = [], d2 = true, c2 = false;
      try {
        if (n2 = (r2 = r2.call(e9)).next, 0 === a3) {
          if (Object(r2) !== r2) return;
          d2 = false;
        } else for (; !(d2 = (t2 = n2.call(r2)).done) && (i2.push(t2.value), i2.length !== a3); d2 = true) ;
      } catch (e10) {
        c2 = true, o2 = e10;
      } finally {
        try {
          if (!d2 && null != r2.return && (s2 = r2.return(), Object(s2) !== s2)) return;
        } finally {
          if (c2) throw o2;
        }
      }
      return i2;
    }
  }(e8, a2) || function(e9, a3) {
    if (!e9) return;
    if ("string" == typeof e9) return Ui(e9, a3);
    var r2 = Object.prototype.toString.call(e9).slice(8, -1);
    "Object" === r2 && e9.constructor && (r2 = e9.constructor.name);
    if ("Map" === r2 || "Set" === r2) return Array.from(e9);
    if ("Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2)) return Ui(e9, a3);
  }(e8, a2) || function() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function Ui(e8, a2) {
  (null == a2 || a2 > e8.length) && (a2 = e8.length);
  for (var r2 = 0, t2 = new Array(a2); r2 < a2; r2++) t2[r2] = e8[r2];
  return t2;
}
function Hi(e8, a2, r2) {
  var t2 = { images: {}, video: {}, audio: {} }, o2 = Ts(r2), n2 = Es(), s2 = function(e9, r3) {
    var s3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], i3 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
    e9.forEach(function(e10) {
      var d2 = Os(e10), c2 = os.parse(e10).name, u2 = c2.replace(/^([A-Z])|[\s-_](\w)/g, function(e11, a3, r4, t3) {
        return r4 ? r4.toUpperCase() : a3.toLowerCase();
      }), l2 = js(a2, e10, o2, n2, r3, s3, i3);
      t2[d2][u2] = l2;
    });
  }, i2 = function(e9) {
    var a3, r3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
    Array.isArray(e9) ? s2(e9, "default") : (e9.languageSpecific && (Array.isArray(e9.languageSpecific) ? s2(e9.languageSpecific, "languageSpecific") : function(e10, a4) {
      Object.entries(e10).forEach(function(e11) {
        var r4 = $i(e11, 2), t3 = r4[0], o3 = r4[1];
        s2(o3, t3, true, a4);
      });
    }(e9.languageSpecific, r3)), e9.device && s2(e9.device, "device"), e9.shared && (a3 = e9.shared, Array.isArray(a3) ? s2(a3, "shared") : Object.entries(a3).forEach(function(e10) {
      var a4 = $i(e10, 2), r4 = a4[0], t3 = a4[1];
      s2(t3, "device" === r4 ? "shared/device" : "shared");
    })));
  };
  return e8.preload && Object.entries(e8.preload).forEach(function(e9) {
    var a3 = $i(e9, 2)[1];
    i2(a3);
  }), e8.default && i2(e8.default, true), t2;
}
function Wi(e8, a2, r2) {
  var t2 = {}, o2 = Ts(r2), n2 = Es();
  function s2(e9, r3, s3) {
    var i3 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], d3 = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
    e9.forEach(function(e10) {
      var c2 = Os(e10), u2 = js(a2, e10, o2, n2, s3, i3, d3);
      t2[r3] || (t2[r3] = { type: qi, message: "The experiment is loading", show_progress_bar: true, continue_after_error: false, error_message: "", show_detailed_errors: true, max_load_time: null, on_error: null, on_success: null, images: [], audio: [], video: [] }), t2[r3][c2].push(u2);
    });
  }
  function i2(e9, a3, r3) {
    Array.isArray(a3) ? s2(a3, e9, "languageSpecific") : function(e10, a4, r4) {
      Object.entries(a4).forEach(function(a5) {
        var t3 = $i(a5, 2), o3 = t3[0];
        s2(t3[1], e10, o3, true, r4);
      });
    }(e9, a3, r3);
  }
  function d2(e9, a3) {
    var r3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
    Array.isArray(a3) ? s2(a3, e9, "default") : (a3.languageSpecific && i2(e9, a3.languageSpecific, r3), a3.device && s2(a3.device, e9, "device"), a3.shared && function(e10, a4) {
      Array.isArray(a4) ? s2(a4, e10, "shared") : Object.entries(a4).forEach(function(a5) {
        var r4 = $i(a5, 2), t3 = r4[0];
        s2(r4[1], e10, "device" === t3 ? "shared/device" : "shared");
      });
    }(e9, a3.shared));
  }
  return e8.preload && Object.entries(e8.preload).forEach(function(e9) {
    var a3 = $i(e9, 2);
    d2(a3[0], a3[1]);
  }), e8.default && d2("default", e8.default, true), t2;
}
function Ki(e8) {
  return Ki = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e9) {
    return typeof e9;
  } : function(e9) {
    return e9 && "function" == typeof Symbol && e9.constructor === Symbol && e9 !== Symbol.prototype ? "symbol" : typeof e9;
  }, Ki(e8);
}
function Vi(e8, a2) {
  if (!(e8 instanceof a2)) throw new TypeError("Cannot call a class as a function");
}
function Gi(e8) {
  var a2 = function(e9, a3) {
    if ("object" != Ki(e9) || !e9) return e9;
    var r2 = e9[Symbol.toPrimitive];
    if (void 0 !== r2) {
      var t2 = r2.call(e9, a3 || "default");
      if ("object" != Ki(t2)) return t2;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === a3 ? String : Number)(e9);
  }(e8, "string");
  return "symbol" == Ki(a2) ? a2 : a2 + "";
}
function Yi(e8, a2) {
  for (var r2 = 0; r2 < a2.length; r2++) {
    var t2 = a2[r2];
    t2.enumerable = t2.enumerable || false, t2.configurable = true, "value" in t2 && (t2.writable = true), Object.defineProperty(e8, Gi(t2.key), t2);
  }
}
function Ji(e8, a2, r2) {
  return a2 && Yi(e8.prototype, a2), r2 && Yi(e8, r2), Object.defineProperty(e8, "prototype", { writable: false }), e8;
}
function Xi(e8) {
  if (void 0 === e8) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e8;
}
function Qi(e8, a2) {
  return Qi = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e9, a3) {
    return e9.__proto__ = a3, e9;
  }, Qi(e8, a2);
}
function Zi(e8, a2) {
  if ("function" != typeof a2 && null !== a2) throw new TypeError("Super expression must either be null or a function");
  e8.prototype = Object.create(a2 && a2.prototype, { constructor: { value: e8, writable: true, configurable: true } }), Object.defineProperty(e8, "prototype", { writable: false }), a2 && Qi(e8, a2);
}
function ed(e8, a2) {
  if (a2 && ("object" == Ki(a2) || "function" == typeof a2)) return a2;
  if (void 0 !== a2) throw new TypeError("Derived constructors may only return object or undefined");
  return Xi(e8);
}
function ad(e8) {
  return ad = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e9) {
    return e9.__proto__ || Object.getPrototypeOf(e9);
  }, ad(e8);
}
function rd(e8, a2, r2) {
  return (a2 = Gi(a2)) in e8 ? Object.defineProperty(e8, a2, { value: r2, enumerable: true, configurable: true, writable: true }) : e8[a2] = r2, e8;
}
function td(e8, a2) {
  (null == a2 || a2 > e8.length) && (a2 = e8.length);
  for (var r2 = 0, t2 = Array(a2); r2 < a2; r2++) t2[r2] = e8[r2];
  return t2;
}
function od(e8) {
  return function(e9) {
    if (Array.isArray(e9)) return e9;
  }(e8) || function(e9) {
    if ("undefined" != typeof Symbol && null != e9[Symbol.iterator] || null != e9["@@iterator"]) return Array.from(e9);
  }(e8) || function(e9, a2) {
    if (e9) {
      if ("string" == typeof e9) return td(e9, a2);
      var r2 = {}.toString.call(e9).slice(8, -1);
      return "Object" === r2 && e9.constructor && (r2 = e9.constructor.name), "Map" === r2 || "Set" === r2 ? Array.from(e9) : "Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2) ? td(e9, a2) : void 0;
    }
  }(e8) || function() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function nd(e8, a2) {
  var r2 = Object.keys(e8);
  if (Object.getOwnPropertySymbols) {
    var t2 = Object.getOwnPropertySymbols(e8);
    a2 && (t2 = t2.filter(function(a3) {
      return Object.getOwnPropertyDescriptor(e8, a3).enumerable;
    })), r2.push.apply(r2, t2);
  }
  return r2;
}
function sd(e8) {
  for (var a2 = 1; a2 < arguments.length; a2++) {
    var r2 = null != arguments[a2] ? arguments[a2] : {};
    a2 % 2 ? nd(Object(r2), true).forEach(function(a3) {
      rd(e8, a3, r2[a3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e8, Object.getOwnPropertyDescriptors(r2)) : nd(Object(r2)).forEach(function(a3) {
      Object.defineProperty(e8, a3, Object.getOwnPropertyDescriptor(r2, a3));
    });
  }
  return e8;
}
qi.info = Bi;
var id = { type: "logger", log: function(e8) {
  this.output("log", e8);
}, warn: function(e8) {
  this.output("warn", e8);
}, error: function(e8) {
  this.output("error", e8);
}, output: function(e8, a2) {
  console && console[e8] && console[e8].apply(console, a2);
} };
var dd = function() {
  function e8(a2) {
    var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    Vi(this, e8), this.init(a2, r2);
  }
  return Ji(e8, [{ key: "init", value: function(e9) {
    var a2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    this.prefix = a2.prefix || "i18next:", this.logger = e9 || id, this.options = a2, this.debug = a2.debug;
  } }, { key: "setDebug", value: function(e9) {
    this.debug = e9;
  } }, { key: "log", value: function() {
    for (var e9 = arguments.length, a2 = new Array(e9), r2 = 0; r2 < e9; r2++) a2[r2] = arguments[r2];
    return this.forward(a2, "log", "", true);
  } }, { key: "warn", value: function() {
    for (var e9 = arguments.length, a2 = new Array(e9), r2 = 0; r2 < e9; r2++) a2[r2] = arguments[r2];
    return this.forward(a2, "warn", "", true);
  } }, { key: "error", value: function() {
    for (var e9 = arguments.length, a2 = new Array(e9), r2 = 0; r2 < e9; r2++) a2[r2] = arguments[r2];
    return this.forward(a2, "error", "");
  } }, { key: "deprecate", value: function() {
    for (var e9 = arguments.length, a2 = new Array(e9), r2 = 0; r2 < e9; r2++) a2[r2] = arguments[r2];
    return this.forward(a2, "warn", "WARNING DEPRECATED: ", true);
  } }, { key: "forward", value: function(e9, a2, r2, t2) {
    return t2 && !this.debug ? null : ("string" == typeof e9[0] && (e9[0] = "".concat(r2).concat(this.prefix, " ").concat(e9[0])), this.logger[a2](e9));
  } }, { key: "create", value: function(a2) {
    return new e8(this.logger, sd(sd({}, { prefix: "".concat(this.prefix, ":").concat(a2, ":") }), this.options));
  } }, { key: "clone", value: function(a2) {
    return (a2 = a2 || this.options).prefix = a2.prefix || this.prefix, new e8(this.logger, a2);
  } }]), e8;
}();
var cd = new dd();
var ud = function() {
  function e8() {
    Vi(this, e8), this.observers = {};
  }
  return Ji(e8, [{ key: "on", value: function(e9, a2) {
    var r2 = this;
    return e9.split(" ").forEach(function(e10) {
      r2.observers[e10] = r2.observers[e10] || [], r2.observers[e10].push(a2);
    }), this;
  } }, { key: "off", value: function(e9, a2) {
    this.observers[e9] && (a2 ? this.observers[e9] = this.observers[e9].filter(function(e10) {
      return e10 !== a2;
    }) : delete this.observers[e9]);
  } }, { key: "emit", value: function(e9) {
    for (var a2 = arguments.length, r2 = new Array(a2 > 1 ? a2 - 1 : 0), t2 = 1; t2 < a2; t2++) r2[t2 - 1] = arguments[t2];
    this.observers[e9] && [].concat(this.observers[e9]).forEach(function(e10) {
      e10.apply(void 0, r2);
    });
    this.observers["*"] && [].concat(this.observers["*"]).forEach(function(a3) {
      a3.apply(a3, [e9].concat(r2));
    });
  } }]), e8;
}();
function ld() {
  var e8, a2, r2 = new Promise(function(r3, t2) {
    e8 = r3, a2 = t2;
  });
  return r2.resolve = e8, r2.reject = a2, r2;
}
function pd(e8) {
  return null == e8 ? "" : "" + e8;
}
function md(e8, a2, r2) {
  function t2(e9) {
    return e9 && e9.indexOf("###") > -1 ? e9.replace(/###/g, ".") : e9;
  }
  function o2() {
    return !e8 || "string" == typeof e8;
  }
  for (var n2 = "string" != typeof a2 ? [].concat(a2) : a2.split("."); n2.length > 1; ) {
    if (o2()) return {};
    var s2 = t2(n2.shift());
    !e8[s2] && r2 && (e8[s2] = new r2()), e8 = Object.prototype.hasOwnProperty.call(e8, s2) ? e8[s2] : {};
  }
  return o2() ? {} : { obj: e8, k: t2(n2.shift()) };
}
function hd(e8, a2, r2) {
  var t2 = md(e8, a2, Object);
  t2.obj[t2.k] = r2;
}
function fd(e8, a2) {
  var r2 = md(e8, a2), t2 = r2.obj, o2 = r2.k;
  if (t2) return t2[o2];
}
function vd(e8, a2, r2) {
  for (var t2 in a2) "__proto__" !== t2 && "constructor" !== t2 && (t2 in e8 ? "string" == typeof e8[t2] || e8[t2] instanceof String || "string" == typeof a2[t2] || a2[t2] instanceof String ? r2 && (e8[t2] = a2[t2]) : vd(e8[t2], a2[t2], r2) : e8[t2] = a2[t2]);
  return e8;
}
function gd(e8) {
  return e8.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}
var bd = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#x2F;" };
function wd(e8) {
  return "string" == typeof e8 ? e8.replace(/[&<>"'\/]/g, function(e9) {
    return bd[e9];
  }) : e8;
}
var yd = "undefined" != typeof window && window.navigator && void 0 === window.navigator.userAgentData && window.navigator.userAgent && window.navigator.userAgent.indexOf("MSIE") > -1;
var xd = [" ", ",", "?", "!", ";"];
function _d(e8, a2) {
  var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ".";
  if (e8) {
    if (e8[a2]) return e8[a2];
    for (var t2 = a2.split(r2), o2 = e8, n2 = 0; n2 < t2.length; ++n2) {
      if (!o2) return;
      if ("string" == typeof o2[t2[n2]] && n2 + 1 < t2.length) return;
      if (void 0 === o2[t2[n2]]) {
        for (var s2 = 2, i2 = t2.slice(n2, n2 + s2).join(r2), d2 = o2[i2]; void 0 === d2 && t2.length > n2 + s2; ) s2++, d2 = o2[i2 = t2.slice(n2, n2 + s2).join(r2)];
        if (void 0 === d2) return;
        if (null === d2) return null;
        if (a2.endsWith(i2)) {
          if ("string" == typeof d2) return d2;
          if (i2 && "string" == typeof d2[i2]) return d2[i2];
        }
        var c2 = t2.slice(n2 + s2).join(r2);
        return c2 ? _d(d2, c2, r2) : void 0;
      }
      o2 = o2[t2[n2]];
    }
    return o2;
  }
}
function Id(e8, a2) {
  var r2 = Object.keys(e8);
  if (Object.getOwnPropertySymbols) {
    var t2 = Object.getOwnPropertySymbols(e8);
    a2 && (t2 = t2.filter(function(a3) {
      return Object.getOwnPropertyDescriptor(e8, a3).enumerable;
    })), r2.push.apply(r2, t2);
  }
  return r2;
}
function kd(e8) {
  for (var a2 = 1; a2 < arguments.length; a2++) {
    var r2 = null != arguments[a2] ? arguments[a2] : {};
    a2 % 2 ? Id(Object(r2), true).forEach(function(a3) {
      rd(e8, a3, r2[a3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e8, Object.getOwnPropertyDescriptors(r2)) : Id(Object(r2)).forEach(function(a3) {
      Object.defineProperty(e8, a3, Object.getOwnPropertyDescriptor(r2, a3));
    });
  }
  return e8;
}
function Sd(e8) {
  var a2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e9) {
      return false;
    }
  }();
  return function() {
    var r2, t2 = ad(e8);
    if (a2) {
      var o2 = ad(this).constructor;
      r2 = Reflect.construct(t2, arguments, o2);
    } else r2 = t2.apply(this, arguments);
    return ed(this, r2);
  };
}
var Td = function() {
  Zi(a2, ud);
  var e8 = Sd(a2);
  function a2(r2) {
    var t2, o2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { ns: ["translation"], defaultNS: "translation" };
    return Vi(this, a2), t2 = e8.call(this), yd && ud.call(Xi(t2)), t2.data = r2 || {}, t2.options = o2, void 0 === t2.options.keySeparator && (t2.options.keySeparator = "."), void 0 === t2.options.ignoreJSONStructure && (t2.options.ignoreJSONStructure = true), t2;
  }
  return Ji(a2, [{ key: "addNamespaces", value: function(e9) {
    this.options.ns.indexOf(e9) < 0 && this.options.ns.push(e9);
  } }, { key: "removeNamespaces", value: function(e9) {
    var a3 = this.options.ns.indexOf(e9);
    a3 > -1 && this.options.ns.splice(a3, 1);
  } }, { key: "getResource", value: function(e9, a3, r2) {
    var t2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, o2 = void 0 !== t2.keySeparator ? t2.keySeparator : this.options.keySeparator, n2 = void 0 !== t2.ignoreJSONStructure ? t2.ignoreJSONStructure : this.options.ignoreJSONStructure, s2 = [e9, a3];
    r2 && "string" != typeof r2 && (s2 = s2.concat(r2)), r2 && "string" == typeof r2 && (s2 = s2.concat(o2 ? r2.split(o2) : r2)), e9.indexOf(".") > -1 && (s2 = e9.split("."));
    var i2 = fd(this.data, s2);
    return i2 || !n2 || "string" != typeof r2 ? i2 : _d(this.data && this.data[e9] && this.data[e9][a3], r2, o2);
  } }, { key: "addResource", value: function(e9, a3, r2, t2) {
    var o2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : { silent: false }, n2 = void 0 !== o2.keySeparator ? o2.keySeparator : this.options.keySeparator, s2 = [e9, a3];
    r2 && (s2 = s2.concat(n2 ? r2.split(n2) : r2)), e9.indexOf(".") > -1 && (t2 = a3, a3 = (s2 = e9.split("."))[1]), this.addNamespaces(a3), hd(this.data, s2, t2), o2.silent || this.emit("added", e9, a3, r2, t2);
  } }, { key: "addResources", value: function(e9, a3, r2) {
    var t2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : { silent: false };
    for (var o2 in r2) "string" != typeof r2[o2] && "[object Array]" !== Object.prototype.toString.apply(r2[o2]) || this.addResource(e9, a3, o2, r2[o2], { silent: true });
    t2.silent || this.emit("added", e9, a3, r2);
  } }, { key: "addResourceBundle", value: function(e9, a3, r2, t2, o2) {
    var n2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : { silent: false }, s2 = [e9, a3];
    e9.indexOf(".") > -1 && (t2 = r2, r2 = a3, a3 = (s2 = e9.split("."))[1]), this.addNamespaces(a3);
    var i2 = fd(this.data, s2) || {};
    t2 ? vd(i2, r2, o2) : i2 = kd(kd({}, i2), r2), hd(this.data, s2, i2), n2.silent || this.emit("added", e9, a3, r2);
  } }, { key: "removeResourceBundle", value: function(e9, a3) {
    this.hasResourceBundle(e9, a3) && delete this.data[e9][a3], this.removeNamespaces(a3), this.emit("removed", e9, a3);
  } }, { key: "hasResourceBundle", value: function(e9, a3) {
    return void 0 !== this.getResource(e9, a3);
  } }, { key: "getResourceBundle", value: function(e9, a3) {
    return a3 || (a3 = this.options.defaultNS), "v1" === this.options.compatibilityAPI ? kd(kd({}, {}), this.getResource(e9, a3)) : this.getResource(e9, a3);
  } }, { key: "getDataByLanguage", value: function(e9) {
    return this.data[e9];
  } }, { key: "hasLanguageSomeTranslations", value: function(e9) {
    var a3 = this.getDataByLanguage(e9);
    return !!(a3 && Object.keys(a3) || []).find(function(e10) {
      return a3[e10] && Object.keys(a3[e10]).length > 0;
    });
  } }, { key: "toJSON", value: function() {
    return this.data;
  } }]), a2;
}();
var Ed = { processors: {}, addPostProcessor: function(e8) {
  this.processors[e8.name] = e8;
}, handle: function(e8, a2, r2, t2, o2) {
  var n2 = this;
  return e8.forEach(function(e9) {
    n2.processors[e9] && (a2 = n2.processors[e9].process(a2, r2, t2, o2));
  }), a2;
} };
function jd(e8, a2) {
  var r2 = Object.keys(e8);
  if (Object.getOwnPropertySymbols) {
    var t2 = Object.getOwnPropertySymbols(e8);
    a2 && (t2 = t2.filter(function(a3) {
      return Object.getOwnPropertyDescriptor(e8, a3).enumerable;
    })), r2.push.apply(r2, t2);
  }
  return r2;
}
function Od(e8) {
  for (var a2 = 1; a2 < arguments.length; a2++) {
    var r2 = null != arguments[a2] ? arguments[a2] : {};
    a2 % 2 ? jd(Object(r2), true).forEach(function(a3) {
      rd(e8, a3, r2[a3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e8, Object.getOwnPropertyDescriptors(r2)) : jd(Object(r2)).forEach(function(a3) {
      Object.defineProperty(e8, a3, Object.getOwnPropertyDescriptor(r2, a3));
    });
  }
  return e8;
}
function Ad(e8) {
  var a2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e9) {
      return false;
    }
  }();
  return function() {
    var r2, t2 = ad(e8);
    if (a2) {
      var o2 = ad(this).constructor;
      r2 = Reflect.construct(t2, arguments, o2);
    } else r2 = t2.apply(this, arguments);
    return ed(this, r2);
  };
}
var Cd = {};
var Rd = function() {
  Zi(a2, ud);
  var e8 = Ad(a2);
  function a2(r2) {
    var t2, o2, n2, s2, i2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    return Vi(this, a2), t2 = e8.call(this), yd && ud.call(Xi(t2)), o2 = ["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], n2 = r2, s2 = Xi(t2), o2.forEach(function(e9) {
      n2[e9] && (s2[e9] = n2[e9]);
    }), t2.options = i2, void 0 === t2.options.keySeparator && (t2.options.keySeparator = "."), t2.logger = cd.create("translator"), t2;
  }
  return Ji(a2, [{ key: "changeLanguage", value: function(e9) {
    e9 && (this.language = e9);
  } }, { key: "exists", value: function(e9) {
    var a3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { interpolation: {} };
    if (null == e9) return false;
    var r2 = this.resolve(e9, a3);
    return r2 && void 0 !== r2.res;
  } }, { key: "extractFromKey", value: function(e9, a3) {
    var r2 = void 0 !== a3.nsSeparator ? a3.nsSeparator : this.options.nsSeparator;
    void 0 === r2 && (r2 = ":");
    var t2 = void 0 !== a3.keySeparator ? a3.keySeparator : this.options.keySeparator, o2 = a3.ns || this.options.defaultNS || [], n2 = r2 && e9.indexOf(r2) > -1, s2 = !(this.options.userDefinedKeySeparator || a3.keySeparator || this.options.userDefinedNsSeparator || a3.nsSeparator || function(e10, a4, r3) {
      a4 = a4 || "", r3 = r3 || "";
      var t3 = xd.filter(function(e11) {
        return a4.indexOf(e11) < 0 && r3.indexOf(e11) < 0;
      });
      if (0 === t3.length) return true;
      var o3 = new RegExp("(".concat(t3.map(function(e11) {
        return "?" === e11 ? "\\?" : e11;
      }).join("|"), ")")), n3 = !o3.test(e10);
      if (!n3) {
        var s3 = e10.indexOf(r3);
        s3 > 0 && !o3.test(e10.substring(0, s3)) && (n3 = true);
      }
      return n3;
    }(e9, r2, t2));
    if (n2 && !s2) {
      var i2 = e9.match(this.interpolator.nestingRegexp);
      if (i2 && i2.length > 0) return { key: e9, namespaces: o2 };
      var d2 = e9.split(r2);
      (r2 !== t2 || r2 === t2 && this.options.ns.indexOf(d2[0]) > -1) && (o2 = d2.shift()), e9 = d2.join(t2);
    }
    return "string" == typeof o2 && (o2 = [o2]), { key: e9, namespaces: o2 };
  } }, { key: "translate", value: function(e9, r2, t2) {
    var o2 = this;
    if ("object" !== Ki(r2) && this.options.overloadTranslationOptionHandler && (r2 = this.options.overloadTranslationOptionHandler(arguments)), "object" === Ki(r2) && (r2 = Od({}, r2)), r2 || (r2 = {}), null == e9) return "";
    Array.isArray(e9) || (e9 = [String(e9)]);
    var n2 = void 0 !== r2.returnDetails ? r2.returnDetails : this.options.returnDetails, s2 = void 0 !== r2.keySeparator ? r2.keySeparator : this.options.keySeparator, i2 = this.extractFromKey(e9[e9.length - 1], r2), d2 = i2.key, c2 = i2.namespaces, u2 = c2[c2.length - 1], l2 = r2.lng || this.language, p2 = r2.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if (l2 && "cimode" === l2.toLowerCase()) {
      if (p2) {
        var m2 = r2.nsSeparator || this.options.nsSeparator;
        return n2 ? { res: "".concat(u2).concat(m2).concat(d2), usedKey: d2, exactUsedKey: d2, usedLng: l2, usedNS: u2 } : "".concat(u2).concat(m2).concat(d2);
      }
      return n2 ? { res: d2, usedKey: d2, exactUsedKey: d2, usedLng: l2, usedNS: u2 } : d2;
    }
    var h2 = this.resolve(e9, r2), f2 = h2 && h2.res, v2 = h2 && h2.usedKey || d2, g2 = h2 && h2.exactUsedKey || d2, b2 = Object.prototype.toString.apply(f2), w2 = void 0 !== r2.joinArrays ? r2.joinArrays : this.options.joinArrays, y2 = !this.i18nFormat || this.i18nFormat.handleAsObject;
    if (y2 && f2 && ("string" != typeof f2 && "boolean" != typeof f2 && "number" != typeof f2) && ["[object Number]", "[object Function]", "[object RegExp]"].indexOf(b2) < 0 && ("string" != typeof w2 || "[object Array]" !== b2)) {
      if (!r2.returnObjects && !this.options.returnObjects) {
        this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
        var x2 = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(v2, f2, Od(Od({}, r2), {}, { ns: c2 })) : "key '".concat(d2, " (").concat(this.language, ")' returned an object instead of string.");
        return n2 ? (h2.res = x2, h2) : x2;
      }
      if (s2) {
        var _2 = "[object Array]" === b2, I2 = _2 ? [] : {}, k2 = _2 ? g2 : v2;
        for (var S2 in f2) if (Object.prototype.hasOwnProperty.call(f2, S2)) {
          var T2 = "".concat(k2).concat(s2).concat(S2);
          I2[S2] = this.translate(T2, Od(Od({}, r2), { joinArrays: false, ns: c2 })), I2[S2] === T2 && (I2[S2] = f2[S2]);
        }
        f2 = I2;
      }
    } else if (y2 && "string" == typeof w2 && "[object Array]" === b2) (f2 = f2.join(w2)) && (f2 = this.extendTranslation(f2, e9, r2, t2));
    else {
      var E2 = false, j2 = false, O2 = void 0 !== r2.count && "string" != typeof r2.count, A2 = a2.hasDefaultValue(r2), C2 = O2 ? this.pluralResolver.getSuffix(l2, r2.count, r2) : "", R2 = r2["defaultValue".concat(C2)] || r2.defaultValue;
      !this.isValidLookup(f2) && A2 && (E2 = true, f2 = R2), this.isValidLookup(f2) || (j2 = true, f2 = d2);
      var N2 = (r2.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && j2 ? void 0 : f2, P2 = A2 && R2 !== f2 && this.options.updateMissing;
      if (j2 || E2 || P2) {
        if (this.logger.log(P2 ? "updateKey" : "missingKey", l2, u2, d2, P2 ? R2 : f2), s2) {
          var M2 = this.resolve(d2, Od(Od({}, r2), {}, { keySeparator: false }));
          M2 && M2.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
        }
        var L2 = [], D2 = this.languageUtils.getFallbackCodes(this.options.fallbackLng, r2.lng || this.language);
        if ("fallback" === this.options.saveMissingTo && D2 && D2[0]) for (var z2 = 0; z2 < D2.length; z2++) L2.push(D2[z2]);
        else "all" === this.options.saveMissingTo ? L2 = this.languageUtils.toResolveHierarchy(r2.lng || this.language) : L2.push(r2.lng || this.language);
        var F2 = function(e10, a3, t3) {
          var n3 = A2 && t3 !== f2 ? t3 : N2;
          o2.options.missingKeyHandler ? o2.options.missingKeyHandler(e10, u2, a3, n3, P2, r2) : o2.backendConnector && o2.backendConnector.saveMissing && o2.backendConnector.saveMissing(e10, u2, a3, n3, P2, r2), o2.emit("missingKey", e10, u2, a3, f2);
        };
        this.options.saveMissing && (this.options.saveMissingPlurals && O2 ? L2.forEach(function(e10) {
          o2.pluralResolver.getSuffixes(e10, r2).forEach(function(a3) {
            F2([e10], d2 + a3, r2["defaultValue".concat(a3)] || R2);
          });
        }) : F2(L2, d2, R2));
      }
      f2 = this.extendTranslation(f2, e9, r2, h2, t2), j2 && f2 === d2 && this.options.appendNamespaceToMissingKey && (f2 = "".concat(u2, ":").concat(d2)), (j2 || E2) && this.options.parseMissingKeyHandler && (f2 = "v1" !== this.options.compatibilityAPI ? this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? "".concat(u2, ":").concat(d2) : d2, E2 ? f2 : void 0) : this.options.parseMissingKeyHandler(f2));
    }
    return n2 ? (h2.res = f2, h2) : f2;
  } }, { key: "extendTranslation", value: function(e9, a3, r2, t2, o2) {
    var n2 = this;
    if (this.i18nFormat && this.i18nFormat.parse) e9 = this.i18nFormat.parse(e9, Od(Od({}, this.options.interpolation.defaultVariables), r2), t2.usedLng, t2.usedNS, t2.usedKey, { resolved: t2 });
    else if (!r2.skipInterpolation) {
      r2.interpolation && this.interpolator.init(Od(Od({}, r2), { interpolation: Od(Od({}, this.options.interpolation), r2.interpolation) }));
      var s2, i2 = "string" == typeof e9 && (r2 && r2.interpolation && void 0 !== r2.interpolation.skipOnVariables ? r2.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
      if (i2) {
        var d2 = e9.match(this.interpolator.nestingRegexp);
        s2 = d2 && d2.length;
      }
      var c2 = r2.replace && "string" != typeof r2.replace ? r2.replace : r2;
      if (this.options.interpolation.defaultVariables && (c2 = Od(Od({}, this.options.interpolation.defaultVariables), c2)), e9 = this.interpolator.interpolate(e9, c2, r2.lng || this.language, r2), i2) {
        var u2 = e9.match(this.interpolator.nestingRegexp);
        s2 < (u2 && u2.length) && (r2.nest = false);
      }
      !r2.lng && "v1" !== this.options.compatibilityAPI && t2 && t2.res && (r2.lng = t2.usedLng), false !== r2.nest && (e9 = this.interpolator.nest(e9, function() {
        for (var e10 = arguments.length, t3 = new Array(e10), s3 = 0; s3 < e10; s3++) t3[s3] = arguments[s3];
        return o2 && o2[0] === t3[0] && !r2.context ? (n2.logger.warn("It seems you are nesting recursively key: ".concat(t3[0], " in key: ").concat(a3[0])), null) : n2.translate.apply(n2, t3.concat([a3]));
      }, r2)), r2.interpolation && this.interpolator.reset();
    }
    var l2 = r2.postProcess || this.options.postProcess, p2 = "string" == typeof l2 ? [l2] : l2;
    return null != e9 && p2 && p2.length && false !== r2.applyPostProcessor && (e9 = Ed.handle(p2, e9, a3, this.options && this.options.postProcessPassResolved ? Od({ i18nResolved: t2 }, r2) : r2, this)), e9;
  } }, { key: "resolve", value: function(e9) {
    var a3, r2, t2, o2, n2, s2 = this, i2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    return "string" == typeof e9 && (e9 = [e9]), e9.forEach(function(e10) {
      if (!s2.isValidLookup(a3)) {
        var d2 = s2.extractFromKey(e10, i2), c2 = d2.key;
        r2 = c2;
        var u2 = d2.namespaces;
        s2.options.fallbackNS && (u2 = u2.concat(s2.options.fallbackNS));
        var l2 = void 0 !== i2.count && "string" != typeof i2.count, p2 = l2 && !i2.ordinal && 0 === i2.count && s2.pluralResolver.shouldUseIntlApi(), m2 = void 0 !== i2.context && ("string" == typeof i2.context || "number" == typeof i2.context) && "" !== i2.context, h2 = i2.lngs ? i2.lngs : s2.languageUtils.toResolveHierarchy(i2.lng || s2.language, i2.fallbackLng);
        u2.forEach(function(e11) {
          s2.isValidLookup(a3) || (n2 = e11, !Cd["".concat(h2[0], "-").concat(e11)] && s2.utils && s2.utils.hasLoadedNamespace && !s2.utils.hasLoadedNamespace(n2) && (Cd["".concat(h2[0], "-").concat(e11)] = true, s2.logger.warn('key "'.concat(r2, '" for languages "').concat(h2.join(", "), `" won't get resolved as namespace "`).concat(n2, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")), h2.forEach(function(r3) {
            if (!s2.isValidLookup(a3)) {
              o2 = r3;
              var n3, d3 = [c2];
              if (s2.i18nFormat && s2.i18nFormat.addLookupKeys) s2.i18nFormat.addLookupKeys(d3, c2, r3, e11, i2);
              else {
                var u3;
                l2 && (u3 = s2.pluralResolver.getSuffix(r3, i2.count, i2));
                var h3 = "".concat(s2.options.pluralSeparator, "zero");
                if (l2 && (d3.push(c2 + u3), p2 && d3.push(c2 + h3)), m2) {
                  var f2 = "".concat(c2).concat(s2.options.contextSeparator).concat(i2.context);
                  d3.push(f2), l2 && (d3.push(f2 + u3), p2 && d3.push(f2 + h3));
                }
              }
              for (; n3 = d3.pop(); ) s2.isValidLookup(a3) || (t2 = n3, a3 = s2.getResource(r3, e11, n3, i2));
            }
          }));
        });
      }
    }), { res: a3, usedKey: r2, exactUsedKey: t2, usedLng: o2, usedNS: n2 };
  } }, { key: "isValidLookup", value: function(e9) {
    return !(void 0 === e9 || !this.options.returnNull && null === e9 || !this.options.returnEmptyString && "" === e9);
  } }, { key: "getResource", value: function(e9, a3, r2) {
    var t2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
    return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(e9, a3, r2, t2) : this.resourceStore.getResource(e9, a3, r2, t2);
  } }], [{ key: "hasDefaultValue", value: function(e9) {
    var a3 = "defaultValue";
    for (var r2 in e9) if (Object.prototype.hasOwnProperty.call(e9, r2) && a3 === r2.substring(0, 12) && void 0 !== e9[r2]) return true;
    return false;
  } }]), a2;
}();
function Nd(e8) {
  return e8.charAt(0).toUpperCase() + e8.slice(1);
}
var Pd = function() {
  function e8(a2) {
    Vi(this, e8), this.options = a2, this.supportedLngs = this.options.supportedLngs || false, this.logger = cd.create("languageUtils");
  }
  return Ji(e8, [{ key: "getScriptPartFromCode", value: function(e9) {
    if (!e9 || e9.indexOf("-") < 0) return null;
    var a2 = e9.split("-");
    return 2 === a2.length ? null : (a2.pop(), "x" === a2[a2.length - 1].toLowerCase() ? null : this.formatLanguageCode(a2.join("-")));
  } }, { key: "getLanguagePartFromCode", value: function(e9) {
    if (!e9 || e9.indexOf("-") < 0) return e9;
    var a2 = e9.split("-");
    return this.formatLanguageCode(a2[0]);
  } }, { key: "formatLanguageCode", value: function(e9) {
    if ("string" == typeof e9 && e9.indexOf("-") > -1) {
      var a2 = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"], r2 = e9.split("-");
      return this.options.lowerCaseLng ? r2 = r2.map(function(e10) {
        return e10.toLowerCase();
      }) : 2 === r2.length ? (r2[0] = r2[0].toLowerCase(), r2[1] = r2[1].toUpperCase(), a2.indexOf(r2[1].toLowerCase()) > -1 && (r2[1] = Nd(r2[1].toLowerCase()))) : 3 === r2.length && (r2[0] = r2[0].toLowerCase(), 2 === r2[1].length && (r2[1] = r2[1].toUpperCase()), "sgn" !== r2[0] && 2 === r2[2].length && (r2[2] = r2[2].toUpperCase()), a2.indexOf(r2[1].toLowerCase()) > -1 && (r2[1] = Nd(r2[1].toLowerCase())), a2.indexOf(r2[2].toLowerCase()) > -1 && (r2[2] = Nd(r2[2].toLowerCase()))), r2.join("-");
    }
    return this.options.cleanCode || this.options.lowerCaseLng ? e9.toLowerCase() : e9;
  } }, { key: "isSupportedCode", value: function(e9) {
    return ("languageOnly" === this.options.load || this.options.nonExplicitSupportedLngs) && (e9 = this.getLanguagePartFromCode(e9)), !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(e9) > -1;
  } }, { key: "getBestMatchFromCodes", value: function(e9) {
    var a2, r2 = this;
    return e9 ? (e9.forEach(function(e10) {
      if (!a2) {
        var t2 = r2.formatLanguageCode(e10);
        r2.options.supportedLngs && !r2.isSupportedCode(t2) || (a2 = t2);
      }
    }), !a2 && this.options.supportedLngs && e9.forEach(function(e10) {
      if (!a2) {
        var t2 = r2.getLanguagePartFromCode(e10);
        if (r2.isSupportedCode(t2)) return a2 = t2;
        a2 = r2.options.supportedLngs.find(function(e11) {
          return e11 === t2 ? e11 : e11.indexOf("-") < 0 && t2.indexOf("-") < 0 ? void 0 : 0 === e11.indexOf(t2) ? e11 : void 0;
        });
      }
    }), a2 || (a2 = this.getFallbackCodes(this.options.fallbackLng)[0]), a2) : null;
  } }, { key: "getFallbackCodes", value: function(e9, a2) {
    if (!e9) return [];
    if ("function" == typeof e9 && (e9 = e9(a2)), "string" == typeof e9 && (e9 = [e9]), "[object Array]" === Object.prototype.toString.apply(e9)) return e9;
    if (!a2) return e9.default || [];
    var r2 = e9[a2];
    return r2 || (r2 = e9[this.getScriptPartFromCode(a2)]), r2 || (r2 = e9[this.formatLanguageCode(a2)]), r2 || (r2 = e9[this.getLanguagePartFromCode(a2)]), r2 || (r2 = e9.default), r2 || [];
  } }, { key: "toResolveHierarchy", value: function(e9, a2) {
    var r2 = this, t2 = this.getFallbackCodes(a2 || this.options.fallbackLng || [], e9), o2 = [], n2 = function(e10) {
      e10 && (r2.isSupportedCode(e10) ? o2.push(e10) : r2.logger.warn("rejecting language code not found in supportedLngs: ".concat(e10)));
    };
    return "string" == typeof e9 && e9.indexOf("-") > -1 ? ("languageOnly" !== this.options.load && n2(this.formatLanguageCode(e9)), "languageOnly" !== this.options.load && "currentOnly" !== this.options.load && n2(this.getScriptPartFromCode(e9)), "currentOnly" !== this.options.load && n2(this.getLanguagePartFromCode(e9))) : "string" == typeof e9 && n2(this.formatLanguageCode(e9)), t2.forEach(function(e10) {
      o2.indexOf(e10) < 0 && n2(r2.formatLanguageCode(e10));
    }), o2;
  } }]), e8;
}();
var Md = [{ lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"], nr: [1, 2], fc: 1 }, { lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"], nr: [1, 2], fc: 2 }, { lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"], nr: [1], fc: 3 }, { lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"], nr: [1, 2, 5], fc: 4 }, { lngs: ["ar"], nr: [0, 1, 2, 3, 11, 100], fc: 5 }, { lngs: ["cs", "sk"], nr: [1, 2, 5], fc: 6 }, { lngs: ["csb", "pl"], nr: [1, 2, 5], fc: 7 }, { lngs: ["cy"], nr: [1, 2, 3, 8], fc: 8 }, { lngs: ["fr"], nr: [1, 2], fc: 9 }, { lngs: ["ga"], nr: [1, 2, 3, 7, 11], fc: 10 }, { lngs: ["gd"], nr: [1, 2, 3, 20], fc: 11 }, { lngs: ["is"], nr: [1, 2], fc: 12 }, { lngs: ["jv"], nr: [0, 1], fc: 13 }, { lngs: ["kw"], nr: [1, 2, 3, 4], fc: 14 }, { lngs: ["lt"], nr: [1, 2, 10], fc: 15 }, { lngs: ["lv"], nr: [1, 2, 0], fc: 16 }, { lngs: ["mk"], nr: [1, 2], fc: 17 }, { lngs: ["mnk"], nr: [0, 1, 2], fc: 18 }, { lngs: ["mt"], nr: [1, 2, 11, 20], fc: 19 }, { lngs: ["or"], nr: [2, 1], fc: 2 }, { lngs: ["ro"], nr: [1, 2, 20], fc: 20 }, { lngs: ["sl"], nr: [5, 1, 2, 3], fc: 21 }, { lngs: ["he", "iw"], nr: [1, 2, 20, 21], fc: 22 }];
var Ld = { 1: function(e8) {
  return Number(e8 > 1);
}, 2: function(e8) {
  return Number(1 != e8);
}, 3: function(e8) {
  return 0;
}, 4: function(e8) {
  return Number(e8 % 10 == 1 && e8 % 100 != 11 ? 0 : e8 % 10 >= 2 && e8 % 10 <= 4 && (e8 % 100 < 10 || e8 % 100 >= 20) ? 1 : 2);
}, 5: function(e8) {
  return Number(0 == e8 ? 0 : 1 == e8 ? 1 : 2 == e8 ? 2 : e8 % 100 >= 3 && e8 % 100 <= 10 ? 3 : e8 % 100 >= 11 ? 4 : 5);
}, 6: function(e8) {
  return Number(1 == e8 ? 0 : e8 >= 2 && e8 <= 4 ? 1 : 2);
}, 7: function(e8) {
  return Number(1 == e8 ? 0 : e8 % 10 >= 2 && e8 % 10 <= 4 && (e8 % 100 < 10 || e8 % 100 >= 20) ? 1 : 2);
}, 8: function(e8) {
  return Number(1 == e8 ? 0 : 2 == e8 ? 1 : 8 != e8 && 11 != e8 ? 2 : 3);
}, 9: function(e8) {
  return Number(e8 >= 2);
}, 10: function(e8) {
  return Number(1 == e8 ? 0 : 2 == e8 ? 1 : e8 < 7 ? 2 : e8 < 11 ? 3 : 4);
}, 11: function(e8) {
  return Number(1 == e8 || 11 == e8 ? 0 : 2 == e8 || 12 == e8 ? 1 : e8 > 2 && e8 < 20 ? 2 : 3);
}, 12: function(e8) {
  return Number(e8 % 10 != 1 || e8 % 100 == 11);
}, 13: function(e8) {
  return Number(0 !== e8);
}, 14: function(e8) {
  return Number(1 == e8 ? 0 : 2 == e8 ? 1 : 3 == e8 ? 2 : 3);
}, 15: function(e8) {
  return Number(e8 % 10 == 1 && e8 % 100 != 11 ? 0 : e8 % 10 >= 2 && (e8 % 100 < 10 || e8 % 100 >= 20) ? 1 : 2);
}, 16: function(e8) {
  return Number(e8 % 10 == 1 && e8 % 100 != 11 ? 0 : 0 !== e8 ? 1 : 2);
}, 17: function(e8) {
  return Number(1 == e8 || e8 % 10 == 1 && e8 % 100 != 11 ? 0 : 1);
}, 18: function(e8) {
  return Number(0 == e8 ? 0 : 1 == e8 ? 1 : 2);
}, 19: function(e8) {
  return Number(1 == e8 ? 0 : 0 == e8 || e8 % 100 > 1 && e8 % 100 < 11 ? 1 : e8 % 100 > 10 && e8 % 100 < 20 ? 2 : 3);
}, 20: function(e8) {
  return Number(1 == e8 ? 0 : 0 == e8 || e8 % 100 > 0 && e8 % 100 < 20 ? 1 : 2);
}, 21: function(e8) {
  return Number(e8 % 100 == 1 ? 1 : e8 % 100 == 2 ? 2 : e8 % 100 == 3 || e8 % 100 == 4 ? 3 : 0);
}, 22: function(e8) {
  return Number(1 == e8 ? 0 : 2 == e8 ? 1 : (e8 < 0 || e8 > 10) && e8 % 10 == 0 ? 2 : 3);
} };
var Dd = ["v1", "v2", "v3"];
var zd = { zero: 0, one: 1, two: 2, few: 3, many: 4, other: 5 };
var Fd = function() {
  function e8(a2) {
    var r2, t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    Vi(this, e8), this.languageUtils = a2, this.options = t2, this.logger = cd.create("pluralResolver"), this.options.compatibilityJSON && "v4" !== this.options.compatibilityJSON || "undefined" != typeof Intl && Intl.PluralRules || (this.options.compatibilityJSON = "v3", this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")), this.rules = (r2 = {}, Md.forEach(function(e9) {
      e9.lngs.forEach(function(a3) {
        r2[a3] = { numbers: e9.nr, plurals: Ld[e9.fc] };
      });
    }), r2);
  }
  return Ji(e8, [{ key: "addRule", value: function(e9, a2) {
    this.rules[e9] = a2;
  } }, { key: "getRule", value: function(e9) {
    var a2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (this.shouldUseIntlApi()) try {
      return new Intl.PluralRules(e9, { type: a2.ordinal ? "ordinal" : "cardinal" });
    } catch (e10) {
      return;
    }
    return this.rules[e9] || this.rules[this.languageUtils.getLanguagePartFromCode(e9)];
  } }, { key: "needsPlural", value: function(e9) {
    var a2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r2 = this.getRule(e9, a2);
    return this.shouldUseIntlApi() ? r2 && r2.resolvedOptions().pluralCategories.length > 1 : r2 && r2.numbers.length > 1;
  } }, { key: "getPluralFormsOfKey", value: function(e9, a2) {
    var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
    return this.getSuffixes(e9, r2).map(function(e10) {
      return "".concat(a2).concat(e10);
    });
  } }, { key: "getSuffixes", value: function(e9) {
    var a2 = this, r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, t2 = this.getRule(e9, r2);
    return t2 ? this.shouldUseIntlApi() ? t2.resolvedOptions().pluralCategories.sort(function(e10, a3) {
      return zd[e10] - zd[a3];
    }).map(function(e10) {
      return "".concat(a2.options.prepend).concat(e10);
    }) : t2.numbers.map(function(t3) {
      return a2.getSuffix(e9, t3, r2);
    }) : [];
  } }, { key: "getSuffix", value: function(e9, a2) {
    var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, t2 = this.getRule(e9, r2);
    return t2 ? this.shouldUseIntlApi() ? "".concat(this.options.prepend).concat(t2.select(a2)) : this.getSuffixRetroCompatible(t2, a2) : (this.logger.warn("no plural rule found for: ".concat(e9)), "");
  } }, { key: "getSuffixRetroCompatible", value: function(e9, a2) {
    var r2 = this, t2 = e9.noAbs ? e9.plurals(a2) : e9.plurals(Math.abs(a2)), o2 = e9.numbers[t2];
    this.options.simplifyPluralSuffix && 2 === e9.numbers.length && 1 === e9.numbers[0] && (2 === o2 ? o2 = "plural" : 1 === o2 && (o2 = ""));
    var n2 = function() {
      return r2.options.prepend && o2.toString() ? r2.options.prepend + o2.toString() : o2.toString();
    };
    return "v1" === this.options.compatibilityJSON ? 1 === o2 ? "" : "number" == typeof o2 ? "_plural_".concat(o2.toString()) : n2() : "v2" === this.options.compatibilityJSON || this.options.simplifyPluralSuffix && 2 === e9.numbers.length && 1 === e9.numbers[0] ? n2() : this.options.prepend && t2.toString() ? this.options.prepend + t2.toString() : t2.toString();
  } }, { key: "shouldUseIntlApi", value: function() {
    return !Dd.includes(this.options.compatibilityJSON);
  } }]), e8;
}();
function Bd(e8, a2) {
  var r2 = Object.keys(e8);
  if (Object.getOwnPropertySymbols) {
    var t2 = Object.getOwnPropertySymbols(e8);
    a2 && (t2 = t2.filter(function(a3) {
      return Object.getOwnPropertyDescriptor(e8, a3).enumerable;
    })), r2.push.apply(r2, t2);
  }
  return r2;
}
function qd(e8) {
  for (var a2 = 1; a2 < arguments.length; a2++) {
    var r2 = null != arguments[a2] ? arguments[a2] : {};
    a2 % 2 ? Bd(Object(r2), true).forEach(function(a3) {
      rd(e8, a3, r2[a3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e8, Object.getOwnPropertyDescriptors(r2)) : Bd(Object(r2)).forEach(function(a3) {
      Object.defineProperty(e8, a3, Object.getOwnPropertyDescriptor(r2, a3));
    });
  }
  return e8;
}
function $d(e8, a2, r2) {
  var t2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ".", o2 = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], n2 = function(e9, a3, r3) {
    var t3 = fd(e9, r3);
    return void 0 !== t3 ? t3 : fd(a3, r3);
  }(e8, a2, r2);
  return !n2 && o2 && "string" == typeof r2 && void 0 === (n2 = _d(e8, r2, t2)) && (n2 = _d(a2, r2, t2)), n2;
}
var Ud = function() {
  function e8() {
    var a2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    Vi(this, e8), this.logger = cd.create("interpolator"), this.options = a2, this.format = a2.interpolation && a2.interpolation.format || function(e9) {
      return e9;
    }, this.init(a2);
  }
  return Ji(e8, [{ key: "init", value: function() {
    var e9 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    e9.interpolation || (e9.interpolation = { escapeValue: true });
    var a2 = e9.interpolation;
    this.escape = void 0 !== a2.escape ? a2.escape : wd, this.escapeValue = void 0 === a2.escapeValue || a2.escapeValue, this.useRawValueToEscape = void 0 !== a2.useRawValueToEscape && a2.useRawValueToEscape, this.prefix = a2.prefix ? gd(a2.prefix) : a2.prefixEscaped || "{{", this.suffix = a2.suffix ? gd(a2.suffix) : a2.suffixEscaped || "}}", this.formatSeparator = a2.formatSeparator ? a2.formatSeparator : a2.formatSeparator || ",", this.unescapePrefix = a2.unescapeSuffix ? "" : a2.unescapePrefix || "-", this.unescapeSuffix = this.unescapePrefix ? "" : a2.unescapeSuffix || "", this.nestingPrefix = a2.nestingPrefix ? gd(a2.nestingPrefix) : a2.nestingPrefixEscaped || gd("$t("), this.nestingSuffix = a2.nestingSuffix ? gd(a2.nestingSuffix) : a2.nestingSuffixEscaped || gd(")"), this.nestingOptionsSeparator = a2.nestingOptionsSeparator ? a2.nestingOptionsSeparator : a2.nestingOptionsSeparator || ",", this.maxReplaces = a2.maxReplaces ? a2.maxReplaces : 1e3, this.alwaysFormat = void 0 !== a2.alwaysFormat && a2.alwaysFormat, this.resetRegExp();
  } }, { key: "reset", value: function() {
    this.options && this.init(this.options);
  } }, { key: "resetRegExp", value: function() {
    var e9 = "".concat(this.prefix, "(.+?)").concat(this.suffix);
    this.regexp = new RegExp(e9, "g");
    var a2 = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
    this.regexpUnescape = new RegExp(a2, "g");
    var r2 = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
    this.nestingRegexp = new RegExp(r2, "g");
  } }, { key: "interpolate", value: function(e9, a2, r2, t2) {
    var o2, n2, s2, i2 = this, d2 = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
    function c2(e10) {
      return e10.replace(/\$/g, "$$$$");
    }
    var u2 = function(e10) {
      if (e10.indexOf(i2.formatSeparator) < 0) {
        var o3 = $d(a2, d2, e10, i2.options.keySeparator, i2.options.ignoreJSONStructure);
        return i2.alwaysFormat ? i2.format(o3, void 0, r2, qd(qd(qd({}, t2), a2), {}, { interpolationkey: e10 })) : o3;
      }
      var n3 = e10.split(i2.formatSeparator), s3 = n3.shift().trim(), c3 = n3.join(i2.formatSeparator).trim();
      return i2.format($d(a2, d2, s3, i2.options.keySeparator, i2.options.ignoreJSONStructure), c3, r2, qd(qd(qd({}, t2), a2), {}, { interpolationkey: s3 }));
    };
    this.resetRegExp();
    var l2 = t2 && t2.missingInterpolationHandler || this.options.missingInterpolationHandler, p2 = t2 && t2.interpolation && void 0 !== t2.interpolation.skipOnVariables ? t2.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
    return [{ regex: this.regexpUnescape, safeValue: function(e10) {
      return c2(e10);
    } }, { regex: this.regexp, safeValue: function(e10) {
      return i2.escapeValue ? c2(i2.escape(e10)) : c2(e10);
    } }].forEach(function(a3) {
      for (s2 = 0; o2 = a3.regex.exec(e9); ) {
        var r3 = o2[1].trim();
        if (void 0 === (n2 = u2(r3))) if ("function" == typeof l2) {
          var d3 = l2(e9, o2, t2);
          n2 = "string" == typeof d3 ? d3 : "";
        } else if (t2 && Object.prototype.hasOwnProperty.call(t2, r3)) n2 = "";
        else {
          if (p2) {
            n2 = o2[0];
            continue;
          }
          i2.logger.warn("missed to pass in variable ".concat(r3, " for interpolating ").concat(e9)), n2 = "";
        }
        else "string" == typeof n2 || i2.useRawValueToEscape || (n2 = pd(n2));
        var c3 = a3.safeValue(n2);
        if (e9 = e9.replace(o2[0], c3), p2 ? (a3.regex.lastIndex += n2.length, a3.regex.lastIndex -= o2[0].length) : a3.regex.lastIndex = 0, ++s2 >= i2.maxReplaces) break;
      }
    }), e9;
  } }, { key: "nest", value: function(e9, a2) {
    var r2, t2, o2, n2 = this, s2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
    function i2(e10, a3) {
      var r3 = this.nestingOptionsSeparator;
      if (e10.indexOf(r3) < 0) return e10;
      var t3 = e10.split(new RegExp("".concat(r3, "[ ]*{"))), n3 = "{".concat(t3[1]);
      e10 = t3[0];
      var s3 = (n3 = this.interpolate(n3, o2)).match(/'/g), i3 = n3.match(/"/g);
      (s3 && s3.length % 2 == 0 && !i3 || i3.length % 2 != 0) && (n3 = n3.replace(/'/g, '"'));
      try {
        o2 = JSON.parse(n3), a3 && (o2 = qd(qd({}, a3), o2));
      } catch (a4) {
        return this.logger.warn("failed parsing options string in nesting for key ".concat(e10), a4), "".concat(e10).concat(r3).concat(n3);
      }
      return delete o2.defaultValue, e10;
    }
    for (; r2 = this.nestingRegexp.exec(e9); ) {
      var d2 = [];
      (o2 = (o2 = qd({}, s2)).replace && "string" != typeof o2.replace ? o2.replace : o2).applyPostProcessor = false, delete o2.defaultValue;
      var c2 = false;
      if (-1 !== r2[0].indexOf(this.formatSeparator) && !/{.*}/.test(r2[1])) {
        var u2 = r2[1].split(this.formatSeparator).map(function(e10) {
          return e10.trim();
        });
        r2[1] = u2.shift(), d2 = u2, c2 = true;
      }
      if ((t2 = a2(i2.call(this, r2[1].trim(), o2), o2)) && r2[0] === e9 && "string" != typeof t2) return t2;
      "string" != typeof t2 && (t2 = pd(t2)), t2 || (this.logger.warn("missed to resolve ".concat(r2[1], " for nesting ").concat(e9)), t2 = ""), c2 && (t2 = d2.reduce(function(e10, a3) {
        return n2.format(e10, a3, s2.lng, qd(qd({}, s2), {}, { interpolationkey: r2[1].trim() }));
      }, t2.trim())), e9 = e9.replace(r2[0], t2), this.regexp.lastIndex = 0;
    }
    return e9;
  } }]), e8;
}();
function Hd(e8, a2) {
  var r2 = Object.keys(e8);
  if (Object.getOwnPropertySymbols) {
    var t2 = Object.getOwnPropertySymbols(e8);
    a2 && (t2 = t2.filter(function(a3) {
      return Object.getOwnPropertyDescriptor(e8, a3).enumerable;
    })), r2.push.apply(r2, t2);
  }
  return r2;
}
function Wd(e8) {
  for (var a2 = 1; a2 < arguments.length; a2++) {
    var r2 = null != arguments[a2] ? arguments[a2] : {};
    a2 % 2 ? Hd(Object(r2), true).forEach(function(a3) {
      rd(e8, a3, r2[a3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e8, Object.getOwnPropertyDescriptors(r2)) : Hd(Object(r2)).forEach(function(a3) {
      Object.defineProperty(e8, a3, Object.getOwnPropertyDescriptor(r2, a3));
    });
  }
  return e8;
}
function Kd(e8) {
  var a2 = {};
  return function(r2, t2, o2) {
    var n2 = t2 + JSON.stringify(o2), s2 = a2[n2];
    return s2 || (s2 = e8(t2, o2), a2[n2] = s2), s2(r2);
  };
}
var Vd = function() {
  function e8() {
    var a2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    Vi(this, e8), this.logger = cd.create("formatter"), this.options = a2, this.formats = { number: Kd(function(e9, a3) {
      var r2 = new Intl.NumberFormat(e9, Wd({}, a3));
      return function(e10) {
        return r2.format(e10);
      };
    }), currency: Kd(function(e9, a3) {
      var r2 = new Intl.NumberFormat(e9, Wd(Wd({}, a3), {}, { style: "currency" }));
      return function(e10) {
        return r2.format(e10);
      };
    }), datetime: Kd(function(e9, a3) {
      var r2 = new Intl.DateTimeFormat(e9, Wd({}, a3));
      return function(e10) {
        return r2.format(e10);
      };
    }), relativetime: Kd(function(e9, a3) {
      var r2 = new Intl.RelativeTimeFormat(e9, Wd({}, a3));
      return function(e10) {
        return r2.format(e10, a3.range || "day");
      };
    }), list: Kd(function(e9, a3) {
      var r2 = new Intl.ListFormat(e9, Wd({}, a3));
      return function(e10) {
        return r2.format(e10);
      };
    }) }, this.init(a2);
  }
  return Ji(e8, [{ key: "init", value: function(e9) {
    var a2 = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { interpolation: {} }).interpolation;
    this.formatSeparator = a2.formatSeparator ? a2.formatSeparator : a2.formatSeparator || ",";
  } }, { key: "add", value: function(e9, a2) {
    this.formats[e9.toLowerCase().trim()] = a2;
  } }, { key: "addCached", value: function(e9, a2) {
    this.formats[e9.toLowerCase().trim()] = Kd(a2);
  } }, { key: "format", value: function(e9, a2, r2) {
    var t2 = this, o2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, n2 = a2.split(this.formatSeparator).reduce(function(e10, a3) {
      var n3 = function(e11) {
        var a4 = e11.toLowerCase().trim(), r3 = {};
        if (e11.indexOf("(") > -1) {
          var t3 = e11.split("(");
          a4 = t3[0].toLowerCase().trim();
          var o3 = t3[1].substring(0, t3[1].length - 1);
          "currency" === a4 && o3.indexOf(":") < 0 ? r3.currency || (r3.currency = o3.trim()) : "relativetime" === a4 && o3.indexOf(":") < 0 ? r3.range || (r3.range = o3.trim()) : o3.split(";").forEach(function(e12) {
            if (e12) {
              var a5 = od(e12.split(":")), t4 = a5[0], o4 = a5.slice(1).join(":").trim().replace(/^'+|'+$/g, "");
              r3[t4.trim()] || (r3[t4.trim()] = o4), "false" === o4 && (r3[t4.trim()] = false), "true" === o4 && (r3[t4.trim()] = true), isNaN(o4) || (r3[t4.trim()] = parseInt(o4, 10));
            }
          });
        }
        return { formatName: a4, formatOptions: r3 };
      }(a3), s2 = n3.formatName, i2 = n3.formatOptions;
      if (t2.formats[s2]) {
        var d2 = e10;
        try {
          var c2 = o2 && o2.formatParams && o2.formatParams[o2.interpolationkey] || {}, u2 = c2.locale || c2.lng || o2.locale || o2.lng || r2;
          d2 = t2.formats[s2](e10, u2, Wd(Wd(Wd({}, i2), o2), c2));
        } catch (e11) {
          t2.logger.warn(e11);
        }
        return d2;
      }
      return t2.logger.warn("there was no format function for ".concat(s2)), e10;
    }, e9);
    return n2;
  } }]), e8;
}();
function Gd(e8, a2) {
  var r2 = Object.keys(e8);
  if (Object.getOwnPropertySymbols) {
    var t2 = Object.getOwnPropertySymbols(e8);
    a2 && (t2 = t2.filter(function(a3) {
      return Object.getOwnPropertyDescriptor(e8, a3).enumerable;
    })), r2.push.apply(r2, t2);
  }
  return r2;
}
function Yd(e8) {
  for (var a2 = 1; a2 < arguments.length; a2++) {
    var r2 = null != arguments[a2] ? arguments[a2] : {};
    a2 % 2 ? Gd(Object(r2), true).forEach(function(a3) {
      rd(e8, a3, r2[a3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e8, Object.getOwnPropertyDescriptors(r2)) : Gd(Object(r2)).forEach(function(a3) {
      Object.defineProperty(e8, a3, Object.getOwnPropertyDescriptor(r2, a3));
    });
  }
  return e8;
}
function Jd(e8) {
  var a2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e9) {
      return false;
    }
  }();
  return function() {
    var r2, t2 = ad(e8);
    if (a2) {
      var o2 = ad(this).constructor;
      r2 = Reflect.construct(t2, arguments, o2);
    } else r2 = t2.apply(this, arguments);
    return ed(this, r2);
  };
}
var Xd = function() {
  Zi(a2, ud);
  var e8 = Jd(a2);
  function a2(r2, t2, o2) {
    var n2, s2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
    return Vi(this, a2), n2 = e8.call(this), yd && ud.call(Xi(n2)), n2.backend = r2, n2.store = t2, n2.services = o2, n2.languageUtils = o2.languageUtils, n2.options = s2, n2.logger = cd.create("backendConnector"), n2.waitingReads = [], n2.maxParallelReads = s2.maxParallelReads || 10, n2.readingCalls = 0, n2.maxRetries = s2.maxRetries >= 0 ? s2.maxRetries : 5, n2.retryTimeout = s2.retryTimeout >= 1 ? s2.retryTimeout : 350, n2.state = {}, n2.queue = [], n2.backend && n2.backend.init && n2.backend.init(o2, s2.backend, s2), n2;
  }
  return Ji(a2, [{ key: "queueLoad", value: function(e9, a3, r2, t2) {
    var o2 = this, n2 = {}, s2 = {}, i2 = {}, d2 = {};
    return e9.forEach(function(e10) {
      var t3 = true;
      a3.forEach(function(a4) {
        var i3 = "".concat(e10, "|").concat(a4);
        !r2.reload && o2.store.hasResourceBundle(e10, a4) ? o2.state[i3] = 2 : o2.state[i3] < 0 || (1 === o2.state[i3] ? void 0 === s2[i3] && (s2[i3] = true) : (o2.state[i3] = 1, t3 = false, void 0 === s2[i3] && (s2[i3] = true), void 0 === n2[i3] && (n2[i3] = true), void 0 === d2[a4] && (d2[a4] = true)));
      }), t3 || (i2[e10] = true);
    }), (Object.keys(n2).length || Object.keys(s2).length) && this.queue.push({ pending: s2, pendingCount: Object.keys(s2).length, loaded: {}, errors: [], callback: t2 }), { toLoad: Object.keys(n2), pending: Object.keys(s2), toLoadLanguages: Object.keys(i2), toLoadNamespaces: Object.keys(d2) };
  } }, { key: "loaded", value: function(e9, a3, r2) {
    var t2 = e9.split("|"), o2 = t2[0], n2 = t2[1];
    a3 && this.emit("failedLoading", o2, n2, a3), r2 && this.store.addResourceBundle(o2, n2, r2), this.state[e9] = a3 ? -1 : 2;
    var s2 = {};
    this.queue.forEach(function(r3) {
      !function(e10, a4, r4, t3) {
        var o3 = md(e10, a4, Object), n3 = o3.obj, s3 = o3.k;
        n3[s3] = n3[s3] || [], t3 && (n3[s3] = n3[s3].concat(r4)), t3 || n3[s3].push(r4);
      }(r3.loaded, [o2], n2), function(e10, a4) {
        void 0 !== e10.pending[a4] && (delete e10.pending[a4], e10.pendingCount--);
      }(r3, e9), a3 && r3.errors.push(a3), 0 !== r3.pendingCount || r3.done || (Object.keys(r3.loaded).forEach(function(e10) {
        s2[e10] || (s2[e10] = {});
        var a4 = r3.loaded[e10];
        a4.length && a4.forEach(function(a5) {
          void 0 === s2[e10][a5] && (s2[e10][a5] = true);
        });
      }), r3.done = true, r3.errors.length ? r3.callback(r3.errors) : r3.callback());
    }), this.emit("loaded", s2), this.queue = this.queue.filter(function(e10) {
      return !e10.done;
    });
  } }, { key: "read", value: function(e9, a3, r2) {
    var t2 = this, o2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, n2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.retryTimeout, s2 = arguments.length > 5 ? arguments[5] : void 0;
    if (!e9.length) return s2(null, {});
    if (this.readingCalls >= this.maxParallelReads) this.waitingReads.push({ lng: e9, ns: a3, fcName: r2, tried: o2, wait: n2, callback: s2 });
    else {
      this.readingCalls++;
      var i2 = function(i3, d3) {
        if (t2.readingCalls--, t2.waitingReads.length > 0) {
          var c3 = t2.waitingReads.shift();
          t2.read(c3.lng, c3.ns, c3.fcName, c3.tried, c3.wait, c3.callback);
        }
        i3 && d3 && o2 < t2.maxRetries ? setTimeout(function() {
          t2.read.call(t2, e9, a3, r2, o2 + 1, 2 * n2, s2);
        }, n2) : s2(i3, d3);
      }, d2 = this.backend[r2].bind(this.backend);
      if (2 !== d2.length) return d2(e9, a3, i2);
      try {
        var c2 = d2(e9, a3);
        c2 && "function" == typeof c2.then ? c2.then(function(e10) {
          return i2(null, e10);
        }).catch(i2) : i2(null, c2);
      } catch (e10) {
        i2(e10);
      }
    }
  } }, { key: "prepareLoading", value: function(e9, a3) {
    var r2 = this, t2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, o2 = arguments.length > 3 ? arguments[3] : void 0;
    if (!this.backend) return this.logger.warn("No backend was added via i18next.use. Will not load resources."), o2 && o2();
    "string" == typeof e9 && (e9 = this.languageUtils.toResolveHierarchy(e9)), "string" == typeof a3 && (a3 = [a3]);
    var n2 = this.queueLoad(e9, a3, t2, o2);
    if (!n2.toLoad.length) return n2.pending.length || o2(), null;
    n2.toLoad.forEach(function(e10) {
      r2.loadOne(e10);
    });
  } }, { key: "load", value: function(e9, a3, r2) {
    this.prepareLoading(e9, a3, {}, r2);
  } }, { key: "reload", value: function(e9, a3, r2) {
    this.prepareLoading(e9, a3, { reload: true }, r2);
  } }, { key: "loadOne", value: function(e9) {
    var a3 = this, r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "", t2 = e9.split("|"), o2 = t2[0], n2 = t2[1];
    this.read(o2, n2, "read", void 0, void 0, function(t3, s2) {
      t3 && a3.logger.warn("".concat(r2, "loading namespace ").concat(n2, " for language ").concat(o2, " failed"), t3), !t3 && s2 && a3.logger.log("".concat(r2, "loaded namespace ").concat(n2, " for language ").concat(o2), s2), a3.loaded(e9, t3, s2);
    });
  } }, { key: "saveMissing", value: function(e9, a3, r2, t2, o2) {
    var n2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {}, s2 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : function() {
    };
    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(a3)) this.logger.warn('did not save key "'.concat(r2, '" as the namespace "').concat(a3, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
    else if (null != r2 && "" !== r2) {
      if (this.backend && this.backend.create) {
        var i2 = Yd(Yd({}, n2), {}, { isUpdate: o2 }), d2 = this.backend.create.bind(this.backend);
        if (d2.length < 6) try {
          var c2;
          (c2 = 5 === d2.length ? d2(e9, a3, r2, t2, i2) : d2(e9, a3, r2, t2)) && "function" == typeof c2.then ? c2.then(function(e10) {
            return s2(null, e10);
          }).catch(s2) : s2(null, c2);
        } catch (e10) {
          s2(e10);
        }
        else d2(e9, a3, r2, t2, s2, i2);
      }
      e9 && e9[0] && this.store.addResource(e9[0], a3, r2, t2);
    }
  } }]), a2;
}();
function Qd() {
  return { debug: false, initImmediate: true, ns: ["translation"], defaultNS: ["translation"], fallbackLng: ["dev"], fallbackNS: false, supportedLngs: false, nonExplicitSupportedLngs: false, load: "all", preload: false, simplifyPluralSuffix: true, keySeparator: ".", nsSeparator: ":", pluralSeparator: "_", contextSeparator: "_", partialBundledLanguages: false, saveMissing: false, updateMissing: false, saveMissingTo: "fallback", saveMissingPlurals: true, missingKeyHandler: false, missingInterpolationHandler: false, postProcess: false, postProcessPassResolved: false, returnNull: true, returnEmptyString: true, returnObjects: false, joinArrays: false, returnedObjectHandler: false, parseMissingKeyHandler: false, appendNamespaceToMissingKey: false, appendNamespaceToCIMode: false, overloadTranslationOptionHandler: function(e8) {
    var a2 = {};
    if ("object" === Ki(e8[1]) && (a2 = e8[1]), "string" == typeof e8[1] && (a2.defaultValue = e8[1]), "string" == typeof e8[2] && (a2.tDescription = e8[2]), "object" === Ki(e8[2]) || "object" === Ki(e8[3])) {
      var r2 = e8[3] || e8[2];
      Object.keys(r2).forEach(function(e9) {
        a2[e9] = r2[e9];
      });
    }
    return a2;
  }, interpolation: { escapeValue: true, format: function(e8, a2, r2, t2) {
    return e8;
  }, prefix: "{{", suffix: "}}", formatSeparator: ",", unescapePrefix: "-", nestingPrefix: "$t(", nestingSuffix: ")", nestingOptionsSeparator: ",", maxReplaces: 1e3, skipOnVariables: true } };
}
function Zd(e8) {
  return "string" == typeof e8.ns && (e8.ns = [e8.ns]), "string" == typeof e8.fallbackLng && (e8.fallbackLng = [e8.fallbackLng]), "string" == typeof e8.fallbackNS && (e8.fallbackNS = [e8.fallbackNS]), e8.supportedLngs && e8.supportedLngs.indexOf("cimode") < 0 && (e8.supportedLngs = e8.supportedLngs.concat(["cimode"])), e8;
}
function ec(e8, a2) {
  var r2 = Object.keys(e8);
  if (Object.getOwnPropertySymbols) {
    var t2 = Object.getOwnPropertySymbols(e8);
    a2 && (t2 = t2.filter(function(a3) {
      return Object.getOwnPropertyDescriptor(e8, a3).enumerable;
    })), r2.push.apply(r2, t2);
  }
  return r2;
}
function ac(e8) {
  for (var a2 = 1; a2 < arguments.length; a2++) {
    var r2 = null != arguments[a2] ? arguments[a2] : {};
    a2 % 2 ? ec(Object(r2), true).forEach(function(a3) {
      rd(e8, a3, r2[a3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e8, Object.getOwnPropertyDescriptors(r2)) : ec(Object(r2)).forEach(function(a3) {
      Object.defineProperty(e8, a3, Object.getOwnPropertyDescriptor(r2, a3));
    });
  }
  return e8;
}
function rc(e8) {
  var a2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e9) {
      return false;
    }
  }();
  return function() {
    var r2, t2 = ad(e8);
    if (a2) {
      var o2 = ad(this).constructor;
      r2 = Reflect.construct(t2, arguments, o2);
    } else r2 = t2.apply(this, arguments);
    return ed(this, r2);
  };
}
function tc() {
}
var oc = function() {
  Zi(a2, ud);
  var e8 = rc(a2);
  function a2() {
    var r2, t2, o2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n2 = arguments.length > 1 ? arguments[1] : void 0;
    if (Vi(this, a2), r2 = e8.call(this), yd && ud.call(Xi(r2)), r2.options = Zd(o2), r2.services = {}, r2.logger = cd, r2.modules = { external: [] }, t2 = Xi(r2), Object.getOwnPropertyNames(Object.getPrototypeOf(t2)).forEach(function(e9) {
      "function" == typeof t2[e9] && (t2[e9] = t2[e9].bind(t2));
    }), n2 && !r2.isInitialized && !o2.isClone) {
      if (!r2.options.initImmediate) return r2.init(o2, n2), ed(r2, Xi(r2));
      setTimeout(function() {
        r2.init(o2, n2);
      }, 0);
    }
    return r2;
  }
  return Ji(a2, [{ key: "init", value: function() {
    var e9 = this, a3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r2 = arguments.length > 1 ? arguments[1] : void 0;
    "function" == typeof a3 && (r2 = a3, a3 = {}), !a3.defaultNS && false !== a3.defaultNS && a3.ns && ("string" == typeof a3.ns ? a3.defaultNS = a3.ns : a3.ns.indexOf("translation") < 0 && (a3.defaultNS = a3.ns[0]));
    var t2 = Qd();
    function o2(e10) {
      return e10 ? "function" == typeof e10 ? new e10() : e10 : null;
    }
    if (this.options = ac(ac(ac({}, t2), this.options), Zd(a3)), "v1" !== this.options.compatibilityAPI && (this.options.interpolation = ac(ac({}, t2.interpolation), this.options.interpolation)), void 0 !== a3.keySeparator && (this.options.userDefinedKeySeparator = a3.keySeparator), void 0 !== a3.nsSeparator && (this.options.userDefinedNsSeparator = a3.nsSeparator), !this.options.isClone) {
      var n2;
      this.modules.logger ? cd.init(o2(this.modules.logger), this.options) : cd.init(null, this.options), this.modules.formatter ? n2 = this.modules.formatter : "undefined" != typeof Intl && (n2 = Vd);
      var s2 = new Pd(this.options);
      this.store = new Td(this.options.resources, this.options);
      var i2 = this.services;
      i2.logger = cd, i2.resourceStore = this.store, i2.languageUtils = s2, i2.pluralResolver = new Fd(s2, { prepend: this.options.pluralSeparator, compatibilityJSON: this.options.compatibilityJSON, simplifyPluralSuffix: this.options.simplifyPluralSuffix }), !n2 || this.options.interpolation.format && this.options.interpolation.format !== t2.interpolation.format || (i2.formatter = o2(n2), i2.formatter.init(i2, this.options), this.options.interpolation.format = i2.formatter.format.bind(i2.formatter)), i2.interpolator = new Ud(this.options), i2.utils = { hasLoadedNamespace: this.hasLoadedNamespace.bind(this) }, i2.backendConnector = new Xd(o2(this.modules.backend), i2.resourceStore, i2, this.options), i2.backendConnector.on("*", function(a4) {
        for (var r3 = arguments.length, t3 = new Array(r3 > 1 ? r3 - 1 : 0), o3 = 1; o3 < r3; o3++) t3[o3 - 1] = arguments[o3];
        e9.emit.apply(e9, [a4].concat(t3));
      }), this.modules.languageDetector && (i2.languageDetector = o2(this.modules.languageDetector), i2.languageDetector.init && i2.languageDetector.init(i2, this.options.detection, this.options)), this.modules.i18nFormat && (i2.i18nFormat = o2(this.modules.i18nFormat), i2.i18nFormat.init && i2.i18nFormat.init(this)), this.translator = new Rd(this.services, this.options), this.translator.on("*", function(a4) {
        for (var r3 = arguments.length, t3 = new Array(r3 > 1 ? r3 - 1 : 0), o3 = 1; o3 < r3; o3++) t3[o3 - 1] = arguments[o3];
        e9.emit.apply(e9, [a4].concat(t3));
      }), this.modules.external.forEach(function(a4) {
        a4.init && a4.init(e9);
      });
    }
    if (this.format = this.options.interpolation.format, r2 || (r2 = tc), this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
      var d2 = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
      d2.length > 0 && "dev" !== d2[0] && (this.options.lng = d2[0]);
    }
    this.services.languageDetector || this.options.lng || this.logger.warn("init: no languageDetector is used and no lng is defined");
    ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach(function(a4) {
      e9[a4] = function() {
        var r3;
        return (r3 = e9.store)[a4].apply(r3, arguments);
      };
    });
    ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach(function(a4) {
      e9[a4] = function() {
        var r3;
        return (r3 = e9.store)[a4].apply(r3, arguments), e9;
      };
    });
    var c2 = ld(), u2 = function() {
      var a4 = function(a5, t3) {
        e9.isInitialized && !e9.initializedStoreOnce && e9.logger.warn("init: i18next is already initialized. You should call init just once!"), e9.isInitialized = true, e9.options.isClone || e9.logger.log("initialized", e9.options), e9.emit("initialized", e9.options), c2.resolve(t3), r2(a5, t3);
      };
      if (e9.languages && "v1" !== e9.options.compatibilityAPI && !e9.isInitialized) return a4(null, e9.t.bind(e9));
      e9.changeLanguage(e9.options.lng, a4);
    };
    return this.options.resources || !this.options.initImmediate ? u2() : setTimeout(u2, 0), c2;
  } }, { key: "loadResources", value: function(e9) {
    var a3 = this, r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : tc, t2 = "string" == typeof e9 ? e9 : this.language;
    if ("function" == typeof e9 && (r2 = e9), !this.options.resources || this.options.partialBundledLanguages) {
      if (t2 && "cimode" === t2.toLowerCase()) return r2();
      var o2 = [], n2 = function(e10) {
        e10 && a3.services.languageUtils.toResolveHierarchy(e10).forEach(function(e11) {
          o2.indexOf(e11) < 0 && o2.push(e11);
        });
      };
      if (t2) n2(t2);
      else this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(function(e10) {
        return n2(e10);
      });
      this.options.preload && this.options.preload.forEach(function(e10) {
        return n2(e10);
      }), this.services.backendConnector.load(o2, this.options.ns, function(e10) {
        e10 || a3.resolvedLanguage || !a3.language || a3.setResolvedLanguage(a3.language), r2(e10);
      });
    } else r2(null);
  } }, { key: "reloadResources", value: function(e9, a3, r2) {
    var t2 = ld();
    return e9 || (e9 = this.languages), a3 || (a3 = this.options.ns), r2 || (r2 = tc), this.services.backendConnector.reload(e9, a3, function(e10) {
      t2.resolve(), r2(e10);
    }), t2;
  } }, { key: "use", value: function(e9) {
    if (!e9) throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
    if (!e9.type) throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
    return "backend" === e9.type && (this.modules.backend = e9), ("logger" === e9.type || e9.log && e9.warn && e9.error) && (this.modules.logger = e9), "languageDetector" === e9.type && (this.modules.languageDetector = e9), "i18nFormat" === e9.type && (this.modules.i18nFormat = e9), "postProcessor" === e9.type && Ed.addPostProcessor(e9), "formatter" === e9.type && (this.modules.formatter = e9), "3rdParty" === e9.type && this.modules.external.push(e9), this;
  } }, { key: "setResolvedLanguage", value: function(e9) {
    if (e9 && this.languages && !(["cimode", "dev"].indexOf(e9) > -1)) for (var a3 = 0; a3 < this.languages.length; a3++) {
      var r2 = this.languages[a3];
      if (!(["cimode", "dev"].indexOf(r2) > -1) && this.store.hasLanguageSomeTranslations(r2)) {
        this.resolvedLanguage = r2;
        break;
      }
    }
  } }, { key: "changeLanguage", value: function(e9, a3) {
    var r2 = this;
    this.isLanguageChangingTo = e9;
    var t2 = ld();
    this.emit("languageChanging", e9);
    var o2 = function(e10) {
      r2.language = e10, r2.languages = r2.services.languageUtils.toResolveHierarchy(e10), r2.resolvedLanguage = void 0, r2.setResolvedLanguage(e10);
    }, n2 = function(n3) {
      e9 || n3 || !r2.services.languageDetector || (n3 = []);
      var s2 = "string" == typeof n3 ? n3 : r2.services.languageUtils.getBestMatchFromCodes(n3);
      s2 && (r2.language || o2(s2), r2.translator.language || r2.translator.changeLanguage(s2), r2.services.languageDetector && r2.services.languageDetector.cacheUserLanguage && r2.services.languageDetector.cacheUserLanguage(s2)), r2.loadResources(s2, function(e10) {
        !function(e11, n4) {
          n4 ? (o2(n4), r2.translator.changeLanguage(n4), r2.isLanguageChangingTo = void 0, r2.emit("languageChanged", n4), r2.logger.log("languageChanged", n4)) : r2.isLanguageChangingTo = void 0, t2.resolve(function() {
            return r2.t.apply(r2, arguments);
          }), a3 && a3(e11, function() {
            return r2.t.apply(r2, arguments);
          });
        }(e10, s2);
      });
    };
    return e9 || !this.services.languageDetector || this.services.languageDetector.async ? !e9 && this.services.languageDetector && this.services.languageDetector.async ? 0 === this.services.languageDetector.detect.length ? this.services.languageDetector.detect().then(n2) : this.services.languageDetector.detect(n2) : n2(e9) : n2(this.services.languageDetector.detect()), t2;
  } }, { key: "getFixedT", value: function(e9, a3, r2) {
    var t2 = this, o2 = function e10(a4, o3) {
      var n2;
      if ("object" !== Ki(o3)) {
        for (var s2 = arguments.length, i2 = new Array(s2 > 2 ? s2 - 2 : 0), d2 = 2; d2 < s2; d2++) i2[d2 - 2] = arguments[d2];
        n2 = t2.options.overloadTranslationOptionHandler([a4, o3].concat(i2));
      } else n2 = ac({}, o3);
      n2.lng = n2.lng || e10.lng, n2.lngs = n2.lngs || e10.lngs, n2.ns = n2.ns || e10.ns, n2.keyPrefix = n2.keyPrefix || r2 || e10.keyPrefix;
      var c2, u2 = t2.options.keySeparator || ".";
      return c2 = n2.keyPrefix && Array.isArray(a4) ? a4.map(function(e11) {
        return "".concat(n2.keyPrefix).concat(u2).concat(e11);
      }) : n2.keyPrefix ? "".concat(n2.keyPrefix).concat(u2).concat(a4) : a4, t2.t(c2, n2);
    };
    return "string" == typeof e9 ? o2.lng = e9 : o2.lngs = e9, o2.ns = a3, o2.keyPrefix = r2, o2;
  } }, { key: "t", value: function() {
    var e9;
    return this.translator && (e9 = this.translator).translate.apply(e9, arguments);
  } }, { key: "exists", value: function() {
    var e9;
    return this.translator && (e9 = this.translator).exists.apply(e9, arguments);
  } }, { key: "setDefaultNamespace", value: function(e9) {
    this.options.defaultNS = e9;
  } }, { key: "hasLoadedNamespace", value: function(e9) {
    var a3 = this, r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (!this.isInitialized) return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), false;
    if (!this.languages || !this.languages.length) return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), false;
    var t2 = r2.lng || this.resolvedLanguage || this.languages[0], o2 = !!this.options && this.options.fallbackLng, n2 = this.languages[this.languages.length - 1];
    if ("cimode" === t2.toLowerCase()) return true;
    var s2 = function(e10, r3) {
      var t3 = a3.services.backendConnector.state["".concat(e10, "|").concat(r3)];
      return -1 === t3 || 2 === t3;
    };
    if (r2.precheck) {
      var i2 = r2.precheck(this, s2);
      if (void 0 !== i2) return i2;
    }
    return !!this.hasResourceBundle(t2, e9) || (!(this.services.backendConnector.backend && (!this.options.resources || this.options.partialBundledLanguages)) || !(!s2(t2, e9) || o2 && !s2(n2, e9)));
  } }, { key: "loadNamespaces", value: function(e9, a3) {
    var r2 = this, t2 = ld();
    return this.options.ns ? ("string" == typeof e9 && (e9 = [e9]), e9.forEach(function(e10) {
      r2.options.ns.indexOf(e10) < 0 && r2.options.ns.push(e10);
    }), this.loadResources(function(e10) {
      t2.resolve(), a3 && a3(e10);
    }), t2) : (a3 && a3(), Promise.resolve());
  } }, { key: "loadLanguages", value: function(e9, a3) {
    var r2 = ld();
    "string" == typeof e9 && (e9 = [e9]);
    var t2 = this.options.preload || [], o2 = e9.filter(function(e10) {
      return t2.indexOf(e10) < 0;
    });
    return o2.length ? (this.options.preload = t2.concat(o2), this.loadResources(function(e10) {
      r2.resolve(), a3 && a3(e10);
    }), r2) : (a3 && a3(), Promise.resolve());
  } }, { key: "dir", value: function(e9) {
    if (e9 || (e9 = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language)), !e9) return "rtl";
    var a3 = this.services && this.services.languageUtils || new Pd(Qd());
    return ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"].indexOf(a3.getLanguagePartFromCode(e9)) > -1 || e9.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
  } }, { key: "cloneInstance", value: function() {
    var e9 = this, r2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : tc, o2 = ac(ac(ac({}, this.options), r2), { isClone: true }), n2 = new a2(o2);
    void 0 === r2.debug && void 0 === r2.prefix || (n2.logger = n2.logger.clone(r2));
    return ["store", "services", "language"].forEach(function(a3) {
      n2[a3] = e9[a3];
    }), n2.services = ac({}, this.services), n2.services.utils = { hasLoadedNamespace: n2.hasLoadedNamespace.bind(n2) }, n2.translator = new Rd(n2.services, n2.options), n2.translator.on("*", function(e10) {
      for (var a3 = arguments.length, r3 = new Array(a3 > 1 ? a3 - 1 : 0), t3 = 1; t3 < a3; t3++) r3[t3 - 1] = arguments[t3];
      n2.emit.apply(n2, [e10].concat(r3));
    }), n2.init(o2, t2), n2.translator.options = n2.options, n2.translator.backendConnector.services.utils = { hasLoadedNamespace: n2.hasLoadedNamespace.bind(n2) }, n2;
  } }, { key: "toJSON", value: function() {
    return { options: this.options, store: this.store, language: this.language, languages: this.languages, resolvedLanguage: this.resolvedLanguage };
  } }]), a2;
}();
rd(oc, "createInstance", function() {
  return new oc(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, arguments.length > 1 ? arguments[1] : void 0);
});
var nc = oc.createInstance();
nc.createInstance = oc.createInstance, nc.createInstance, nc.dir, nc.init, nc.loadResources, nc.reloadResources, nc.use, nc.changeLanguage, nc.getFixedT, nc.t, nc.exists, nc.setDefaultNamespace, nc.hasLoadedNamespace, nc.loadNamespaces, nc.loadLanguages;
var sc = { name: "call-function", parameters: { func: { type: Us.FUNCTION, pretty_name: "Function", default: void 0 }, async: { type: Us.BOOL, pretty_name: "Asynchronous", default: false } } };
var ic = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2) {
    let r2;
    const t2 = () => {
      const e9 = { value: r2 };
      this.jsPsych.finishTrial(e9);
    };
    if (a2.async) {
      const e9 = (e10) => {
        r2 = e10, t2();
      };
      a2.func(e9);
    } else r2 = a2.func(), t2();
  }
};
ic.info = sc;
var dc = { name: "survey-text", parameters: { questions: { type: Us.COMPLEX, array: true, pretty_name: "Questions", default: void 0, nested: { prompt: { type: Us.HTML_STRING, pretty_name: "Prompt", default: void 0 }, placeholder: { type: Us.STRING, pretty_name: "Placeholder", default: "" }, rows: { type: Us.INT, pretty_name: "Rows", default: 1 }, columns: { type: Us.INT, pretty_name: "Columns", default: 40 }, required: { type: Us.BOOL, pretty_name: "Required", default: false }, name: { type: Us.STRING, pretty_name: "Question Name", default: "" } } }, randomize_question_order: { type: Us.BOOL, pretty_name: "Randomize Question Order", default: false }, preamble: { type: Us.HTML_STRING, pretty_name: "Preamble", default: null }, button_label: { type: Us.STRING, pretty_name: "Button label", default: "Continue" }, autocomplete: { type: Us.BOOL, pretty_name: "Allow autocomplete", default: false } } };
var cc = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2) {
    for (var r2 = 0; r2 < a2.questions.length; r2++) void 0 === a2.questions[r2].rows && (a2.questions[r2].rows = 1);
    for (r2 = 0; r2 < a2.questions.length; r2++) void 0 === a2.questions[r2].columns && (a2.questions[r2].columns = 40);
    for (r2 = 0; r2 < a2.questions.length; r2++) void 0 === a2.questions[r2].value && (a2.questions[r2].value = "");
    var t2 = "";
    null !== a2.preamble && (t2 += '<div id="jspsych-survey-text-preamble" class="jspsych-survey-text-preamble">' + a2.preamble + "</div>"), a2.autocomplete ? t2 += '<form id="jspsych-survey-text-form">' : t2 += '<form id="jspsych-survey-text-form" autocomplete="off">';
    var o2 = [];
    for (r2 = 0; r2 < a2.questions.length; r2++) o2.push(r2);
    a2.randomize_question_order && (o2 = this.jsPsych.randomization.shuffle(o2));
    for (r2 = 0; r2 < a2.questions.length; r2++) {
      var n2 = a2.questions[o2[r2]], s2 = o2[r2];
      t2 += '<div id="jspsych-survey-text-' + s2 + '" class="jspsych-survey-text-question" style="margin: 2em 0em;">', t2 += '<p class="jspsych-survey-text">' + n2.prompt + "</p>";
      var i2 = 0 == r2 ? "autofocus" : "", d2 = n2.required ? "required" : "";
      1 == n2.rows ? t2 += '<input type="text" id="input-' + s2 + '"  name="#jspsych-survey-text-response-' + s2 + '" data-name="' + n2.name + '" size="' + n2.columns + '" ' + i2 + " " + d2 + ' placeholder="' + n2.placeholder + '"></input>' : t2 += '<textarea id="input-' + s2 + '" name="#jspsych-survey-text-response-' + s2 + '" data-name="' + n2.name + '" cols="' + n2.columns + '" rows="' + n2.rows + '" ' + i2 + " " + d2 + ' placeholder="' + n2.placeholder + '"></textarea>', t2 += "</div>";
    }
    t2 += '<input type="submit" id="jspsych-survey-text-next" class="jspsych-btn jspsych-survey-text" value="' + a2.button_label + '"></input>', t2 += "</form>", e8.innerHTML = t2, e8.querySelector("#input-" + o2[0]).focus(), e8.querySelector("#jspsych-survey-text-form").addEventListener("submit", (r3) => {
      r3.preventDefault();
      for (var t3 = performance.now(), o3 = Math.round(t3 - c2), n3 = {}, s3 = 0; s3 < a2.questions.length; s3++) {
        var i3 = "Q" + s3, d3 = document.querySelector("#jspsych-survey-text-" + s3).querySelector("textarea, input"), u2 = d3.value, l2 = d3.attributes["data-name"].value;
        "" == l2 && (l2 = i3);
        var p2 = {};
        p2[l2] = u2, Object.assign(n3, p2);
      }
      var m2 = { rt: o3, response: n3 };
      e8.innerHTML = "", this.jsPsych.finishTrial(m2);
    });
    var c2 = performance.now();
  }
  simulate(e8, a2, r2, t2) {
    "data-only" == a2 && (t2(), this.simulate_data_only(e8, r2)), "visual" == a2 && this.simulate_visual(e8, r2, t2);
  }
  create_simulation_data(e8, a2) {
    const r2 = {};
    let t2 = 1e3;
    for (const a3 of e8.questions) {
      const o3 = a3.name ? a3.name : `Q${e8.questions.indexOf(a3)}`, n3 = 1 == a3.rows ? this.jsPsych.randomization.sampleExponential(0.25) : this.jsPsych.randomization.randomInt(1, 10) * a3.rows;
      r2[o3] = this.jsPsych.randomization.randomWords({ exactly: n3, join: " " }), t2 += this.jsPsych.randomization.sampleExGaussian(2e3, 400, 4e-3, true);
    }
    const o2 = { response: r2, rt: t2 }, n2 = this.jsPsych.pluginAPI.mergeSimulationData(o2, a2);
    return this.jsPsych.pluginAPI.ensureSimulationDataConsistency(e8, n2), n2;
  }
  simulate_data_only(e8, a2) {
    const r2 = this.create_simulation_data(e8, a2);
    this.jsPsych.finishTrial(r2);
  }
  simulate_visual(e8, a2, r2) {
    const t2 = this.create_simulation_data(e8, a2), o2 = this.jsPsych.getDisplayElement();
    this.trial(o2, e8), r2();
    const n2 = Object.entries(t2.response).map((e9) => e9[1]);
    for (let e9 = 0; e9 < n2.length; e9++) this.jsPsych.pluginAPI.fillTextInput(o2.querySelector(`#input-${e9}`), n2[e9], (t2.rt - 1e3) / n2.length * (e9 + 1));
    this.jsPsych.pluginAPI.clickTarget(o2.querySelector("#jspsych-survey-text-next"), t2.rt);
  }
};
cc.info = dc;
var uc = { name: "survey-html-form", parameters: { html: { type: Us.HTML_STRING, pretty_name: "HTML", default: null }, preamble: { type: Us.HTML_STRING, pretty_name: "Preamble", default: null }, button_label: { type: Us.STRING, pretty_name: "Button label", default: "Continue" }, autofocus: { type: Us.STRING, pretty_name: "Element ID to focus", default: "" }, dataAsArray: { type: Us.BOOL, pretty_name: "Data As Array", default: false }, autocomplete: { type: Us.BOOL, pretty_name: "Allow autocomplete", default: false } } };
var lc = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2) {
    var r2 = "";
    if (null !== a2.preamble && (r2 += '<div id="jspsych-survey-html-form-preamble" class="jspsych-survey-html-form-preamble">' + a2.preamble + "</div>"), a2.autocomplete ? r2 += '<form id="jspsych-survey-html-form">' : r2 += '<form id="jspsych-survey-html-form" autocomplete="off">', r2 += a2.html, r2 += '<input type="submit" id="jspsych-survey-html-form-next" class="jspsych-btn jspsych-survey-html-form" value="' + a2.button_label + '"></input>', r2 += "</form>", e8.innerHTML = r2, "" !== a2.autofocus) {
      var t2 = e8.querySelectorAll("#" + a2.autofocus);
      0 === t2.length ? console.warn("No element found with id: " + a2.autofocus) : t2.length > 1 ? console.warn('The id "' + a2.autofocus + '" is not unique so autofocus will not work.') : t2[0].focus();
    }
    e8.querySelector("#jspsych-survey-html-form").addEventListener("submit", (r3) => {
      r3.preventDefault();
      var t3 = performance.now(), n2 = Math.round(t3 - o2), s2 = (
        /**
                 * Serialize all form data into an array
                 * @copyright (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com
                 * @param  {Node}   form The form to serialize
                 * @return {String}      The serialized form data
                 */
        function(e9) {
          for (var a3 = [], r4 = 0; r4 < e9.elements.length; r4++) {
            var t4 = e9.elements[r4];
            if (t4.name && !t4.disabled && "file" !== t4.type && "reset" !== t4.type && "submit" !== t4.type && "button" !== t4.type) if ("select-multiple" === t4.type) for (var o3 = 0; o3 < t4.options.length; o3++) t4.options[o3].selected && a3.push({ name: t4.name, value: t4.options[o3].value });
            else ("checkbox" !== t4.type && "radio" !== t4.type || t4.checked) && a3.push({ name: t4.name, value: t4.value });
          }
          return a3;
        }(e8.querySelector("#jspsych-survey-html-form"))
      );
      a2.dataAsArray || (s2 = function(e9) {
        for (var a3 = {}, r4 = 0; r4 < e9.length; r4++) a3[e9[r4].name] = e9[r4].value;
        return a3;
      }(s2));
      var i2 = { rt: n2, response: s2 };
      e8.innerHTML = "", this.jsPsych.finishTrial(i2);
    });
    var o2 = performance.now();
  }
};
lc.info = uc;
var pc = { name: "survey-multi-select", parameters: { questions: { type: Us.COMPLEX, array: true, pretty_name: "Questions", nested: { prompt: { type: Us.HTML_STRING, pretty_name: "Prompt", default: void 0 }, options: { type: Us.STRING, pretty_name: "Options", array: true, default: void 0 }, horizontal: { type: Us.BOOL, pretty_name: "Horizontal", default: false }, required: { type: Us.BOOL, pretty_name: "Required", default: false }, name: { type: Us.STRING, pretty_name: "Question Name", default: "" } } }, randomize_question_order: { type: Us.BOOL, pretty_name: "Randomize Question Order", default: false }, preamble: { type: Us.HTML_STRING, pretty_name: "Preamble", default: null }, button_label: { type: Us.STRING, pretty_name: "Button label", default: "Continue" }, required_message: { type: Us.STRING, pretty_name: "Required message", default: "You must choose at least one response for this question" }, autocomplete: { type: Us.BOOL, pretty_name: "Allow autocomplete", default: false } } };
var mc = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2) {
    var r2 = "jspsych-survey-multi-select", t2 = "#" + r2;
    const o2 = (...e9) => e9.join("-");
    e8.innerHTML = `<style id="jspsych-survey-multi-select-css">.jspsych-survey-multi-select-question { margin-top: 2em; margin-bottom: 2em; text-align: left; }.jspsych-survey-multi-select-text span.required {color: darkred;}.jspsych-survey-multi-select-horizontal .jspsych-survey-multi-select-text {  text-align: center;}.jspsych-survey-multi-select-option { line-height: 2; }.jspsych-survey-multi-select-horizontal .jspsych-survey-multi-select-option {  display: inline-block;  margin-left: 1em;  margin-right: 1em;  vertical-align: top;}label.jspsych-survey-multi-select-text input[type='checkbox'] {margin-right: 1em;}</style>`;
    var n2 = o2(r2, "form");
    e8.innerHTML += '<form id="' + n2 + '"></form>';
    var s2 = e8.querySelector("#" + n2);
    a2.autocomplete || s2.setAttribute("autocomplete", "off");
    var i2 = o2(r2, "preamble");
    null !== a2.preamble && (s2.innerHTML += '<div id="' + i2 + '" class="' + i2 + '">' + a2.preamble + "</div>");
    for (var d2 = [], c2 = 0; c2 < a2.questions.length; c2++) d2.push(c2);
    a2.randomize_question_order && (d2 = this.jsPsych.randomization.shuffle(d2));
    for (c2 = 0; c2 < a2.questions.length; c2++) {
      var u2 = a2.questions[d2[c2]], l2 = d2[c2], p2 = [o2(r2, "question")];
      u2.horizontal && p2.push(o2(r2, "horizontal")), s2.innerHTML += '<div id="' + o2(r2, l2) + '" data-name="' + u2.name + '" class="' + p2.join(" ") + '"></div>';
      var m2 = o2(t2, l2);
      e8.querySelector(m2).innerHTML += '<p id="survey-question" class="' + r2 + '-text survey-multi-select">' + u2.prompt + "</p>";
      for (var h2 = 0; h2 < u2.options.length; h2++) {
        var f2 = o2(r2, "option", l2, h2);
        e8.querySelector(m2).innerHTML += '<div id="' + f2 + '" class="' + o2(r2, "option") + '"></div>';
        var v2 = document.getElementById(f2), g2 = o2(r2, "response", l2), b2 = o2(r2, "response", l2, h2), w2 = document.createElement("label");
        w2.setAttribute("class", r2 + "-text"), w2.innerHTML = u2.options[h2], w2.setAttribute("for", b2);
        var y2 = document.createElement("input");
        y2.setAttribute("type", "checkbox"), y2.setAttribute("name", g2), y2.setAttribute("id", b2), y2.setAttribute("value", u2.options[h2]), v2.appendChild(w2), w2.insertBefore(y2, w2.firstChild);
      }
    }
    s2.innerHTML += '<div class="fail-message"></div>', s2.innerHTML += '<button id="' + r2 + '-next" class="' + r2 + ' jspsych-btn">' + a2.button_label + "</button>", e8.querySelector("#jspsych-survey-multi-select-next").addEventListener("click", () => {
      for (var r3 = 0; r3 < a2.questions.length; r3++) a2.questions[r3].required && (null == e8.querySelector("#jspsych-survey-multi-select-" + r3 + " input:checked") ? e8.querySelector("#jspsych-survey-multi-select-" + r3 + " input").setCustomValidity(a2.required_message) : e8.querySelector("#jspsych-survey-multi-select-" + r3 + " input").setCustomValidity(""));
      s2.reportValidity();
    }), s2.addEventListener("submit", (r3) => {
      r3.preventDefault();
      for (var t3 = performance.now(), o3 = Math.round(t3 - x2), n3 = {}, s3 = 0; s3 < a2.questions.length; s3++) {
        for (var i3 = e8.querySelector("#jspsych-survey-multi-select-" + s3), c3 = [], u3 = i3.querySelectorAll("input[type=checkbox]:checked"), l3 = 0; l3 < u3.length; l3++) {
          var p3 = u3[l3];
          c3.push(p3.value);
        }
        var m3 = {}, h3 = "Q" + s3;
        "" !== i3.attributes["data-name"].value && (h3 = i3.attributes["data-name"].value), m3[h3] = c3, Object.assign(n3, m3), c3.length;
      }
      var f3 = { rt: o3, response: n3, question_order: d2 };
      e8.innerHTML = "", this.jsPsych.finishTrial(f3);
    });
    var x2 = performance.now();
  }
  simulate(e8, a2, r2, t2) {
    "data-only" == a2 && (t2(), this.simulate_data_only(e8, r2)), "visual" == a2 && this.simulate_visual(e8, r2, t2);
  }
  create_simulation_data(e8, a2) {
    const r2 = {};
    let t2 = 1e3;
    for (const a3 of e8.questions) {
      let o3;
      o3 = a3.required ? this.jsPsych.randomization.randomInt(1, a3.options.length) : this.jsPsych.randomization.randomInt(0, a3.options.length);
      const n3 = a3.name ? a3.name : `Q${e8.questions.indexOf(a3)}`, s2 = this.jsPsych.randomization.sampleWithoutReplacement(a3.options, o3);
      r2[n3] = s2, t2 += this.jsPsych.randomization.sampleExGaussian(1500, 400, 5e-3, true);
    }
    const o2 = { response: r2, rt: t2, question_order: e8.randomize_question_order ? this.jsPsych.randomization.shuffle([...Array(e8.questions.length).keys()]) : [...Array(e8.questions.length).keys()] }, n2 = this.jsPsych.pluginAPI.mergeSimulationData(o2, a2);
    return this.jsPsych.pluginAPI.ensureSimulationDataConsistency(e8, n2), n2;
  }
  simulate_data_only(e8, a2) {
    const r2 = this.create_simulation_data(e8, a2);
    this.jsPsych.finishTrial(r2);
  }
  simulate_visual(e8, a2, r2) {
    const t2 = this.create_simulation_data(e8, a2), o2 = this.jsPsych.getDisplayElement();
    this.trial(o2, e8), r2();
    const n2 = Object.entries(t2.response);
    for (let a3 = 0; a3 < n2.length; a3++) for (const r3 of n2[a3][1]) this.jsPsych.pluginAPI.clickTarget(o2.querySelector(`#jspsych-survey-multi-select-response-${a3}-${e8.questions[a3].options.indexOf(r3)}`), (t2.rt - 1e3) / n2.length * (a3 + 1));
    this.jsPsych.pluginAPI.clickTarget(o2.querySelector("#jspsych-survey-multi-select-next"), t2.rt);
  }
};
mc.info = pc;
var hc = { name: "html-button-response", parameters: { stimulus: { type: Us.HTML_STRING, pretty_name: "Stimulus", default: void 0 }, choices: { type: Us.STRING, pretty_name: "Choices", default: void 0, array: true }, button_html: { type: Us.HTML_STRING, pretty_name: "Button HTML", default: '<button class="jspsych-btn">%choice%</button>', array: true }, prompt: { type: Us.HTML_STRING, pretty_name: "Prompt", default: null }, stimulus_duration: { type: Us.INT, pretty_name: "Stimulus duration", default: null }, trial_duration: { type: Us.INT, pretty_name: "Trial duration", default: null }, margin_vertical: { type: Us.STRING, pretty_name: "Margin vertical", default: "0px" }, margin_horizontal: { type: Us.STRING, pretty_name: "Margin horizontal", default: "8px" }, response_ends_trial: { type: Us.BOOL, pretty_name: "Response ends trial", default: true }, enable_button_after: { type: Us.INT, pretty_name: "Enable button after", default: 0 } } };
var fc = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2) {
    var r2 = '<div id="jspsych-html-button-response-stimulus">' + a2.stimulus + "</div>", t2 = [];
    if (Array.isArray(a2.button_html)) a2.button_html.length == a2.choices.length ? t2 = a2.button_html : console.error("Error in html-button-response plugin. The length of the button_html array does not equal the length of the choices array");
    else for (var o2 = 0; o2 < a2.choices.length; o2++) t2.push(a2.button_html);
    r2 += '<div id="jspsych-html-button-response-btngroup">';
    for (o2 = 0; o2 < a2.choices.length; o2++) {
      var n2 = t2[o2].replace(/%choice%/g, a2.choices[o2]);
      r2 += '<div class="jspsych-html-button-response-button" style="display: inline-block; margin:' + a2.margin_vertical + " " + a2.margin_horizontal + '" id="jspsych-html-button-response-button-' + o2 + '" data-choice="' + o2 + '">' + n2 + "</div>";
    }
    r2 += "</div>", null !== a2.prompt && (r2 += a2.prompt), e8.innerHTML = r2;
    var s2 = performance.now();
    for (o2 = 0; o2 < a2.choices.length; o2++) e8.querySelector("#jspsych-html-button-response-button-" + o2).addEventListener("click", (e9) => {
      c2(e9.currentTarget.getAttribute("data-choice"));
    });
    var i2 = { rt: null, button: null };
    const d2 = () => {
      this.jsPsych.pluginAPI.clearAllTimeouts();
      var r3 = { rt: i2.rt, stimulus: a2.stimulus, response: i2.button };
      e8.innerHTML = "", this.jsPsych.finishTrial(r3);
    };
    function c2(r3) {
      var t3 = performance.now(), o3 = Math.round(t3 - s2);
      i2.button = parseInt(r3), i2.rt = o3, e8.querySelector("#jspsych-html-button-response-stimulus").className += " responded";
      for (var n3 = document.querySelectorAll(".jspsych-html-button-response-button button"), c3 = 0; c3 < n3.length; c3++) n3[c3].setAttribute("disabled", "disabled");
      a2.response_ends_trial && d2();
    }
    if (null !== a2.stimulus_duration && this.jsPsych.pluginAPI.setTimeout(() => {
      e8.querySelector("#jspsych-html-button-response-stimulus").style.visibility = "hidden";
    }, a2.stimulus_duration), a2.enable_button_after > 0) {
      var u2 = document.querySelectorAll(".jspsych-html-button-response-button button");
      for (o2 = 0; o2 < u2.length; o2++) u2[o2].setAttribute("disabled", "disabled");
      this.jsPsych.pluginAPI.setTimeout(() => {
        for (var e9 = document.querySelectorAll(".jspsych-html-button-response-button button"), a3 = 0; a3 < e9.length; a3++) e9[a3].removeAttribute("disabled");
      }, a2.enable_button_after);
    }
    null !== a2.trial_duration && this.jsPsych.pluginAPI.setTimeout(d2, a2.trial_duration);
  }
  simulate(e8, a2, r2, t2) {
    "data-only" == a2 && (t2(), this.simulate_data_only(e8, r2)), "visual" == a2 && this.simulate_visual(e8, r2, t2);
  }
  create_simulation_data(e8, a2) {
    const r2 = { stimulus: e8.stimulus, rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true) + e8.enable_button_after, response: this.jsPsych.randomization.randomInt(0, e8.choices.length - 1) }, t2 = this.jsPsych.pluginAPI.mergeSimulationData(r2, a2);
    return this.jsPsych.pluginAPI.ensureSimulationDataConsistency(e8, t2), t2;
  }
  simulate_data_only(e8, a2) {
    const r2 = this.create_simulation_data(e8, a2);
    this.jsPsych.finishTrial(r2);
  }
  simulate_visual(e8, a2, r2) {
    const t2 = this.create_simulation_data(e8, a2), o2 = this.jsPsych.getDisplayElement();
    this.trial(o2, e8), r2(), null !== t2.rt && this.jsPsych.pluginAPI.clickTarget(o2.querySelector(`div[data-choice="${t2.response}"] button`), t2.rt);
  }
};
fc.info = hc;
var vc = [];
var gc = vc.forEach;
var bc = vc.slice;
var wc = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
var yc = function(e8, a2, r2, t2) {
  var o2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : { path: "/", sameSite: "strict" };
  r2 && (o2.expires = /* @__PURE__ */ new Date(), o2.expires.setTime(o2.expires.getTime() + 60 * r2 * 1e3)), t2 && (o2.domain = t2), document.cookie = function(e9, a3, r3) {
    var t3 = r3 || {};
    t3.path = t3.path || "/";
    var o3 = encodeURIComponent(a3), n2 = "".concat(e9, "=").concat(o3);
    if (t3.maxAge > 0) {
      var s2 = t3.maxAge - 0;
      if (Number.isNaN(s2)) throw new Error("maxAge should be a Number");
      n2 += "; Max-Age=".concat(Math.floor(s2));
    }
    if (t3.domain) {
      if (!wc.test(t3.domain)) throw new TypeError("option domain is invalid");
      n2 += "; Domain=".concat(t3.domain);
    }
    if (t3.path) {
      if (!wc.test(t3.path)) throw new TypeError("option path is invalid");
      n2 += "; Path=".concat(t3.path);
    }
    if (t3.expires) {
      if ("function" != typeof t3.expires.toUTCString) throw new TypeError("option expires is invalid");
      n2 += "; Expires=".concat(t3.expires.toUTCString());
    }
    if (t3.httpOnly && (n2 += "; HttpOnly"), t3.secure && (n2 += "; Secure"), t3.sameSite) switch ("string" == typeof t3.sameSite ? t3.sameSite.toLowerCase() : t3.sameSite) {
      case true:
        n2 += "; SameSite=Strict";
        break;
      case "lax":
        n2 += "; SameSite=Lax";
        break;
      case "strict":
        n2 += "; SameSite=Strict";
        break;
      case "none":
        n2 += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
    return n2;
  }(e8, encodeURIComponent(a2), o2);
};
var xc = function(e8) {
  for (var a2 = "".concat(e8, "="), r2 = document.cookie.split(";"), t2 = 0; t2 < r2.length; t2++) {
    for (var o2 = r2[t2]; " " === o2.charAt(0); ) o2 = o2.substring(1, o2.length);
    if (0 === o2.indexOf(a2)) return o2.substring(a2.length, o2.length);
  }
  return null;
};
var _c = { name: "cookie", lookup: function(e8) {
  var a2;
  if (e8.lookupCookie && "undefined" != typeof document) {
    var r2 = xc(e8.lookupCookie);
    r2 && (a2 = r2);
  }
  return a2;
}, cacheUserLanguage: function(e8, a2) {
  a2.lookupCookie && "undefined" != typeof document && yc(a2.lookupCookie, e8, a2.cookieMinutes, a2.cookieDomain, a2.cookieOptions);
} };
var Ic = { name: "querystring", lookup: function(e8) {
  var a2;
  if ("undefined" != typeof window) {
    var r2 = window.location.search;
    !window.location.search && window.location.hash && window.location.hash.indexOf("?") > -1 && (r2 = window.location.hash.substring(window.location.hash.indexOf("?")));
    for (var t2 = r2.substring(1).split("&"), o2 = 0; o2 < t2.length; o2++) {
      var n2 = t2[o2].indexOf("=");
      if (n2 > 0) t2[o2].substring(0, n2) === e8.lookupQuerystring && (a2 = t2[o2].substring(n2 + 1));
    }
  }
  return a2;
} };
var kc = null;
var Sc = function() {
  if (null !== kc) return kc;
  try {
    kc = "undefined" !== window && null !== window.localStorage;
    var e8 = "i18next.translate.boo";
    window.localStorage.setItem(e8, "foo"), window.localStorage.removeItem(e8);
  } catch (e9) {
    kc = false;
  }
  return kc;
};
var Tc = { name: "localStorage", lookup: function(e8) {
  var a2;
  if (e8.lookupLocalStorage && Sc()) {
    var r2 = window.localStorage.getItem(e8.lookupLocalStorage);
    r2 && (a2 = r2);
  }
  return a2;
}, cacheUserLanguage: function(e8, a2) {
  a2.lookupLocalStorage && Sc() && window.localStorage.setItem(a2.lookupLocalStorage, e8);
} };
var Ec = null;
var jc = function() {
  if (null !== Ec) return Ec;
  try {
    Ec = "undefined" !== window && null !== window.sessionStorage;
    var e8 = "i18next.translate.boo";
    window.sessionStorage.setItem(e8, "foo"), window.sessionStorage.removeItem(e8);
  } catch (e9) {
    Ec = false;
  }
  return Ec;
};
var Oc = { name: "sessionStorage", lookup: function(e8) {
  var a2;
  if (e8.lookupSessionStorage && jc()) {
    var r2 = window.sessionStorage.getItem(e8.lookupSessionStorage);
    r2 && (a2 = r2);
  }
  return a2;
}, cacheUserLanguage: function(e8, a2) {
  a2.lookupSessionStorage && jc() && window.sessionStorage.setItem(a2.lookupSessionStorage, e8);
} };
var Ac = { name: "navigator", lookup: function(e8) {
  var a2 = [];
  if ("undefined" != typeof navigator) {
    if (navigator.languages) for (var r2 = 0; r2 < navigator.languages.length; r2++) a2.push(navigator.languages[r2]);
    navigator.userLanguage && a2.push(navigator.userLanguage), navigator.language && a2.push(navigator.language);
  }
  return a2.length > 0 ? a2 : void 0;
} };
var Cc = { name: "htmlTag", lookup: function(e8) {
  var a2, r2 = e8.htmlTag || ("undefined" != typeof document ? document.documentElement : null);
  return r2 && "function" == typeof r2.getAttribute && (a2 = r2.getAttribute("lang")), a2;
} };
var Rc = { name: "path", lookup: function(e8) {
  var a2;
  if ("undefined" != typeof window) {
    var r2 = window.location.pathname.match(/\/([a-zA-Z-]*)/g);
    if (r2 instanceof Array) if ("number" == typeof e8.lookupFromPathIndex) {
      if ("string" != typeof r2[e8.lookupFromPathIndex]) return;
      a2 = r2[e8.lookupFromPathIndex].replace("/", "");
    } else a2 = r2[0].replace("/", "");
  }
  return a2;
} };
var Nc = { name: "subdomain", lookup: function(e8) {
  var a2 = "number" == typeof e8.lookupFromSubdomainIndex ? e8.lookupFromSubdomainIndex + 1 : 1, r2 = "undefined" != typeof window && window.location && window.location.hostname && window.location.hostname.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i);
  if (r2) return r2[a2];
} };
var Pc = function() {
  function e8(a2) {
    var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    Vi(this, e8), this.type = "languageDetector", this.detectors = {}, this.init(a2, r2);
  }
  return Ji(e8, [{ key: "init", value: function(e9) {
    var a2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
    this.services = e9 || { languageUtils: {} }, this.options = function(e10) {
      return gc.call(bc.call(arguments, 1), function(a3) {
        if (a3) for (var r3 in a3) void 0 === e10[r3] && (e10[r3] = a3[r3]);
      }), e10;
    }(a2, this.options || {}, { order: ["querystring", "cookie", "localStorage", "sessionStorage", "navigator", "htmlTag"], lookupQuerystring: "lng", lookupCookie: "i18next", lookupLocalStorage: "i18nextLng", lookupSessionStorage: "i18nextLng", caches: ["localStorage"], excludeCacheFor: ["cimode"], convertDetectedLanguage: function(e10) {
      return e10;
    } }), "string" == typeof this.options.convertDetectedLanguage && this.options.convertDetectedLanguage.indexOf("15897") > -1 && (this.options.convertDetectedLanguage = function(e10) {
      return e10.replace("-", "_");
    }), this.options.lookupFromUrlIndex && (this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex), this.i18nOptions = r2, this.addDetector(_c), this.addDetector(Ic), this.addDetector(Tc), this.addDetector(Oc), this.addDetector(Ac), this.addDetector(Cc), this.addDetector(Rc), this.addDetector(Nc);
  } }, { key: "addDetector", value: function(e9) {
    return this.detectors[e9.name] = e9, this;
  } }, { key: "detect", value: function(e9) {
    var a2 = this;
    e9 || (e9 = this.options.order);
    var r2 = [];
    return e9.forEach(function(e10) {
      if (a2.detectors[e10]) {
        var t2 = a2.detectors[e10].lookup(a2.options);
        t2 && "string" == typeof t2 && (t2 = [t2]), t2 && (r2 = r2.concat(t2));
      }
    }), r2 = r2.map(function(e10) {
      return a2.options.convertDetectedLanguage(e10);
    }), this.services.languageUtils.getBestMatchFromCodes ? r2 : r2.length > 0 ? r2[0] : null;
  } }, { key: "cacheUserLanguage", value: function(e9, a2) {
    var r2 = this;
    a2 || (a2 = this.options.caches), a2 && (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(e9) > -1 || a2.forEach(function(a3) {
      r2.detectors[a3] && r2.detectors[a3].cacheUserLanguage(e9, r2.options);
    }));
  } }]), e8;
}();
Pc.type = "languageDetector";
var Mc = { loading: "This experiment is loading...", labID: "Lab ID", participantID: "Participant ID", progressBar: "Progress Complete", buttonLabel: "Continue", preloadTrial: { messageText: "Please wait while the experiment loads. This may take a few minutes." }, fullScreenTrial: { prompt: "The experiment will switch to full screen mode. <br/> Click the button to continue.", buttonText: "Continue" }, navigation: { continueButtonText: "Press <span class='yellow'>ANY KEY</span> to {{action}}", continueButtonTextMobile: "Press <span class='yellow'>HERE</span> to {{action}}" }, introTrials: { trial1: { header1: "Welcome to the world of Lexicality!", paragraph1: "You are a wizard searching for the gate that will return you to your home on Earth. To reach the gate, you must journey over lands ruled by magical guardians.", paragraph2: "In order for the guardians to let you pass through the land, you will have to tell the difference between made-up words and real words.&nbsp;", header2: "Welcome to the Single Word Recognition activity!", paragraph3: "In this activity, you will look at words that show up on the screen.", paragraph4: "You will then need to tell the difference between made-up words and real words.&nbsp;" }, trial2: { header: "A real or made-up word will flash very quickly at the center of the screen.", paragraph1: "The made-up words might look like English words, but they do not mean anything in English. For example, laip, bove, or cigbert are made-up words. <span class='orange'><b>If you see a made-up word, press the LEFT ARROW.</b></span>", paragraph2: "The real words will be ones you recognize. They are real English words like is, and, basket, or lion. <span class='blue'><b> If you see a real word, press the RIGHT ARROW.</b></span>" }, trial3: { header: "Let us review which arrow we press for made-up words and real words.", paragraph1: "Try to be as accurate as possible.", paragraph2: "Some words will be hard, and that&#39s okay. If you&#39re not sure, just give your best guess!" }, postPracticeTrial: { header1: "Great work, you are ready to begin the journey!", header2: "Great work, you are ready to begin the real activity!", paragraph1: "You will earn gold coins along the way.", paragraph2: "Good luck!" } }, practiceFeedbackTrial: { paragraph1: "You pressed the {{direction}} arrow which is for {{typeWord}} words!", paragraph2: "is a {{typeWord}}  word. Press the {{direction}} arrow to continue.", arrowChoicesImgAlt: "arrowChoices" }, gameBreakTrials: { midBlockTrials: { trial1: { header1: "Good work!", paragraph1: "You are halfway through the valley, and you decide to camp near a small village.", paragraph2: "In the village, you meet another adventurer who joins your journey!", header2: "Good work!", paragraph3: "You are halfway through the first block.", paragraph4: "Feel free to take a short break and continue when you are ready." }, trial2: { header1: "Amazing!", paragraph1: "After a few days of traveling, you come across an inn!", paragraph2: "There, you meet another adventurer who joins your journey!", header2: "Amazing!", paragraph3: "You are halfway through the second block.", paragraph4: "Feel free to take a short break and continue when you are ready." }, trial3: { header1: "Fantastic work!", paragraph1: "You are halfway through the valley, and you decide to camp near a small village.", paragraph2: "There, you meet another adventurer who joins your journey!", header2: "Fantastic work!", paragraph3: "You are halfway through the third block.", paragraph4: "Feel free to take a short break and continue when you are ready." } }, postBlockTrials: { trial1: { header1: "Congratulations!", paragraph1: "With the guardian&#39s help, you made it through the valley.", paragraph2: "You&#39re getting closer to the gate!", header2: "Congratulations!", paragraph3: "You have completed the first block.", paragraph4: "Feel free to take a short break and continue when you are ready." }, trial2: { header1: "Congratulations!", paragraph1: "With the guardian&#39s help, you made it through the valley.", paragraph2: "Just one more valley until you reach the gate!", header2: "Congratulations!", paragraph3: "You have completed the second block.", paragraph4: "Feel free to take a short break and continue when you are ready." }, trial3: { header1: "Congratulations!", paragraph1: "With the guardian&#39s help, you made it through the valley.", paragraph2: "You&#39re getting closer to the gate!", header2: "Great Work!", paragraph3: "You have completed a new block.", paragraph4: "Feel free to take a short break and continue when you are ready." } }, finalTrial: { header1: "Finally, you found the last guardian and the gate that will bring you home!", paragraph1: "You use your coins to open the gate.", paragraph2: "You say farewell to your new friends and leave the land of Lexicality. Until next time!", header2: "Congratulations!", paragraph3: "You have completed the Single Word Recognition activity.", paragraph4: "Thank you for your amazing work!" } }, imagesAlt: { arrowKeys: "arrow keys", leftArrow: "left arrow", rightArrow: "right arrow", valley: "background image with hills and trees", adventurer1: "adventurer with harp", adventurer2: "adventuerer making rainbows", adventurer3: "adventurer making heart shapes", wizardCoin: "wizard making coins", guardian1: "orange dinosaur guardian", guardian2: "blue dragon guardian", endingBackground: "landscape with trees", guardian3: "winking unicorn", endingGateCoinbag: "gate with coinbag animation", wizardWand: "wizard waving a magic wand", leftArrowIntro: "made-up word, press the left arrow key", rightArrowIntro: "real Word, press the Right Arrow key" }, terms: { __comment1__: "ex. 'press any key to continue/practice/begin'", continue: "continue", practice: "practice", begin: "begin", gold: "gold", left: "left", right: "right", __comment2__: "i.e. 'xop is a made-up/real word'", real: "real", "made-up": "made-up", save: "save your work" } };
var Lc = { loading: "El experimento se está cargando...", labID: "ID del laboratorio", participantID: "ID del participante", progressBar: "Barra de progreso", buttonLabel: "Continuar", preloadTrial: { messageText: "Por favor, espera mientras se carga el juego. Esto puede tardar unos minutos." }, fullScreenTrial: { prompt: "El juego se va a cambiar a modo de pantalla completa. Presiona el botón para continuar.", buttonText: "Continuar" }, navigation: { continueButtonText: "Presiona <span class='yellow'>CUALQUIER TECLA</span> para {{action}}", continueButtonTextMobile: "Presiona <span class='yellow'>AQUÍ</span> para {{action}}" }, introTrials: { trial1: { header1: "¡Bienvenidos al mundo de Lexicalidad!", paragraph1: "Eres un mago que está buscando la puerta que te llevará de regreso a tu casa en la tierra. Para alcanzar la puerta, debes viajar por tierras gobernadas por guardianes mágicos.", paragraph2: "Para que los guardianes te dejen pasar por sus tierras, tienes que decirles la diferencia entre palabras inventadas y palabras reales.&nbsp;", header2: "¡Bienvenido a la actividad de Reconocimiento de Palabras Individuales!", paragraph3: "En esta actividad, verás palabras que aparecerán en la pantalla.", paragraph4: "Luego tendrás que diferenciar entre palabras inventadas y palabras reales.&nbsp;" }, trial2: { header: "Una palabra real o inventada aparecerá muy rápido en el centro de la pantalla.", paragraph1: "Las palabras inventadas pueden parecer palabras en Español, pero no significan nada en Español. Por ejemplo, “frup”, “rifli”, o “glizon” son palabras inventadas. <span class='orange'><b> Si ves una palabra inventada, presiona la TECLA DE FLECHA IZQUIERDA.</b></span>", paragraph2: "Las palabras reales serán las que tu reconozcas. Estas son palabras reales en Español como “es”, “y”, “cesta”, o “león”. <span class='blue'><b> Si ves una palabra real, presiona la TECLA DE FLECHA DERECHA.</b></span>" }, trial3: { header: "Repasemos cuál tecla presionamos para palabras inventadas y palabras reales.", paragraph1: "Trata de ser lo más preciso o precisa posible.", paragraph2: "Algunas palabras serán difíciles, y eso está bien. Si no estás seguro o segura, trata de hacer tu mejor esfuerzo." }, postPracticeTrial: { header1: "¡Buen trabajo! ¡Estás listo o lista para comenzar el viaje!", header2: "Buen trabajo, ¡Estás listo&#47;a para comenzar la actividad real!", paragraph1: "Ganarás monedas de oro a lo largo del camino.", paragraph2: "¡Buena suerte!" } }, practiceFeedbackTrial: { paragraph1: "¡Presionaste la tecla de flecha {{direction}} que es para palabras {{typeWord}}!", paragraph2: "es una palabra {{typeWord}}. Presiona la tecla de flecha {{direction}} para continuar.", arrowChoicesImgAlt: "opcionesDeFlecha" }, gameBreakTrials: { midBlockTrials: { trial1: { header1: "¡Buen trabajo!", paragraph1: "Estás en la mitad del valle, y decides acampar cerca de un pueblo pequeño.", paragraph2: "¡En el pueblo, conoces a otro aventurero que se une a tu viaje!", header2: "¡Buen trabajo!", paragraph3: "Estás a la mitad del primer bloque.", paragraph4: "¡Siéntete libre de tomar un descanso corto y continuar cuando estés listo&#47;a!" }, trial2: { header1: "¡Maravilloso!", paragraph1: "¡Después de unos días de viaje, has llegado a un hotel!", paragraph2: "¡Ahí encuentras a otro aventurero que se une a tu viaje!", header2: "¡Excelente!", paragraph3: "Estás a la mitad del segundo bloque.", paragraph4: "¡Siéntete libre de tomar un descanso corto y continuar cuando estés listo&#47;a!" }, trial3: { header1: "¡Excelente trabajo!", paragraph1: "Estás en la mitad del valle, y decides acampar cerca de un pueblo pequeño.", paragraph2: "¡En el pueblo, conoces a otro aventurero que se une a tu viaje!", header2: "¡Fantástico!", paragraph3: "Estás a la mitad del tercer bloque.", paragraph4: "¡Siéntete libre de tomar un descanso corto y continuar cuando estés listo&#47;a!" } }, postBlockTrials: { trial1: { header1: "¡Felicitaciones!", paragraph1: "Lograste cruzar el valle con la ayuda del guardián.", paragraph2: "¡Estás muy cerca de la puerta!", header2: "¡Felicidades!", paragraph3: "Has completado el primer bloque.", paragraph4: "¡Siéntete libre de tomar un descanso corto y continuar cuando estés listo&#47;a!" }, trial2: { header1: "¡Felicitaciones!", paragraph1: "Lograste cruzar el valle con la ayuda del guardián.", paragraph2: "¡Solo queda un valle más hasta que llegues a la puerta!", header2: "¡Felicidades!", paragraph3: "Has completado el segundo bloque.", paragraph4: "¡Siéntete libre de tomar un descanso corto y continuar cuando estés listo&#47;a!" }, trial3: { header1: "¡Felicitaciones!", paragraph1: "Lograste cruzar el valle con la ayuda del guardián.", paragraph2: "¡Estás muy cerca de la puerta!", header2: "¡Felicidades!", paragraph3: "Has completado un nuevo bloque bloque.", paragraph4: "¡Siéntete libre de tomar un descanso corto y continuar cuando estés listo&#47;a!" } }, finalTrial: { header1: "¡Finalmente, encontraste al guardián y la puerta que te llevará de regreso a casa!", paragraph1: "Utiliza tus monedas para abrir la puerta.", paragraph2: "Te despides de tus nuevos amigos y dejas la tierra de Lexicalidad. ¡Hasta una próxima ocasión!", header2: "¡Felicidades!", paragraph3: "Has completado la actividad de Reconocimiento de Palabras Individuales!", paragraph4: "¡Gracias por tu increíble trabajo!" } }, imagesAlt: { arrowKeys: "teclas de flecha", leftArrow: "flecha izquierda", rightArrow: "flecha derecha", valley: "imagen de fondo con arboles y lomas", adventurer1: "aventurero con arpa", adventurer2: "aventurero creando arcoiris", adventurer3: "aventurero creando formas de corazón", wizardCoin: "mago creando monedas", guardian1: "guardián anaranjado dinosaurio", guardian2: "guardián azulado dinosaurio", endingBackground: "paisajes con árboles", guardian3: "unicornio que guiña", endingGateCoinbag: "puerta con animación de bolsa de monedas", wizardWand: "mago ondeando una varita mágica", leftArrowIntro: "palabra inventada, presiona la tecla de flecha izquierda", rightArrowIntro: "palabra real, presiona la tecla de flecha derecha" }, terms: { __comment1__: "e.g. 'presione cualquier tecla para continuar/practicar/comenzar'", continue: "continuar", practice: "practicar", here: "aquí", begin: "comenzar", gold: "oro", left: "izquierda", right: "derecha", __comment2__: "i.e. 'bluzp es una palabra real/inventada'", "real-singular": "real", "real-plural": "reales", "made-up-singular": "inventada", "made-up-plural": "inventadas", save: "guardar tu trabajo" } };
var Dc = { loading: "L'esperimento si sta caricando...", labID: "ID del laboratorio", participantID: "ID del partecipante", progressBar: "Avanzamento Completato", buttonLabel: "Continua", preloadTrial: { messageText: "Per favore aspetta il caricamento dell'esperimento. Potrebbero essere necessari alcuni minuti." }, fullScreenTrial: { prompt: "L'esperimento passerà alla modalità schermo intero. <br/> Clicca sul tasto per continuare.", buttonText: "Continua" }, navigation: { continueButtonText: "Premi <span class='yellow'>QUALSIASI TASTO</span> per {{action}}", continueButtonTextMobile: "Premi <span class='yellow'>QUI</span> per {{action}}" }, introTrials: { trial1: { header1: "Benvenuto&#47;a nel mondo di Lexicality!", paragraph1: "Sei un mago in cerca del portale che ti riportera&#39 a casa sulla Terra. Per raggiungere il portale pero&#39, dovrai viaggiare nelle terre dominate dai guardiani magici.", paragraph2: "Affinche&#39 i guardiani ti lascino passare dovrai riuscire a distinguere tra una serie di parole inventate e di parole reali.&nbsp;", header2: "Benvenuto&#47;a alla prova di Riconoscimento di Parole!", paragraph3: "In questa prova vedrai delle parole apparire sullo schermo.", paragraph4: "Dovrai riuscire a distinguere tra una serie di parole inventate e di parole reali.&nbsp" }, trial2: { header: "Parole inventate o parole reali compariranno velocemente al centro dello schermo.", paragraph1: "Le parole inventate potrebbero assomigliare a parole italiane, anche se non hanno alcun significato in italiano. Per esempio, cata, sagno o molpa, sono parole inventate. <span class='orange'><b> Se vedi una parola inventata, premi la FRECCIA SINISTRA.</b></span>", paragraph2: "Le parole reali saranno quelle che riconoscerai. Sono parole italiane reali come porta, tra, fare o leone. <span class='blue'><b> Se vedi una parola reale, premi la FRECCIA DESTRA.</b></span>" }, trial3: { header: "Proviamo a rivedere quale tasto premere per le parole inventate e quale per le parole reali.", paragraph1: "Prova ad essere il piu&#39 accurato&#47;a possibile.", paragraph2: "Alcune parole saranno difficili, ma non ti scoraggiare. Se non sei sicuro&#47;a, dai la risposta che ritieni piu&#39 corretta!" }, postPracticeTrial: { header1: "Ben fatto, sei pronto&#47;a per iniziare il viaggio!", header2: "Ben fatto, sei pronto&#47;a per iniziare la prova!", paragraph1: "Guadagnerai monete d&#39oro lungo il cammino.", paragraph2: "Buona fortuna!" } }, practiceFeedbackTrial: { paragraph1: "Hai premuto la freccia {{direction}} che e&#39 per le parole {{typeWord}}!", paragraph2: "e&#39 una parola {{typeWord}}. Premi la freccia {{direction}} per continuare.", arrowChoicesImgAlt: "opzioniFreccia" }, gameBreakTrials: { midBlockTrials: { trial1: { header1: "Ben fatto!", paragraph1: "Sei a meta&#39 strada lungo la valle e decidi di accamparti vicino a un piccolo villaggio.", paragraph2: "Nel villaggio incontri un altro avventuriero che si unisce al tuo viaggio!", header2: "Ben fatto!", paragraph3: "Sei a meta&#39 del primo blocco.", paragraph4: "Puoi fare una breve pausa e continuare quando sei pronto&#47;a." }, trial2: { header1: "Fantastico!", paragraph1: "Dopo qualche giorno di viaggio, arrivi a un rifugio!", paragraph2: "Qui incontri un altro avventuriero che si unisce al tuo viaggio!", header2: "Fantastico!", paragraph3: "Sei a meta&#39 del secondo blocco.", paragraph4: "Puoi fare una breve pausa e continuare quando sei pronto&#47;a." }, trial3: { header1: "Ben fatto!", paragraph1: "Sei a meta&#39 strada lungo la valle e decidi di accamparti vicino a un piccolo villaggio.", paragraph2: "Nel villaggio incontri un altro avventuriero che si unisce al tuo viaggio!", header2: "Ben fatto!", paragraph3: "Sei a meta&#39 del terzo blocco.", paragraph4: "Puoi fare una breve pausa e continuare quando sei pronto&#47;a." } }, postBlockTrials: { trial1: { header1: "Congratulazioni!", paragraph1: "Con l&#39aiuto del guardiano, sei riuscito&#47;a a passare attraverso la valle.", paragraph2: "Ti stai avvicinando al portale!", header2: "Congratulazioni!", paragraph3: "Hai completato il primo blocco.", paragraph4: "Puoi fare una breve pausa e continuare quando sei pronto&#47;a." }, trial2: { header1: "Congratulazioni!", paragraph1: "Con l&#39aiuto del guardiano, sei riuscito&#47;a a passare attraverso la valle.", paragraph2: "Ti manca solo un&#39altra valle per raggiungere il portale!", header2: "Congratulazioni!", paragraph3: "Hai completato il secondo blocco.", paragraph4: "Puoi fare una breve pausa e continuare quando sei pronto&#47;a." }, trial3: { header1: "Congratulazioni!", paragraph1: "Con l&#39aiuto del guardiano, sei riuscito&#47;a a passare attraverso la valle.", paragraph2: "Ti stai avvicinando al portale!", header2: "Congratulazioni!", paragraph3: "Hai completato un nuovo blocco.", paragraph4: "Puoi fare una breve pausa e continuare quando sei pronto&#47;a." } }, finalTrial: { header1: "Finalmente trovi l'ultimo guardiano e il portale che ti riportera&#39 a casa!", paragraph1: "Usi le monete raccolte per aprire il portale.", paragraph2: "Saluti i tuoi nuovi amici e lasci il mondo di Lexicality. Alla prossima!", header2: "Congratulazioni!", paragraph3: "Hai completato la prova di Riconoscimento di Parole.", paragraph4: "Grazie per il tuo fantastico lavoro!" } }, imagesAlt: { arrowKeys: "tasti freccia", leftArrow: "freccia sinistra", rightArrow: "freccia destra", valley: "immagine di sfondo con alberi e colline", adventurer1: "avventuriero con arpa", adventurer2: "avventuriero che crea arcobaleni", adventurer3: "avventuriero che crea forme di cuore", wizardCoin: "mago che crea monete", guardian1: "guardiano dinosauro arancione", guardian2: "guardiano drago blu", endingBackground: "paesaggio con alberi", guardian3: "unicorno che strizza l'occhio", endingGateCoinbag: "portale con animazione portamonete", wizardWand: "mago che agita una bacchetta magica", leftArrowIntro: "parola inventata, premi la freccia sinistra", rightArrowIntro: "parola reale, premi la freccia destra" }, terms: { __comment1__: "es. 'premi qualsiasi tasto per continuare/fare pratica/iniziare'", continue: "continuare", practice: "fare pratica", begin: "iniziare", gold: "oro", left: "sinistra", right: "destra", __comment2__: "es. 'valo è una parola inventata/reale'", "real-singular": "reale", "real-plural": "reali", "made-up-singular": "inventata", "made-up-plural": "inventate", save: "salvare il tuo lavoro" } };
var zc = { loading: "Este experimento está carregando...", labID: "ID do Laboratório", participantID: "ID do Participante", buttonLabel: "Continuar", progressBar: "Progresso concluído", preloadTrial: { messageText: "Por favor, aguarde enquanto o experimento carrega. Isso pode levar alguns minutos." }, fullScreenTrial: { prompt: "O experimento mudará para tela cheia. <br/> Clique no botão para continuar.", buttonText: "Continuar" }, navigation: { continueButtonText: "Pressione <span class='yellow'>QUALQUER TECLA</span> para {{action}}", continueButtonTextMobile: "Pressione a <span class='yellow'>BARRA AZUL</span> para {{action}}" }, introTrials: { trial1: { header1: "Bem-vindo(a) ao mundo das Palavras Mágicas!", paragraph1: "Você é um feiticeiro em busca do portal que o levará de volta a sua casa na Terra. Para alcançar o portal, você deve viajar por terras governadas pelos guardiões mágicos.", paragraph2: "Para que os guardiões permitam que você passe pela terra deles, será necessário que você diferencie palavras inventadas e palavras reais.&nbsp;", header2: "Bem-vindo(a) a atividade de Reconhecimento de Palavras Únicas!", paragraph3: "Nesta atividade, você irá olhar palavras que aparecem na tela.", paragraph4: "Você então terá que dizer a diferença entre palavras inventadas e reais.&nbsp;" }, trial2: { header: "Uma palavra real ou inventada aparecerá rapidamente no centro da tela.", paragraph1: "As palavras inventadas podem parecer com palavras em português, mas elas não têm significado. Por exemplo, trinfla, glina ou blim são palavras inventadas. <span class='orange'><b>Se você vir uma palavra inventada, pressione a tecla de SETA PARA ESQUERDA.</b></span>", paragraph2: "As palavras reais serão aquelas que você consegue reconhecer. Elas são palavras reais em portguês, como vida, mala, macaco ou comer. <span class='blue'><b> Se você vir uma palavra real, pressione a tecla de SETA PARA DIREITA.</b></span>" }, trial3: { header: "Vamos relembrar qual seta pressionamos para as palavras inventadas e para as palavras reais.", paragraph1: "Tente ser o mais preciso possível.", paragraph2: "Algumas palavras serão difíceis, e está tudo bem. Se não tiver certeza, dê o seu melhor palpite!" }, postPracticeTrial: { header1: "Parabéns! Você está pronto para iniciar esta aventura", header2: "Bom trabalho, você está pronto para iniciar a atividade!", paragraph1: "Ao longo do caminho, você vai ganhar moedas de ouro.", paragraph2: "Boa sorte!" } }, practiceFeedbackTrial: { paragraph1: "Você pressionou a seta {{direction}} que é para palavras {{typeWord}}!", paragraph2: "é uma palavra {{typeWord}}. Pressione a seta {{direction}} para continuar.", arrowChoicesImgAlt: "arrowChoices" }, gameBreakTrials: { midBlockTrials: { trial1: { header1: "Muito bem!", paragraph1: "Você está no meio do vale e decide acampar perto de uma pequena vila.", paragraph2: "Lá, você encontrou outro aventureiro que decide se juntar a sua jornada!", header2: "Bom trabalho!", paragraph3: "Você está na metade do primeiro bloco.", paragraph4: "Fique à vontade para fazer uma breve pausa e continuar quando se sentir pronto(a)." }, trial2: { header1: "Incrível!", paragraph1: "Após alguns dias de viagem, você encontra uma pousada!", paragraph2: "Lá, você encontrou outro aventureiro que se junta à sua jornada!", header2: "Incrível!", paragraph3: "Você está na metade do segundo bloco.", paragraph4: "Fique à vontade para fazer uma breve pausa e continuar quando se sentir pronto(a)." }, trial3: { header1: "Muito bem!", paragraph1: "Você está no meio do vale e decide acampar perto uma pequena vila.", paragraph2: "Lá, você encontroy outro aventureiro que decide se juntar a sua jornada!", header2: "Excelente trabalho!", paragraph3: "Você está na metade do terceiro bloco.", paragraph4: "Fique à vontade para fazer uma breve pausa e continuar quando se sentir pronto(a)." } }, postBlockTrials: { trial1: { header1: "Parabéns!", paragraph1: "Com a ajuda do guardião, você conseguiu atravessar o vale.", paragraph2: "Você está mais perto do portão!", header2: "Parabéns!", paragraph3: "Você completou o primeiro bloco.", paragraph4: "Fique à vontade para fazer uma breve pausa e continuar quando se sentir pronto(a)." }, trial2: { header1: "Parabéns!", paragraph1: "Com a ajuda do guardião, você conseguiu atravessar o vale.", paragraph2: "Agora, falta só mais um vale para chegar até o portão!", header2: "Parabéns!", paragraph3: "Você completou o segundo bloco.", paragraph4: "Fique à vontade para fazer uma breve pausa e continuar quando se sentir pronto(a)." }, trial3: { header1: "Parabéns!", paragraph1: "Com a ajuda do guardião, você conseguiu atravessar o vale.", paragraph2: "Você está mais perto do portão!", header2: "Parabéns!", paragraph3: "Você completou um novo bloco.", paragraph4: "Fique à vontade para fazer uma breve pausa e continuar quando se sentir pronto(a)." } }, finalTrial: { header1: "Finalmente, você encontrou o guardião e o portal que levarão você de volta para casa! ", paragraph1: "Use suas moedas para abrir o portal.", paragraph2: "Diga adeus aos seus novos amigos e deixe a terra das Palavras Mágicas. Até a próxima!", header2: "Parabéns!", paragraph3: "Você completou a atividade de Reconhecimento de Palavras Únicas.", paragraph4: "Agradecemos pelo seu incrível trabalho!" } }, imagesAlt: { arrowKeys: "setas", leftArrow: "seta esquerda", rightArrow: "seta direita", valley: "imagem de fundo com morros e árvores", adventurer1: "aventureiro com harpa", adventurer2: "aventureiro fazendo arco-íris", adventurer3: "aventureiro fazendo formas de coração", wizardCoin: "mago fazendo moedas", guardian1: "guardião dinossauro laranja", guardian2: "guardião dragão azul", endingBackground: "paisagem com árvores", guardian3: "unicórnio piscando", endingGateCoinbag: "portal com bolsa de moedas animação", wizardWand: "mago balancando uma varinha mágica", leftArrowIntro: "palavra inventada, pressione a seta esquerda", rightArrowIntro: "palavra real, pressione a seta direita" }, terms: { __comment1__: "ex. 'pressione qualquer tecla para continuar/praticar/iniciar'", continue: "continuar", practice: "praticar", begin: "continuar", gold: "ouro", left: "esquerda", right: "direita", __comment2__: "i.e. 'traspa é uma palavra inventada'", "real-singular": "real", "real-plural": "reais", "made-up-singular": "inventada", "made-up-plural": "inventadas", save: "salvar o seu progresso" } };
var Fc = { loading: "Das Spiel wird geladen...", labID: "Labor-ID", participantID: "Teilnehmer*in-ID", progressBar: "Vorgang abgeschlossen", buttonLabel: "Weiter", preloadTrial: { messageText: "Bitte warte, während das Spiel geladen wird. Dies kann einige Minuten dauern." }, fullScreenTrial: { prompt: "Das Spiel wird jetzt in den Vollbildmodus wechseln. <br/> Klicke auf 'Weiter' um zu starten.", buttonText: "Weiter" }, navigation: { continueButtonText: "Drücke <span class='yellow'>EINE BELIEBIGE TASTE</span>, {{action}}", continueButtonTextMobile: "Drücke <span class='yellow'>HIER</span>, {{action}}" }, introTrials: { trial1: { header1: "Willkommen in der Welt der Lexikalisierung!", paragraph1: "Du bist ein Zauberer, der nach dem Tor sucht, das dich nach Hause auf die Erde zurückführt. Um das Tor zu erreichen, musst du durch Länder reisen, die von magischen Wächtern beherrscht werden.", paragraph2: "Damit die Wächter dich durch ihr Land lassen, musst du den Unterschied zwischen erfundenen und echten Wörtern erkennen.&nbsp;", header2: "Willkommen bei der Einzelworterkennungsaufgabe!", paragraph3: "Bei dieser Aufgabe wirst du Wörter sehen, die schnell in der Mitte des Bildschirms erscheinen.", paragraph4: "Du musst dann den Unterschied zwischen erfundenen und echten Wörtern erkennen.&nbsp;" }, trial2: { header: "Du wirst sehen, dass entweder ein echtes oder ein erfundenes Wort sehr schnell in der Mitte des Bildschirms erscheint.", paragraph1: "Die erfundenen Wörter sehen vielleicht wie deutsche Wörter aus, haben aber auf Deutsch keine Bedeutung. Zum Beispiel sind „gor“, „Bowe“ oder „Kladurf“ erfundene Wörter. <span class='orange'><b>Wenn du ein erfundenes Wort siehst, drücke die LINKE PFEILTASTE.</b></span>", paragraph2: "Die echten Wörter werden diejenigen sein, die du als Wörter erkennst. Es handelt sich um deutsche Wörter wie „ist“, „und“, „Korb“ oder „Katze“. <span class='blue'><b> Wenn du ein echtes Wort siehst, drücke die RECHTE PFEILTASTE.</b></span>" }, trial3: { header: "Lass uns wiederholen, welche Taste wir für erfundene und welche für echte Wörter drücken.", paragraph1: "Versuche so genau wie möglich zu antworten.", paragraph2: "Manche Wörter werden schwer sein und das ist in Ordnung. Wenn du dir nicht sicher bist, kannst du einfach raten!" }, postPracticeTrial: { header1: "Gut gemacht! Du bist bereit, die Reise zu beginnen.", header2: "Gut gemacht! Du bist bereit mit der eigentlichen Aufgabe zu beginnen!", paragraph1: "Unterwegs wirst du Goldmünzen verdienen.", paragraph2: "Viel Glück!" } }, practiceFeedbackTrial: { paragraph1: "Du hast auf den {{direction}}n Pfeil gedrückt, der für {{typeWord}} Wörter steht!", paragraph2: "ist ein {{typeWord}}s Wort. Drücke auf den {{direction}}n Pfeil, um fortzufahren.", arrowChoicesImgAlt: "Pfeiloptionen" }, gameBreakTrials: { midBlockTrials: { trial1: { header1: "Gut gemacht!", paragraph1: "Du hast die Hälfte des Tals schon durchquert und beschließt, in der Nähe eines kleinen Dorfes zu zelten.", paragraph2: "Im Dorf triffst du einen weiteren Abenteurer, der sich deiner Reise anschließt!", header2: "Gut gemacht!", paragraph3: "Du hast schon die Hälfte des ersten Blocks geschafft.", paragraph4: "Du kannst eine kurze Pause machen und weitermachen, sobald du bereit bist." }, trial2: { header1: "Toll!", paragraph1: "Nach ein paar Reisetagen kommst du bei einem Gasthof an!", paragraph2: "Dort triffst du einen weiteren Abenteurer, der sich deiner Reise anschließt!", header2: "Toll!", paragraph3: "Du hast schon die Hälfte des zweiten Blocks geschafft.", paragraph4: "Du kannst eine kurze Pause machen und weitermachen, sobald du bereit bist." }, trial3: { header1: "Prima!", paragraph1: "Du hast die Hälfte des Tals schon durchquert und beschließt, in der Nähe eines kleinen Dorfes zu zelten.", paragraph2: "Im Dorf triffst du einen weiteren Abenteurer, der sich deiner Reise anschließt!", header2: "Prima!", paragraph3: "Du hast schon die Hälfte des dritten Blocks geschafft.", paragraph4: "Du kannst eine kurze Pause machen und weitermachen, sobald du bereit bist." } }, postBlockTrials: { trial1: { header1: "Glückwunsch!", paragraph1: "Mit der Hilfe des Wächters hast du es durch das Tal geschafft.", paragraph2: "Du kommst dem Tor näher!", header2: "Glückwunsch!", paragraph3: "Du hast den ersten Block geschafft.", paragraph4: "Du kannst eine kurze Pause machen und weitermachen, sobald du bereit bist." }, trial2: { header1: "Glückwunsch!", paragraph1: "Mit der Hilfe des Wächters hast du es durch das Tal geschafft.", paragraph2: "Nur noch ein Tal bis zum Tor!", header2: "Glückwunsch!", paragraph3: "Du hast den zweiten Block geschafft.", paragraph4: "Du kannst eine kurze Pause machen und weitermachen, sobald du bereit bist." }, trial3: { header1: "Glückwunsch!", paragraph1: "Mit der Hilfe des Wächters hast du es durch das Tal geschafft.", paragraph2: "Du kommst dem Tor näher!", header2: "Großartige Arbeit!", paragraph3: "Du hast diesen Block geschafft.", paragraph4: "Du kannst eine kurze Pause machen und weitermachen, sobald du bereit bist." } }, finalTrial: { header1: "Endlich hast du den Wächter und das Tor gefunden, das dich nach Hause bringt!", paragraph1: "Du verwendest deine Münzen, um das Tor zu öffnen.", paragraph2: "Du verabschiedest dich von deinen neuen Freundinnen und Freunden und verlässt die Welt der Lexikalisierung. Bis zum nächsten Mal!", header2: "Herzlichen Glückwunsch!", paragraph3: "Du hast die Einzelworterkennungsaufgabe abgeschlossen.", paragraph4: "Danke für deine großartige Arbeit!" } }, imagesAlt: { arrowKeys: "Pfeiltasten", leftArrow: "linke Pfeiltaste", rightArrow: "rechte Pfeiltaste", valley: "Hintergrundbild mit Hügeln und Bäumen", adventurer1: "Abenteurer mit Harfe", adventurer2: "Abenteurer, der Regenbögen macht", adventurer3: "Abenteurer, der Herzformen macht", wizardCoin: "Zauberer, der Münzen herstellt", guardian1: "oranger Dinosaurier-Wächter", guardian2: "blauer Drachen-Wächter", endingBackground: "Landschaft mit Bäumen", guardian3: "zwinkerndes Einhorn", endingGateCoinbag: "Tor mit Münzbeutel-Animation", wizardWand: "Zauberer, der einen Zauberstab schwingt", leftArrowIntro: "erfundenes Wort, drücke die linke Pfeiltaste", rightArrowIntro: "echtes Wort, drücke die rechte Pfeiltaste" }, terms: { __comment1__: "z.B. 'drücke eine beliebige Taste, um weiterzufahren/zu üben/zu beginnen'", continue: "damit es weitergeht", practice: "um zu üben", begin: "um zu beginnen", gold: "Goldmünzen", left: "linke", right: "rechte", __comment2__: "d.h. 'xop ist ein erfundenes/echtes Wort'", real: "echte", "made-up": "erfundene", save: "um deine Arbeit speichern" } };
var Bc = function(e8, a2, r2) {
  var t2 = -1, o2 = e8.length;
  a2 < 0 && (a2 = -a2 > o2 ? 0 : o2 + a2), (r2 = r2 > o2 ? o2 : r2) < 0 && (r2 += o2), o2 = a2 > r2 ? 0 : r2 - a2 >>> 0, a2 >>>= 0;
  for (var n2 = Array(o2); ++t2 < o2; ) n2[t2] = e8[t2 + a2];
  return n2;
};
var qc = d;
var $c = Dr;
var Uc = nr;
var Hc = G;
var Wc = /\s/;
var Kc = function(e8) {
  for (var a2 = e8.length; a2-- && Wc.test(e8.charAt(a2)); ) ;
  return a2;
};
var Vc = /^\s+/;
var Gc = function(e8) {
  return e8 ? e8.slice(0, Kc(e8) + 1).replace(Vc, "") : e8;
};
var Yc = G;
var Jc = Ht;
var Xc = /^[-+]0x[0-9a-f]+$/i;
var Qc = /^0b[01]+$/i;
var Zc = /^0o[0-7]+$/i;
var eu = parseInt;
var au = function(e8) {
  if ("number" == typeof e8) return e8;
  if (Jc(e8)) return NaN;
  if (Yc(e8)) {
    var a2 = "function" == typeof e8.valueOf ? e8.valueOf() : e8;
    e8 = Yc(a2) ? a2 + "" : a2;
  }
  if ("string" != typeof e8) return 0 === e8 ? e8 : +e8;
  e8 = Gc(e8);
  var r2 = Qc.test(e8);
  return r2 || Zc.test(e8) ? eu(e8.slice(2), r2 ? 2 : 8) : Xc.test(e8) ? NaN : +e8;
};
var ru = 1 / 0;
var tu = function(e8) {
  return e8 ? (e8 = au(e8)) === ru || e8 === -1 / 0 ? 17976931348623157e292 * (e8 < 0 ? -1 : 1) : e8 == e8 ? e8 : 0 : 0 === e8 ? e8 : 0;
};
var ou = Bc;
var nu = function(e8, a2, r2) {
  if (!Hc(r2)) return false;
  var t2 = typeof a2;
  return !!("number" == t2 ? $c(r2) && Uc(a2, r2.length) : "string" == t2 && a2 in r2) && qc(r2[a2], e8);
};
var su = function(e8) {
  var a2 = tu(e8), r2 = a2 % 1;
  return a2 == a2 ? r2 ? a2 - r2 : a2 : 0;
};
var iu = Math.ceil;
var du = Math.max;
var cu = t(function(e8, a2, r2) {
  a2 = (r2 ? nu(e8, a2, r2) : void 0 === a2) ? 1 : du(su(a2), 0);
  var t2 = null == e8 ? 0 : e8.length;
  if (!t2 || a2 < 1) return [];
  for (var o2 = 0, n2 = 0, s2 = Array(iu(t2 / a2)); o2 < t2; ) s2[n2++] = ou(e8, o2, o2 += a2);
  return s2;
});
var uu = (e8) => {
  const a2 = [...e8];
  for (let e9 = a2.length - 1; e9 > 0; e9 -= 1) {
    const r2 = Math.floor(Math.random() * (e9 + 1));
    [a2[e9], a2[r2]] = [a2[r2], a2[e9]];
  }
  return a2;
};
var lu = (e8, a2, r2) => {
  const t2 = cu(e8, r2);
  for (let e9 = 0; e9 < a2; e9++) {
    const a3 = uu(Array.from({ length: r2 }, (e10, a4) => a4 + 1));
    for (let o2 = 0; o2 < r2; o2++) t2[e9][o2].group = a3[o2];
  }
  return t2;
};
var pu = (e8, a2, r2, t2) => {
  const o2 = uu(e8).slice(0, r2 * a2);
  o2.sort((e9, a3) => e9.difficulty - a3.difficulty);
  const n2 = lu(o2, r2, a2), s2 = new Array(a2).fill().map(() => []);
  for (let e9 = 0; e9 < a2; e9 += 1) for (let a3 = 0; a3 < r2; a3 += 1) {
    const { group: r3 } = n2[a3][e9];
    s2[r3 - 1].push(n2[a3][e9]);
  }
  for (let e9 = 0; e9 < a2; e9 += 1) for (let a3 = 0; a3 < r2; a3 += 1) s2[e9][a3].presentationTime = t2[e9];
  return s2;
};
var mu = (e8, a2, r2, t2) => {
  const o2 = uu(e8).slice(0, r2 * a2), n2 = lu(o2, r2, a2), s2 = new Array(a2).fill().map(() => []);
  for (let e9 = 0; e9 < a2; e9 += 1) for (let a3 = 0; a3 < r2; a3 += 1) {
    const { group: r3 } = n2[a3][e9];
    s2[r3 - 1].push(n2[a3][e9]);
  }
  for (let e9 = 0; e9 < a2; e9 += 1) for (let a3 = 0; a3 < r2; a3 += 1) s2[e9][a3].presentationTime = t2[e9];
  return s2;
};
var hu = (e8, a2) => {
  const r2 = [];
  for (let t2 = 0; t2 < a2; t2++) r2.push(...uu(e8));
  return r2;
};
var fu = (e8, a2) => {
  if (e8.length !== a2.length) throw new Error("Lists must have the same length");
  const r2 = [];
  for (let t2 = 0; t2 < e8.length; t2++) r2.push([...e8[t2], ...a2[t2]]);
  return r2;
};
var vu = (e8, a2) => {
  const r2 = Math.ceil(e8 / a2), t2 = [];
  for (let o2 = 0; o2 < a2; o2 += 1) {
    const a3 = [];
    for (let t3 = o2 * r2 + 1; t3 <= (o2 + 1) * r2 && t3 <= e8; t3 += 1) a3.push(t3);
    t2.push(a3.length);
  }
  return t2;
};
var gu = (e8) => {
  const a2 = { practice: bu[nc.language].dataPracticeURL, validated: bu[nc.language].dataValidatedURL, new: bu[nc.language].dataNewURL, newEasy: bu[nc.language].dataNewEasyURL, experimental: bu[nc.language].dataValidatedURL2 }, r2 = (e9, a3) => e9.reduce((e10, r3) => {
    const t3 = { stimulus: r3.word, correct_response: "real" === r3.realpseudo ? "ArrowRight" : "ArrowLeft", a: parseFloat(r3.a), difficulty: a3 ? parseFloat(r3.difficulty) : parseFloat(r3.b), c: parseFloat(r3.c), d: parseFloat(r3.d), corpus_src: a3 ? r3.block : r3.corpusId, realpseudo: r3.realpseudo };
    return e10.push(t3), e10;
  }, []), t2 = (a3) => {
    let r3;
    r3 = "shortRandom" === e8 ? 25 : "shortRandom80" === e8 ? 5 : 40;
    const t3 = a3.filter((e9) => "real" === e9.realpseudo).slice(0, r3), o3 = a3.filter((e9) => "pseudo" === e9.realpseudo).slice(0, r3);
    return t3.concat(o3);
  }, o2 = (e9, o3) => {
    if ("es" === e9) {
      const e10 = o3.filter((e11) => "spanish-core" === e11.corpus_src), a3 = uu(o3.filter((e11) => "spanish-random" === e11.corpus_src)), r3 = t2(a3);
      return uu(e10.concat(r3));
    }
    if ("it" === e9) {
      const e10 = o3.filter((e11) => "italian-core" === e11.corpus_src), a3 = uu(o3.filter((e11) => "italian-random" === e11.corpus_src)), r3 = t2(a3);
      return uu(e10.concat(r3));
    }
    if ("pt" === e9) {
      const e10 = o3.filter((e11) => "portuguese-core" === e11.corpus_src);
      return uu(e10);
    }
    if ("de" === e9) {
      const e10 = o3.filter((e11) => "german-core" === e11.corpus_src), a3 = uu(o3.filter((e11) => "german-random" === e11.corpus_src)), r3 = t2(a3);
      return uu(e10.concat(r3));
    }
    return r2(a2.validated, false);
  }, n2 = { practice: r2(a2.practice, true), validated: o2(nc.language, r2(a2.validated)), new: "en" === nc.language ? uu(r2(a2.new, false)) : [], newEasy: "en" === nc.language ? uu(r2(a2.newEasy, false)) : [], experimental: o2(nc.language, r2(a2.validated)) }, s2 = { name: "corpusAll", corpus_pseudo: n2.validated.filter((e9) => "pseudo" === e9.realpseudo), corpus_real: n2.validated.filter((e9) => "real" === e9.realpseudo) }, i2 = { name: "corpusExperimental", corpus_pseudo: n2.experimental.filter((e9) => "pseudo" === e9.realpseudo), corpus_real: n2.experimental.filter((e9) => "real" === e9.realpseudo) }, d2 = { name: "corpusOriginal", corpus_pseudo: n2.validated.filter((e9) => "pseudo" === e9.realpseudo && "en-validated-v1" === e9.corpus_src), corpus_real: n2.validated.filter((e9) => "real" === e9.realpseudo && "en-validated-v1" === e9.corpus_src) }, c2 = { name: "corpusNew", corpus_pseudo: n2.new.filter((e9) => "pseudo" === e9.realpseudo), corpus_real: n2.new.filter((e9) => "real" === e9.realpseudo) }, u2 = { name: "corpusNewEasy", corpus_pseudo: n2.newEasy.filter((e9) => "pseudo" === e9.realpseudo), corpus_real: n2.newEasy.filter((e9) => "real" === e9.realpseudo) };
  return { corpusPractice: n2.practice, corpusAll: s2, corpusNew: c2, corpusNewEasy: u2, corpusOriginal: d2, corpusExperimental: i2 };
};
var bu = { en: { dataPracticeURL: [{ word: "xop", realpseudo: "pseudo", block: "practice", order: "1", difficulty: "0" }, { word: "how", realpseudo: "real", block: "practice", order: "2", difficulty: "0" }, { word: "after", realpseudo: "real", block: "practice", order: "3", difficulty: "0" }, { word: "auler", realpseudo: "pseudo", block: "practice", order: "4", difficulty: "0" }, { word: "hom", realpseudo: "pseudo", block: "practice", order: "5", difficulty: "0" }], dataValidatedURL: [{ word: "ablood", a: "1", b: "-0.581", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "accustomed", a: "1", b: "2.0193", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ache", a: "1", b: "0.9781", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "admic", a: "1", b: "0.9094", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "adorge", a: "1", b: "0.4281", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "advice", a: "1", b: "-1.1461", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "advole", a: "1", b: "-0.157", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "agreed", a: "1", b: "-1.5328", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ahriered", a: "1", b: "-1.1813", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "aits", a: "1", b: "-0.6461", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "albust", a: "1", b: "-0.4836", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "alk", a: "1", b: "-1.2998", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "almost", a: "1", b: "-1.9373", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ancrusinishness", a: "1", b: "-0.6452", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "animal", a: "1", b: "-1.8634", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "announcement", a: "1", b: "-1.3313", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "answer", a: "1", b: "-1.8828", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ap", a: "1", b: "-1.1356", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "appropriates", a: "1", b: "0.724", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "argue", a: "1", b: "-0.6383", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "arm", a: "1", b: "-1.21", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "arsher", a: "1", b: "-0.4668", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "asca", a: "1", b: "-1.7761", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ase", a: "1", b: "-1.2726", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "assignment", a: "1", b: "-1.4703", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "audience", a: "1", b: "0.125", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "aunt", a: "1", b: "-0.0977", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "awful", a: "1", b: "-1.0406", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "baafness", a: "1", b: "-1.1653", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "babysitter", a: "1", b: "-1.4039", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "back", a: "1", b: "-1.868", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "bahysitral", a: "1", b: "-1.3188", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bangs", a: "1", b: "-0.3012", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "banny", a: "1", b: "0.1023", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "bath", a: "1", b: "-1.6727", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "bathroom", a: "1", b: "-2.2976", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "beads", a: "1", b: "-0.2609", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "bear", a: "1", b: "-1.7523", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "beascient", a: "1", b: "0.0445", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "bebill", a: "1", b: "-1.1313", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "becge", a: "1", b: "-1.3453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "become", a: "1", b: "-2.0951", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "beeltisul", a: "1", b: "-1.0042", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "begin", a: "1", b: "-1.769", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "bench", a: "1", b: "-1.1453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "beneath", a: "1", b: "-0.043", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "benon", a: "1", b: "-1.2143", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "beside", a: "1", b: "-0.9133", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "besime", a: "1", b: "-0.8625", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "best", a: "1", b: "-1.9808", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "bicycle", a: "1", b: "-1.1031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "bield", a: "1", b: "-0.4523", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bimygra", a: "1", b: "-1.6859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "black", a: "1", b: "-2.1126", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "blans", a: "1", b: "-0.6555", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "blaw", a: "1", b: "-0.2813", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bledge", a: "1", b: "1.0279", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "bloodsefully", a: "1", b: "1.9125", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "blow", a: "1", b: "-1.3313", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "boat", a: "1", b: "-1.6305", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "boods", a: "1", b: "0.2867", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "borm", a: "1", b: "0.1031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bour", a: "1", b: "-0.4609", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bove", a: "1", b: "-0.5858", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "bragon", a: "1", b: "0.4633", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "brap", a: "1", b: "-0.7094", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "broor", a: "1", b: "-0.5766", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "brought", a: "1", b: "-1.413", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "brubs", a: "1", b: "-0.8158", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "brush", a: "1", b: "-1.5359", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "budget", a: "1", b: "-0.7395", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "build", a: "1", b: "-1.5563", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "building", a: "1", b: "-1.9192", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "buit", a: "1", b: "1.1312", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "buk", a: "1", b: "-1.6453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bulbet", a: "1", b: "-0.7102", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "bullon", a: "1", b: "0.2469", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "business", a: "1", b: "-1.5109", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "button", a: "1", b: "-1.7688", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "buy", a: "1", b: "-1.9734", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "camed", a: "1", b: "0.618", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "camera", a: "1", b: "-1.8953", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "candy", a: "1", b: "-1.7709", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "canty", a: "1", b: "-0.675", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "cany", a: "1", b: "-0.5063", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "carry", a: "1", b: "-1.2656", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "cas", a: "1", b: "-1.1565", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "caund", a: "1", b: "-0.9305", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "celegeour", a: "1", b: "-0.2344", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "censtel", a: "1", b: "0.0391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "central", a: "1", b: "-0.5844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "chance", a: "1", b: "-1.5052", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "chanding", a: "1", b: "1.3591", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "chareet", a: "1", b: "-0.4747", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "charks", a: "1", b: "0.3231", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "che", a: "1", b: "-1.772", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "chenteen", a: "1", b: "-0.6852", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "chetion", a: "1", b: "-0.7211", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "child", a: "1", b: "-1.9844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "chird", a: "1", b: "1.0125", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "chrost", a: "1", b: "-0.2082", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "cibsus", a: "1", b: "-1.3178", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "circus", a: "1", b: "-0.7235", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "clap", a: "1", b: "-1.5766", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "clidine", a: "1", b: "-0.2172", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "clock", a: "1", b: "-2.1953", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "clomify", a: "1", b: "-0.2706", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "coak", a: "1", b: "0.7805", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "cok", a: "1", b: "-1.6162", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "cold", a: "1", b: "-2.1961", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "collosks", a: "1", b: "-1.2432", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "come", a: "1", b: "-2.0624", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "complase", a: "1", b: "2.51", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "complete", a: "1", b: "-2.1519", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "compliment", a: "1", b: "-1.4037", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "component", a: "1", b: "0.7203", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "conchen", a: "1", b: "-0.6125", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "configuration", a: "1", b: "0.2159", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "confrous", a: "1", b: "0.7523", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "contain", a: "1", b: "-0.5884", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "cook", a: "1", b: "-2.0797", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "cotcenent", a: "1", b: "0.8336", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "coth", a: "1", b: "0.5866", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "cotosks", a: "1", b: "-1.4941", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "cotplicant", a: "1", b: "-0.118", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "country", a: "1", b: "-1.8656", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "coustly", a: "1", b: "1.2852", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "crayon", a: "1", b: "-0.9656", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "crit", a: "1", b: "-0.2989", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "cry", a: "1", b: "-1.7688", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "cully", a: "1", b: "-0.2438", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "cuppom", a: "1", b: "-0.83", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "custom", a: "1", b: "-1.1312", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "dack", a: "1", b: "-0.1156", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "daople", a: "1", b: "-1.674", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "delivery", a: "1", b: "-1.0313", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "describe", a: "1", b: "-1.0471", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "destrifs", a: "1", b: "-1.1689", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "devernmeted", a: "1", b: "1.8922", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "dimp", a: "1", b: "0.0609", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "dishonesty", a: "1", b: "0.6141", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "distance", a: "1", b: "-1.2057", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "dogo", a: "1", b: "-0.6094", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "doifs", a: "1", b: "-2.0109", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "dolc", a: "1", b: "-1.9471", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "donut", a: "1", b: "-0.5813", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "doubtful", a: "1", b: "0.6291", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "draw", a: "1", b: "-1.6086", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "drawer", a: "1", b: "-0.6188", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "drine", a: "1", b: "0.5727", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "drow", a: "1", b: "1.4937", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "druper", a: "1", b: "-0.1586", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "drustion", a: "1", b: "0.1956", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "dryer", a: "1", b: "-0.1658", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "duck", a: "1", b: "-1.8742", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "durper", a: "1", b: "0.0668", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "duttery", a: "1", b: "-0.5047", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "each", a: "1", b: "-1.5938", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "eamn", a: "1", b: "-1.7994", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ef", a: "1", b: "-1.9209", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "effake", a: "1", b: "-1.4805", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "effect", a: "1", b: "-0.4484", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "egg", a: "1", b: "-1.5242", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "elements", a: "1", b: "-0.5745", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "elsand", a: "1", b: "-0.6641", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "empty", a: "1", b: "-1.3055", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "erery", a: "1", b: "-1.0875", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "ertby", a: "1", b: "-1.4797", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "erv", a: "1", b: "-2.3375", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "every", a: "1", b: "-2.218", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "expand", a: "1", b: "-0.6359", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "explore", a: "1", b: "-1.8828", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "extrord", a: "1", b: "0.5844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "eye", a: "1", b: "-1.65", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "eys", a: "1", b: "0.1344", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "fafever", a: "1", b: "-1.3399", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fage", a: "1", b: "0.0375", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "famous", a: "1", b: "-1.6985", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "farm", a: "1", b: "-1.7047", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "farmer", a: "1", b: "-1.7147", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "faster", a: "1", b: "-1.9578", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "fattify", a: "1", b: "-0.5522", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "feem", a: "1", b: "-0.2641", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "fif", a: "1", b: "-1.5719", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "firethecg", a: "1", b: "-1.1969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "firetruck", a: "1", b: "-0.8078", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "fistory", a: "1", b: "-0.0619", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fite", a: "1", b: "-0.0329", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fix", a: "1", b: "-2.0109", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "flankfopper", a: "1", b: "-0.9824", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fliel", a: "1", b: "-0.8465", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "foat", a: "1", b: "1.1422", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "focus", a: "1", b: "-1.0031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "foits", a: "1", b: "-1.3375", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "fonos", a: "1", b: "-1.518", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "foot", a: "1", b: "-1.9688", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "force", a: "1", b: "-0.6797", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "forgetfulness", a: "1", b: "0.2266", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "freat", a: "1", b: "0.7", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "friendliness", a: "1", b: "0.1187", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "from", a: "1", b: "-1.9543", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "fror", a: "1", b: "-1.2757", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fun", a: "1", b: "-1.9692", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ganding", a: "1", b: "1.1078", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "garage", a: "1", b: "-0.5859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "garden", a: "1", b: "-1.6296", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "garrow", a: "1", b: "1.268", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "gasand", a: "1", b: "-0.6188", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "ge", a: "1", b: "-1.9209", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "germantia", a: "1", b: "-0.1931", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ggnoi", a: "1", b: "-2.0585", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ginth", a: "1", b: "-1.476", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "give", a: "1", b: "-1.902", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "glass", a: "1", b: "-2.5688", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "good", a: "1", b: "-2.0017", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "goose", a: "1", b: "-0.4918", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "grackhatrer", a: "1", b: "-0.3195", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "grackroiler", a: "1", b: "-0.5008", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "grandfather", a: "1", b: "-1.2672", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "grandmother", a: "1", b: "-1.5273", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "grapes", a: "1", b: "-1.4664", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "grarts", a: "1", b: "0.1996", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "grasshopper", a: "1", b: "-0.5701", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "gravel", a: "1", b: "-0.3295", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "great", a: "1", b: "-2.0924", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "grock", a: "1", b: "0.5031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "groon", a: "1", b: "0.3688", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "guarantee", a: "1", b: "0.5863", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "guess", a: "1", b: "-1.3482", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "guoys", a: "1", b: "-1.6377", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "gurynh", a: "1", b: "-1.8788", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "hamburger", a: "1", b: "-1.4922", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "hammer", a: "1", b: "-1.3249", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hane", a: "1", b: "-0.6281", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "hard", a: "1", b: "-1.8961", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "hawn", a: "1", b: "-0", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "heaviness", a: "1", b: "-0.5031", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "hello", a: "1", b: "-2.432", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hen", a: "1", b: "3.1125", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "him", a: "1", b: "-1.9585", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "history", a: "1", b: "-1.947", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hortly", a: "1", b: "0.0859", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "hot", a: "1", b: "-1.9839", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "houle", a: "1", b: "-0.6484", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "however", a: "1", b: "-1.2275", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hu", a: "1", b: "-1.9647", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "hungry", a: "1", b: "-2.0196", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hus", a: "1", b: "-1.2454", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "hust", a: "1", b: "1.3227", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "imagine", a: "1", b: "-1.7285", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "imeyits", a: "1", b: "-1.6035", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "inni", a: "1", b: "-1.9194", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "inside", a: "1", b: "-1.9305", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "insows", a: "1", b: "-1.1476", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "into", a: "1", b: "-1.5771", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "invent", a: "1", b: "-0.3202", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "investigate", a: "1", b: "-0.878", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ip", a: "1", b: "-1.6792", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "jar", a: "1", b: "-0.6188", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "jeacter", a: "1", b: "-0.4898", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "jello", a: "1", b: "0.5969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "jewel", a: "1", b: "0.1001", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "jinto", a: "1", b: "-2.1023", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "jixel", a: "1", b: "-1.3912", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "join", a: "1", b: "-1.9844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "jor", a: "1", b: "-1.8359", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "joze", a: "1", b: "-1.3922", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "kees", a: "1", b: "-0.4242", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "kenchen", a: "1", b: "-0.0672", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "keys", a: "1", b: "-2.1305", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "khtna", a: "1", b: "-1.851", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "knelt", a: "1", b: "4.4656", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "knob", a: "1", b: "1.275", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "kusly", a: "1", b: "-2.0258", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "lamb", a: "1", b: "0.025", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "lame", a: "1", b: "-0.3846", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "lampupser", a: "1", b: "-0.2844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "lant", a: "1", b: "-0.6761", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "larl", a: "1", b: "-1.7625", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "lawlage", a: "1", b: "1.3328", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "lefel", a: "1", b: "-1.2047", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "left", a: "1", b: "-1.1106", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "legal", a: "1", b: "0.6312", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "leld", a: "1", b: "-0.2464", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "liberty", a: "1", b: "-0.7144", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "library", a: "1", b: "-1.9472", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "liffs", a: "1", b: "-0.7959", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "light", a: "1", b: "-2.0091", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "lips", a: "1", b: "-1.9234", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "listen", a: "1", b: "-1.7363", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "locate", a: "1", b: "-0.1391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "lockle", a: "1", b: "0.0781", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "loleh", a: "1", b: "-1.7599", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "loms", a: "1", b: "-1.1972", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "long", a: "1", b: "-1.8875", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "look", a: "1", b: "-2.0918", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "losh", a: "1", b: "-0.9214", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "lunch", a: "1", b: "-2.0647", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "lut", a: "1", b: "-1.7859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "machent", a: "1", b: "0.8062", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "machine", a: "1", b: "-1.2391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "mader", a: "1", b: "0.9322", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "mannanency", a: "1", b: "0.5776", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "medicine", a: "1", b: "-1.0313", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "memitory", a: "1", b: "2.1859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "mich", a: "1", b: "-0.5011", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "mips", a: "1", b: "-1.2195", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "miss", a: "1", b: "-2.0167", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "mitera", a: "1", b: "-0.8547", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "molent", a: "1", b: "-0.2784", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "money", a: "1", b: "-2.0846", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "moon", a: "1", b: "-1.942", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "more", a: "1", b: "-1.858", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "morning", a: "1", b: "-1.9246", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "mout", a: "1", b: "-0.4225", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "mun", a: "1", b: "-1.2363", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "mystery", a: "1", b: "-1.5281", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "name", a: "1", b: "-2.0174", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "natural", a: "1", b: "-1.4847", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "naw", a: "1", b: "0.3072", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "nervousness", a: "1", b: "0.1121", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "nied", a: "1", b: "-1.1978", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "night", a: "1", b: "-2.0849", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "nilt", a: "1", b: "-1.2266", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "nop", a: "1", b: "-0.9974", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "nuccest", a: "1", b: "-0.4", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "nuf", a: "1", b: "-1.8266", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "nulch", a: "1", b: "-1.5537", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "number", a: "1", b: "-2.1833", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "nunge", a: "1", b: "-0.9547", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "nurse", a: "1", b: "-1.3766", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "oban", a: "1", b: "-1.3865", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "om", a: "1", b: "-1.778", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "once", a: "1", b: "-1.5894", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "open", a: "1", b: "-1.9263", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "opplish", a: "1", b: "0.9602", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "orm", a: "1", b: "-1.875", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "orn", a: "1", b: "-1.6282", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ot", a: "1", b: "-1.8419", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "oven", a: "1", b: "-1.5961", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "overwhelm", a: "1", b: "0.9835", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "owl", a: "1", b: "-0.9359", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "owner", a: "1", b: "-1.5391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "package", a: "1", b: "-1.8547", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "paekaga", a: "1", b: "-1.5117", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pame", a: "1", b: "-0.4581", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "parachute", a: "1", b: "0.35", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "pateesh", a: "1", b: "-1.3992", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "patient", a: "1", b: "-0.2469", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "peace", a: "1", b: "-1.6576", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "pealt", a: "1", b: "-0.1161", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ped", a: "1", b: "-0.8617", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "peldicle", a: "1", b: "-0.0805", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pencil", a: "1", b: "-1.8609", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "penny", a: "1", b: "-1.825", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "people", a: "1", b: "-2.2787", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "person", a: "1", b: "-2.293", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "perste", a: "1", b: "-0.4484", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "phlere", a: "1", b: "-1.575", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "pickle", a: "1", b: "-1.4855", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "pids", a: "1", b: "-0.9719", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pileral", a: "1", b: "-0.0594", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pingle", a: "1", b: "0.8852", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "plane", a: "1", b: "-1.7337", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "plate", a: "1", b: "-1.4578", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "play", a: "1", b: "-2.7276", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "plays", a: "1", b: "-2.0827", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "pledge", a: "1", b: "0.612", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "plissars", a: "1", b: "-0.3391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pluset", a: "1", b: "-0.5102", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "polyll", a: "1", b: "-1.3219", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "poom", a: "1", b: "0.1773", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "poor", a: "1", b: "-1.7859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "popsicle", a: "1", b: "-0.2777", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "porch", a: "1", b: "-0.2008", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "potato", a: "1", b: "-1.7273", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "poyed", a: "1", b: "-1.2625", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pretty", a: "1", b: "-1.8349", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "pundy", a: "1", b: "0.0937", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pung", a: "1", b: "-0.3609", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "punge", a: "1", b: "0.5812", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "purbon", a: "1", b: "-1.0297", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "purchase", a: "1", b: "-0.7395", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "purple", a: "1", b: "-2.2148", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "purse", a: "1", b: "-0.5805", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "push", a: "1", b: "-1.4594", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "put", a: "1", b: "-1.4453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "puticine", a: "1", b: "-0.3859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "qualify", a: "1", b: "0.181", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "question", a: "1", b: "-1.6115", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "rax", a: "1", b: "-0.6109", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "reast", a: "1", b: "1.0516", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "rebosks", a: "1", b: "-1.379", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "recipe", a: "1", b: "-0.5594", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "refreshment", a: "1", b: "-0.8383", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "regiva", a: "1", b: "-1.0219", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "resolve", a: "1", b: "-0.4545", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "reuse", a: "1", b: "2.4688", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "reverse", a: "1", b: "-0.9278", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "rhythm", a: "1", b: "-0.2344", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "rince", a: "1", b: "1.9156", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "roast", a: "1", b: "-1.068", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "roder", a: "1", b: "0.3532", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "round", a: "1", b: "-1.8996", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "runey", a: "1", b: "-0.7783", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "rurn", a: "1", b: "-0.598", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "sain", a: "1", b: "0.5231", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "samato", a: "1", b: "-0.4383", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "sandbox", a: "1", b: "-1.4352", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "sashbex", a: "1", b: "-0.9289", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "scared", a: "1", b: "-1.4758", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "scavec", a: "1", b: "-1.1785", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "scays", a: "1", b: "-0.3459", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "scissors", a: "1", b: "-0.2391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "scogs", a: "1", b: "-1.4375", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "score", a: "1", b: "-1.5297", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "scrow", a: "1", b: "1.725", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "several", a: "1", b: "-0.9984", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "shie", a: "1", b: "-1.0414", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "shine", a: "1", b: "-1.0637", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "shink", a: "1", b: "2.8345", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "shob", a: "1", b: "-0.9828", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "shoe", a: "1", b: "-0.7766", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "short", a: "1", b: "-1.7368", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "show", a: "1", b: "-3.3836", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "shring", a: "1", b: "0.9304", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "sick", a: "1", b: "-1.6754", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "since", a: "1", b: "-1.1336", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "sint", a: "1", b: "-0.6454", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "sit", a: "1", b: "-1.4368", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "slace", a: "1", b: "0.2242", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "slatchly", a: "1", b: "-0.35", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "slellen", a: "1", b: "-0.9762", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "slid", a: "1", b: "2.8203", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "slod", a: "1", b: "-0.6055", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "snock", a: "1", b: "1.0875", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "snose", a: "1", b: "0.5565", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "socturse", a: "1", b: "-0.0602", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "spentary", a: "1", b: "2.2391", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "speveal", a: "1", b: "-0.2908", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "splankler", a: "1", b: "0.5969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "sprinkler", a: "1", b: "-0.5492", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "spu", a: "1", b: "-1.7924", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "spy", a: "1", b: "-0.774", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "stak", a: "1", b: "-0.5875", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "staroan", a: "1", b: "-0.7266", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "start", a: "1", b: "-1.9289", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "station", a: "1", b: "-0.8938", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "stenil", a: "1", b: "-0.7614", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "sticygra", a: "1", b: "-1.8031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "stins", a: "1", b: "-0.5758", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "straightening", a: "1", b: "-0.4672", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "street", a: "1", b: "-1.8484", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "strength", a: "1", b: "-1.218", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "stressrs", a: "1", b: "0.8297", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "strosh", a: "1", b: "-0.566", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "substituting", a: "1", b: "-0.1719", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "sudsage", a: "1", b: "-0.6938", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "sun", a: "1", b: "-1.8792", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "swane", a: "1", b: "0.1993", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "swate", a: "1", b: "-0.5445", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "sweaner", a: "1", b: "0.0891", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "sweater", a: "1", b: "-1.5625", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "swint", a: "1", b: "-0.2883", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "tax", a: "1", b: "0.3172", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "teacher", a: "1", b: "-2.3032", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "teaditore", a: "1", b: "-0.0516", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "teech", a: "1", b: "0.6031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "telechinct", a: "1", b: "0.5864", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "telescoped", a: "1", b: "1.6238", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "testify", a: "1", b: "1.3181", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "tfaer", a: "1", b: "-1.6447", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "them", a: "1", b: "-1.9434", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "they", a: "1", b: "-2.6094", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "thich", a: "1", b: "0.4156", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "thip", a: "1", b: "-0.2672", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "thoke", a: "1", b: "-1.182", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "those", a: "1", b: "-1.4672", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "throomba", a: "1", b: "-1.4765", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "through", a: "1", b: "-1.8653", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "throw", a: "1", b: "-2.0328", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tickle", a: "1", b: "-0.9164", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tiest", a: "1", b: "-0.5484", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "tights", a: "1", b: "0.1344", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "time", a: "1", b: "-1.8484", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "timmed", a: "1", b: "1.757", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "tis", a: "1", b: "-1.0718", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "toast", a: "1", b: "-1.4234", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tocard", a: "1", b: "-0.5539", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "toe", a: "1", b: "-0.8383", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tou", a: "1", b: "-2.0828", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "touch", a: "1", b: "-1.8461", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "toy", a: "1", b: "-1.2876", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "trage", a: "1", b: "0.5969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "train", a: "1", b: "-2.0234", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "trank", a: "1", b: "2.3438", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "trash", a: "1", b: "-1.9227", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tricycle", a: "1", b: "0.4484", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tried", a: "1", b: "-1.9422", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "trood", a: "1", b: "-0.3277", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "truck", a: "1", b: "-1.7377", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "trull", a: "1", b: "0.1024", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "truthfulness", a: "1", b: "0.0844", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "turn", a: "1", b: "-1.868", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "twelfth", a: "1", b: "5.3875", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "twenality", a: "1", b: "0.4812", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "twew", a: "1", b: "-1.599", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "uden", a: "1", b: "-1.7516", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "ueer", a: "1", b: "-2.7258", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "ujst", a: "1", b: "-1.6758", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "unbeatable", a: "1", b: "-0.3", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "uncomfortable", a: "1", b: "-1.3523", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "understand", a: "1", b: "-1.992", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "unger", a: "1", b: "-1.0659", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "uoy", a: "1", b: "-2.0415", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "urner", a: "1", b: "-1.3211", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "utashing", a: "1", b: "-1.4071", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "vitamins", a: "1", b: "-0.2789", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "wared", a: "1", b: "1.7691", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "wase", a: "1", b: "0.7861", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "washing", a: "1", b: "-1.4648", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "wask", a: "1", b: "0.1437", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "watch", a: "1", b: "-1.9386", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "waves", a: "1", b: "-1.4909", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "we", a: "1", b: "-1.6286", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "went", a: "1", b: "-1.458", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "which", a: "1", b: "-2.1781", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "whith", a: "1", b: "1.2344", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "whose", a: "1", b: "-0.0099", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "whow", a: "1", b: "0.0742", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "will", a: "1", b: "-2.1911", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "witasons", a: "1", b: "-0.9203", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "without", a: "1", b: "-1.7468", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "woft", a: "1", b: "-0.0576", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "woir", a: "1", b: "-0.9188", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "wolf", a: "1", b: "-1.7453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "wood", a: "1", b: "-1.8875", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "would", a: "1", b: "-1.5156", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "wourn", a: "1", b: "-0.4617", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "wrass", a: "1", b: "-0.2742", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "wrist", a: "1", b: "-0.6508", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "yos", a: "1", b: "-1.795", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "youx", a: "1", b: "-1.8047", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "ypla", a: "1", b: "-2.2222", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "yucky", a: "1", b: "1.7969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "zebra", a: "1", b: "-0.5125", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }], dataNewURL: [{ "": "1", word: "knelt", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "2", word: "knob", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "3", word: "nervousness", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "4", word: "parachute", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "5", word: "refreshment", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "6", word: "reuse", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "7", word: "rhythm", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "8", word: "sigh", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "9", word: "straightening", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "10", word: "substituting", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "11", word: "surprise", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "12", word: "trough", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "13", word: "truthfulness", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "14", word: "twelfth", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "15", word: "unbeatable", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "16", word: "uncomfortable", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "17", word: "wrist", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "18", word: "announcement", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "19", word: "argue", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "20", word: "assignment", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "21", word: "awesome", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "22", word: "awful", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "23", word: "beneath", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "24", word: "ache", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "25", word: "dishonesty", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "26", word: "flour", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "27", word: "forgetfulness", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "28", word: "friendliness", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "29", word: "heaviness", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "real" }, { "": "30", word: "beascient", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "31", word: "bloodsefully", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "32", word: "broor", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "33", word: "celegeour", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "34", word: "chenteen", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "35", word: "chetion", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "36", word: "chrost", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "37", word: "clidine", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "38", word: "conchen", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "39", word: "confrous", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "40", word: "docidly", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "41", word: "feem", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "42", word: "fictine", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "43", word: "garrow", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "44", word: "hortly", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "45", word: "jeacter", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "46", word: "lawlage", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "47", word: "nuccest", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "48", word: "opplish", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "49", word: "spentary", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "50", word: "teaditore", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "51", word: "thich", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "52", word: "thip", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "53", word: "twenality", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "54", word: "socturse", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "55", word: "admic", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "56", word: "adorge", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "57", word: "caund", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "58", word: "devernmeted", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }, { "": "59", word: "durper", a: "1", b: "0", c: "0.5", d: "1", corpusId: "corpusNew", realpseudo: "pseudo" }], dataNewEasyURL: [{ word: "all", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "arp", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "ask", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "baby", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "beas", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "because", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "bed", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "behind", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "beir", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "bep", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "big", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "bir", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "bird", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "blue", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "boc", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "bok", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "book", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "box", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "boy", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "bunny", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "cales", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "capy", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "catch", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "chrodgmas", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "coff", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "coom", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "cound", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "dard", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "dark", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "day", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "dier", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "door", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "dorn", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "ead", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "eaks", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "eat", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "ecd", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "end", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "ent", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "ethlyots", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "everything", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "face", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "far", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "feir", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "fet", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "fice", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "firrs", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "first", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "fli", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "fly", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "fom", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "food", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "for", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "four", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "frere", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "frieks", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "friend", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "full", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "fure", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "galer", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "get", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "gorl", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "gove", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "grob", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "grow", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "habs", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "hacs", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "haid", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "hair", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "happy", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "hat", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "head", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "hean", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "hear", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "hig", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "high", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "hisk", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "hode", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "home", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "hos", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "house", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "hure", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "keep", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "kids", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "know", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "lall", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "last", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "len", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "let", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "lidge", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "like", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "little", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "lond", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "magse", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "make", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "many", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "mear", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "mouse", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "much", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "mume", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "mut", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "muth", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "nead", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "next", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "nice", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "nomp", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "nond", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "nose", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "not", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "odge", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "off", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "ome", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "one", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "ork", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "orks", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "our", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "out", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "oys", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "pekste", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "pig", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "plape", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "promy", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "rabbit", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "read", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "right", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "rirms", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "room", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "run", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "rup", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "sad", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "say", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "scay", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "school", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "scom", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "side", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "sime", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "sirning", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "sither", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "ska", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "ske", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "sku", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "sky", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "sleep", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "small", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "smile", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "sning", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "snink", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "snis", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "snom", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "snow", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "soicore", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "soleore", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "someone", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "soon", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "soop", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "sorgore", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "sound", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "spow", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "stup", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "sune", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "sure", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "sweet", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "tafrer", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "tagner", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "tell", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "tep", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "thing", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "this", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "thist", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "three", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "throu", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "today", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "top", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "tre", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "tree", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "try", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "ture", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "twe", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "unt", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "use", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "very", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "vity", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "wait", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "walk", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "warl", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "warm", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "water", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "what", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "whe", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "whem", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "when", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "where", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "who", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "why", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "wibs", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "wish", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "with", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }, { word: "wrile", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "yier", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "pseudo" }, { word: "your", a: "1", b: "0", c: "0.5", d: "1", corpusId: "en-corpusNew-easy", realpseudo: "real" }], dataValidatedURL2: [{ word: "accustomed", a: "1", b: "2.0193", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ache", a: "1", b: "0.9781", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "admic", a: "1", b: "0.9094", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "adorge", a: "1", b: "0.4281", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "advice", a: "1", b: "-1.1461", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "advole", a: "1", b: "-0.157", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "agreed", a: "1", b: "-1.5328", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ahriered", a: "1", b: "-1.1813", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "albust", a: "1", b: "-0.4836", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "alk", a: "1", b: "-1.2998", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "animal", a: "1", b: "-1.8634", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "announcement", a: "1", b: "-1.3313", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "answer", a: "1", b: "-1.8828", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ap", a: "1", b: "-1.1356", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "appropriates", a: "1", b: "0.724", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "argue", a: "1", b: "-0.6383", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "arm", a: "1", b: "-1.21", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "arsher", a: "1", b: "-0.4668", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "asca", a: "1", b: "-1.7761", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ase", a: "1", b: "-1.2726", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "assignment", a: "1", b: "-1.4703", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "audience", a: "1", b: "0.125", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "aunt", a: "1", b: "-0.0977", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "awful", a: "1", b: "-1.0406", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "baafness", a: "1", b: "-1.1653", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "babysitter", a: "1", b: "-1.4039", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "back", a: "1", b: "-1.868", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "bahysitral", a: "1", b: "-1.3188", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bangs", a: "1", b: "-0.3012", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "banny", a: "1", b: "0.1023", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "bath", a: "1", b: "-1.6727", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "bathroom", a: "1", b: "-2.2976", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "beads", a: "1", b: "-0.2609", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "bear", a: "1", b: "-1.7523", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "beascient", a: "1", b: "0.0445", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "bebill", a: "1", b: "-1.1313", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "becge", a: "1", b: "-1.3453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "become", a: "1", b: "-2.0951", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "beeltisul", a: "1", b: "-1.0042", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "begin", a: "1", b: "-1.769", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "bench", a: "1", b: "-1.1453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "beneath", a: "1", b: "-0.043", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "benon", a: "1", b: "-1.2143", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "beside", a: "1", b: "-0.9133", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "besime", a: "1", b: "-0.8625", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "best", a: "1", b: "-1.9808", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "bicycle", a: "1", b: "-1.1031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "bield", a: "1", b: "-0.4523", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bimygra", a: "1", b: "-1.6859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "black", a: "1", b: "-2.1126", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "blaw", a: "1", b: "-0.2813", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bledge", a: "1", b: "1.0279", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "bloodsefully", a: "1", b: "1.9125", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "blow", a: "1", b: "-1.3313", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "boat", a: "1", b: "-1.6305", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "boods", a: "1", b: "0.2867", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "borm", a: "1", b: "0.1031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bour", a: "1", b: "-0.4609", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bragon", a: "1", b: "0.4633", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "brap", a: "1", b: "-0.7094", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "brought", a: "1", b: "-1.413", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "brubs", a: "1", b: "-0.8158", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "brush", a: "1", b: "-1.5359", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "budget", a: "1", b: "-0.7395", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "build", a: "1", b: "-1.5563", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "building", a: "1", b: "-1.9192", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "buit", a: "1", b: "1.1312", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "buk", a: "1", b: "-1.6453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "bullon", a: "1", b: "0.2469", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "business", a: "1", b: "-1.5109", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "button", a: "1", b: "-1.7688", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "buy", a: "1", b: "-1.9734", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "camed", a: "1", b: "0.618", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "camera", a: "1", b: "-1.8953", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "candy", a: "1", b: "-1.7709", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "carry", a: "1", b: "-1.2656", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "cas", a: "1", b: "-1.1565", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "casi", a: "1", b: "-1.7875", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "caund", a: "1", b: "-0.9305", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "celegeour", a: "1", b: "-0.2344", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "censtel", a: "1", b: "0.0391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "central", a: "1", b: "-0.5844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "chance", a: "1", b: "-1.5052", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "chanding", a: "1", b: "1.3591", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "chareet", a: "1", b: "-0.4747", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "charks", a: "1", b: "0.3231", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "che", a: "1", b: "-1.772", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "chenteen", a: "1", b: "-0.6852", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "child", a: "1", b: "-1.9844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "chird", a: "1", b: "1.0125", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "chrost", a: "1", b: "-0.2082", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "cibsus", a: "1", b: "-1.3178", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "circus", a: "1", b: "-0.7235", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "clap", a: "1", b: "-1.5766", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "clidine", a: "1", b: "-0.2172", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "clock", a: "1", b: "-2.1953", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "clomify", a: "1", b: "-0.2706", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "coak", a: "1", b: "0.7805", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "cok", a: "1", b: "-1.6162", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "cold", a: "1", b: "-2.1961", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "collosks", a: "1", b: "-1.2432", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "come", a: "1", b: "-2.0624", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "complase", a: "1", b: "2.51", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "complete", a: "1", b: "-2.1519", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "compliment", a: "1", b: "-1.4037", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "component", a: "1", b: "0.7203", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "configuration", a: "1", b: "0.2159", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "confrous", a: "1", b: "0.7523", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "contain", a: "1", b: "-0.5884", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "cook", a: "1", b: "-2.0797", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "cotcenent", a: "1", b: "0.8336", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "coth", a: "1", b: "0.5866", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "cotosks", a: "1", b: "-1.4941", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "cotplicant", a: "1", b: "-0.118", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "country", a: "1", b: "-1.8656", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "coustly", a: "1", b: "1.2852", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "crayon", a: "1", b: "-0.9656", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "crit", a: "1", b: "-0.2989", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "cry", a: "1", b: "-1.7688", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "cully", a: "1", b: "-0.2438", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "cuppom", a: "1", b: "-0.83", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "custom", a: "1", b: "-1.1312", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "dack", a: "1", b: "-0.1156", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "daople", a: "1", b: "-1.674", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "delivery", a: "1", b: "-1.0313", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "describe", a: "1", b: "-1.0471", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "destrifs", a: "1", b: "-1.1689", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "devernmeted", a: "1", b: "1.8922", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "dimp", a: "1", b: "0.0609", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "dishonesty", a: "1", b: "0.6141", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "distance", a: "1", b: "-1.2057", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "doifs", a: "1", b: "-2.0109", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "dolc", a: "1", b: "-1.9471", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "donut", a: "1", b: "-0.5813", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "doubtful", a: "1", b: "0.6291", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "draw", a: "1", b: "-1.6086", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "drawer", a: "1", b: "-0.6188", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "drine", a: "1", b: "0.5727", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "drow", a: "1", b: "1.4937", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "druper", a: "1", b: "-0.1586", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "drustion", a: "1", b: "0.1956", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "dryer", a: "1", b: "-0.1658", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "duck", a: "1", b: "-1.8742", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "durper", a: "1", b: "0.0668", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "each", a: "1", b: "-1.5938", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "eamn", a: "1", b: "-1.7994", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ef", a: "1", b: "-1.9209", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "effake", a: "1", b: "-1.4805", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "effect", a: "1", b: "-0.4484", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "egg", a: "1", b: "-1.5242", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "elements", a: "1", b: "-0.5745", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "elsand", a: "1", b: "-0.6641", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "empty", a: "1", b: "-1.3055", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "erery", a: "1", b: "-1.0875", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "ertby", a: "1", b: "-1.4797", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "erv", a: "1", b: "-2.3375", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "every", a: "1", b: "-2.218", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "expand", a: "1", b: "-0.6359", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "explore", a: "1", b: "-1.8828", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "extrord", a: "1", b: "0.5844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "eye", a: "1", b: "-1.65", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "eys", a: "1", b: "0.1344", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "fafever", a: "1", b: "-1.3399", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fage", a: "1", b: "0.0375", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "famous", a: "1", b: "-1.6985", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "farm", a: "1", b: "-1.7047", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "farmer", a: "1", b: "-1.7147", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "faster", a: "1", b: "-1.9578", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "fattify", a: "1", b: "-0.5522", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "feem", a: "1", b: "-0.2641", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "fif", a: "1", b: "-1.5719", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "firethecg", a: "1", b: "-1.1969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "firetruck", a: "1", b: "-0.8078", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "fistory", a: "1", b: "-0.0619", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fite", a: "1", b: "-0.0329", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fix", a: "1", b: "-2.0109", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "flankfopper", a: "1", b: "-0.9824", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fliel", a: "1", b: "-0.8465", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "foat", a: "1", b: "1.1422", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "focus", a: "1", b: "-1.0031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "foits", a: "1", b: "-1.3375", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "fonos", a: "1", b: "-1.518", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "foot", a: "1", b: "-1.9688", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "force", a: "1", b: "-0.6797", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "forgetfulness", a: "1", b: "0.2266", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "freat", a: "1", b: "0.7", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "friendliness", a: "1", b: "0.1187", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "from", a: "1", b: "-1.9543", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "fror", a: "1", b: "-1.2757", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "fun", a: "1", b: "-1.9692", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ganding", a: "1", b: "1.1078", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "garage", a: "1", b: "-0.5859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "garden", a: "1", b: "-1.6296", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "garrow", a: "1", b: "1.268", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "ge", a: "1", b: "-1.9209", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "germantia", a: "1", b: "-0.1931", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ggnoi", a: "1", b: "-2.0585", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ginth", a: "1", b: "-1.476", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "give", a: "1", b: "-1.902", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "glass", a: "1", b: "-2.5688", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "good", a: "1", b: "-2.0017", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "goose", a: "1", b: "-0.4918", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "grackhatrer", a: "1", b: "-0.3195", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "grackroiler", a: "1", b: "-0.5008", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "grandfather", a: "1", b: "-1.2672", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "grandmother", a: "1", b: "-1.5273", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "grapes", a: "1", b: "-1.4664", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "grarts", a: "1", b: "0.1996", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "grasshopper", a: "1", b: "-0.5701", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "gravel", a: "1", b: "-0.3295", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "great", a: "1", b: "-2.0924", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "grock", a: "1", b: "0.5031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "groon", a: "1", b: "0.3688", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "guarantee", a: "1", b: "0.5863", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "guess", a: "1", b: "-1.3482", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "guoys", a: "1", b: "-1.6377", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "gurynh", a: "1", b: "-1.8788", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "hamburger", a: "1", b: "-1.4922", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "hammer", a: "1", b: "-1.3249", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hard", a: "1", b: "-1.8961", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "hawn", a: "1", b: "-0", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "heaviness", a: "1", b: "-0.5031", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "hello", a: "1", b: "-2.432", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hen", a: "1", b: "3.1125", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "him", a: "1", b: "-1.9585", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "history", a: "1", b: "-1.947", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hortly", a: "1", b: "0.0859", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "hot", a: "1", b: "-1.9839", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "houle", a: "1", b: "-0.6484", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "however", a: "1", b: "-1.2275", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hu", a: "1", b: "-1.9647", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "hungry", a: "1", b: "-2.0196", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "hus", a: "1", b: "-1.2454", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "hust", a: "1", b: "1.3227", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "imagine", a: "1", b: "-1.7285", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "imeyits", a: "1", b: "-1.6035", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "inni", a: "1", b: "-1.9194", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "inside", a: "1", b: "-1.9305", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "insows", a: "1", b: "-1.1476", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "into", a: "1", b: "-1.5771", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "invent", a: "1", b: "-0.3202", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "investigate", a: "1", b: "-0.878", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "ip", a: "1", b: "-1.6792", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "jar", a: "1", b: "-0.6188", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "jeacter", a: "1", b: "-0.4898", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "jello", a: "1", b: "0.5969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "jewel", a: "1", b: "0.1001", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "jinto", a: "1", b: "-2.1023", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "jixel", a: "1", b: "-1.3912", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "join", a: "1", b: "-1.9844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "jor", a: "1", b: "-1.8359", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "joze", a: "1", b: "-1.3922", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "kees", a: "1", b: "-0.4242", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "kenchen", a: "1", b: "-0.0672", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "keys", a: "1", b: "-2.1305", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "khtna", a: "1", b: "-1.851", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "knelt", a: "1", b: "4.4656", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "knob", a: "1", b: "1.275", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "kusly", a: "1", b: "-2.0258", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "lamb", a: "1", b: "0.025", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "lame", a: "1", b: "-0.3846", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "lampupser", a: "1", b: "-0.2844", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "lant", a: "1", b: "-0.6761", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "larl", a: "1", b: "-1.7625", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "lawlage", a: "1", b: "1.3328", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "lefel", a: "1", b: "-1.2047", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "left", a: "1", b: "-1.1106", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "legal", a: "1", b: "0.6312", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "leld", a: "1", b: "-0.2464", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "liberty", a: "1", b: "-0.7144", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "library", a: "1", b: "-1.9472", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "liffs", a: "1", b: "-0.7959", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "light", a: "1", b: "-2.0091", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "lips", a: "1", b: "-1.9234", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "listen", a: "1", b: "-1.7363", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "locate", a: "1", b: "-0.1391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "lockle", a: "1", b: "0.0781", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "loleh", a: "1", b: "-1.7599", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "loms", a: "1", b: "-1.1972", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "long", a: "1", b: "-1.8875", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "look", a: "1", b: "-2.0918", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "losh", a: "1", b: "-0.9214", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "lunch", a: "1", b: "-2.0647", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "lut", a: "1", b: "-1.7859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "machent", a: "1", b: "0.8062", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "machine", a: "1", b: "-1.2391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "mader", a: "1", b: "0.9322", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "mannanency", a: "1", b: "0.5776", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "medicine", a: "1", b: "-1.0313", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "memitory", a: "1", b: "2.1859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "mips", a: "1", b: "-1.2195", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "miss", a: "1", b: "-2.0167", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "mitera", a: "1", b: "-0.8547", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "molent", a: "1", b: "-0.2784", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "money", a: "1", b: "-2.0846", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "moon", a: "1", b: "-1.942", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "more", a: "1", b: "-1.858", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "morning", a: "1", b: "-1.9246", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "mout", a: "1", b: "-0.4225", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "mun", a: "1", b: "-1.2363", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "mystery", a: "1", b: "-1.5281", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "name", a: "1", b: "-2.0174", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "natural", a: "1", b: "-1.4847", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "naw", a: "1", b: "0.3072", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "nervousness", a: "1", b: "0.1121", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "nied", a: "1", b: "-1.1978", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "night", a: "1", b: "-2.0849", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "nilt", a: "1", b: "-1.2266", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "nop", a: "1", b: "-0.9974", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "nuccest", a: "1", b: "-0.4", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "nuf", a: "1", b: "-1.8266", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "nulch", a: "1", b: "-1.5537", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "number", a: "1", b: "-2.1833", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "nunge", a: "1", b: "-0.9547", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "nurse", a: "1", b: "-1.3766", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "oban", a: "1", b: "-1.3865", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "om", a: "1", b: "-1.778", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "once", a: "1", b: "-1.5894", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "open", a: "1", b: "-1.9263", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "opplish", a: "1", b: "0.9602", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "orm", a: "1", b: "-1.875", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "orn", a: "1", b: "-1.6282", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ot", a: "1", b: "-1.8419", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "oven", a: "1", b: "-1.5961", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "overwhelm", a: "1", b: "0.9835", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "owl", a: "1", b: "-0.9359", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "owner", a: "1", b: "-1.5391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "package", a: "1", b: "-1.8547", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "paekaga", a: "1", b: "-1.5117", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pame", a: "1", b: "-0.4581", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "parachute", a: "1", b: "0.35", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "pateesh", a: "1", b: "-1.3992", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "patient", a: "1", b: "-0.2469", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "peace", a: "1", b: "-1.6576", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "pealt", a: "1", b: "-0.1161", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "ped", a: "1", b: "-0.8617", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "peldicle", a: "1", b: "-0.0805", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "penny", a: "1", b: "-1.825", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "people", a: "1", b: "-2.2787", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "person", a: "1", b: "-2.293", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "perste", a: "1", b: "-0.4484", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "phlere", a: "1", b: "-1.575", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "pickle", a: "1", b: "-1.4855", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "pids", a: "1", b: "-0.9719", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pileral", a: "1", b: "-0.0594", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pingle", a: "1", b: "0.8852", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "plane", a: "1", b: "-1.7337", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "plate", a: "1", b: "-1.4578", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "play", a: "1", b: "-2.7276", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "plays", a: "1", b: "-2.0827", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "pledge", a: "1", b: "0.612", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "plissars", a: "1", b: "-0.3391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "polyll", a: "1", b: "-1.3219", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "poom", a: "1", b: "0.1773", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "poor", a: "1", b: "-1.7859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "popsicle", a: "1", b: "-0.2777", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "porch", a: "1", b: "-0.2008", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "potato", a: "1", b: "-1.7273", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "poyed", a: "1", b: "-1.2625", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pretty", a: "1", b: "-1.8349", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "pundy", a: "1", b: "0.0937", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "pung", a: "1", b: "-0.3609", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "punge", a: "1", b: "0.5812", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "purbon", a: "1", b: "-1.0297", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "purchase", a: "1", b: "-0.7395", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "purple", a: "1", b: "-2.2148", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "purse", a: "1", b: "-0.5805", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "push", a: "1", b: "-1.4594", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "put", a: "1", b: "-1.4453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "puticine", a: "1", b: "-0.3859", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "qualify", a: "1", b: "0.181", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "question", a: "1", b: "-1.6115", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "reast", a: "1", b: "1.0516", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "rebosks", a: "1", b: "-1.379", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "recipe", a: "1", b: "-0.5594", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "refreshment", a: "1", b: "-0.8383", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "regiva", a: "1", b: "-1.0219", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "resolve", a: "1", b: "-0.4545", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "reuse", a: "1", b: "2.4688", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "reverse", a: "1", b: "-0.9278", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "rhythm", a: "1", b: "-0.2344", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "rince", a: "1", b: "1.9156", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "roast", a: "1", b: "-1.068", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "roder", a: "1", b: "0.3532", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "round", a: "1", b: "-1.8996", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "runey", a: "1", b: "-0.7783", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "sain", a: "1", b: "0.5231", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "samato", a: "1", b: "-0.4383", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "sandbox", a: "1", b: "-1.4352", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "sashbex", a: "1", b: "-0.9289", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "scared", a: "1", b: "-1.4758", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "scavec", a: "1", b: "-1.1785", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "scays", a: "1", b: "-0.3459", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "scissors", a: "1", b: "-0.2391", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "scogs", a: "1", b: "-1.4375", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "score", a: "1", b: "-1.5297", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "scrow", a: "1", b: "1.725", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "several", a: "1", b: "-0.9984", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "shie", a: "1", b: "-1.0414", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "shine", a: "1", b: "-1.0637", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "shink", a: "1", b: "2.8345", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "shob", a: "1", b: "-0.9828", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "shoe", a: "1", b: "-0.7766", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "short", a: "1", b: "-1.7368", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "show", a: "1", b: "-3.3836", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "shring", a: "1", b: "0.9304", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "sick", a: "1", b: "-1.6754", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "since", a: "1", b: "-1.1336", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "sit", a: "1", b: "-1.4368", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "slace", a: "1", b: "0.2242", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "slatchly", a: "1", b: "-0.35", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "slellen", a: "1", b: "-0.9762", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "slid", a: "1", b: "2.8203", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "slod", a: "1", b: "-0.6055", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "snock", a: "1", b: "1.0875", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "snose", a: "1", b: "0.5565", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "socturse", a: "1", b: "-0.0602", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "spentary", a: "1", b: "2.2391", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "speveal", a: "1", b: "-0.2908", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "splankler", a: "1", b: "0.5969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "sprinkler", a: "1", b: "-0.5492", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "spu", a: "1", b: "-1.7924", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "spy", a: "1", b: "-0.774", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "staroan", a: "1", b: "-0.7266", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "start", a: "1", b: "-1.9289", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "starz", a: "1", b: "-0.2672", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "station", a: "1", b: "-0.8938", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "stenil", a: "1", b: "-0.7614", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "sticygra", a: "1", b: "-1.8031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "straightening", a: "1", b: "-0.4672", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "street", a: "1", b: "-1.8484", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "strength", a: "1", b: "-1.218", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "stressrs", a: "1", b: "0.8297", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "strosh", a: "1", b: "-0.566", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "substituting", a: "1", b: "-0.1719", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "sudsage", a: "1", b: "-0.6938", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "sun", a: "1", b: "-1.8792", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "swane", a: "1", b: "0.1993", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "sweaner", a: "1", b: "0.0891", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "sweater", a: "1", b: "-1.5625", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "swint", a: "1", b: "-0.2883", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "tax", a: "1", b: "0.3172", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "teacher", a: "1", b: "-2.3032", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "teaditore", a: "1", b: "-0.0516", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "teech", a: "1", b: "0.6031", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "telechinct", a: "1", b: "0.5864", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "telescoped", a: "1", b: "1.6238", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "testify", a: "1", b: "1.3181", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "tfaer", a: "1", b: "-1.6447", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "them", a: "1", b: "-1.9434", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "they", a: "1", b: "-2.6094", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "thich", a: "1", b: "0.4156", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "thip", a: "1", b: "-0.2672", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "thoke", a: "1", b: "-1.182", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "those", a: "1", b: "-1.4672", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "throomba", a: "1", b: "-1.4765", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "through", a: "1", b: "-1.8653", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "throw", a: "1", b: "-2.0328", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tickle", a: "1", b: "-0.9164", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tights", a: "1", b: "0.1344", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "time", a: "1", b: "-1.8484", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "timmed", a: "1", b: "1.757", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "tis", a: "1", b: "-1.0718", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "toast", a: "1", b: "-1.4234", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "toe", a: "1", b: "-0.8383", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tou", a: "1", b: "-2.0828", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "touch", a: "1", b: "-1.8461", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "toy", a: "1", b: "-1.2876", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "trage", a: "1", b: "0.5969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "train", a: "1", b: "-2.0234", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "trank", a: "1", b: "2.3438", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "tricycle", a: "1", b: "0.4484", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "tried", a: "1", b: "-1.9422", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "trood", a: "1", b: "-0.3277", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "truck", a: "1", b: "-1.7377", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "trull", a: "1", b: "0.1024", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "truthfulness", a: "1", b: "0.0844", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "turn", a: "1", b: "-1.868", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "twelfth", a: "1", b: "5.3875", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "twenality", a: "1", b: "0.4812", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "pseudo" }, { word: "twew", a: "1", b: "-1.599", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "uden", a: "1", b: "-1.7516", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "ueer", a: "1", b: "-2.7258", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "ujst", a: "1", b: "-1.6758", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "unbeatable", a: "1", b: "-0.3", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "uncomfortable", a: "1", b: "-1.3523", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "understand", a: "1", b: "-1.992", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "unger", a: "1", b: "-1.0659", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "uoy", a: "1", b: "-2.0415", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "urner", a: "1", b: "-1.3211", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "utashing", a: "1", b: "-1.4071", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "vitamins", a: "1", b: "-0.2789", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "wared", a: "1", b: "1.7691", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "wase", a: "1", b: "0.7861", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "washing", a: "1", b: "-1.4648", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "wask", a: "1", b: "0.1437", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "watch", a: "1", b: "-1.9386", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "waves", a: "1", b: "-1.4909", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "we", a: "1", b: "-1.6286", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "went", a: "1", b: "-1.458", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "which", a: "1", b: "-2.1781", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "whith", a: "1", b: "1.2344", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "whose", a: "1", b: "-0.0099", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "whow", a: "1", b: "0.0742", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "will", a: "1", b: "-2.1911", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "witasons", a: "1", b: "-0.9203", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "without", a: "1", b: "-1.7468", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "woft", a: "1", b: "-0.0576", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "woir", a: "1", b: "-0.9188", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "wolf", a: "1", b: "-1.7453", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "wood", a: "1", b: "-1.8875", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "real" }, { word: "would", a: "1", b: "-1.5156", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "wourn", a: "1", b: "-0.4617", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "wrass", a: "1", b: "-0.2742", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "wrist", a: "1", b: "-0.6508", c: "0.5", d: "1", corpusId: "en-validated-v3", realpseudo: "real" }, { word: "yos", a: "1", b: "-1.795", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "youx", a: "1", b: "-1.8047", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "pseudo" }, { word: "ypla", a: "1", b: "-2.2222", c: "0.5", d: "1", corpusId: "en-validated-v1", realpseudo: "pseudo" }, { word: "yucky", a: "1", b: "1.7969", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }, { word: "zebra", a: "1", b: "-0.5125", c: "0.5", d: "1", corpusId: "en-validated-v2", realpseudo: "real" }] }, es: { dataPracticeURL: [{ word: "bluzp", realpseudo: "pseudo", block: "practice", order: "1", difficulty: "0" }, { word: "barco", realpseudo: "real", block: "practice", order: "2", difficulty: "0" }, { word: "sobre", realpseudo: "real", block: "practice", order: "3", difficulty: "0" }, { word: "sofne", realpseudo: "pseudo", block: "practice", order: "4", difficulty: "0" }, { word: "hin", realpseudo: "pseudo", block: "practice", order: "5", difficulty: "0" }], dataValidatedURL: [{ word: "casa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "perro", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mesa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "silla", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "niño", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "padre", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "jugar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bailar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "amar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "grande", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "pequeño", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "rápido", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lento", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "alto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bajo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "triste", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "rojo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "azul", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "amarillo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "verde", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "blanco", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "comida", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "agua", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "leche", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "fruta", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pelota", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "libro", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "amigo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "estudiar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dibujar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "nadar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "corazón", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "árbol", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "flor", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "montaña", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "calle", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "fútbol", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "guitarra", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "película", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ciudad", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "familia", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "hermana", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "tío", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "abuela", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "escuchar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "hablar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "leer", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "escribir", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "estudioso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "inteligente", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ruidoso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "tranquilo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "duro", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "fácil", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dulce", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "salado", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "sabroso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "divertido", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "interesante", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pez", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pájaro", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "insecto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "elefante", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "tigre", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "león", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ratón", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "oso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cabeza", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ojo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "boca", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "oreja", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mano", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pierna", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "brazo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cuerpo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ropa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "sombrero", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "vestido", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pantalón", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "camisa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "zapatos", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "joyas", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "dinero", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "papel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lápiz", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cuaderno", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "diccionario", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mochila", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pluma", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "llave", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "teléfono", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "música", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "estrella", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "nube", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "caminar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "sentarse", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dormir", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cantante", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "bailarín", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cocinero", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "pintor", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "estudiante", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "profesor", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "doctor", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dentista", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "policía", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bombero", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "peluquero", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "oficina", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "parque", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "museo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "hospital", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "restaurante", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "supermercado", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "tienda", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "viajar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cazar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "montar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "aprender", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "juego", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "fiesta", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cumpleaños", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "vacaciones", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "librería", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "comprar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "buscar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "encontrar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "beber", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "cocinar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "desayunar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lavar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "limpiar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "cepillar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "peinar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bañarse", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dormitorio", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "sala", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cocina", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "baño", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "jardín", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "carro", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "tren", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "avión", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "barco", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "autobús", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bicicleta", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "helado", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pastel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "galleta", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "chocolate", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ensalada", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "sopa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "frutas", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "verduras", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "queso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "leche", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "jugo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "refresco", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "café", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "té", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "gaseosa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pollo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "carne", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "pescado", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "vegetariano", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "postre", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "picante", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "amargo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "suave", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "frío", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "caliente", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "largo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "corto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "nuevo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "viejo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bonito", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "feo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "aburrido", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "difícil", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "abierto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "contento", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "asustado", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "cansado", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "emocionado", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mada", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mebro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mosa", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "rirra", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "nizo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pable", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "jusar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "builar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "acar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "plande", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pequevo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "rávido", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "linto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "amdo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bavo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "treste", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "rovo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "añíl", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "amerillo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "gasce", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "glanco", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "codida", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "agum", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "terre", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "cruta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "selota", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ribro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "acigo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "etsuriod", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "dipujar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "nacar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "coraján", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "írbol", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bler", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dintaña", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "carre", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "fütbol", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "guitacha", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pelácula", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ciddad", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "facitia", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "hormana", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "rúo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "apiela", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "escurrar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "hadrar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "loer", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "esfribir", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "estudueso", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "intecigente", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ruedoso", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pronquilo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "huro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "hácil", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "felce", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "sarado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "sachoso", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "didertido", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "intecesante", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "puz", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "májaro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "insepto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "eceñante", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "rigre", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "loón", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "tatón", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "omo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "caveja", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ejo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "beda", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "oreza", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "puerga", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "braño", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cuerzo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "reba", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "suntrero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lestido", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "pantalán", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "cacisa", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "qapatos", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "joyal", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "disero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "pabel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lópiz", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cuamerno", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "dicnororia", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mobrila", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "pluda", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "flave", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "tecézono", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dúsica", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "escrella", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "nupe", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cacinar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pentarse", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "formir", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "castante", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "biolarín", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "colinero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pentor", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "estudionte", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "projesor", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "foctor", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dentesta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mocicía", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "tombero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "peluhuero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ofilina", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "panque", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "puseo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "hompital", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "restiarante", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "superdercado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "rianda", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "gaujar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cajar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mestar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "aplander", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "jueco", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "huista", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cumpleapos", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "hacaciones", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "vibrería", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "compnar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "birdar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "encondrar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "beper", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cominar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "desaypnar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lajar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lilgiar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cevillar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pionar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "baqarse", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dorcitorio", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "raca", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "comina", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bafo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "jardán", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "mabro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "fren", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "aving", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "bango", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "autobys", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bicifleta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "felado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pendal", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "falleta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "grocolate", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "envecada", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "sova", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "crutas", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "vernuras", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "wiego", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "rerre", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "juco", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "replesco", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cazé", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "dy", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "gacaosa", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "merro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "carle", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "sescado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "vegetariono", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pombre", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "pitente", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "asarzo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "suape", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "prío", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "caluiste", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-core" }, { word: "larlo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "menco", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "nuejo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "vievo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "tsotno", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "heo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "adullido", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "difícel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "apierto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "concento", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "asostado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "carmado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "etocionado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "halagüeño", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "hexágono", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lentejuela", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "requerimiento", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "resquebrajadura", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "utilitario", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ventajosamente", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "zigzagueante", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "aburrimiento", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "acostumbrado", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "acostamiento", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "estacionamiento", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "bicilíndrico", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "casualidad", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "catamáran", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "chasquilla", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "coincidencialmente", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "comercialización", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "arquitectura", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cigüeña", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "jurásico", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "juguetería", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lección", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lavándula", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mnemotécnica", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "psicológico", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "reiteración", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "relampagueo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "esquimal", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "guindilla", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "rinoceronte", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "guisante", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "guepardo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "xilófono", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "desequilibrio", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "agradecimiento", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cráneo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "vislumbrar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ambigüedad", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "almohada", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "deslizamiento", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "inquebrantable", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "hatajo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "gruñido", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "escéptico", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "desarrollar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "paraguas", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "murciélago", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "refrigerador", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cuadrilátero", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "arrebol", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "gioxémico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "hufánzico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lezígro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "reqúlima", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "quimoscó", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "respléndara", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "utímetro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "venrumano", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "yátelaré", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "zanzínquero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "acustumerando", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "estirquinamiento", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "biciséntrico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "casuállico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "catimbán", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "chasquídeo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "coencidentalismo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "corabacionismo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "comercialínico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "arquiteturimo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ciguña", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "jurásimo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "juguico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lexicano", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "lapándulo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "mnemotéquico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "psicolíndrico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "retegración", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "relámpajo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "esquimalón", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "guindel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "rinocorón", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "guisanco", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "puedardo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "xalofón", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "desequilímiro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "agratécnico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "cráxido", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "vísulumbar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "ambigéxodo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "almohadura", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "deslinzado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "inquebrántico", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "grúcido", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "escéptero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "quezco", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "desarroyar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "paragües", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "murciáligo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "estacionamindo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }, { word: "refigelante", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "spanish-random" }], dataNewURL: "", dataNewEasyURL: "", dataValidatedURL2: "" }, it: { dataPracticeURL: [{ word: "valo", realpseudo: "pseudo", block: "practice", order: "1", difficulty: "0" }, { word: "come", realpseudo: "real", block: "practice", order: "2", difficulty: "0" }, { word: "dopo", realpseudo: "real", block: "practice", order: "3", difficulty: "0" }, { word: "fuodi", realpseudo: "pseudo", block: "practice", order: "4", difficulty: "0" }, { word: "cino", realpseudo: "pseudo", block: "practice", order: "5", difficulty: "0" }], dataValidatedURL: [{ "": "0", word: "pane", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "1", word: "formica", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "2", word: "barca", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "3", word: "bambola", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "4", word: "padella", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "5", word: "cavallo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "6", word: "colla", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "7", word: "elefante", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "8", word: "fiore", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "9", word: "mano", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "10", word: "matita", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "11", word: "rospo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "12", word: "tazzina", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "13", word: "urlo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "14", word: "nave", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "15", word: "mente", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "16", word: "disordine", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "17", word: "mulino", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "18", word: "pesce", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "19", word: "medaglia", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "20", word: "tombola", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "21", word: "veleno", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "22", word: "tinta", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "23", word: "campo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "24", word: "biscotto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "25", word: "forbice", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "26", word: "sedia", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "27", word: "nuvola", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "28", word: "pomodoro", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "29", word: "bandiera", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "30", word: "cuore", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "31", word: "fare", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "32", word: "tempo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "33", word: "sangue", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "34", word: "breve", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "35", word: "gara", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "36", word: "sala", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "37", word: "tetto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "38", word: "stanza", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "39", word: "risolto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "40", word: "resto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "41", word: "pace", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "42", word: "elmo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "43", word: "zecca", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "44", word: "ricerca", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "45", word: "mattina", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "46", word: "movimento", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "47", word: "lettera", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "48", word: "semplice", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "49", word: "signore", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "50", word: "controllo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "51", word: "giornale", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "52", word: "incanto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "53", word: "uomo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "54", word: "grigio", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "55", word: "casa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "56", word: "bambina", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "57", word: "dottore", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "58", word: "occhio", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "59", word: "signora", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "60", word: "padre", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "61", word: "testa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "62", word: "mamma", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "63", word: "letto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "64", word: "domenica", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "65", word: "giornata", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "66", word: "bagno", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "67", word: "scherzo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "68", word: "lama", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "69", word: "sale", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "70", word: "nido", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "71", word: "insetto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "72", word: "verdura", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "73", word: "chiodo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "74", word: "scimmia", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "75", word: "corvo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "76", word: "torta", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "77", word: "lampo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "78", word: "piuma", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "79", word: "cesto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "80", word: "cassetto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "81", word: "vasca", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "82", word: "pugnale", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "83", word: "pena", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "84", word: "modo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "85", word: "domanda", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "86", word: "ragione", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "87", word: "sogno", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "88", word: "scelta", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "89", word: "amore", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "90", word: "forza", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "91", word: "pezzo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "92", word: "posto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "93", word: "tatto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "94", word: "pensiero", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "95", word: "segno", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "96", word: "qualcosa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "97", word: "fama", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "98", word: "mito", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "99", word: "dominio", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "100", word: "azzardo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "101", word: "globulo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "102", word: "motto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "103", word: "sfogo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "104", word: "sfida", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "105", word: "tizio", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "106", word: "amarezza", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "107", word: "denuncia", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "108", word: "distacco", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "109", word: "svago", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "110", word: "sciopero", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "111", word: "rete", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "112", word: "soave", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "113", word: "data", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "114", word: "borsa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "115", word: "inno", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "116", word: "costa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "117", word: "riso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "118", word: "vago", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "119", word: "bocca", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "120", word: "cono", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "121", word: "noce", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "122", word: "madre", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "123", word: "paga", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "124", word: "urna", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "125", word: "pasta", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "126", word: "divo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "127", word: "lira", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "128", word: "mondo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "129", word: "forma", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "130", word: "zero", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "131", word: "luogo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "132", word: "annata", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "133", word: "volta", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "134", word: "spesa", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "135", word: "tipo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "136", word: "linea", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "137", word: "piano", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "138", word: "donna", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "139", word: "fase", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "140", word: "vita", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "141", word: "grado", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "142", word: "mezzo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "143", word: "ruolo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "144", word: "caso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "145", word: "fondo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "146", word: "crisi", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "147", word: "politica", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "148", word: "operazione", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "149", word: "occasione", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "150", word: "settimana", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "151", word: "industria", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "152", word: "rispetto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "153", word: "confronto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "154", word: "botto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "155", word: "lino", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "156", word: "sito", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "157", word: "dosso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "158", word: "cava", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "159", word: "balia", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "160", word: "fungo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "161", word: "dorso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "162", word: "tana", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "163", word: "baule", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "164", word: "tanto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "165", word: "abate", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "166", word: "saga", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "167", word: "bivio", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "168", word: "fuso", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "169", word: "scuola", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "170", word: "sodio", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "171", word: "fermo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "172", word: "covo", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "173", word: "zinco", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "174", word: "duna", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "175", word: "pista", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "176", word: "sonda", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "177", word: "riassunto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "178", word: "teca", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "179", word: "noleggio", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "180", word: "attivista", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "181", word: "trampolino", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "182", word: "panchina", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "183", word: "marmellata", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "184", word: "pame", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "185", word: "fingica", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "186", word: "barla", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "187", word: "baffola", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "188", word: "ravella", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "189", word: "canillo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "190", word: "cosso", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "191", word: "ecebante", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "192", word: "miere", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "193", word: "mamo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "194", word: "macata", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "195", word: "rolpo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "196", word: "bezzina", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "197", word: "urno", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "198", word: "nace", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "199", word: "sonte", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "200", word: "dimardine", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "201", word: "munano", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "202", word: "pedre", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "203", word: "menatria", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "204", word: "vambola", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "205", word: "vetono", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "206", word: "minta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "207", word: "compo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "208", word: "tiscitto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "209", word: "forface", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "210", word: "sovia", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "211", word: "gunola", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "212", word: "dorodoro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "213", word: "bassiera", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "214", word: "puere", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "215", word: "fane", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "216", word: "mempo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "217", word: "sarmue", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "218", word: "brove", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "219", word: "zano", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "220", word: "sado", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "221", word: "satto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "222", word: "starza", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "223", word: "rigilto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "224", word: "besto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "225", word: "cage", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "226", word: "ilmo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "227", word: "licca", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "228", word: "rigersa", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "229", word: "maccana", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "230", word: "moridento", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "231", word: "vottera", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "232", word: "seldrice", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "233", word: "siscere", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "234", word: "condrallo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "235", word: "viorcale", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "236", word: "ercanto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "237", word: "ueso", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "238", word: "svisio", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "239", word: "sasa", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "240", word: "baffina", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "241", word: "suttore", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "242", word: "ottrio", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "243", word: "siscera", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "244", word: "pabre", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "245", word: "masta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "246", word: "samma", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "247", word: "vatto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "248", word: "polenica", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "249", word: "viorcata", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "250", word: "vagno", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "251", word: "sprerzo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "252", word: "vama", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "253", word: "sade", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "254", word: "nimo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "255", word: "envetto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "256", word: "vensura", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "257", word: "briedo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "258", word: "spimbia", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "259", word: "carbo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "260", word: "marto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "261", word: "relpo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "262", word: "meuma", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "263", word: "sasto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "264", word: "caccetto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "265", word: "bosca", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "266", word: "puprile", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "267", word: "pona", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "268", word: "tedo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "269", word: "molanda", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "270", word: "refione", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "271", word: "togno", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "272", word: "stelta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "273", word: "anere", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "274", word: "forpa", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "275", word: "peppo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "276", word: "ponta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "277", word: "mitto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "278", word: "pespiero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "279", word: "mogno", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "280", word: "zualcoca", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "281", word: "dasa", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "282", word: "meti", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "283", word: "polinio", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "284", word: "affardo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "285", word: "gnofulo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "286", word: "mutto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "287", word: "chego", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "288", word: "chida", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "289", word: "fifio", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "290", word: "amaremma", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "291", word: "denurdia", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "292", word: "mastacco", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "293", word: "flago", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "294", word: "triobero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "295", word: "bete", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "296", word: "moive", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "297", word: "vata", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "298", word: "borma", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "299", word: "ingo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "300", word: "sasta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "301", word: "vido", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "302", word: "bago", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "303", word: "vicca", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "304", word: "pono", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "305", word: "nece", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "306", word: "masce", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "307", word: "sapa", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "308", word: "urda", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "309", word: "sonta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "310", word: "fivo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "311", word: "rera", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "312", word: "mengo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "313", word: "forda", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "314", word: "sero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "315", word: "luepo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "316", word: "ansita", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "317", word: "lolta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "318", word: "speca", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "319", word: "mipo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "320", word: "lidoa", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "321", word: "meano", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "322", word: "dinna", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "323", word: "dase", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "324", word: "lita", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "325", word: "gralo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "326", word: "meppo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "327", word: "rueli", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "328", word: "pada", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "329", word: "findo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "330", word: "chesi", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "331", word: "domitica", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "332", word: "oratazione", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "333", word: "omposione", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "334", word: "seccimana", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "335", word: "inducchia", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "336", word: "dimmetto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "337", word: "congrinto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "338", word: "votto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "339", word: "riro", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "340", word: "soti", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "341", word: "dasso", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "342", word: "sada", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "343", word: "vavia", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "344", word: "furso", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "345", word: "fordo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "346", word: "tama", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "347", word: "fiule", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "348", word: "carto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "349", word: "afite", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "350", word: "taga", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "351", word: "timio", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "352", word: "fudo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "353", word: "spuela", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "354", word: "sorao", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "355", word: "ferso", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "356", word: "povo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "357", word: "linco", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "358", word: "rura", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "359", word: "sunta", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "360", word: "cendo", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "361", word: "riallunto", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "362", word: "meca", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "363", word: "nocaggio", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "364", word: "accivista", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-core" }, { "": "365", word: "scompolino", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "366", word: "perchina", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }, { "": "367", word: "martollata", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "italian-random" }], dataNewURL: "", dataNewEasyURL: "", dataValidatedURL2: "" }, pt: { dataPracticeURL: [{ word: "TRASPA", realpseudo: "pseudo", block: "practice", order: "1", difficulty: "0" }, { word: "COR", realpseudo: "real", block: "practice", order: "2", difficulty: "0" }, { word: "BANANA", realpseudo: "real", block: "practice", order: "3", difficulty: "0" }, { word: "ZIRÇO", realpseudo: "pseudo", block: "practice", order: "4", difficulty: "0" }, { word: "ISPLOTA", realpseudo: "pseudo", block: "practice", order: "5", difficulty: "0" }], dataValidatedURL: [{ word: "MENINO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "JOGO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "RIO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "PAR", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "NÚMERO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "PROFESSOR", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "LEÃO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "DICA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "NOME", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "BEBÊ", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "LETRA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "MAIS", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "UVA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "SOL", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "FLOR", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CASA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "BOLA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "GATO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CORUJA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "BONITO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "PULAR", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CORRER", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "FOGO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "LOBO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "PIPA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CONVERSA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "SUCATA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "VAI", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "SUGESTÃO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "MÓDULO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "COMPOSIÇÃO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "OBRA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "TÁXI", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "FANTASIA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "MARÉ", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ALERTA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "REDONDO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "SOSSEGAR", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "PERSONAGEM", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "RELER", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "FLUPA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "QUELFA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "BLIDE", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "GRUTO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ESNITO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "FRALGIM", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "MOU", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "TRUSCO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "GRALIZ", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "NIFA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "VINTROM", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "FRANTO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "FLIMO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "GRINTE", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "BLIMPA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "QUIRVO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CRELATIMBO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "TRUSBA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "DRINTO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ESNARCO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ZIR", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ESNURCOFA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "FLUMBA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "GRINTIZA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "DRUSCO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "BLINUR", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ADASSE", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CARAME", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "LINTA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "GARAR", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ZARAR", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ACI", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "NIFRUL", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "SOLIZA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "EMOSTA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "FALIZA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CHADOS", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ESCULA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "AGELHE", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ITÁVEL", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "DANÇAR", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "PERNA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ATIVIDADE", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "GRANDE", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "MÃO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "PLANTA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "LINHA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "RÁPIDO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "COLEÇÃO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "COR", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "TRISTE", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ESPERTO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "DIFERENÇA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "TURMA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CARRO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CADERNO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "PRINCESA", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "CRER", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "DESENHO", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "VOGAL", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ACIANDO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ANDOSTAR", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "APARAME", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "BARAMEM", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "SOFREPA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "DÍSTICA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "DISTRANO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ENTERAME", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "INADOSTA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "ESTICOLO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "MANDOSTA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "MINADOSTRA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "QUIRA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "RADASSE", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "RAMENCIO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "RANDISTA", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "SARAMÉ", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "SOLIZADO", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "TRAMENTE", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }, { word: "TRANDIS", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "portuguese-core" }], dataNewURL: "", dataNewEasyURL: "", dataValidatedURL2: "" }, de: { dataPracticeURL: [{ word: "xop", realpseudo: "pseudo", block: "practice", order: "1", difficulty: "0" }, { word: "wie", realpseudo: "real", block: "practice", order: "2", difficulty: "0" }, { word: "Ast", realpseudo: "real", block: "practice", order: "3", difficulty: "0" }, { word: "auler", realpseudo: "pseudo", block: "practice", order: "4", difficulty: "0" }, { word: "hom", realpseudo: "pseudo", block: "practice", order: "5", difficulty: "0" }], dataValidatedURL: [{ word: "abenteuerlich", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Affe", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "alt", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Apfel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Apotheke", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Astronautin", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Auge", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Auto", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "backen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Ball", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Banane", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Bär", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "basteln", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Baum", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "beeindruckend", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Bein", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "beobachten", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Berg", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Bibliothek", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Biene", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Blume", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Brot", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Brücke", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Buchstabe", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "bunte", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Dampfschifffahrt", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Dinosaurier", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Drachen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "dunkel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "dünn", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Eis", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "eklig", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Elefant", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "entdecken", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "entwickeln", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Erde", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "ernst", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "essen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Eule", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "experimentieren", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Fantasie", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Farbe", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Fernseher", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Feuerwehr", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "finden", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Fisch", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Flasche", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Flugzeug", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "forschen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Frau", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "frei", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Freund", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Frosch", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "fühlen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "für", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Garten", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Geheimnis", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "genial", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Geschwindigkeit", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Giraffe", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Gitarre", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "glitzernd", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "glücklich", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Goldfisch", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Gras", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Gummistiefel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Haar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Hai", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Hand", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Haus", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "helfen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "hell", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "hellhörig", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Herz", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Himmel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "hinter", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Hof", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "hören", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "hundert", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Hürde", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "ich", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Insel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Jacht", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Johannisbeere", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Käfer", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "kalt", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kamera", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kaninchen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "kann", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kichererbse", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kind", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Klavier", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Klee", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "klein", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "klettern", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "kochen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "kommunizieren", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "konstruieren", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "kontaktlos", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kontinent", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "kooperieren", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kopf", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Krabbe", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Krankenhaus", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "kreativ", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Krokodil", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Kuchen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Labyrinth", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "lachen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "landwirtschaftlich", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "langsam", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "laufen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "lecker", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Lehrerin", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "lernen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Lieblingsbeschäftigung", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Löwe", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "lustig", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "magisch", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "malen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Maus", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Medizin", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Mikroskop", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Milch", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Monat", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Mond", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Mund", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "musizieren", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Nacht", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Nase", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "neben", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "neu", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "neugierig", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "obwohl", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Ohrringe", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Orchester", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Palast", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Papagei", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Pinsel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Planetarium", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "programmieren", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Rätsel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Regenbogen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "riechen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "riesig", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Ritter", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Roboter", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Rose", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Sand", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schaf", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schatten", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Schiff", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schildkröte", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schillernd", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schlafen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schlange", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schlecht", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schlüssel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "schmecken", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schmetterling", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schneeflocke", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schnell", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schön", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schreiben", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schule", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schwimmen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "See", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "sehen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "singen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Sonnenblume", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Sonnensystem", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "spektakulär", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Spielzeug", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Spinne", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "sprechen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "springen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Stein", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Stern", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Strand", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "suchen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Supermarkt", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Tag", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "tanzen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "teilen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Telefon", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Teleskop", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Tier", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Tiger", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Tisch", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Trampolin", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "traurig", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "trinken", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Trompete", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Tulpe", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "über", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "überraschend", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Universum", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Verkehr", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "verstecken", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Violine", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Vogel", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "vor", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Vulkan", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wal", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Wald", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "warm", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wasser", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "weg", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "weinen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wind", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "winzig", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wissenschaft", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Woche", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wohnung", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wolf", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wolkenkratzer", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "wunderbar", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Zahl", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Zahnarzt", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Zauberstab", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "zeichnen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "zeigen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Zirkus", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Zunge", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "zwischen", realpseudo: "real", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "ebenhamelrich", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Jume", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "aft", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Lumel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Opadreme", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Esprofautin", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Obse", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Huti", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "bönken", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Baht", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kawafe", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Bür", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "rastens", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Maum", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "beaunbummmern", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Zein", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "veouockten", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Belm", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Bipliotrof", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Waune", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Ampne", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Grot", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Dräkke", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Puffplame", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "mutse", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Danchschitzgahrt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wonahaarier", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Grochen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "vulken", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "dühl", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Nis", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "etbig", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Elehähn", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "enttirken", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "entkokkens", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Puse", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "echts", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "elgen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Adge", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "idmelifendieren", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Pantalau", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Larze", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Nohnseher", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Feuersamm", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "mingen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Firrt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Plosche", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Rundzemd", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "finschen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Plau", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "frie", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Frelzs", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Frohlt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "lählen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "fer", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Dorten", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Geheithas", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "gekiog", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Feschrondigseit", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kirürfe", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Fibahre", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "zwitzelnd", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "glammlich", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Gormbisch", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Klas", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "A_bnistieked", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Haat", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Rai", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Halz", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Hies", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "wilfen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "hent", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "hirtwörig", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Hepp", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Temmel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "rintes", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Bof", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "würen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "putsert", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Tirde", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "ibt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Fudel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Dacht", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Jopannitpaare", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wifer", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "zalt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Lanero", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Lawanchen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "kald", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Vicherallne", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kink", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Graxier", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Twee", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "brein", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "krattern", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "wichen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "hondufiwieren", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "narwundieren", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "tontamplas", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kartinell", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "hüacenieren", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kohr", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Brabne", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Kranfensies", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "fleatol", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Skikonil", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Musten", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Galyrillt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "vasten", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "langmondschaftlich", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "latzbam", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "fiefen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "rikker", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Lagwerin", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "rerzen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Leitlingspeschyltiburt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Tüwe", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "unstag", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "fagingt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "bagen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Taus", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Tebivin", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Mikrofrah", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Mirft", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Hokat", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Moms", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Mend", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "surideiren", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Cacht", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Dade", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "demen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "geu", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "meuzeirig", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "ofbohl", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Ethbange", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Nuspestem", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Galost", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Fazagie", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Ninkel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Pfahelorius", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "proklüngieren", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wälsel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Febenvögen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "lauchen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "liegig", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Hatter", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Lisoter", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Moge", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Sals", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schay", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "stretten", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Schirn", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schinnspöte", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schellelnd", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schnaden", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schnieke", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schlegst", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schmässel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "schwikken", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schrätterlilm", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Schneedräkke", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schneht", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schweimen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Pulsge", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "schwiffen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Jee", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "repen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "rinken", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Warhenrupne", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Karhenmystel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "spoltalulör", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Frielzerl", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Trinze", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "stresten", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "chrinken", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Trein", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Steib", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Strank", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "amsten", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Umpesmappt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Taf", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "hannen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "meigen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Melehön", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Telefrah", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Mier", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Siser", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Tinds", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Troswolin", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "kraudig", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "spingen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Grappete", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Pufze", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "äbes", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "ogernaschegt", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Inipentur", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Nerkelz", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "vertrarken", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Düotene", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Dosel", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "vos", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Achkon", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Pal", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }, { word: "Wafs", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "wahm", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Rosser", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "weu", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "leifen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wirs", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "hinhig", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Ressenschant", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Giche", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Sühnung", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Folf", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Wäuhenpfatzer", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "nudbernar", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Dahl", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Zappasts", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Pauberstid", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "teichmen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "keisen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Zimbus", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "Punse", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-random" }, { word: "gnäschen", realpseudo: "pseudo", a: "1", b: "0", c: "0.5", d: "1", corpusId: "german-core" }], dataNewURL: "", dataNewEasyURL: "", dataValidatedURL2: "" } };
new Pc().addDetector({ name: "defaultToEnglish", lookup: (e8) => "en" }), nc.use(Pc).on("languageChanged", gu).init({ debug: false, load: "languageOnly", fallbackLng: "en", detection: { order: ["defaultToEnglish", "querystring"] }, resources: { en: { translation: Mc }, es: { translation: Lc }, it: { translation: Dc }, pt: { translation: zc }, de: { translation: Fc } } });
var wu = [{ timeline: [{ type: fc, stimulus: "<p>In this demo version, if you think a word is problematic or inappropriate, <br> please press the space bar and we will review that item. <br> Send any comments, advice or feedback to <b>roar-partnerships@stanford.edu </b> <br> Thank you! </p>", choices: ["Continue"] }], conditional_function: () => s.session.get("config").addNoResponse }, { timeline: [{ type: cc, questions: [{ prompt: nc.t("labID"), name: "labId", required: true }], button_label: nc.t("buttonLabel"), on_finish: (e8) => {
  const a2 = s.session.get("config");
  a2.labId = e8.response.labId, s.session.set("config", a2);
} }], conditional_function: () => !s.session.get("config").labId && "otherLabs" === s.session.get("config").recruitment }, { timeline: [{ type: cc, questions: [{ prompt: nc.t("participantID"), name: "pid", required: true }], button_label: nc.t("buttonLabel"), on_finish: (e8) => {
  const a2 = s.session.get("config");
  a2.pid = e8.response.pid, s.session.set("config", a2);
} }], conditional_function: () => !s.session.get("config").pid && "otherLabs" === s.session.get("config").recruitment }, { timeline: [{ type: mc, questions: [{ prompt: () => ' \n      <div>\n          <p class=" consent_form_title">STANFORD UNIVERSITY CONSENT FORM</p>\n          <p class=" consent_form_text">\n          <b>PURPOSE OF THE STUDY</b> \n          <br>\n          Data collected through games in the web-browser will help researchers understand relationships between academic skills, reading proficiency, cognition, perception, and/or attitudes towards reading and school in individuals with a broad range of reading skills.\n          <br><br>\n          <b>STUDY PROCEDURES</b> \n          <br>\n          In this study, you will be asked to complete computer tasks via a computer screen. Audio will be presented via headphones or speakers.\n          <br><br>\n          <b>PRIVACY AND DATA COLLECTION</b> <br>\n              We will do our best to ensure your privacy. Data that is collected through this online experiment is stored separately from identifying information such as your name. For the sake of payment, sometimes we store an email address you provide, but this is stored separately from the responses that are recorded in the online experiment. Each participant is assigned a code and that is used rather than names. This is called “coded data” and we try to ensure that the identity of our research participants is kept confidential. Data collected as part of this study may be used for many years to help discover trends in the population and explore changes due to development and education. In addition, coded data may be shared online or with collaborators to allow for new and unforeseen discoveries. Researchers may choose to include coded data in publications to support findings, or they may choose to release coded data alongside findings for replicability.\n          <br>\n          <br>\n              We will collect mouse and click, scores earned, button presses and their timestamps, or other data that may be derived from your behavior on our page. This data will be stored on servers. Incomplete data may be logged if you quit out of the experiment early. If you would like to void your data, you may request it through our contact email. \n          <br>\n          <br>\n          <b>COMPENSATION</b>\n          <br> \n          Participation in this study is voluntary and you will not receive financial compensation.\n          <br>\n          <br>\n          <b>RISKS, STRESS, OR DISCOMFORT</b>\n          <br>\n          If there is any reason to believe you are not safe to participate in any of the tasks, please contact us at <a href="url">readingresearch@stanford.edu</a>. Some people may experience some physical discomfort or boredom due to being asked to sit for long periods. For computer tasks, some people may also experience dry eyes or eye fatigue. For some tasks that are untimed, breaks can be taken as needed during the session.\n          <br>\n          <br>\n          <b>CONTACT INFORMATION </b>\n          <br>\n          If you have any additional questions or concerns about our research, feel free to email us at <a href="url">readingresearch@stanford.edu</a>. We will be more than happy to help!\n          <br>\n          <br>\n          For general information regarding questions or concerns about [your/your child’s] rights as a research participant, please call 1-866-680-2906 to reach the Administrative Panel on Human Subjects in Medical Research, Stanford University.\n          </p>\n      </div>', options: () => ["<b>I agree to participate in this research. Participation in this research is voluntary, and I can stop at any time without penalty. <br> I feel that I understand what I am getting into, and I know I am free to leave the experiment at any time by simply closing the web browser.</b>"], required: true, required_message: "You must check the box to continue", name: "Agree" }] }], conditional_function: () => Boolean(("demo" === s.session.get("config").recruitment || "otherLabs" === s.session.get("config").recruitment || "prolific" === s.session.get("config").recruitment || "sona" === s.session.get("config").recruitment) && s.session.get("config").consent) }, { timeline: [{ type: lc, preamble: () => "<div><h1>Please share a bit more to help us understand your data!</h1><p>[Optional]</p></div>", html: () => '\n  <div className="item">\n  <span htmlFor="instructions" class = "survey_form_text">How old are you? (Please type a number)</span>\n  <input type = "text" id = "age" name="age" style = "font-size: 2vh" value=""/>\n  </div>\n  <br>\n  <div className="item">\n  <span class = "survey_form_text">What is your current grade or highest level of education?</span>\n  <select id = "edu" name = "edu" style = "font-size: 2vh">\n      <option value=""></option>\n      <option value="prek">preK</option>\n      <option value="k1">K1</option>\n      <option value="k2">K2</option>\n      <option value="1">Grade 1</option>\n      <option value="2">Grade 2</option>\n      <option value="3">Grade 3</option>\n      <option value="4">Grade 4</option>\n      <option value="5">Grade 5</option>\n      <option value="6">Grade 6</option>\n      <option value="7">Grade 7</option>\n      <option value="8">Grade 8</option>\n      <option value="9">Grade 9</option>\n      <option value="10">Grade 10</option>\n      <option value="11">Grade 11</option>\n      <option value="12">Grade 12</option>\n      <option value="college">College</option>\n      <option value="proSchool">Professional School</option>\n      <option value="gradSchool">Graduate School</option>\n  </select>\n  </div>\n  <br>\n  <div className="item">\n  <span class = "survey_form_text">Is English your first language?</span>\n  <select id = "ell" name = "ell" style = "font-size: 2vh">\n      <option value=""></option>\n      <option value="1">No</option>\n      <option value="0">Yes</option>\n  </select>\n  </div>\n  <br>\n  <div className="item">\n  <span class = "survey_form_text">Have you taken this game before?</span>\n  <select id = "retake" name = "retake" style = "font-size: 2vh">\n      <option value=""></option>\n      <option value="0">No</option>\n      <option value="1">Yes</option>\n  </select>\n  </div>\n  <br>', autocomplete: true, on_finish: (e8) => {
  const a2 = {};
  for (const r3 in e8.response) "" === e8.response[r3] ? a2[r3] = null : a2[r3] = "retake" === r3 || "ell" === r3 ? parseInt(e8.response[r3], 10) : e8.response[r3];
  a2.labId = s.session.get("config").labId;
  const r2 = s.session.get("config"), t2 = As(null, null, a2.age);
  r2.userMetadata = { ...r2.userMetadata, ...a2, ...t2 }, s.session.set("config", r2);
} }], conditional_function: () => ("demo" === s.session.get("config").recruitment || "otherLabs" === s.session.get("config").recruitment || "prolific" === s.session.get("config").recruitment || "sona" === s.session.get("config").recruitment) && s.session.get("config").consent }];
var yu = { name: "fullscreen", parameters: { fullscreen_mode: { type: Us.BOOL, pretty_name: "Fullscreen mode", default: true, array: false }, message: { type: Us.HTML_STRING, pretty_name: "Message", default: "<p>The experiment will switch to full screen mode when you press the button below</p>", array: false }, button_label: { type: Us.STRING, pretty_name: "Button label", default: "Continue", array: false }, delay_after: { type: Us.INT, pretty_name: "Delay after", default: 1e3, array: false } } };
var xu = class {
  constructor(e8) {
    this.jsPsych = e8, this.rt = null, this.start_time = 0;
  }
  trial(e8, a2) {
    "undefined" != typeof Element && "ALLOW_KEYBOARD_INPUT" in Element ? this.endTrial(e8, false, a2) : a2.fullscreen_mode ? this.showDisplay(e8, a2) : (this.exitFullScreen(), this.endTrial(e8, true, a2));
  }
  showDisplay(e8, a2) {
    e8.innerHTML = `
      ${a2.message}
      <button id="jspsych-fullscreen-btn" class="jspsych-btn">${a2.button_label}</button>
    `, e8.querySelector("#jspsych-fullscreen-btn").addEventListener("click", () => {
      this.rt = Math.round(performance.now() - this.start_time), this.enterFullScreen(), this.endTrial(e8, true, a2);
    }), this.start_time = performance.now();
  }
  endTrial(e8, a2, r2) {
    e8.innerHTML = "", this.jsPsych.pluginAPI.setTimeout(() => {
      var e9 = { success: a2, rt: this.rt };
      this.jsPsych.finishTrial(e9);
    }, r2.delay_after);
  }
  enterFullScreen() {
    var e8 = document.documentElement;
    e8.requestFullscreen ? e8.requestFullscreen() : e8.mozRequestFullScreen ? e8.mozRequestFullScreen() : e8.webkitRequestFullscreen ? e8.webkitRequestFullscreen() : e8.msRequestFullscreen && e8.msRequestFullscreen();
  }
  exitFullScreen() {
    (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement) && (document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen());
  }
  simulate(e8, a2, r2, t2) {
    "data-only" == a2 && (t2(), this.simulate_data_only(e8, r2)), "visual" == a2 && this.simulate_visual(e8, r2, t2);
  }
  create_simulation_data(e8, a2) {
    const r2 = { success: true, rt: this.jsPsych.randomization.sampleExGaussian(1e3, 100, 5e-3, true) };
    return this.jsPsych.pluginAPI.mergeSimulationData(r2, a2);
  }
  simulate_data_only(e8, a2) {
    const r2 = this.create_simulation_data(e8, a2);
    this.jsPsych.finishTrial(r2);
  }
  simulate_visual(e8, a2, r2) {
    const t2 = this.create_simulation_data(e8, a2), o2 = this.jsPsych.getDisplayElement();
    false === t2.success ? this.endTrial(o2, false, e8) : (this.trial(o2, e8), r2(), this.jsPsych.pluginAPI.clickTarget(o2.querySelector("#jspsych-fullscreen-btn"), t2.rt));
  }
};
xu.info = yu;
var _u = { fullscreenEnabled: 0, fullscreenElement: 1, requestFullscreen: 2, exitFullscreen: 3, fullscreenchange: 4, fullscreenerror: 5, fullscreen: 6 };
var Iu = ["webkitFullscreenEnabled", "webkitFullscreenElement", "webkitRequestFullscreen", "webkitExitFullscreen", "webkitfullscreenchange", "webkitfullscreenerror", "-webkit-full-screen"];
var ku = ["mozFullScreenEnabled", "mozFullScreenElement", "mozRequestFullScreen", "mozCancelFullScreen", "mozfullscreenchange", "mozfullscreenerror", "-moz-full-screen"];
var Su = ["msFullscreenEnabled", "msFullscreenElement", "msRequestFullscreen", "msExitFullscreen", "MSFullscreenChange", "MSFullscreenError", "-ms-fullscreen"];
var Tu = "undefined" != typeof window && void 0 !== window.document ? window.document : {};
var Eu = "fullscreenEnabled" in Tu && Object.keys(_u) || Iu[0] in Tu && Iu || ku[0] in Tu && ku || Su[0] in Tu && Su || [];
var ju = { requestFullscreen: function(e8) {
  return e8[Eu[_u.requestFullscreen]]();
}, requestFullscreenFunction: function(e8) {
  return e8[Eu[_u.requestFullscreen]];
}, get exitFullscreen() {
  return Tu[Eu[_u.exitFullscreen]].bind(Tu);
}, get fullscreenPseudoClass() {
  return ":" + Eu[_u.fullscreen];
}, addEventListener: function(e8, a2, r2) {
  return Tu.addEventListener(Eu[_u[e8]], a2, r2);
}, removeEventListener: function(e8, a2, r2) {
  return Tu.removeEventListener(Eu[_u[e8]], a2, r2);
}, get fullscreenEnabled() {
  return Boolean(Tu[Eu[_u.fullscreenEnabled]]);
}, set fullscreenEnabled(e8) {
}, get fullscreenElement() {
  return Tu[Eu[_u.fullscreenElement]];
}, set fullscreenElement(e8) {
}, get onfullscreenchange() {
  return Tu[("on" + Eu[_u.fullscreenchange]).toLowerCase()];
}, set onfullscreenchange(e8) {
  return Tu[("on" + Eu[_u.fullscreenchange]).toLowerCase()] = e8;
}, get onfullscreenerror() {
  return Tu[("on" + Eu[_u.fullscreenerror]).toLowerCase()];
}, set onfullscreenerror(e8) {
  return Tu[("on" + Eu[_u.fullscreenerror]).toLowerCase()] = e8;
} };
var Ou = ju;
var Au = true;
var Cu = document.querySelector("#sentry-feedback");
var Ru = { type: xu, fullscreen_mode: true, message: () => `<div class='text_div'><h1>${nc.t("fullScreenTrial.prompt")}</h1></div>`, delay_after: 0, button_label: () => `${nc.t("fullScreenTrial.buttonText")}`, on_start: () => {
  document.body.style.cursor = "default", Cu && (Cu.style.display = "none");
}, on_finish: () => {
  Au ? Au = false : document.body.style.cursor = "none";
} };
var Nu = { timeline: [Ru], conditional_function: () => null === Ou.fullscreenElement };
var Pu = { type: xu, fullscreen_mode: false, delay_after: 0 };
var Mu = function(e8) {
  return function(a2, r2, t2) {
    for (var o2 = -1, n2 = Object(a2), s2 = t2(a2), i2 = s2.length; i2--; ) {
      var d2 = s2[e8 ? i2 : ++o2];
      if (false === r2(n2[d2], d2, n2)) break;
    }
    return a2;
  };
};
var Lu = Mu();
var Du = qr;
var zu = cn;
var Fu = function(e8, a2) {
  return e8 && Lu(e8, a2, Du);
};
var Bu = tn;
var qu = function(e8, a2) {
  var r2 = {};
  return a2 = Bu(a2), Fu(e8, function(e9, t2, o2) {
    zu(r2, t2, a2(e9, t2, o2));
  }), r2;
};
var $u = t(qu);
var Uu = function(e8, a2) {
  for (var r2 = -1, t2 = null == e8 ? 0 : e8.length; ++r2 < t2 && false !== a2(e8[r2], r2, e8); ) ;
  return e8;
};
var Hu = mn;
var Wu = cn;
var Ku = function(e8, a2, r2, t2) {
  var o2 = !r2;
  r2 || (r2 = {});
  for (var n2 = -1, s2 = a2.length; ++n2 < s2; ) {
    var i2 = a2[n2], d2 = t2 ? t2(r2[i2], e8[i2], i2, r2, e8) : void 0;
    void 0 === d2 && (d2 = e8[i2]), o2 ? Wu(r2, i2, d2) : Hu(r2, i2, d2);
  }
  return r2;
};
var Vu = Ku;
var Gu = qr;
var Yu = function(e8, a2) {
  return e8 && Vu(a2, Gu(a2), e8);
};
var Ju = Ku;
var Xu = Fn;
var Qu = function(e8, a2) {
  return e8 && Ju(a2, Xu(a2), e8);
};
var Zu = { exports: {} };
!function(e8, a2) {
  var r2 = M, t2 = a2 && !a2.nodeType && a2, o2 = t2 && e8 && !e8.nodeType && e8, n2 = o2 && o2.exports === t2 ? r2.Buffer : void 0, s2 = n2 ? n2.allocUnsafe : void 0;
  e8.exports = function(e9, a3) {
    if (a3) return e9.slice();
    var r3 = e9.length, t3 = s2 ? s2(r3) : new e9.constructor(r3);
    return e9.copy(t3), t3;
  };
}(Zu, Zu.exports);
var el = Zu.exports;
var al = function(e8, a2) {
  var r2 = -1, t2 = e8.length;
  for (a2 || (a2 = Array(t2)); ++r2 < t2; ) a2[r2] = e8[r2];
  return a2;
};
var rl = Ku;
var tl = Ha;
var ol = function(e8, a2) {
  return rl(e8, tl(e8), a2);
};
var nl = Ku;
var sl = On;
var il = function(e8, a2) {
  return nl(e8, sl(e8), a2);
};
var dl = Object.prototype.hasOwnProperty;
var cl = function(e8) {
  var a2 = e8.length, r2 = new e8.constructor(a2);
  return a2 && "string" == typeof e8[0] && dl.call(e8, "index") && (r2.index = e8.index, r2.input = e8.input), r2;
};
var ul = ka;
var ll = function(e8) {
  var a2 = new e8.constructor(e8.byteLength);
  return new ul(a2).set(new ul(e8)), a2;
};
var pl = ll;
var ml = function(e8, a2) {
  var r2 = a2 ? pl(e8.buffer) : e8.buffer;
  return new e8.constructor(r2, e8.byteOffset, e8.byteLength);
};
var hl = /\w*$/;
var fl = function(e8) {
  var a2 = new e8.constructor(e8.source, hl.exec(e8));
  return a2.lastIndex = e8.lastIndex, a2;
};
var vl = L ? L.prototype : void 0;
var gl = vl ? vl.valueOf : void 0;
var bl = ll;
var wl = ll;
var yl = ml;
var xl = fl;
var _l = function(e8) {
  return gl ? Object(gl.call(e8)) : {};
};
var Il = function(e8, a2) {
  var r2 = a2 ? bl(e8.buffer) : e8.buffer;
  return new e8.constructor(r2, e8.byteOffset, e8.length);
};
var kl = function(e8, a2, r2) {
  var t2 = e8.constructor;
  switch (a2) {
    case "[object ArrayBuffer]":
      return wl(e8);
    case "[object Boolean]":
    case "[object Date]":
      return new t2(+e8);
    case "[object DataView]":
      return yl(e8, r2);
    case "[object Float32Array]":
    case "[object Float64Array]":
    case "[object Int8Array]":
    case "[object Int16Array]":
    case "[object Int32Array]":
    case "[object Uint8Array]":
    case "[object Uint8ClampedArray]":
    case "[object Uint16Array]":
    case "[object Uint32Array]":
      return Il(e8, r2);
    case "[object Map]":
    case "[object Set]":
      return new t2();
    case "[object Number]":
    case "[object String]":
      return new t2(e8);
    case "[object RegExp]":
      return xl(e8);
    case "[object Symbol]":
      return _l(e8);
  }
};
var Sl = G;
var Tl = Object.create;
var El = /* @__PURE__ */ function() {
  function e8() {
  }
  return function(a2) {
    if (!Sl(a2)) return {};
    if (Tl) return Tl(a2);
    e8.prototype = a2;
    var r2 = new e8();
    return e8.prototype = void 0, r2;
  };
}();
var jl = kn;
var Ol = jr;
var Al = function(e8) {
  return "function" != typeof e8.constructor || Ol(e8) ? {} : El(jl(e8));
};
var Cl = mt;
var Rl = Ka;
var Nl = function(e8) {
  return Rl(e8) && "[object Map]" == Cl(e8);
};
var Pl = pr;
var Ml = hr && hr.isMap;
var Ll = Ml ? Pl(Ml) : Nl;
var Dl = mt;
var zl = Ka;
var Fl = function(e8) {
  return zl(e8) && "[object Set]" == Dl(e8);
};
var Bl = pr;
var ql = hr && hr.isSet;
var $l = ql ? Bl(ql) : Fl;
var Ul = ha;
var Hl = Uu;
var Wl = mn;
var Kl = Yu;
var Vl = Qu;
var Gl = el;
var Yl = al;
var Jl = ol;
var Xl = il;
var Ql = Wr;
var Zl = Un;
var ep = mt;
var ap = cl;
var rp = kl;
var tp = Al;
var op = Ma;
var np = tr;
var sp = Ll;
var ip = G;
var dp = $l;
var cp = qr;
var up = Fn;
var lp = "[object Arguments]";
var pp = "[object Function]";
var mp = "[object Object]";
var hp = {};
hp[lp] = hp["[object Array]"] = hp["[object ArrayBuffer]"] = hp["[object DataView]"] = hp["[object Boolean]"] = hp["[object Date]"] = hp["[object Float32Array]"] = hp["[object Float64Array]"] = hp["[object Int8Array]"] = hp["[object Int16Array]"] = hp["[object Int32Array]"] = hp["[object Map]"] = hp["[object Number]"] = hp[mp] = hp["[object RegExp]"] = hp["[object Set]"] = hp["[object String]"] = hp["[object Symbol]"] = hp["[object Uint8Array]"] = hp["[object Uint8ClampedArray]"] = hp["[object Uint16Array]"] = hp["[object Uint32Array]"] = true, hp["[object Error]"] = hp[pp] = hp["[object WeakMap]"] = false;
var fp = function e5(a2, r2, t2, o2, n2, s2) {
  var i2, d2 = 1 & r2, c2 = 2 & r2, u2 = 4 & r2;
  if (t2 && (i2 = n2 ? t2(a2, o2, n2, s2) : t2(a2)), void 0 !== i2) return i2;
  if (!ip(a2)) return a2;
  var l2 = op(a2);
  if (l2) {
    if (i2 = ap(a2), !d2) return Yl(a2, i2);
  } else {
    var p2 = ep(a2), m2 = p2 == pp || "[object GeneratorFunction]" == p2;
    if (np(a2)) return Gl(a2, d2);
    if (p2 == mp || p2 == lp || m2 && !n2) {
      if (i2 = c2 || m2 ? {} : tp(a2), !d2) return c2 ? Xl(a2, Vl(i2, a2)) : Jl(a2, Kl(i2, a2));
    } else {
      if (!hp[p2]) return n2 ? a2 : {};
      i2 = rp(a2, p2, d2);
    }
  }
  s2 || (s2 = new Ul());
  var h2 = s2.get(a2);
  if (h2) return h2;
  s2.set(a2, i2), dp(a2) ? a2.forEach(function(o3) {
    i2.add(e5(o3, r2, t2, o3, a2, s2));
  }) : sp(a2) && a2.forEach(function(o3, n3) {
    i2.set(n3, e5(o3, r2, t2, n3, a2, s2));
  });
  var f2 = l2 ? void 0 : (u2 ? c2 ? Zl : Ql : c2 ? up : cp)(a2);
  return Hl(f2 || a2, function(o3, n3) {
    f2 && (o3 = a2[n3 = o3]), Wl(i2, n3, e5(o3, r2, t2, n3, a2, s2));
  }), i2;
};
var vp = xo;
var gp = Bc;
var bp = function(e8, a2) {
  return a2.length < 2 ? e8 : vp(e8, gp(a2, 0, -1));
};
var wp = vo;
var yp = function(e8) {
  var a2 = null == e8 ? 0 : e8.length;
  return a2 ? e8[a2 - 1] : void 0;
};
var xp = bp;
var _p = bo;
var Ip = function(e8, a2) {
  return a2 = wp(a2, e8), null == (e8 = xp(e8, a2)) || delete e8[_p(yp(a2))];
};
var kp = V;
var Sp = kn;
var Tp = Ka;
var Ep = Function.prototype;
var jp = Object.prototype;
var Op = Ep.toString;
var Ap = jp.hasOwnProperty;
var Cp = Op.call(Object);
var Rp = function(e8) {
  if (!Tp(e8) || "[object Object]" != kp(e8)) return false;
  var a2 = Sp(e8);
  if (null === a2) return true;
  var r2 = Ap.call(a2, "constructor") && a2.constructor;
  return "function" == typeof r2 && r2 instanceof r2 && Op.call(r2) == Cp;
};
var Np = function(e8) {
  return Rp(e8) ? void 0 : e8;
};
var Pp = er;
var Mp = Ma;
var Lp = L ? L.isConcatSpreadable : void 0;
var Dp = Pa;
var zp = function(e8) {
  return Mp(e8) || Pp(e8) || !!(Lp && e8 && e8[Lp]);
};
var Fp = function e6(a2, r2, t2, o2, n2) {
  var s2 = -1, i2 = a2.length;
  for (t2 || (t2 = zp), n2 || (n2 = []); ++s2 < i2; ) {
    var d2 = a2[s2];
    r2 > 0 && t2(d2) ? r2 > 1 ? e6(d2, r2 - 1, t2, o2, n2) : Dp(n2, d2) : o2 || (n2[n2.length] = d2);
  }
  return n2;
};
var Bp = Fp;
var qp = function(e8) {
  return (null == e8 ? 0 : e8.length) ? Bp(e8, 1) : [];
};
var $p = function(e8, a2, r2) {
  switch (r2.length) {
    case 0:
      return e8.call(a2);
    case 1:
      return e8.call(a2, r2[0]);
    case 2:
      return e8.call(a2, r2[0], r2[1]);
    case 3:
      return e8.call(a2, r2[0], r2[1], r2[2]);
  }
  return e8.apply(a2, r2);
};
var Up = Math.max;
var Hp = function(e8, a2, r2) {
  return a2 = Up(void 0 === a2 ? e8.length - 1 : a2, 0), function() {
    for (var t2 = arguments, o2 = -1, n2 = Up(t2.length - a2, 0), s2 = Array(n2); ++o2 < n2; ) s2[o2] = t2[a2 + o2];
    o2 = -1;
    for (var i2 = Array(a2 + 1); ++o2 < a2; ) i2[o2] = t2[o2];
    return i2[a2] = r2(s2), $p(e8, this, i2);
  };
};
var Wp = function(e8) {
  return function() {
    return e8;
  };
};
var Kp = sn;
var Vp = Kp ? function(e8, a2) {
  return Kp(e8, "toString", { configurable: true, enumerable: false, value: Wp(a2), writable: true });
} : Uo;
var Gp = Date.now;
var Yp = function(e8) {
  var a2 = 0, r2 = 0;
  return function() {
    var t2 = Gp(), o2 = 16 - (t2 - r2);
    if (r2 = t2, o2 > 0) {
      if (++a2 >= 800) return arguments[0];
    } else a2 = 0;
    return e8.apply(void 0, arguments);
  };
};
var Jp = Yp(Vp);
var Xp = qp;
var Qp = Hp;
var Zp = Jp;
var em = to;
var am = fp;
var rm = Ip;
var tm = vo;
var om = Ku;
var nm = Np;
var sm = Un;
var im = function(e8) {
  return Zp(Qp(e8, void 0, Xp), e8 + "");
}(function(e8, a2) {
  var r2 = {};
  if (null == e8) return r2;
  var t2 = false;
  a2 = em(a2, function(a3) {
    return a3 = tm(a3, e8), t2 || (t2 = a3.length > 1), a3;
  }), om(e8, sm(e8), r2), t2 && (r2 = am(r2, 7, nm));
  for (var o2 = a2.length; o2--; ) rm(r2, a2[o2]);
  return r2;
});
var dm = t(im);
var cm = { exports: {} };
cm.exports = function e7() {
  var r2 = "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== r2 ? r2 : {};
  function t2() {
    var a2 = r2.URL || r2.webkitURL || null, t3 = e7.toString();
    return d2.BLOB_URL || (d2.BLOB_URL = a2.createObjectURL(new Blob(["var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; ", "(", t3, ")();"], { type: "text/javascript" })));
  }
  var o2 = !r2.document && !!r2.postMessage, n2 = r2.IS_PAPA_WORKER || false, s2 = {}, i2 = 0, d2 = {};
  if (d2.parse = u2, d2.unparse = l2, d2.RECORD_SEP = String.fromCharCode(30), d2.UNIT_SEP = String.fromCharCode(31), d2.BYTE_ORDER_MARK = "\uFEFF", d2.BAD_DELIMITERS = ["\r", "\n", '"', d2.BYTE_ORDER_MARK], d2.WORKERS_SUPPORTED = !o2 && !!r2.Worker, d2.NODE_STREAM_INPUT = 1, d2.LocalChunkSize = 10485760, d2.RemoteChunkSize = 5242880, d2.DefaultDelimiter = ",", d2.Parser = y2, d2.ParserHandle = b2, d2.NetworkStreamer = m2, d2.FileStreamer = h2, d2.StringStreamer = f2, d2.ReadableStreamStreamer = v2, "undefined" == typeof PAPA_BROWSER_CONTEXT && (d2.DuplexStreamStreamer = g2), r2.jQuery) {
    var c2 = r2.jQuery;
    c2.fn.parse = function(e8) {
      var a2 = e8.config || {}, t3 = [];
      return this.each(function(e9) {
        if ("INPUT" !== c2(this).prop("tagName").toUpperCase() || "file" !== c2(this).attr("type").toLowerCase() || !r2.FileReader || !this.files || 0 === this.files.length) return true;
        for (var o4 = 0; o4 < this.files.length; o4++) t3.push({ file: this.files[o4], inputElem: this, instanceConfig: c2.extend({}, a2) });
      }), o3(), this;
      function o3() {
        if (0 !== t3.length) {
          var a3 = t3[0];
          if (j2(e8.before)) {
            var r3 = e8.before(a3.file, a3.inputElem);
            if ("object" == typeof r3) {
              if ("abort" === r3.action) return void n3("AbortError", a3.file, a3.inputElem, r3.reason);
              if ("skip" === r3.action) return void s3();
              "object" == typeof r3.config && (a3.instanceConfig = c2.extend(a3.instanceConfig, r3.config));
            } else if ("skip" === r3) return void s3();
          }
          var o4 = a3.instanceConfig.complete;
          a3.instanceConfig.complete = function(e9) {
            j2(o4) && o4(e9, a3.file, a3.inputElem), s3();
          }, d2.parse(a3.file, a3.instanceConfig);
        } else j2(e8.complete) && e8.complete();
      }
      function n3(a3, r3, t4, o4) {
        j2(e8.error) && e8.error({ name: a3 }, r3, t4, o4);
      }
      function s3() {
        t3.splice(0, 1), o3();
      }
    };
  }
  function u2(e8, a2) {
    var t3 = (a2 = a2 || {}).dynamicTyping || false;
    if (j2(t3) && (a2.dynamicTypingFunction = t3, t3 = {}), a2.dynamicTyping = t3, a2.transform = !!j2(a2.transform) && a2.transform, a2.worker && d2.WORKERS_SUPPORTED) {
      var o3 = x2();
      return o3.userStep = a2.step, o3.userChunk = a2.chunk, o3.userComplete = a2.complete, o3.userError = a2.error, a2.step = j2(a2.step), a2.chunk = j2(a2.chunk), a2.complete = j2(a2.complete), a2.error = j2(a2.error), delete a2.worker, void o3.postMessage({ input: e8, config: a2, workerId: o3.id });
    }
    var n3 = null;
    return e8 === d2.NODE_STREAM_INPUT && "undefined" == typeof PAPA_BROWSER_CONTEXT ? (n3 = new g2(a2)).getStream() : ("string" == typeof e8 ? (e8 = s3(e8), n3 = a2.download ? new m2(a2) : new f2(a2)) : true === e8.readable && j2(e8.read) && j2(e8.on) ? n3 = new v2(a2) : (r2.File && e8 instanceof File || e8 instanceof Object) && (n3 = new h2(a2)), n3.stream(e8));
    function s3(e9) {
      return 65279 === e9.charCodeAt(0) ? e9.slice(1) : e9;
    }
  }
  function l2(e8, a2) {
    var r3 = false, t3 = true, o3 = ",", n3 = "\r\n", s3 = '"', i3 = s3 + s3, c3 = false, u3 = null, l3 = false;
    m3();
    var p3 = new RegExp(w2(s3), "g");
    if ("string" == typeof e8 && (e8 = JSON.parse(e8)), Array.isArray(e8)) {
      if (!e8.length || Array.isArray(e8[0])) return h3(null, e8, c3);
      if ("object" == typeof e8[0]) return h3(u3 || Object.keys(e8[0]), e8, c3);
    } else if ("object" == typeof e8) return "string" == typeof e8.data && (e8.data = JSON.parse(e8.data)), Array.isArray(e8.data) && (e8.fields || (e8.fields = e8.meta && e8.meta.fields || u3), e8.fields || (e8.fields = Array.isArray(e8.data[0]) ? e8.fields : "object" == typeof e8.data[0] ? Object.keys(e8.data[0]) : []), Array.isArray(e8.data[0]) || "object" == typeof e8.data[0] || (e8.data = [e8.data])), h3(e8.fields || [], e8.data || [], c3);
    throw new Error("Unable to serialize unrecognized input");
    function m3() {
      if ("object" == typeof a2) {
        if ("string" != typeof a2.delimiter || d2.BAD_DELIMITERS.filter(function(e9) {
          return -1 !== a2.delimiter.indexOf(e9);
        }).length || (o3 = a2.delimiter), ("boolean" == typeof a2.quotes || "function" == typeof a2.quotes || Array.isArray(a2.quotes)) && (r3 = a2.quotes), "boolean" != typeof a2.skipEmptyLines && "string" != typeof a2.skipEmptyLines || (c3 = a2.skipEmptyLines), "string" == typeof a2.newline && (n3 = a2.newline), "string" == typeof a2.quoteChar && (s3 = a2.quoteChar), "boolean" == typeof a2.header && (t3 = a2.header), Array.isArray(a2.columns)) {
          if (0 === a2.columns.length) throw new Error("Option columns is empty");
          u3 = a2.columns;
        }
        void 0 !== a2.escapeChar && (i3 = a2.escapeChar + s3), ("boolean" == typeof a2.escapeFormulae || a2.escapeFormulae instanceof RegExp) && (l3 = a2.escapeFormulae instanceof RegExp ? a2.escapeFormulae : /^[=+\-@\t\r].*$/);
      }
    }
    function h3(e9, a3, r4) {
      var s4 = "";
      "string" == typeof e9 && (e9 = JSON.parse(e9)), "string" == typeof a3 && (a3 = JSON.parse(a3));
      var i4 = Array.isArray(e9) && e9.length > 0, d3 = !Array.isArray(a3[0]);
      if (i4 && t3) {
        for (var c4 = 0; c4 < e9.length; c4++) c4 > 0 && (s4 += o3), s4 += f3(e9[c4], c4);
        a3.length > 0 && (s4 += n3);
      }
      for (var u4 = 0; u4 < a3.length; u4++) {
        var l4 = i4 ? e9.length : a3[u4].length, p4 = false, m4 = i4 ? 0 === Object.keys(a3[u4]).length : 0 === a3[u4].length;
        if (r4 && !i4 && (p4 = "greedy" === r4 ? "" === a3[u4].join("").trim() : 1 === a3[u4].length && 0 === a3[u4][0].length), "greedy" === r4 && i4) {
          for (var h4 = [], v4 = 0; v4 < l4; v4++) {
            var g3 = d3 ? e9[v4] : v4;
            h4.push(a3[u4][g3]);
          }
          p4 = "" === h4.join("").trim();
        }
        if (!p4) {
          for (var b3 = 0; b3 < l4; b3++) {
            b3 > 0 && !m4 && (s4 += o3);
            var w3 = i4 && d3 ? e9[b3] : b3;
            s4 += f3(a3[u4][w3], b3);
          }
          u4 < a3.length - 1 && (!r4 || l4 > 0 && !m4) && (s4 += n3);
        }
      }
      return s4;
    }
    function f3(e9, a3) {
      if (null == e9) return "";
      if (e9.constructor === Date) return JSON.stringify(e9).slice(1, 25);
      var t4 = false;
      l3 && "string" == typeof e9 && l3.test(e9) && (e9 = "'" + e9, t4 = true);
      var n4 = e9.toString().replace(p3, i3);
      return (t4 = t4 || true === r3 || "function" == typeof r3 && r3(e9, a3) || Array.isArray(r3) && r3[a3] || v3(n4, d2.BAD_DELIMITERS) || n4.indexOf(o3) > -1 || " " === n4.charAt(0) || " " === n4.charAt(n4.length - 1)) ? s3 + n4 + s3 : n4;
    }
    function v3(e9, a3) {
      for (var r4 = 0; r4 < a3.length; r4++) if (e9.indexOf(a3[r4]) > -1) return true;
      return false;
    }
  }
  function p2(e8) {
    function a2(e9) {
      var a3 = T2(e9);
      a3.chunkSize = parseInt(a3.chunkSize), e9.step || e9.chunk || (a3.chunkSize = null), this._handle = new b2(a3), this._handle.streamer = this, this._config = a3;
    }
    this._handle = null, this._finished = false, this._completed = false, this._halted = false, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = true, this._completeResults = { data: [], errors: [], meta: {} }, a2.call(this, e8), this.parseChunk = function(e9, a3) {
      if (this.isFirstChunk && j2(this._config.beforeFirstChunk)) {
        var t3 = this._config.beforeFirstChunk(e9);
        void 0 !== t3 && (e9 = t3);
      }
      this.isFirstChunk = false, this._halted = false;
      var o3 = this._partialLine + e9;
      this._partialLine = "";
      var s3 = this._handle.parse(o3, this._baseIndex, !this._finished);
      if (!this._handle.paused() && !this._handle.aborted()) {
        var i3 = s3.meta.cursor;
        this._finished || (this._partialLine = o3.substring(i3 - this._baseIndex), this._baseIndex = i3), s3 && s3.data && (this._rowCount += s3.data.length);
        var c3 = this._finished || this._config.preview && this._rowCount >= this._config.preview;
        if (n2) r2.postMessage({ results: s3, workerId: d2.WORKER_ID, finished: c3 });
        else if (j2(this._config.chunk) && !a3) {
          if (this._config.chunk(s3, this._handle), this._handle.paused() || this._handle.aborted()) return void (this._halted = true);
          s3 = void 0, this._completeResults = void 0;
        }
        return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(s3.data), this._completeResults.errors = this._completeResults.errors.concat(s3.errors), this._completeResults.meta = s3.meta), this._completed || !c3 || !j2(this._config.complete) || s3 && s3.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = true), c3 || s3 && s3.meta.paused || this._nextChunk(), s3;
      }
      this._halted = true;
    }, this._sendError = function(e9) {
      j2(this._config.error) ? this._config.error(e9) : n2 && this._config.error && r2.postMessage({ workerId: d2.WORKER_ID, error: e9, finished: false });
    };
  }
  function m2(e8) {
    var a2;
    function r3(e9) {
      var a3 = e9.getResponseHeader("Content-Range");
      return null === a3 ? -1 : parseInt(a3.substring(a3.lastIndexOf("/") + 1));
    }
    (e8 = e8 || {}).chunkSize || (e8.chunkSize = d2.RemoteChunkSize), p2.call(this, e8), this._nextChunk = o2 ? function() {
      this._readChunk(), this._chunkLoaded();
    } : function() {
      this._readChunk();
    }, this.stream = function(e9) {
      this._input = e9, this._nextChunk();
    }, this._readChunk = function() {
      if (this._finished) this._chunkLoaded();
      else {
        if (a2 = new XMLHttpRequest(), this._config.withCredentials && (a2.withCredentials = this._config.withCredentials), o2 || (a2.onload = E2(this._chunkLoaded, this), a2.onerror = E2(this._chunkError, this)), a2.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !o2), this._config.downloadRequestHeaders) {
          var e9 = this._config.downloadRequestHeaders;
          for (var r4 in e9) a2.setRequestHeader(r4, e9[r4]);
        }
        if (this._config.chunkSize) {
          var t3 = this._start + this._config.chunkSize - 1;
          a2.setRequestHeader("Range", "bytes=" + this._start + "-" + t3);
        }
        try {
          a2.send(this._config.downloadRequestBody);
        } catch (e10) {
          this._chunkError(e10.message);
        }
        o2 && 0 === a2.status && this._chunkError();
      }
    }, this._chunkLoaded = function() {
      4 === a2.readyState && (a2.status < 200 || a2.status >= 400 ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : a2.responseText.length, this._finished = !this._config.chunkSize || this._start >= r3(a2), this.parseChunk(a2.responseText)));
    }, this._chunkError = function(e9) {
      var r4 = a2.statusText || e9;
      this._sendError(new Error(r4));
    };
  }
  function h2(e8) {
    var a2, r3;
    (e8 = e8 || {}).chunkSize || (e8.chunkSize = d2.LocalChunkSize), p2.call(this, e8);
    var t3 = "undefined" != typeof FileReader;
    this.stream = function(e9) {
      this._input = e9, r3 = e9.slice || e9.webkitSlice || e9.mozSlice, t3 ? ((a2 = new FileReader()).onload = E2(this._chunkLoaded, this), a2.onerror = E2(this._chunkError, this)) : a2 = new FileReaderSync(), this._nextChunk();
    }, this._nextChunk = function() {
      this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();
    }, this._readChunk = function() {
      var e9 = this._input;
      if (this._config.chunkSize) {
        var o3 = Math.min(this._start + this._config.chunkSize, this._input.size);
        e9 = r3.call(e9, this._start, o3);
      }
      var n3 = a2.readAsText(e9, this._config.encoding);
      t3 || this._chunkLoaded({ target: { result: n3 } });
    }, this._chunkLoaded = function(e9) {
      this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e9.target.result);
    }, this._chunkError = function() {
      this._sendError(a2.error);
    };
  }
  function f2(e8) {
    var a2;
    e8 = e8 || {}, p2.call(this, e8), this.stream = function(e9) {
      return a2 = e9, this._nextChunk();
    }, this._nextChunk = function() {
      if (!this._finished) {
        var e9, r3 = this._config.chunkSize;
        return r3 ? (e9 = a2.substring(0, r3), a2 = a2.substring(r3)) : (e9 = a2, a2 = ""), this._finished = !a2, this.parseChunk(e9);
      }
    };
  }
  function v2(e8) {
    e8 = e8 || {}, p2.call(this, e8);
    var a2 = [], r3 = true, t3 = false;
    this.pause = function() {
      p2.prototype.pause.apply(this, arguments), this._input.pause();
    }, this.resume = function() {
      p2.prototype.resume.apply(this, arguments), this._input.resume();
    }, this.stream = function(e9) {
      this._input = e9, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);
    }, this._checkIsFinished = function() {
      t3 && 1 === a2.length && (this._finished = true);
    }, this._nextChunk = function() {
      this._checkIsFinished(), a2.length ? this.parseChunk(a2.shift()) : r3 = true;
    }, this._streamData = E2(function(e9) {
      try {
        a2.push("string" == typeof e9 ? e9 : e9.toString(this._config.encoding)), r3 && (r3 = false, this._checkIsFinished(), this.parseChunk(a2.shift()));
      } catch (e10) {
        this._streamError(e10);
      }
    }, this), this._streamError = E2(function(e9) {
      this._streamCleanUp(), this._sendError(e9);
    }, this), this._streamEnd = E2(function() {
      this._streamCleanUp(), t3 = true, this._streamData("");
    }, this), this._streamCleanUp = E2(function() {
      this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);
    }, this);
  }
  function g2(e8) {
    var r3 = import_stream.default.Duplex, t3 = T2(e8), o3 = true, n3 = false, s3 = [], i3 = null;
    this._onCsvData = function(e9) {
      var a2 = e9.data;
      i3.push(a2) || this._handle.paused() || this._handle.pause();
    }, this._onCsvComplete = function() {
      i3.push(null);
    }, t3.step = E2(this._onCsvData, this), t3.complete = E2(this._onCsvComplete, this), p2.call(this, t3), this._nextChunk = function() {
      n3 && 1 === s3.length && (this._finished = true), s3.length ? s3.shift()() : o3 = true;
    }, this._addToParseQueue = function(e9, a2) {
      s3.push(E2(function() {
        if (this.parseChunk("string" == typeof e9 ? e9 : e9.toString(t3.encoding)), j2(a2)) return a2();
      }, this)), o3 && (o3 = false, this._nextChunk());
    }, this._onRead = function() {
      this._handle.paused() && this._handle.resume();
    }, this._onWrite = function(e9, a2, r4) {
      this._addToParseQueue(e9, r4);
    }, this._onWriteComplete = function() {
      n3 = true, this._addToParseQueue("");
    }, this.getStream = function() {
      return i3;
    }, (i3 = new r3({ readableObjectMode: true, decodeStrings: false, read: E2(this._onRead, this), write: E2(this._onWrite, this) })).once("finish", E2(this._onWriteComplete, this));
  }
  function b2(e8) {
    var a2, r3, t3, o3 = Math.pow(2, 53), n3 = -o3, s3 = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/, i3 = /^((\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z)))$/, c3 = this, u3 = 0, l3 = 0, p3 = false, m3 = false, h3 = [], f3 = { data: [], errors: [], meta: {} };
    if (j2(e8.step)) {
      var v3 = e8.step;
      e8.step = function(a3) {
        if (f3 = a3, _3()) x3();
        else {
          if (x3(), 0 === f3.data.length) return;
          u3 += a3.data.length, e8.preview && u3 > e8.preview ? r3.abort() : (f3.data = f3.data[0], v3(f3, c3));
        }
      };
    }
    function g3(a3) {
      return "greedy" === e8.skipEmptyLines ? "" === a3.join("").trim() : 1 === a3.length && 0 === a3[0].length;
    }
    function b3(e9) {
      if (s3.test(e9)) {
        var a3 = parseFloat(e9);
        if (a3 > n3 && a3 < o3) return true;
      }
      return false;
    }
    function x3() {
      return f3 && t3 && (C2("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '" + d2.DefaultDelimiter + "'"), t3 = false), e8.skipEmptyLines && (f3.data = f3.data.filter(function(e9) {
        return !g3(e9);
      })), _3() && I3(), E3();
    }
    function _3() {
      return e8.header && 0 === h3.length;
    }
    function I3() {
      if (f3) if (Array.isArray(f3.data[0])) {
        for (var a3 = 0; _3() && a3 < f3.data.length; a3++) f3.data[a3].forEach(r4);
        f3.data.splice(0, 1);
      } else f3.data.forEach(r4);
      function r4(a4, r5) {
        j2(e8.transformHeader) && (a4 = e8.transformHeader(a4, r5)), h3.push(a4);
      }
    }
    function k3(a3) {
      return e8.dynamicTypingFunction && void 0 === e8.dynamicTyping[a3] && (e8.dynamicTyping[a3] = e8.dynamicTypingFunction(a3)), true === (e8.dynamicTyping[a3] || e8.dynamicTyping);
    }
    function S3(e9, a3) {
      return k3(e9) ? "true" === a3 || "TRUE" === a3 || "false" !== a3 && "FALSE" !== a3 && (b3(a3) ? parseFloat(a3) : i3.test(a3) ? new Date(a3) : "" === a3 ? null : a3) : a3;
    }
    function E3() {
      if (!f3 || !e8.header && !e8.dynamicTyping && !e8.transform) return f3;
      function a3(a4, r5) {
        var t4, o4 = e8.header ? {} : [];
        for (t4 = 0; t4 < a4.length; t4++) {
          var n4 = t4, s4 = a4[t4];
          e8.header && (n4 = t4 >= h3.length ? "__parsed_extra" : h3[t4]), e8.transform && (s4 = e8.transform(s4, n4)), s4 = S3(n4, s4), "__parsed_extra" === n4 ? (o4[n4] = o4[n4] || [], o4[n4].push(s4)) : o4[n4] = s4;
        }
        return e8.header && (t4 > h3.length ? C2("FieldMismatch", "TooManyFields", "Too many fields: expected " + h3.length + " fields but parsed " + t4, l3 + r5) : t4 < h3.length && C2("FieldMismatch", "TooFewFields", "Too few fields: expected " + h3.length + " fields but parsed " + t4, l3 + r5)), o4;
      }
      var r4 = 1;
      return !f3.data.length || Array.isArray(f3.data[0]) ? (f3.data = f3.data.map(a3), r4 = f3.data.length) : f3.data = a3(f3.data, 0), e8.header && f3.meta && (f3.meta.fields = h3), l3 += r4, f3;
    }
    function O2(a3, r4, t4, o4, n4) {
      var s4, i4, c4, u4;
      n4 = n4 || [",", "	", "|", ";", d2.RECORD_SEP, d2.UNIT_SEP];
      for (var l4 = 0; l4 < n4.length; l4++) {
        var p4 = n4[l4], m4 = 0, h4 = 0, f4 = 0;
        c4 = void 0;
        for (var v4 = new y2({ comments: o4, delimiter: p4, newline: r4, preview: 10 }).parse(a3), b4 = 0; b4 < v4.data.length; b4++) if (t4 && g3(v4.data[b4])) f4++;
        else {
          var w3 = v4.data[b4].length;
          h4 += w3, void 0 !== c4 ? w3 > 0 && (m4 += Math.abs(w3 - c4), c4 = w3) : c4 = w3;
        }
        v4.data.length > 0 && (h4 /= v4.data.length - f4), (void 0 === i4 || m4 <= i4) && (void 0 === u4 || h4 > u4) && h4 > 1.99 && (i4 = m4, s4 = p4, u4 = h4);
      }
      return e8.delimiter = s4, { successful: !!s4, bestDelimiter: s4 };
    }
    function A2(e9, a3) {
      e9 = e9.substring(0, 1048576);
      var r4 = new RegExp(w2(a3) + "([^]*?)" + w2(a3), "gm"), t4 = (e9 = e9.replace(r4, "")).split("\r"), o4 = e9.split("\n"), n4 = o4.length > 1 && o4[0].length < t4[0].length;
      if (1 === t4.length || n4) return "\n";
      for (var s4 = 0, i4 = 0; i4 < t4.length; i4++) "\n" === t4[i4][0] && s4++;
      return s4 >= t4.length / 2 ? "\r\n" : "\r";
    }
    function C2(e9, a3, r4, t4) {
      var o4 = { type: e9, code: a3, message: r4 };
      void 0 !== t4 && (o4.row = t4), f3.errors.push(o4);
    }
    this.parse = function(o4, n4, s4) {
      var i4 = e8.quoteChar || '"';
      if (e8.newline || (e8.newline = A2(o4, i4)), t3 = false, e8.delimiter) j2(e8.delimiter) && (e8.delimiter = e8.delimiter(o4), f3.meta.delimiter = e8.delimiter);
      else {
        var c4 = O2(o4, e8.newline, e8.skipEmptyLines, e8.comments, e8.delimitersToGuess);
        c4.successful ? e8.delimiter = c4.bestDelimiter : (t3 = true, e8.delimiter = d2.DefaultDelimiter), f3.meta.delimiter = e8.delimiter;
      }
      var u4 = T2(e8);
      return e8.preview && e8.header && u4.preview++, a2 = o4, r3 = new y2(u4), f3 = r3.parse(a2, n4, s4), x3(), p3 ? { meta: { paused: true } } : f3 || { meta: { paused: false } };
    }, this.paused = function() {
      return p3;
    }, this.pause = function() {
      p3 = true, r3.abort(), a2 = j2(e8.chunk) ? "" : a2.substring(r3.getCharIndex());
    }, this.resume = function() {
      c3.streamer._halted ? (p3 = false, c3.streamer.parseChunk(a2, true)) : setTimeout(c3.resume, 3);
    }, this.aborted = function() {
      return m3;
    }, this.abort = function() {
      m3 = true, r3.abort(), f3.meta.aborted = true, j2(e8.complete) && e8.complete(f3), a2 = "";
    };
  }
  function w2(e8) {
    return e8.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
  }
  function y2(e8) {
    var a2, r3 = (e8 = e8 || {}).delimiter, t3 = e8.newline, o3 = e8.comments, n3 = e8.step, s3 = e8.preview, i3 = e8.fastMode, c3 = a2 = void 0 === e8.quoteChar || null === e8.quoteChar ? '"' : e8.quoteChar;
    if (void 0 !== e8.escapeChar && (c3 = e8.escapeChar), ("string" != typeof r3 || d2.BAD_DELIMITERS.indexOf(r3) > -1) && (r3 = ","), o3 === r3) throw new Error("Comment character same as delimiter");
    true === o3 ? o3 = "#" : ("string" != typeof o3 || d2.BAD_DELIMITERS.indexOf(o3) > -1) && (o3 = false), "\n" !== t3 && "\r" !== t3 && "\r\n" !== t3 && (t3 = "\n");
    var u3 = 0, l3 = false;
    this.parse = function(d3, p3, m3) {
      if ("string" != typeof d3) throw new Error("Input must be a string");
      var h3 = d3.length, f3 = r3.length, v3 = t3.length, g3 = o3.length, b3 = j2(n3);
      u3 = 0;
      var y3 = [], x3 = [], _3 = [], I3 = 0;
      if (!d3) return V2();
      if (e8.header && !p3) {
        var k3 = d3.split(t3)[0].split(r3), S3 = "_", T3 = [], E3 = {}, O2 = false;
        for (var A2 in k3) {
          var C2 = k3[A2];
          j2(e8.transformHeader) && (C2 = e8.transformHeader(C2, A2));
          var R2 = C2, N2 = E3[C2] || 0;
          for (N2 > 0 && (O2 = true, R2 = C2 + S3 + N2), E3[C2] = N2 + 1; T3.includes(R2); ) R2 = R2 + S3 + N2;
          T3.push(R2);
        }
        if (O2) {
          var P2 = d3.split(t3);
          P2[0] = T3.join(r3), d3 = P2.join(t3);
        }
      }
      if (i3 || false !== i3 && -1 === d3.indexOf(a2)) {
        for (var M2 = d3.split(t3), L2 = 0; L2 < M2.length; L2++) {
          if (_3 = M2[L2], u3 += _3.length, L2 !== M2.length - 1) u3 += t3.length;
          else if (m3) return V2();
          if (!o3 || _3.substring(0, g3) !== o3) {
            if (b3) {
              if (y3 = [], U2(_3.split(r3)), G2(), l3) return V2();
            } else U2(_3.split(r3));
            if (s3 && L2 >= s3) return y3 = y3.slice(0, s3), V2(true);
          }
        }
        return V2();
      }
      for (var D2 = d3.indexOf(r3, u3), z2 = d3.indexOf(t3, u3), F2 = new RegExp(w2(c3) + w2(a2), "g"), B2 = d3.indexOf(a2, u3); ; ) if (d3[u3] !== a2) if (o3 && 0 === _3.length && d3.substring(u3, u3 + g3) === o3) {
        if (-1 === z2) return V2();
        u3 = z2 + v3, z2 = d3.indexOf(t3, u3), D2 = d3.indexOf(r3, u3);
      } else if (-1 !== D2 && (D2 < z2 || -1 === z2)) _3.push(d3.substring(u3, D2)), u3 = D2 + f3, D2 = d3.indexOf(r3, u3);
      else {
        if (-1 === z2) break;
        if (_3.push(d3.substring(u3, z2)), K2(z2 + v3), b3 && (G2(), l3)) return V2();
        if (s3 && y3.length >= s3) return V2(true);
      }
      else for (B2 = u3, u3++; ; ) {
        if (-1 === (B2 = d3.indexOf(a2, B2 + 1))) return m3 || x3.push({ type: "Quotes", code: "MissingQuotes", message: "Quoted field unterminated", row: y3.length, index: u3 }), W2();
        if (B2 === h3 - 1) return W2(d3.substring(u3, B2).replace(F2, a2));
        if (a2 !== c3 || d3[B2 + 1] !== c3) {
          if (a2 === c3 || 0 === B2 || d3[B2 - 1] !== c3) {
            -1 !== D2 && D2 < B2 + 1 && (D2 = d3.indexOf(r3, B2 + 1)), -1 !== z2 && z2 < B2 + 1 && (z2 = d3.indexOf(t3, B2 + 1));
            var q2 = H2(-1 === z2 ? D2 : Math.min(D2, z2));
            if (d3.substr(B2 + 1 + q2, f3) === r3) {
              _3.push(d3.substring(u3, B2).replace(F2, a2)), u3 = B2 + 1 + q2 + f3, d3[B2 + 1 + q2 + f3] !== a2 && (B2 = d3.indexOf(a2, u3)), D2 = d3.indexOf(r3, u3), z2 = d3.indexOf(t3, u3);
              break;
            }
            var $2 = H2(z2);
            if (d3.substring(B2 + 1 + $2, B2 + 1 + $2 + v3) === t3) {
              if (_3.push(d3.substring(u3, B2).replace(F2, a2)), K2(B2 + 1 + $2 + v3), D2 = d3.indexOf(r3, u3), B2 = d3.indexOf(a2, u3), b3 && (G2(), l3)) return V2();
              if (s3 && y3.length >= s3) return V2(true);
              break;
            }
            x3.push({ type: "Quotes", code: "InvalidQuotes", message: "Trailing quote on quoted field is malformed", row: y3.length, index: u3 }), B2++;
          }
        } else B2++;
      }
      return W2();
      function U2(e9) {
        y3.push(e9), I3 = u3;
      }
      function H2(e9) {
        var a3 = 0;
        if (-1 !== e9) {
          var r4 = d3.substring(B2 + 1, e9);
          r4 && "" === r4.trim() && (a3 = r4.length);
        }
        return a3;
      }
      function W2(e9) {
        return m3 || (void 0 === e9 && (e9 = d3.substring(u3)), _3.push(e9), u3 = h3, U2(_3), b3 && G2()), V2();
      }
      function K2(e9) {
        u3 = e9, U2(_3), _3 = [], z2 = d3.indexOf(t3, u3);
      }
      function V2(e9) {
        return { data: y3, errors: x3, meta: { delimiter: r3, linebreak: t3, aborted: l3, truncated: !!e9, cursor: I3 + (p3 || 0) } };
      }
      function G2() {
        n3(V2()), y3 = [], x3 = [];
      }
    }, this.abort = function() {
      l3 = true;
    }, this.getCharIndex = function() {
      return u3;
    };
  }
  function x2() {
    if (!d2.WORKERS_SUPPORTED) return false;
    var e8 = t2(), a2 = new r2.Worker(e8);
    return a2.onmessage = _2, a2.id = i2++, s2[a2.id] = a2, a2;
  }
  function _2(e8) {
    var a2 = e8.data, r3 = s2[a2.workerId], t3 = false;
    if (a2.error) r3.userError(a2.error, a2.file);
    else if (a2.results && a2.results.data) {
      var o3 = { abort: function() {
        t3 = true, I2(a2.workerId, { data: [], errors: [], meta: { aborted: true } });
      }, pause: k2, resume: k2 };
      if (j2(r3.userStep)) {
        for (var n3 = 0; n3 < a2.results.data.length && (r3.userStep({ data: a2.results.data[n3], errors: a2.results.errors, meta: a2.results.meta }, o3), !t3); n3++) ;
        delete a2.results;
      } else j2(r3.userChunk) && (r3.userChunk(a2.results, o3, a2.file), delete a2.results);
    }
    a2.finished && !t3 && I2(a2.workerId, a2.results);
  }
  function I2(e8, a2) {
    var r3 = s2[e8];
    j2(r3.userComplete) && r3.userComplete(a2), r3.terminate(), delete s2[e8];
  }
  function k2() {
    throw new Error("Not implemented.");
  }
  function S2(e8) {
    var a2 = e8.data;
    if (void 0 === d2.WORKER_ID && a2 && (d2.WORKER_ID = a2.workerId), "string" == typeof a2.input) r2.postMessage({ workerId: d2.WORKER_ID, results: d2.parse(a2.input, a2.config), finished: true });
    else if (r2.File && a2.input instanceof File || a2.input instanceof Object) {
      var t3 = d2.parse(a2.input, a2.config);
      t3 && r2.postMessage({ workerId: d2.WORKER_ID, results: t3, finished: true });
    }
  }
  function T2(e8) {
    if ("object" != typeof e8 || null === e8) return e8;
    var a2 = Array.isArray(e8) ? [] : {};
    for (var r3 in e8) a2[r3] = T2(e8[r3]);
    return a2;
  }
  function E2(e8, a2) {
    return function() {
      e8.apply(a2, arguments);
    };
  }
  function j2(e8) {
    return "function" == typeof e8;
  }
  return n2 && (r2.onmessage = S2), m2.prototype = Object.create(p2.prototype), m2.prototype.constructor = m2, h2.prototype = Object.create(p2.prototype), h2.prototype.constructor = h2, f2.prototype = Object.create(f2.prototype), f2.prototype.constructor = f2, v2.prototype = Object.create(p2.prototype), v2.prototype.constructor = v2, "undefined" == typeof PAPA_BROWSER_CONTEXT && (g2.prototype = Object.create(p2.prototype), g2.prototype.constructor = g2), d2;
}();
var um = cm.exports;
var lm = class {
  constructor() {
    __publicField(this, "computedScoreCallback", async (e8) => {
      const { userMetadata: a2, taskId: r2 } = s.session.get("config");
      if ("swr" !== r2) return null;
      const t2 = a2 == null ? void 0 : a2.ageMonths, o2 = Cs(a2.grade);
      null == t2 && null == o2 || this.tableLoaded || await this.initTable();
      return $u(e8, (e9) => {
        var _a2, _b2;
        const a3 = void 0 === ((_a2 = e9.test) == null ? void 0 : _a2.thetaEstimate) ? null : (_b2 = e9.test) == null ? void 0 : _b2.thetaEstimate;
        let r3 = { thetaEstimate: a3 };
        if (null != a3) {
          const e10 = Number(a3.toFixed(1)), { ageForScore: t3 } = this, o3 = this.lookupTable.find((a4) => Number(Number(a4.ageMonths).toFixed(1)) === t3 && Number(Number(a4.thetaEstimate).toFixed(1)) === e10);
          if (void 0 !== o3) {
            const { ageMonths: e11, thetaEstimate: a4, ...t4 } = o3;
            r3 = { ...r3, ...t4 };
          }
        }
        return r3;
      });
    });
    this.tableURL = "https://storage.googleapis.com/roar-swr/scores/swr_lookup_v6.csv", this.lookupTable = [], this.tableLoaded = false;
  }
  async initTable() {
    return new Promise((e8, a2) => {
      var _a2, _b2;
      let r2 = (_a2 = s.session.get("config").userMetadata) == null ? void 0 : _a2.ageMonths;
      if (null == r2) {
        const e9 = Cs((_b2 = s.session.get("config").userMetadata) == null ? void 0 : _b2.grade);
        null == e9 && a2(), r2 = 66 + 12 * e9;
      }
      this.ageForScore = r2, r2 < 72 && (this.ageForScore = 72), r2 > 216 && (this.ageForScore = 216), um.parse(this.tableURL, { download: true, header: true, dynamicTyping: true, skipEmptyLines: true, step: (e9) => {
        this.ageForScore === Number(e9.data.ageMonths) && this.lookupTable.push(dm(e9.data, ["", "X"]));
      }, complete: () => {
        this.tableLoaded = true, e8();
      } });
    });
  }
};
var pm = "https://app.prolific.com/submissions/complete?cc=CKD7AVY5";
var mm = "https://roar.stanford.edu/";
var hm = false;
var fm = function(e8) {
  const a2 = new Fi(e8);
  return Object.defineProperties(a2, Object.fromEntries(Object.entries({ init: "`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.", ALL_KEYS: 'jsPsych.ALL_KEYS was replaced by the "ALL_KEYS" string in jsPsych v7.', NO_KEYS: 'jsPsych.NO_KEYS was replaced by the "NO_KEYS" string in jsPsych v7.', currentTimelineNodeID: "`currentTimelineNodeID()` was renamed to `getCurrentTimelineNodeID()` in jsPsych v7.", progress: "`progress()` was renamed to `getProgress()` in jsPsych v7.", startTime: "`startTime()` was renamed to `getStartTime()` in jsPsych v7.", totalTime: "`totalTime()` was renamed to `getTotalTime()` in jsPsych v7.", currentTrial: "`currentTrial()` was renamed to `getCurrentTrial()` in jsPsych v7.", initSettings: "`initSettings()` was renamed to `getInitSettings()` in jsPsych v7.", allTimelineVariables: "`allTimelineVariables()` was renamed to `getAllTimelineVariables()` in jsPsych v7." }).map(([e9, a3]) => [e9, { get() {
    throw new Bs(a3);
  } }]))), a2;
}({ show_progress_bar: true, auto_update_progress_bar: false, message_progress_bar: `${nc.t("progressBar")}`, on_finish: () => {
  document.body.style.cursor = "auto";
  const e8 = s.session.get("config");
  "demo" === e8.recruitment && (window.location.href = mm), "prolific" === e8.recruitment && (window.location.href = pm), "sona" === e8.recruitment && (window.location.href = `https://stanfordpsych.sona-systems.com/webstudy_credit.aspx?experiment_id=785&credit_token=3aecfa1b1c5943ecb1f68f54b75f3404&survey_code=${s.session.get("config").pid}`);
}, on_trial_start: () => {
  if (!hm) {
    document.querySelector("#jspsych-progressbar-container > span").textContent = `${nc.t("progressBar")}`, hm = true;
  }
} });
var vm = (e8) => {
  const a2 = gu(e8.userMode);
  if (s.session.has("initialized") && s.local("initialized")) return s.session;
  "fullAdaptive" === e8.userMode || "testAdaptive" === e8.userMode || "shortAdaptive" === e8.userMode || "longAdaptive" === e8.userMode ? s.session.set("itemSelect", "mfi") : s.session.set("itemSelect", "random"), s.session.set("practiceIndex", 0), s.session.set("currentBlockIndex", 0), s.session.set("trialNumBlock", 1), s.session.set("trialNumTotal", 1), s.session.set("demoCounter", 0), s.session.set("nextStimulus", null), s.session.set("response", ""), s.session.set("currentTrialCorrect", true), s.session.set("coinTrackingIndex", 0), s.session.set("initialized", true), s.session.set("corpusAll", a2.corpusAll), s.session.set("corpusPractice", a2.corpusPractice), s.session.set("corpusOriginal", a2.corpusOriginal), s.session.set("corpusNew", a2.corpusNew), s.session.set("corpusNewEasy", a2.corpusNewEasy);
  const [r2, t2] = ((e9, a3) => {
    if ("presentationExp" === e9) {
      const e10 = [80, 160, 350, 700, null], r3 = hu(e10, 4), t3 = pu(a3.corpus_pseudo, 20, 13, r3), o2 = pu(a3.corpus_real, 20, 13, r3);
      return [fu(t3, o2), e10];
    }
    if ("presentationExpShort" === e9) {
      const e10 = [80, 160, 350, null], r3 = hu(e10, 2), t3 = pu(a3.corpus_pseudo, 8, 13, r3), o2 = pu(a3.corpus_real, 8, 13, r3);
      return [fu(t3, o2), e10];
    }
    if ("presentationExp2Conditions" === e9) {
      const e10 = [350, null], r3 = Math.random() < 0.5 ? [350, 350, null, null] : [null, null, 350, 350], t3 = mu(a3.corpus_pseudo, 4, 15, r3), o2 = mu(a3.corpus_real, 4, 15, r3);
      return [fu(t3, o2), e10];
    }
    return [[], []];
  })(e8.userMode, a2.corpusExperimental);
  return s.session.set("corpusExperiment", r2), s.session.set("presentationTimeOption", t2), s.session.set("presentationTime", e8.timing.stimulusTime), s.session;
};
var gm = (e8, a2) => {
  let r2;
  return r2 = "grade-based" === e8 ? !(Cs(a2) >= 6) : !e8 || "true" === (e8 == null ? void 0 : e8.toLocaleLowerCase()), r2;
};
var bm = { fullRandom: ["random", "random", "random"], shortRandom: ["random", "random", "random"], shortRandom80: ["random", "random", "random"], fullAdaptive: ["mfi", "mfi", "mfi"], shortAdaptive: ["mfi", "mfi", "mfi"], shortAdaptiveEasyBlock: ["random", "mfi", "mfi", "mfi"], longAdaptive: ["mfi", "mfi", "mfi"], fullItemBank: ["random", "random", "random"], demo: ["demo"], testAdaptive: ["mfi", "mfi", "mfi"], testRandom: ["mfi", "mfi", "mfi"], presentationExp: Array.from({ length: 20 }, () => "random"), presentationExpShort: Array.from({ length: 8 }, () => "random"), presentationExp2Conditions: Array.from({ length: 4 }, () => "random") };
var wm = [null, 350, 160, 72, 36];
var ym = [1e3, 2e3, 25e3];
var xm = [null, 5e3, 8e3, 1e5];
var _m = (e8, a2, r2) => {
  const t2 = parseInt(e8, 10) + parseInt(a2, 10);
  return [Math.floor(t2 / r2), Math.floor(t2 / r2), t2 - 2 * Math.floor(t2 / r2)];
};
var Im = (e8) => "random" === e8 ? Math.random() < 0.5 ? "neutral" : "binary" : "neutral" === e8 ? "neutral" : "binary";
var km = (e8, a2, r2, t2) => {
  const o2 = _m(a2, r2, 3);
  return { fullAdaptive: [82, 82, 82], fullRandom: [57, 57, 56], shortRandom: [40, 40, 40], shortRandom80: [27, 27, 26], shortAdaptive: o2, longAdaptive: o2, fullItemBank: _m(t2, r2, 3), shortAdaptiveEasyBlock: [10, o2[0], o2[1], o2[2]], demo: [60], testAdaptive: [6, 4, 4], testRandom: [6, 4, 4], presentationExp: vu(520, 20), presentationExpShort: vu(208, 8), presentationExp2Conditions: vu(120, 4) }[e8];
};
var Sm = (e8) => [Ru, ...wu, { type: ic, func: () => {
  const a2 = s.session.get("config");
  a2.pid = a2.pid || (() => {
    let e9 = "";
    const a3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    for (let r2 = 0; r2 < 16; r2 += 1) e9 += a3.charAt(Math.floor(62 * Math.random()));
    return e9;
  })(), e8.updateUser({ assessmentPid: a2.pid, labId: a2.labId, ...a2.userMetadata });
} }];
var Tm = {};
var Em = { exports: {} };
!function(e8) {
  function a2(e9, a3) {
    this.low = e9, this.high = a3, this.random_sample = function() {
      return Math.random() * (this.high - this.low) + this.low;
    };
  }
  function r2(e9, a3) {
    this.low = e9, this.high = a3, this.random_sample = function() {
      var e10 = Math.random() * (this.high - this.low) + this.low;
      return Math.round(e10);
    };
  }
  function t2(e9) {
    this.categories = e9, this.random_sample = function() {
      var e10 = this.categories.length, a3 = Math.round(Math.random() * (e10 - 1));
      return this.categories[a3];
    };
  }
  function o2(e9) {
    this.dimensions = e9, this.rsv = function(e10) {
      for (var a3 = [], r3 = 0; r3 < e10; r3++) {
        var t3 = [];
        for (var o3 of this.dimensions) t3.push(o3.random_sample());
        a3.push(t3);
      }
      return a3;
    };
  }
  function n2(a3) {
    this.space = e8.exports.to_space(a3), this.X = [], this.Y = [], this.best_x = null, this.best_y = null, this.ask = function(e9 = null) {
      return null == e9 ? this.space.rsv(1)[0] : this.space.rsv(e9);
    }, this.tell = function(e9, a4) {
      for (var r3 = 0; r3 < e9.length; r3++) (null == this.best_y || a4[r3] < this.best_y) && (this.best_y = a4[r3], this.best_x = e9[r3]);
      this.X = this.X.concat(e9), this.Y = this.Y.concat(a4);
    };
  }
  function s2(o3, n3 = 13, s3 = 0.1) {
    this.space = e8.exports.to_space(o3), this.n_random_starts = n3, this.mutation_rate = s3, this.n_random_starts_ = n3, this.X = [], this.Y = [], this.best_x = null, this.best_y = null, this.rnd = function(e9 = null) {
      return null == e9 && (e9 = this.mutation_rate), Math.random() < e9;
    }, this.ask = function() {
      if (this.n_random_starts_ > 0) return this.space.rsv(1)[0];
      for (finished = false; !finished; ) {
        for (var e9 = [], o4 = this.X[0], n4 = this.Y[0], s4 = 1; s4 < this.Y.length; s4++) this.Y[s4] < n4 && (o4 = this.X[s4], n4 = this.Y[s4]);
        for (s4 = 0; s4 < this.space.dimensions.length; s4++) {
          var i3 = o4[s4], d3 = this.space.dimensions[s4];
          if (d3 instanceof t2 && this.rnd()) {
            var c3 = Math.round(Math.random() * (d3.categories.length - 1));
            i3 = d3.categories[c3], finished = true;
          }
          if ((d3 instanceof a2 || d3 instanceof r2) && this.rnd()) {
            for (var u3 = d3.low, l3 = d3.high, p2 = -16; p2 <= 1; p2++) this.rnd() && (finished = true, this.rnd(0.5) ? diff = l3 - i3 : diff = u3 - i3, i3 += diff * Math.pow(2, p2));
            i3 < u3 && (i3 = u3), i3 > l3 && (i3 = l3), d3 instanceof r2 && (i3 = Math.round(i3));
          }
          e9.push(i3);
        }
      }
      return e9;
    }, this.tell = function(e9, a3) {
      for (var r3 = 0; r3 < e9.length; r3++) this.n_random_starts_ -= 1, (null == this.best_y || a3[r3] < this.best_y) && (this.best_y = a3[r3], this.best_x = e9[r3]);
      this.n_random_starts_ < 0 && (this.n_random_starts_ = 0), this.X = this.X.concat(e9), this.Y = this.Y.concat(a3);
    };
  }
  function i2(e9) {
    for (var a3 = [], r3 = 0; r3 < e9.length; r3++) a3.push(r3);
    for (r3 = 0; r3 < e9.length; r3++) {
      var t3 = Math.floor(Math.random() * r3), o3 = a3[r3];
      a3[r3] = a3[t3], a3[t3] = o3;
    }
    return a3;
  }
  function d2(e9, a3) {
    for (var r3 = 0, t3 = 0; t3 < e9.length; t3++) r3 += e9[t3] * a3[t3];
    return r3;
  }
  function c2(e9, a3) {
    for (var r3 = new Array(e9.length), t3 = 0; t3 < e9.length; t3++) r3[t3] = e9[t3] - a3[t3];
    return r3;
  }
  function u2(e9, a3, r3) {
    for (var t3 = 0; t3 < e9.length; t3++) e9[t3] = e9[t3] + a3 * r3[t3];
    return e9;
  }
  function l2(e9, a3) {
    for (var r3 = 0; r3 < e9.length; r3++) if (Math.abs(e9[r3]) >= a3) return false;
    return true;
  }
  e8.exports.Real = function(e9, r3) {
    return new a2(e9, r3);
  }, e8.exports.Integer = function(e9, a3) {
    return new r2(e9, a3);
  }, e8.exports.Categorical = function(e9) {
    return new t2(e9);
  }, e8.exports.Space = function(e9) {
    return new o2(e9);
  }, e8.exports.to_space = function(a3) {
    if (a3 instanceof Array) return e8.exports.Space(a3);
    if (a3 instanceof o2) return a3;
    throw "Unknown space definition";
  }, e8.exports.RandomOptimizer = function(e9) {
    return new n2(e9);
  }, e8.exports.OMGOptimizer = function(e9, a3 = 13, r3 = 0.1) {
    return new s2(e9, a3, r3);
  }, e8.exports.dummy_minimize = function(a3, r3, t3 = 64) {
    for (var o3 = e8.exports.RandomOptimizer(r3), n3 = 0; n3 < t3; n3++) {
      var s3 = o3.ask(), i3 = a3(s3);
      o3.tell([s3], [i3]);
    }
    return o3;
  }, e8.exports.rs_minimize = function(a3, r3, t3 = 64, o3 = 13, n3 = 0.1) {
    for (var s3 = e8.exports.OMGOptimizer(r3, o3, n3), i3 = 0; i3 < t3; i3++) {
      var d3 = s3.ask(), c3 = a3(d3);
      s3.tell([d3], [c3]);
    }
    return s3;
  }, e8.exports.minimize_Powell = function(e9, a3, r3 = 0.01, t3 = 1e-3) {
    for (var o3 = false, n3 = a3.slice(), s3 = Math.exp(10), d3 = e9(n3); !o3; ) {
      var c3 = i2(n3);
      o3 = true;
      for (var u3 = 0; u3 < c3.length; u3++) {
        n3[c3[u3]] += 1e-6;
        var l3 = e9(n3);
        n3[c3[u3]] -= 1e-6;
        var p2 = (l3 - d3) / 1e-6;
        Math.abs(p2) > r3 && (o3 = false), n3[c3[u3]] = n3[c3[u3]] - t3 * p2, d3 = e9(n3);
      }
      t3 = s3 > d3 ? 1.1 * t3 : 0.7 * t3, s3 = d3;
    }
    var m2 = {};
    return m2.argument = n3, m2.fncvalue = d3, m2;
  }, e8.exports.minimize_GradientDescent = function(e9, a3, r3) {
    for (var t3 = r3.slice(), o3 = false, n3 = 0.01, s3 = e9(t3); !o3; ) {
      var i3 = a3(t3);
      if (o3 = l2(i3, 1e-3)) break;
      for (var d3 = true; d3; ) {
        var c3 = t3.slice();
        u2(c3, -n3, i3);
        var p2 = e9(c3);
        n3 = (d3 = s3 < p2) ? 0.7 * n3 : 1.1 * n3;
      }
      t3 = c3, s3 = p2;
    }
    var m2 = {};
    return m2.argument = t3, m2.fncvalue = p2, m2;
  }, e8.exports.minimize_L_BFGS = function(e9, a3, r3) {
    for (var t3 = r3.slice(), o3 = 1e-3, n3 = e9(t3), s3 = [], i3 = [], p2 = a3(t3), m2 = p2.slice(); ; ) {
      var h2 = t3.slice();
      u2(h2, o3, m2);
      var f2 = e9(h2);
      o3 = n3 < f2 ? 0.5 * o3 : 1.2 * o3;
      var v2 = a3(h2);
      if (l2(v2, 1e-5)) break;
      var g2 = c2(h2, t3), b2 = c2(v2, p2);
      s3.unshift(g2), i3.unshift(b2), d2(g2, b2), s3.length > 5 && (s3.pop(), i3.pop());
      for (var w2 = p2.slice(), y2 = new Array(s3.length), x2 = 0; x2 < s3.length; x2++) {
        var _2 = 1 / d2(s3[x2], i3[x2]);
        y2[x2] = _2 * d2(s3[x2], w2), u2(w2, -y2[x2], i3[x2]);
      }
      var I2 = d2(g2, b2) / d2(b2, b2);
      for (x2 = 0; x2 < w2.length; x2++) w2[x2] = w2[x2] * I2;
      for (x2 = 0; x2 < s3.length; x2++) {
        var k2 = s3.length - x2 - 1, S2 = 1 / d2(s3[k2], i3[k2]) * d2(i3[k2], w2);
        u2(w2, y2[k2] - S2, s3[k2]);
      }
      m2 = w2.slice();
      for (x2 = 0; x2 < m2.length; x2++) m2[x2] = -m2[x2];
      n3 = f2, t3 = h2, p2 = v2;
    }
    var T2 = {};
    return T2.argument = t3, T2.fncvalue = f2, T2;
  };
}(Em);
var jm = Em.exports;
var Om = { exports: {} };
!function(e8, a2) {
  (function() {
    var t2, o2 = "Expected a function", n2 = "__lodash_hash_undefined__", s2 = "__lodash_placeholder__", i2 = 16, d2 = 32, c2 = 64, u2 = 128, l2 = 256, p2 = 1 / 0, m2 = 9007199254740991, h2 = NaN, f2 = 4294967295, v2 = [["ary", u2], ["bind", 1], ["bindKey", 2], ["curry", 8], ["curryRight", i2], ["flip", 512], ["partial", d2], ["partialRight", c2], ["rearg", l2]], g2 = "[object Arguments]", b2 = "[object Array]", w2 = "[object Boolean]", y2 = "[object Date]", x2 = "[object Error]", _2 = "[object Function]", I2 = "[object GeneratorFunction]", k2 = "[object Map]", S2 = "[object Number]", T2 = "[object Object]", E2 = "[object Promise]", j2 = "[object RegExp]", O2 = "[object Set]", A2 = "[object String]", C2 = "[object Symbol]", R2 = "[object WeakMap]", N2 = "[object ArrayBuffer]", P2 = "[object DataView]", M2 = "[object Float32Array]", L2 = "[object Float64Array]", D2 = "[object Int8Array]", z2 = "[object Int16Array]", F2 = "[object Int32Array]", B2 = "[object Uint8Array]", q2 = "[object Uint8ClampedArray]", $2 = "[object Uint16Array]", U2 = "[object Uint32Array]", H2 = /\b__p \+= '';/g, W2 = /\b(__p \+=) '' \+/g, K2 = /(__e\(.*?\)|\b__t\)) \+\n'';/g, V2 = /&(?:amp|lt|gt|quot|#39);/g, G2 = /[&<>"']/g, Y2 = RegExp(V2.source), J2 = RegExp(G2.source), X2 = /<%-([\s\S]+?)%>/g, Q2 = /<%([\s\S]+?)%>/g, Z2 = /<%=([\s\S]+?)%>/g, ee2 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, ae2 = /^\w*$/, re2 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, te2 = /[\\^$.*+?()[\]{}|]/g, oe2 = RegExp(te2.source), ne2 = /^\s+/, se2 = /\s/, ie2 = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, de2 = /\{\n\/\* \[wrapped with (.+)\] \*/, ce2 = /,? & /, ue2 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, le2 = /[()=,{}\[\]\/\s]/, pe2 = /\\(\\)?/g, me2 = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, he2 = /\w*$/, fe2 = /^[-+]0x[0-9a-f]+$/i, ve2 = /^0b[01]+$/i, ge2 = /^\[object .+?Constructor\]$/, be2 = /^0o[0-7]+$/i, we2 = /^(?:0|[1-9]\d*)$/, ye2 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, xe2 = /($^)/, _e2 = /['\n\r\u2028\u2029\\]/g, Ie2 = "\\ud800-\\udfff", ke2 = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff", Se2 = "\\u2700-\\u27bf", Te2 = "a-z\\xdf-\\xf6\\xf8-\\xff", Ee2 = "A-Z\\xc0-\\xd6\\xd8-\\xde", je2 = "\\ufe0e\\ufe0f", Oe2 = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Ae2 = "['’]", Ce2 = "[" + Ie2 + "]", Re2 = "[" + Oe2 + "]", Ne2 = "[" + ke2 + "]", Pe2 = "\\d+", Me2 = "[" + Se2 + "]", Le2 = "[" + Te2 + "]", De2 = "[^" + Ie2 + Oe2 + Pe2 + Se2 + Te2 + Ee2 + "]", ze2 = "\\ud83c[\\udffb-\\udfff]", Fe2 = "[^" + Ie2 + "]", Be2 = "(?:\\ud83c[\\udde6-\\uddff]){2}", qe2 = "[\\ud800-\\udbff][\\udc00-\\udfff]", $e2 = "[" + Ee2 + "]", Ue2 = "\\u200d", He2 = "(?:" + Le2 + "|" + De2 + ")", We2 = "(?:" + $e2 + "|" + De2 + ")", Ke2 = "(?:['’](?:d|ll|m|re|s|t|ve))?", Ve2 = "(?:['’](?:D|LL|M|RE|S|T|VE))?", Ge2 = "(?:" + Ne2 + "|" + ze2 + ")?", Ye2 = "[" + je2 + "]?", Je2 = Ye2 + Ge2 + ("(?:" + Ue2 + "(?:" + [Fe2, Be2, qe2].join("|") + ")" + Ye2 + Ge2 + ")*"), Xe2 = "(?:" + [Me2, Be2, qe2].join("|") + ")" + Je2, Qe2 = "(?:" + [Fe2 + Ne2 + "?", Ne2, Be2, qe2, Ce2].join("|") + ")", Ze2 = RegExp(Ae2, "g"), ea2 = RegExp(Ne2, "g"), aa2 = RegExp(ze2 + "(?=" + ze2 + ")|" + Qe2 + Je2, "g"), ra2 = RegExp([$e2 + "?" + Le2 + "+" + Ke2 + "(?=" + [Re2, $e2, "$"].join("|") + ")", We2 + "+" + Ve2 + "(?=" + [Re2, $e2 + He2, "$"].join("|") + ")", $e2 + "?" + He2 + "+" + Ke2, $e2 + "+" + Ve2, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Pe2, Xe2].join("|"), "g"), ta2 = RegExp("[" + Ue2 + Ie2 + ke2 + je2 + "]"), oa2 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, na2 = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], sa2 = -1, ia2 = {};
    ia2[M2] = ia2[L2] = ia2[D2] = ia2[z2] = ia2[F2] = ia2[B2] = ia2[q2] = ia2[$2] = ia2[U2] = true, ia2[g2] = ia2[b2] = ia2[N2] = ia2[w2] = ia2[P2] = ia2[y2] = ia2[x2] = ia2[_2] = ia2[k2] = ia2[S2] = ia2[T2] = ia2[j2] = ia2[O2] = ia2[A2] = ia2[R2] = false;
    var da2 = {};
    da2[g2] = da2[b2] = da2[N2] = da2[P2] = da2[w2] = da2[y2] = da2[M2] = da2[L2] = da2[D2] = da2[z2] = da2[F2] = da2[k2] = da2[S2] = da2[T2] = da2[j2] = da2[O2] = da2[A2] = da2[C2] = da2[B2] = da2[q2] = da2[$2] = da2[U2] = true, da2[x2] = da2[_2] = da2[R2] = false;
    var ca2 = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" }, ua2 = parseFloat, la2 = parseInt, pa2 = "object" == typeof r && r && r.Object === Object && r, ma2 = "object" == typeof self && self && self.Object === Object && self, ha2 = pa2 || ma2 || Function("return this")(), fa2 = a2 && !a2.nodeType && a2, va2 = fa2 && e8 && !e8.nodeType && e8, ga2 = va2 && va2.exports === fa2, ba2 = ga2 && pa2.process, wa2 = function() {
      try {
        var e9 = va2 && va2.require && va2.require("util").types;
        return e9 || ba2 && ba2.binding && ba2.binding("util");
      } catch (e10) {
      }
    }(), ya2 = wa2 && wa2.isArrayBuffer, xa2 = wa2 && wa2.isDate, _a2 = wa2 && wa2.isMap, Ia2 = wa2 && wa2.isRegExp, ka2 = wa2 && wa2.isSet, Sa2 = wa2 && wa2.isTypedArray;
    function Ta2(e9, a3, r2) {
      switch (r2.length) {
        case 0:
          return e9.call(a3);
        case 1:
          return e9.call(a3, r2[0]);
        case 2:
          return e9.call(a3, r2[0], r2[1]);
        case 3:
          return e9.call(a3, r2[0], r2[1], r2[2]);
      }
      return e9.apply(a3, r2);
    }
    function Ea2(e9, a3, r2, t3) {
      for (var o3 = -1, n3 = null == e9 ? 0 : e9.length; ++o3 < n3; ) {
        var s3 = e9[o3];
        a3(t3, s3, r2(s3), e9);
      }
      return t3;
    }
    function ja2(e9, a3) {
      for (var r2 = -1, t3 = null == e9 ? 0 : e9.length; ++r2 < t3 && false !== a3(e9[r2], r2, e9); ) ;
      return e9;
    }
    function Oa2(e9, a3) {
      for (var r2 = null == e9 ? 0 : e9.length; r2-- && false !== a3(e9[r2], r2, e9); ) ;
      return e9;
    }
    function Aa2(e9, a3) {
      for (var r2 = -1, t3 = null == e9 ? 0 : e9.length; ++r2 < t3; ) if (!a3(e9[r2], r2, e9)) return false;
      return true;
    }
    function Ca2(e9, a3) {
      for (var r2 = -1, t3 = null == e9 ? 0 : e9.length, o3 = 0, n3 = []; ++r2 < t3; ) {
        var s3 = e9[r2];
        a3(s3, r2, e9) && (n3[o3++] = s3);
      }
      return n3;
    }
    function Ra2(e9, a3) {
      return !!(null == e9 ? 0 : e9.length) && $a2(e9, a3, 0) > -1;
    }
    function Na2(e9, a3, r2) {
      for (var t3 = -1, o3 = null == e9 ? 0 : e9.length; ++t3 < o3; ) if (r2(a3, e9[t3])) return true;
      return false;
    }
    function Pa2(e9, a3) {
      for (var r2 = -1, t3 = null == e9 ? 0 : e9.length, o3 = Array(t3); ++r2 < t3; ) o3[r2] = a3(e9[r2], r2, e9);
      return o3;
    }
    function Ma2(e9, a3) {
      for (var r2 = -1, t3 = a3.length, o3 = e9.length; ++r2 < t3; ) e9[o3 + r2] = a3[r2];
      return e9;
    }
    function La2(e9, a3, r2, t3) {
      var o3 = -1, n3 = null == e9 ? 0 : e9.length;
      for (t3 && n3 && (r2 = e9[++o3]); ++o3 < n3; ) r2 = a3(r2, e9[o3], o3, e9);
      return r2;
    }
    function Da2(e9, a3, r2, t3) {
      var o3 = null == e9 ? 0 : e9.length;
      for (t3 && o3 && (r2 = e9[--o3]); o3--; ) r2 = a3(r2, e9[o3], o3, e9);
      return r2;
    }
    function za2(e9, a3) {
      for (var r2 = -1, t3 = null == e9 ? 0 : e9.length; ++r2 < t3; ) if (a3(e9[r2], r2, e9)) return true;
      return false;
    }
    var Fa2 = Ka2("length");
    function Ba2(e9, a3, r2) {
      var t3;
      return r2(e9, function(e10, r3, o3) {
        if (a3(e10, r3, o3)) return t3 = r3, false;
      }), t3;
    }
    function qa2(e9, a3, r2, t3) {
      for (var o3 = e9.length, n3 = r2 + (t3 ? 1 : -1); t3 ? n3-- : ++n3 < o3; ) if (a3(e9[n3], n3, e9)) return n3;
      return -1;
    }
    function $a2(e9, a3, r2) {
      return a3 == a3 ? function(e10, a4, r3) {
        var t3 = r3 - 1, o3 = e10.length;
        for (; ++t3 < o3; ) if (e10[t3] === a4) return t3;
        return -1;
      }(e9, a3, r2) : qa2(e9, Ha2, r2);
    }
    function Ua2(e9, a3, r2, t3) {
      for (var o3 = r2 - 1, n3 = e9.length; ++o3 < n3; ) if (t3(e9[o3], a3)) return o3;
      return -1;
    }
    function Ha2(e9) {
      return e9 != e9;
    }
    function Wa2(e9, a3) {
      var r2 = null == e9 ? 0 : e9.length;
      return r2 ? Ya2(e9, a3) / r2 : h2;
    }
    function Ka2(e9) {
      return function(a3) {
        return null == a3 ? t2 : a3[e9];
      };
    }
    function Va2(e9) {
      return function(a3) {
        return null == e9 ? t2 : e9[a3];
      };
    }
    function Ga2(e9, a3, r2, t3, o3) {
      return o3(e9, function(e10, o4, n3) {
        r2 = t3 ? (t3 = false, e10) : a3(r2, e10, o4, n3);
      }), r2;
    }
    function Ya2(e9, a3) {
      for (var r2, o3 = -1, n3 = e9.length; ++o3 < n3; ) {
        var s3 = a3(e9[o3]);
        s3 !== t2 && (r2 = r2 === t2 ? s3 : r2 + s3);
      }
      return r2;
    }
    function Ja2(e9, a3) {
      for (var r2 = -1, t3 = Array(e9); ++r2 < e9; ) t3[r2] = a3(r2);
      return t3;
    }
    function Xa2(e9) {
      return e9 ? e9.slice(0, hr2(e9) + 1).replace(ne2, "") : e9;
    }
    function Qa2(e9) {
      return function(a3) {
        return e9(a3);
      };
    }
    function Za2(e9, a3) {
      return Pa2(a3, function(a4) {
        return e9[a4];
      });
    }
    function er2(e9, a3) {
      return e9.has(a3);
    }
    function ar2(e9, a3) {
      for (var r2 = -1, t3 = e9.length; ++r2 < t3 && $a2(a3, e9[r2], 0) > -1; ) ;
      return r2;
    }
    function rr2(e9, a3) {
      for (var r2 = e9.length; r2-- && $a2(a3, e9[r2], 0) > -1; ) ;
      return r2;
    }
    var tr2 = Va2({ "À": "A", "Á": "A", "Â": "A", "Ã": "A", "Ä": "A", "Å": "A", "à": "a", "á": "a", "â": "a", "ã": "a", "ä": "a", "å": "a", "Ç": "C", "ç": "c", "Ð": "D", "ð": "d", "È": "E", "É": "E", "Ê": "E", "Ë": "E", "è": "e", "é": "e", "ê": "e", "ë": "e", "Ì": "I", "Í": "I", "Î": "I", "Ï": "I", "ì": "i", "í": "i", "î": "i", "ï": "i", "Ñ": "N", "ñ": "n", "Ò": "O", "Ó": "O", "Ô": "O", "Õ": "O", "Ö": "O", "Ø": "O", "ò": "o", "ó": "o", "ô": "o", "õ": "o", "ö": "o", "ø": "o", "Ù": "U", "Ú": "U", "Û": "U", "Ü": "U", "ù": "u", "ú": "u", "û": "u", "ü": "u", "Ý": "Y", "ý": "y", "ÿ": "y", "Æ": "Ae", "æ": "ae", "Þ": "Th", "þ": "th", "ß": "ss", "Ā": "A", "Ă": "A", "Ą": "A", "ā": "a", "ă": "a", "ą": "a", "Ć": "C", "Ĉ": "C", "Ċ": "C", "Č": "C", "ć": "c", "ĉ": "c", "ċ": "c", "č": "c", "Ď": "D", "Đ": "D", "ď": "d", "đ": "d", "Ē": "E", "Ĕ": "E", "Ė": "E", "Ę": "E", "Ě": "E", "ē": "e", "ĕ": "e", "ė": "e", "ę": "e", "ě": "e", "Ĝ": "G", "Ğ": "G", "Ġ": "G", "Ģ": "G", "ĝ": "g", "ğ": "g", "ġ": "g", "ģ": "g", "Ĥ": "H", "Ħ": "H", "ĥ": "h", "ħ": "h", "Ĩ": "I", "Ī": "I", "Ĭ": "I", "Į": "I", "İ": "I", "ĩ": "i", "ī": "i", "ĭ": "i", "į": "i", "ı": "i", "Ĵ": "J", "ĵ": "j", "Ķ": "K", "ķ": "k", "ĸ": "k", "Ĺ": "L", "Ļ": "L", "Ľ": "L", "Ŀ": "L", "Ł": "L", "ĺ": "l", "ļ": "l", "ľ": "l", "ŀ": "l", "ł": "l", "Ń": "N", "Ņ": "N", "Ň": "N", "Ŋ": "N", "ń": "n", "ņ": "n", "ň": "n", "ŋ": "n", "Ō": "O", "Ŏ": "O", "Ő": "O", "ō": "o", "ŏ": "o", "ő": "o", "Ŕ": "R", "Ŗ": "R", "Ř": "R", "ŕ": "r", "ŗ": "r", "ř": "r", "Ś": "S", "Ŝ": "S", "Ş": "S", "Š": "S", "ś": "s", "ŝ": "s", "ş": "s", "š": "s", "Ţ": "T", "Ť": "T", "Ŧ": "T", "ţ": "t", "ť": "t", "ŧ": "t", "Ũ": "U", "Ū": "U", "Ŭ": "U", "Ů": "U", "Ű": "U", "Ų": "U", "ũ": "u", "ū": "u", "ŭ": "u", "ů": "u", "ű": "u", "ų": "u", "Ŵ": "W", "ŵ": "w", "Ŷ": "Y", "ŷ": "y", "Ÿ": "Y", "Ź": "Z", "Ż": "Z", "Ž": "Z", "ź": "z", "ż": "z", "ž": "z", "Ĳ": "IJ", "ĳ": "ij", "Œ": "Oe", "œ": "oe", "ŉ": "'n", "ſ": "s" }), or2 = Va2({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" });
    function nr2(e9) {
      return "\\" + ca2[e9];
    }
    function sr2(e9) {
      return ta2.test(e9);
    }
    function ir2(e9) {
      var a3 = -1, r2 = Array(e9.size);
      return e9.forEach(function(e10, t3) {
        r2[++a3] = [t3, e10];
      }), r2;
    }
    function dr2(e9, a3) {
      return function(r2) {
        return e9(a3(r2));
      };
    }
    function cr2(e9, a3) {
      for (var r2 = -1, t3 = e9.length, o3 = 0, n3 = []; ++r2 < t3; ) {
        var i3 = e9[r2];
        i3 !== a3 && i3 !== s2 || (e9[r2] = s2, n3[o3++] = r2);
      }
      return n3;
    }
    function ur2(e9) {
      var a3 = -1, r2 = Array(e9.size);
      return e9.forEach(function(e10) {
        r2[++a3] = e10;
      }), r2;
    }
    function lr2(e9) {
      var a3 = -1, r2 = Array(e9.size);
      return e9.forEach(function(e10) {
        r2[++a3] = [e10, e10];
      }), r2;
    }
    function pr2(e9) {
      return sr2(e9) ? function(e10) {
        var a3 = aa2.lastIndex = 0;
        for (; aa2.test(e10); ) ++a3;
        return a3;
      }(e9) : Fa2(e9);
    }
    function mr2(e9) {
      return sr2(e9) ? function(e10) {
        return e10.match(aa2) || [];
      }(e9) : function(e10) {
        return e10.split("");
      }(e9);
    }
    function hr2(e9) {
      for (var a3 = e9.length; a3-- && se2.test(e9.charAt(a3)); ) ;
      return a3;
    }
    var fr2 = Va2({ "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" });
    var vr2 = function e9(a3) {
      var r2 = (a3 = null == a3 ? ha2 : vr2.defaults(ha2.Object(), a3, vr2.pick(ha2, na2))).Array, se3 = a3.Date, Ie3 = a3.Error, ke3 = a3.Function, Se3 = a3.Math, Te3 = a3.Object, Ee3 = a3.RegExp, je3 = a3.String, Oe3 = a3.TypeError, Ae3 = r2.prototype, Ce3 = ke3.prototype, Re3 = Te3.prototype, Ne3 = a3["__core-js_shared__"], Pe3 = Ce3.toString, Me3 = Re3.hasOwnProperty, Le3 = 0, De3 = function() {
        var e10 = /[^.]+$/.exec(Ne3 && Ne3.keys && Ne3.keys.IE_PROTO || "");
        return e10 ? "Symbol(src)_1." + e10 : "";
      }(), ze3 = Re3.toString, Fe3 = Pe3.call(Te3), Be3 = ha2._, qe3 = Ee3("^" + Pe3.call(Me3).replace(te2, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), $e3 = ga2 ? a3.Buffer : t2, Ue3 = a3.Symbol, He3 = a3.Uint8Array, We3 = $e3 ? $e3.allocUnsafe : t2, Ke3 = dr2(Te3.getPrototypeOf, Te3), Ve3 = Te3.create, Ge3 = Re3.propertyIsEnumerable, Ye3 = Ae3.splice, Je3 = Ue3 ? Ue3.isConcatSpreadable : t2, Xe3 = Ue3 ? Ue3.iterator : t2, Qe3 = Ue3 ? Ue3.toStringTag : t2, aa3 = function() {
        try {
          var e10 = pn2(Te3, "defineProperty");
          return e10({}, "", {}), e10;
        } catch (e11) {
        }
      }(), ta3 = a3.clearTimeout !== ha2.clearTimeout && a3.clearTimeout, ca3 = se3 && se3.now !== ha2.Date.now && se3.now, pa3 = a3.setTimeout !== ha2.setTimeout && a3.setTimeout, ma3 = Se3.ceil, fa3 = Se3.floor, va3 = Te3.getOwnPropertySymbols, ba3 = $e3 ? $e3.isBuffer : t2, wa3 = a3.isFinite, Fa3 = Ae3.join, Va3 = dr2(Te3.keys, Te3), gr2 = Se3.max, br2 = Se3.min, wr2 = se3.now, yr2 = a3.parseInt, xr2 = Se3.random, _r2 = Ae3.reverse, Ir2 = pn2(a3, "DataView"), kr2 = pn2(a3, "Map"), Sr2 = pn2(a3, "Promise"), Tr2 = pn2(a3, "Set"), Er2 = pn2(a3, "WeakMap"), jr2 = pn2(Te3, "create"), Or2 = Er2 && new Er2(), Ar2 = {}, Cr2 = zn2(Ir2), Rr2 = zn2(kr2), Nr2 = zn2(Sr2), Pr2 = zn2(Tr2), Mr2 = zn2(Er2), Lr2 = Ue3 ? Ue3.prototype : t2, Dr2 = Lr2 ? Lr2.valueOf : t2, zr2 = Lr2 ? Lr2.toString : t2;
      function Fr2(e10) {
        if (ai2(e10) && !Hs2(e10) && !(e10 instanceof Ur2)) {
          if (e10 instanceof $r2) return e10;
          if (Me3.call(e10, "__wrapped__")) return Fn2(e10);
        }
        return new $r2(e10);
      }
      var Br2 = /* @__PURE__ */ function() {
        function e10() {
        }
        return function(a4) {
          if (!ei2(a4)) return {};
          if (Ve3) return Ve3(a4);
          e10.prototype = a4;
          var r3 = new e10();
          return e10.prototype = t2, r3;
        };
      }();
      function qr2() {
      }
      function $r2(e10, a4) {
        this.__wrapped__ = e10, this.__actions__ = [], this.__chain__ = !!a4, this.__index__ = 0, this.__values__ = t2;
      }
      function Ur2(e10) {
        this.__wrapped__ = e10, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = f2, this.__views__ = [];
      }
      function Hr2(e10) {
        var a4 = -1, r3 = null == e10 ? 0 : e10.length;
        for (this.clear(); ++a4 < r3; ) {
          var t3 = e10[a4];
          this.set(t3[0], t3[1]);
        }
      }
      function Wr2(e10) {
        var a4 = -1, r3 = null == e10 ? 0 : e10.length;
        for (this.clear(); ++a4 < r3; ) {
          var t3 = e10[a4];
          this.set(t3[0], t3[1]);
        }
      }
      function Kr2(e10) {
        var a4 = -1, r3 = null == e10 ? 0 : e10.length;
        for (this.clear(); ++a4 < r3; ) {
          var t3 = e10[a4];
          this.set(t3[0], t3[1]);
        }
      }
      function Vr2(e10) {
        var a4 = -1, r3 = null == e10 ? 0 : e10.length;
        for (this.__data__ = new Kr2(); ++a4 < r3; ) this.add(e10[a4]);
      }
      function Gr2(e10) {
        var a4 = this.__data__ = new Wr2(e10);
        this.size = a4.size;
      }
      function Yr2(e10, a4) {
        var r3 = Hs2(e10), t3 = !r3 && Us2(e10), o3 = !r3 && !t3 && Gs2(e10), n3 = !r3 && !t3 && !o3 && ci2(e10), s3 = r3 || t3 || o3 || n3, i3 = s3 ? Ja2(e10.length, je3) : [], d3 = i3.length;
        for (var c3 in e10) !a4 && !Me3.call(e10, c3) || s3 && ("length" == c3 || o3 && ("offset" == c3 || "parent" == c3) || n3 && ("buffer" == c3 || "byteLength" == c3 || "byteOffset" == c3) || wn2(c3, d3)) || i3.push(c3);
        return i3;
      }
      function Jr2(e10) {
        var a4 = e10.length;
        return a4 ? e10[Vt2(0, a4 - 1)] : t2;
      }
      function Xr2(e10, a4) {
        return Mn2(Oo2(e10), st2(a4, 0, e10.length));
      }
      function Qr2(e10) {
        return Mn2(Oo2(e10));
      }
      function Zr2(e10, a4, r3) {
        (r3 !== t2 && !Bs2(e10[a4], r3) || r3 === t2 && !(a4 in e10)) && ot2(e10, a4, r3);
      }
      function et2(e10, a4, r3) {
        var o3 = e10[a4];
        Me3.call(e10, a4) && Bs2(o3, r3) && (r3 !== t2 || a4 in e10) || ot2(e10, a4, r3);
      }
      function at2(e10, a4) {
        for (var r3 = e10.length; r3--; ) if (Bs2(e10[r3][0], a4)) return r3;
        return -1;
      }
      function rt2(e10, a4, r3, t3) {
        return lt2(e10, function(e11, o3, n3) {
          a4(t3, e11, r3(e11), n3);
        }), t3;
      }
      function tt2(e10, a4) {
        return e10 && Ao2(a4, Ci2(a4), e10);
      }
      function ot2(e10, a4, r3) {
        "__proto__" == a4 && aa3 ? aa3(e10, a4, { configurable: true, enumerable: true, value: r3, writable: true }) : e10[a4] = r3;
      }
      function nt2(e10, a4) {
        for (var o3 = -1, n3 = a4.length, s3 = r2(n3), i3 = null == e10; ++o3 < n3; ) s3[o3] = i3 ? t2 : Ti2(e10, a4[o3]);
        return s3;
      }
      function st2(e10, a4, r3) {
        return e10 == e10 && (r3 !== t2 && (e10 = e10 <= r3 ? e10 : r3), a4 !== t2 && (e10 = e10 >= a4 ? e10 : a4)), e10;
      }
      function it2(e10, a4, r3, o3, n3, s3) {
        var i3, d3 = 1 & a4, c3 = 2 & a4, u3 = 4 & a4;
        if (r3 && (i3 = n3 ? r3(e10, o3, n3, s3) : r3(e10)), i3 !== t2) return i3;
        if (!ei2(e10)) return e10;
        var l3 = Hs2(e10);
        if (l3) {
          if (i3 = function(e11) {
            var a5 = e11.length, r4 = new e11.constructor(a5);
            a5 && "string" == typeof e11[0] && Me3.call(e11, "index") && (r4.index = e11.index, r4.input = e11.input);
            return r4;
          }(e10), !d3) return Oo2(e10, i3);
        } else {
          var p3 = fn2(e10), m3 = p3 == _2 || p3 == I2;
          if (Gs2(e10)) return Io2(e10, d3);
          if (p3 == T2 || p3 == g2 || m3 && !n3) {
            if (i3 = c3 || m3 ? {} : gn2(e10), !d3) return c3 ? function(e11, a5) {
              return Ao2(e11, hn2(e11), a5);
            }(e10, function(e11, a5) {
              return e11 && Ao2(a5, Ri2(a5), e11);
            }(i3, e10)) : function(e11, a5) {
              return Ao2(e11, mn2(e11), a5);
            }(e10, tt2(i3, e10));
          } else {
            if (!da2[p3]) return n3 ? e10 : {};
            i3 = function(e11, a5, r4) {
              var t3 = e11.constructor;
              switch (a5) {
                case N2:
                  return ko2(e11);
                case w2:
                case y2:
                  return new t3(+e11);
                case P2:
                  return function(e12, a6) {
                    var r5 = a6 ? ko2(e12.buffer) : e12.buffer;
                    return new e12.constructor(r5, e12.byteOffset, e12.byteLength);
                  }(e11, r4);
                case M2:
                case L2:
                case D2:
                case z2:
                case F2:
                case B2:
                case q2:
                case $2:
                case U2:
                  return So2(e11, r4);
                case k2:
                  return new t3();
                case S2:
                case A2:
                  return new t3(e11);
                case j2:
                  return function(e12) {
                    var a6 = new e12.constructor(e12.source, he2.exec(e12));
                    return a6.lastIndex = e12.lastIndex, a6;
                  }(e11);
                case O2:
                  return new t3();
                case C2:
                  return o4 = e11, Dr2 ? Te3(Dr2.call(o4)) : {};
              }
              var o4;
            }(e10, p3, d3);
          }
        }
        s3 || (s3 = new Gr2());
        var h3 = s3.get(e10);
        if (h3) return h3;
        s3.set(e10, i3), si2(e10) ? e10.forEach(function(t3) {
          i3.add(it2(t3, a4, r3, t3, e10, s3));
        }) : ri2(e10) && e10.forEach(function(t3, o4) {
          i3.set(o4, it2(t3, a4, r3, o4, e10, s3));
        });
        var f3 = l3 ? t2 : (u3 ? c3 ? on2 : tn2 : c3 ? Ri2 : Ci2)(e10);
        return ja2(f3 || e10, function(t3, o4) {
          f3 && (t3 = e10[o4 = t3]), et2(i3, o4, it2(t3, a4, r3, o4, e10, s3));
        }), i3;
      }
      function dt2(e10, a4, r3) {
        var o3 = r3.length;
        if (null == e10) return !o3;
        for (e10 = Te3(e10); o3--; ) {
          var n3 = r3[o3], s3 = a4[n3], i3 = e10[n3];
          if (i3 === t2 && !(n3 in e10) || !s3(i3)) return false;
        }
        return true;
      }
      function ct2(e10, a4, r3) {
        if ("function" != typeof e10) throw new Oe3(o2);
        return Cn2(function() {
          e10.apply(t2, r3);
        }, a4);
      }
      function ut2(e10, a4, r3, t3) {
        var o3 = -1, n3 = Ra2, s3 = true, i3 = e10.length, d3 = [], c3 = a4.length;
        if (!i3) return d3;
        r3 && (a4 = Pa2(a4, Qa2(r3))), t3 ? (n3 = Na2, s3 = false) : a4.length >= 200 && (n3 = er2, s3 = false, a4 = new Vr2(a4));
        e: for (; ++o3 < i3; ) {
          var u3 = e10[o3], l3 = null == r3 ? u3 : r3(u3);
          if (u3 = t3 || 0 !== u3 ? u3 : 0, s3 && l3 == l3) {
            for (var p3 = c3; p3--; ) if (a4[p3] === l3) continue e;
            d3.push(u3);
          } else n3(a4, l3, t3) || d3.push(u3);
        }
        return d3;
      }
      Fr2.templateSettings = { escape: X2, evaluate: Q2, interpolate: Z2, variable: "", imports: { _: Fr2 } }, Fr2.prototype = qr2.prototype, Fr2.prototype.constructor = Fr2, $r2.prototype = Br2(qr2.prototype), $r2.prototype.constructor = $r2, Ur2.prototype = Br2(qr2.prototype), Ur2.prototype.constructor = Ur2, Hr2.prototype.clear = function() {
        this.__data__ = jr2 ? jr2(null) : {}, this.size = 0;
      }, Hr2.prototype.delete = function(e10) {
        var a4 = this.has(e10) && delete this.__data__[e10];
        return this.size -= a4 ? 1 : 0, a4;
      }, Hr2.prototype.get = function(e10) {
        var a4 = this.__data__;
        if (jr2) {
          var r3 = a4[e10];
          return r3 === n2 ? t2 : r3;
        }
        return Me3.call(a4, e10) ? a4[e10] : t2;
      }, Hr2.prototype.has = function(e10) {
        var a4 = this.__data__;
        return jr2 ? a4[e10] !== t2 : Me3.call(a4, e10);
      }, Hr2.prototype.set = function(e10, a4) {
        var r3 = this.__data__;
        return this.size += this.has(e10) ? 0 : 1, r3[e10] = jr2 && a4 === t2 ? n2 : a4, this;
      }, Wr2.prototype.clear = function() {
        this.__data__ = [], this.size = 0;
      }, Wr2.prototype.delete = function(e10) {
        var a4 = this.__data__, r3 = at2(a4, e10);
        return !(r3 < 0) && (r3 == a4.length - 1 ? a4.pop() : Ye3.call(a4, r3, 1), --this.size, true);
      }, Wr2.prototype.get = function(e10) {
        var a4 = this.__data__, r3 = at2(a4, e10);
        return r3 < 0 ? t2 : a4[r3][1];
      }, Wr2.prototype.has = function(e10) {
        return at2(this.__data__, e10) > -1;
      }, Wr2.prototype.set = function(e10, a4) {
        var r3 = this.__data__, t3 = at2(r3, e10);
        return t3 < 0 ? (++this.size, r3.push([e10, a4])) : r3[t3][1] = a4, this;
      }, Kr2.prototype.clear = function() {
        this.size = 0, this.__data__ = { hash: new Hr2(), map: new (kr2 || Wr2)(), string: new Hr2() };
      }, Kr2.prototype.delete = function(e10) {
        var a4 = un2(this, e10).delete(e10);
        return this.size -= a4 ? 1 : 0, a4;
      }, Kr2.prototype.get = function(e10) {
        return un2(this, e10).get(e10);
      }, Kr2.prototype.has = function(e10) {
        return un2(this, e10).has(e10);
      }, Kr2.prototype.set = function(e10, a4) {
        var r3 = un2(this, e10), t3 = r3.size;
        return r3.set(e10, a4), this.size += r3.size == t3 ? 0 : 1, this;
      }, Vr2.prototype.add = Vr2.prototype.push = function(e10) {
        return this.__data__.set(e10, n2), this;
      }, Vr2.prototype.has = function(e10) {
        return this.__data__.has(e10);
      }, Gr2.prototype.clear = function() {
        this.__data__ = new Wr2(), this.size = 0;
      }, Gr2.prototype.delete = function(e10) {
        var a4 = this.__data__, r3 = a4.delete(e10);
        return this.size = a4.size, r3;
      }, Gr2.prototype.get = function(e10) {
        return this.__data__.get(e10);
      }, Gr2.prototype.has = function(e10) {
        return this.__data__.has(e10);
      }, Gr2.prototype.set = function(e10, a4) {
        var r3 = this.__data__;
        if (r3 instanceof Wr2) {
          var t3 = r3.__data__;
          if (!kr2 || t3.length < 199) return t3.push([e10, a4]), this.size = ++r3.size, this;
          r3 = this.__data__ = new Kr2(t3);
        }
        return r3.set(e10, a4), this.size = r3.size, this;
      };
      var lt2 = No2(wt2), pt2 = No2(yt2, true);
      function mt2(e10, a4) {
        var r3 = true;
        return lt2(e10, function(e11, t3, o3) {
          return r3 = !!a4(e11, t3, o3);
        }), r3;
      }
      function ht2(e10, a4, r3) {
        for (var o3 = -1, n3 = e10.length; ++o3 < n3; ) {
          var s3 = e10[o3], i3 = a4(s3);
          if (null != i3 && (d3 === t2 ? i3 == i3 && !di2(i3) : r3(i3, d3))) var d3 = i3, c3 = s3;
        }
        return c3;
      }
      function ft2(e10, a4) {
        var r3 = [];
        return lt2(e10, function(e11, t3, o3) {
          a4(e11, t3, o3) && r3.push(e11);
        }), r3;
      }
      function vt2(e10, a4, r3, t3, o3) {
        var n3 = -1, s3 = e10.length;
        for (r3 || (r3 = bn2), o3 || (o3 = []); ++n3 < s3; ) {
          var i3 = e10[n3];
          a4 > 0 && r3(i3) ? a4 > 1 ? vt2(i3, a4 - 1, r3, t3, o3) : Ma2(o3, i3) : t3 || (o3[o3.length] = i3);
        }
        return o3;
      }
      var gt2 = Po2(), bt2 = Po2(true);
      function wt2(e10, a4) {
        return e10 && gt2(e10, a4, Ci2);
      }
      function yt2(e10, a4) {
        return e10 && bt2(e10, a4, Ci2);
      }
      function xt2(e10, a4) {
        return Ca2(a4, function(a5) {
          return Xs2(e10[a5]);
        });
      }
      function _t2(e10, a4) {
        for (var r3 = 0, o3 = (a4 = wo2(a4, e10)).length; null != e10 && r3 < o3; ) e10 = e10[Dn2(a4[r3++])];
        return r3 && r3 == o3 ? e10 : t2;
      }
      function It2(e10, a4, r3) {
        var t3 = a4(e10);
        return Hs2(e10) ? t3 : Ma2(t3, r3(e10));
      }
      function kt2(e10) {
        return null == e10 ? e10 === t2 ? "[object Undefined]" : "[object Null]" : Qe3 && Qe3 in Te3(e10) ? function(e11) {
          var a4 = Me3.call(e11, Qe3), r3 = e11[Qe3];
          try {
            e11[Qe3] = t2;
            var o3 = true;
          } catch (e12) {
          }
          var n3 = ze3.call(e11);
          o3 && (a4 ? e11[Qe3] = r3 : delete e11[Qe3]);
          return n3;
        }(e10) : function(e11) {
          return ze3.call(e11);
        }(e10);
      }
      function St2(e10, a4) {
        return e10 > a4;
      }
      function Tt2(e10, a4) {
        return null != e10 && Me3.call(e10, a4);
      }
      function Et2(e10, a4) {
        return null != e10 && a4 in Te3(e10);
      }
      function jt2(e10, a4, o3) {
        for (var n3 = o3 ? Na2 : Ra2, s3 = e10[0].length, i3 = e10.length, d3 = i3, c3 = r2(i3), u3 = 1 / 0, l3 = []; d3--; ) {
          var p3 = e10[d3];
          d3 && a4 && (p3 = Pa2(p3, Qa2(a4))), u3 = br2(p3.length, u3), c3[d3] = !o3 && (a4 || s3 >= 120 && p3.length >= 120) ? new Vr2(d3 && p3) : t2;
        }
        p3 = e10[0];
        var m3 = -1, h3 = c3[0];
        e: for (; ++m3 < s3 && l3.length < u3; ) {
          var f3 = p3[m3], v3 = a4 ? a4(f3) : f3;
          if (f3 = o3 || 0 !== f3 ? f3 : 0, !(h3 ? er2(h3, v3) : n3(l3, v3, o3))) {
            for (d3 = i3; --d3; ) {
              var g3 = c3[d3];
              if (!(g3 ? er2(g3, v3) : n3(e10[d3], v3, o3))) continue e;
            }
            h3 && h3.push(v3), l3.push(f3);
          }
        }
        return l3;
      }
      function Ot2(e10, a4, r3) {
        var o3 = null == (e10 = jn2(e10, a4 = wo2(a4, e10))) ? e10 : e10[Dn2(Jn2(a4))];
        return null == o3 ? t2 : Ta2(o3, e10, r3);
      }
      function At2(e10) {
        return ai2(e10) && kt2(e10) == g2;
      }
      function Ct2(e10, a4, r3, o3, n3) {
        return e10 === a4 || (null == e10 || null == a4 || !ai2(e10) && !ai2(a4) ? e10 != e10 && a4 != a4 : function(e11, a5, r4, o4, n4, s3) {
          var i3 = Hs2(e11), d3 = Hs2(a5), c3 = i3 ? b2 : fn2(e11), u3 = d3 ? b2 : fn2(a5), l3 = (c3 = c3 == g2 ? T2 : c3) == T2, p3 = (u3 = u3 == g2 ? T2 : u3) == T2, m3 = c3 == u3;
          if (m3 && Gs2(e11)) {
            if (!Gs2(a5)) return false;
            i3 = true, l3 = false;
          }
          if (m3 && !l3) return s3 || (s3 = new Gr2()), i3 || ci2(e11) ? an2(e11, a5, r4, o4, n4, s3) : function(e12, a6, r5, t3, o5, n5, s4) {
            switch (r5) {
              case P2:
                if (e12.byteLength != a6.byteLength || e12.byteOffset != a6.byteOffset) return false;
                e12 = e12.buffer, a6 = a6.buffer;
              case N2:
                return !(e12.byteLength != a6.byteLength || !n5(new He3(e12), new He3(a6)));
              case w2:
              case y2:
              case S2:
                return Bs2(+e12, +a6);
              case x2:
                return e12.name == a6.name && e12.message == a6.message;
              case j2:
              case A2:
                return e12 == a6 + "";
              case k2:
                var i4 = ir2;
              case O2:
                var d4 = 1 & t3;
                if (i4 || (i4 = ur2), e12.size != a6.size && !d4) return false;
                var c4 = s4.get(e12);
                if (c4) return c4 == a6;
                t3 |= 2, s4.set(e12, a6);
                var u4 = an2(i4(e12), i4(a6), t3, o5, n5, s4);
                return s4.delete(e12), u4;
              case C2:
                if (Dr2) return Dr2.call(e12) == Dr2.call(a6);
            }
            return false;
          }(e11, a5, c3, r4, o4, n4, s3);
          if (!(1 & r4)) {
            var h3 = l3 && Me3.call(e11, "__wrapped__"), f3 = p3 && Me3.call(a5, "__wrapped__");
            if (h3 || f3) {
              var v3 = h3 ? e11.value() : e11, _3 = f3 ? a5.value() : a5;
              return s3 || (s3 = new Gr2()), n4(v3, _3, r4, o4, s3);
            }
          }
          if (!m3) return false;
          return s3 || (s3 = new Gr2()), function(e12, a6, r5, o5, n5, s4) {
            var i4 = 1 & r5, d4 = tn2(e12), c4 = d4.length, u4 = tn2(a6), l4 = u4.length;
            if (c4 != l4 && !i4) return false;
            var p4 = c4;
            for (; p4--; ) {
              var m4 = d4[p4];
              if (!(i4 ? m4 in a6 : Me3.call(a6, m4))) return false;
            }
            var h4 = s4.get(e12), f4 = s4.get(a6);
            if (h4 && f4) return h4 == a6 && f4 == e12;
            var v4 = true;
            s4.set(e12, a6), s4.set(a6, e12);
            var g3 = i4;
            for (; ++p4 < c4; ) {
              var b3 = e12[m4 = d4[p4]], w3 = a6[m4];
              if (o5) var y3 = i4 ? o5(w3, b3, m4, a6, e12, s4) : o5(b3, w3, m4, e12, a6, s4);
              if (!(y3 === t2 ? b3 === w3 || n5(b3, w3, r5, o5, s4) : y3)) {
                v4 = false;
                break;
              }
              g3 || (g3 = "constructor" == m4);
            }
            if (v4 && !g3) {
              var x3 = e12.constructor, _4 = a6.constructor;
              x3 == _4 || !("constructor" in e12) || !("constructor" in a6) || "function" == typeof x3 && x3 instanceof x3 && "function" == typeof _4 && _4 instanceof _4 || (v4 = false);
            }
            return s4.delete(e12), s4.delete(a6), v4;
          }(e11, a5, r4, o4, n4, s3);
        }(e10, a4, r3, o3, Ct2, n3));
      }
      function Rt2(e10, a4, r3, o3) {
        var n3 = r3.length, s3 = n3, i3 = !o3;
        if (null == e10) return !s3;
        for (e10 = Te3(e10); n3--; ) {
          var d3 = r3[n3];
          if (i3 && d3[2] ? d3[1] !== e10[d3[0]] : !(d3[0] in e10)) return false;
        }
        for (; ++n3 < s3; ) {
          var c3 = (d3 = r3[n3])[0], u3 = e10[c3], l3 = d3[1];
          if (i3 && d3[2]) {
            if (u3 === t2 && !(c3 in e10)) return false;
          } else {
            var p3 = new Gr2();
            if (o3) var m3 = o3(u3, l3, c3, e10, a4, p3);
            if (!(m3 === t2 ? Ct2(l3, u3, 3, o3, p3) : m3)) return false;
          }
        }
        return true;
      }
      function Nt2(e10) {
        return !(!ei2(e10) || (a4 = e10, De3 && De3 in a4)) && (Xs2(e10) ? qe3 : ge2).test(zn2(e10));
        var a4;
      }
      function Pt2(e10) {
        return "function" == typeof e10 ? e10 : null == e10 ? td2 : "object" == typeof e10 ? Hs2(e10) ? Bt2(e10[0], e10[1]) : Ft2(e10) : pd2(e10);
      }
      function Mt2(e10) {
        if (!kn2(e10)) return Va3(e10);
        var a4 = [];
        for (var r3 in Te3(e10)) Me3.call(e10, r3) && "constructor" != r3 && a4.push(r3);
        return a4;
      }
      function Lt2(e10) {
        if (!ei2(e10)) return function(e11) {
          var a5 = [];
          if (null != e11) for (var r4 in Te3(e11)) a5.push(r4);
          return a5;
        }(e10);
        var a4 = kn2(e10), r3 = [];
        for (var t3 in e10) ("constructor" != t3 || !a4 && Me3.call(e10, t3)) && r3.push(t3);
        return r3;
      }
      function Dt2(e10, a4) {
        return e10 < a4;
      }
      function zt2(e10, a4) {
        var t3 = -1, o3 = Ks2(e10) ? r2(e10.length) : [];
        return lt2(e10, function(e11, r3, n3) {
          o3[++t3] = a4(e11, r3, n3);
        }), o3;
      }
      function Ft2(e10) {
        var a4 = ln2(e10);
        return 1 == a4.length && a4[0][2] ? Tn2(a4[0][0], a4[0][1]) : function(r3) {
          return r3 === e10 || Rt2(r3, e10, a4);
        };
      }
      function Bt2(e10, a4) {
        return xn2(e10) && Sn2(a4) ? Tn2(Dn2(e10), a4) : function(r3) {
          var o3 = Ti2(r3, e10);
          return o3 === t2 && o3 === a4 ? Ei2(r3, e10) : Ct2(a4, o3, 3);
        };
      }
      function qt2(e10, a4, r3, o3, n3) {
        e10 !== a4 && gt2(a4, function(s3, i3) {
          if (n3 || (n3 = new Gr2()), ei2(s3)) !function(e11, a5, r4, o4, n4, s4, i4) {
            var d4 = On2(e11, r4), c3 = On2(a5, r4), u3 = i4.get(c3);
            if (u3) return void Zr2(e11, r4, u3);
            var l3 = s4 ? s4(d4, c3, r4 + "", e11, a5, i4) : t2, p3 = l3 === t2;
            if (p3) {
              var m3 = Hs2(c3), h3 = !m3 && Gs2(c3), f3 = !m3 && !h3 && ci2(c3);
              l3 = c3, m3 || h3 || f3 ? Hs2(d4) ? l3 = d4 : Vs2(d4) ? l3 = Oo2(d4) : h3 ? (p3 = false, l3 = Io2(c3, true)) : f3 ? (p3 = false, l3 = So2(c3, true)) : l3 = [] : oi2(c3) || Us2(c3) ? (l3 = d4, Us2(d4) ? l3 = gi2(d4) : ei2(d4) && !Xs2(d4) || (l3 = gn2(c3))) : p3 = false;
            }
            p3 && (i4.set(c3, l3), n4(l3, c3, o4, s4, i4), i4.delete(c3));
            Zr2(e11, r4, l3);
          }(e10, a4, i3, r3, qt2, o3, n3);
          else {
            var d3 = o3 ? o3(On2(e10, i3), s3, i3 + "", e10, a4, n3) : t2;
            d3 === t2 && (d3 = s3), Zr2(e10, i3, d3);
          }
        }, Ri2);
      }
      function $t2(e10, a4) {
        var r3 = e10.length;
        if (r3) return wn2(a4 += a4 < 0 ? r3 : 0, r3) ? e10[a4] : t2;
      }
      function Ut2(e10, a4, r3) {
        a4 = a4.length ? Pa2(a4, function(e11) {
          return Hs2(e11) ? function(a5) {
            return _t2(a5, 1 === e11.length ? e11[0] : e11);
          } : e11;
        }) : [td2];
        var t3 = -1;
        a4 = Pa2(a4, Qa2(cn2()));
        var o3 = zt2(e10, function(e11, r4, o4) {
          var n3 = Pa2(a4, function(a5) {
            return a5(e11);
          });
          return { criteria: n3, index: ++t3, value: e11 };
        });
        return function(e11, a5) {
          var r4 = e11.length;
          for (e11.sort(a5); r4--; ) e11[r4] = e11[r4].value;
          return e11;
        }(o3, function(e11, a5) {
          return function(e12, a6, r4) {
            var t4 = -1, o4 = e12.criteria, n3 = a6.criteria, s3 = o4.length, i3 = r4.length;
            for (; ++t4 < s3; ) {
              var d3 = To2(o4[t4], n3[t4]);
              if (d3) return t4 >= i3 ? d3 : d3 * ("desc" == r4[t4] ? -1 : 1);
            }
            return e12.index - a6.index;
          }(e11, a5, r3);
        });
      }
      function Ht2(e10, a4, r3) {
        for (var t3 = -1, o3 = a4.length, n3 = {}; ++t3 < o3; ) {
          var s3 = a4[t3], i3 = _t2(e10, s3);
          r3(i3, s3) && Qt2(n3, wo2(s3, e10), i3);
        }
        return n3;
      }
      function Wt2(e10, a4, r3, t3) {
        var o3 = t3 ? Ua2 : $a2, n3 = -1, s3 = a4.length, i3 = e10;
        for (e10 === a4 && (a4 = Oo2(a4)), r3 && (i3 = Pa2(e10, Qa2(r3))); ++n3 < s3; ) for (var d3 = 0, c3 = a4[n3], u3 = r3 ? r3(c3) : c3; (d3 = o3(i3, u3, d3, t3)) > -1; ) i3 !== e10 && Ye3.call(i3, d3, 1), Ye3.call(e10, d3, 1);
        return e10;
      }
      function Kt2(e10, a4) {
        for (var r3 = e10 ? a4.length : 0, t3 = r3 - 1; r3--; ) {
          var o3 = a4[r3];
          if (r3 == t3 || o3 !== n3) {
            var n3 = o3;
            wn2(o3) ? Ye3.call(e10, o3, 1) : lo2(e10, o3);
          }
        }
        return e10;
      }
      function Vt2(e10, a4) {
        return e10 + fa3(xr2() * (a4 - e10 + 1));
      }
      function Gt2(e10, a4) {
        var r3 = "";
        if (!e10 || a4 < 1 || a4 > m2) return r3;
        do {
          a4 % 2 && (r3 += e10), (a4 = fa3(a4 / 2)) && (e10 += e10);
        } while (a4);
        return r3;
      }
      function Yt2(e10, a4) {
        return Rn2(En2(e10, a4, td2), e10 + "");
      }
      function Jt2(e10) {
        return Jr2(Bi2(e10));
      }
      function Xt2(e10, a4) {
        var r3 = Bi2(e10);
        return Mn2(r3, st2(a4, 0, r3.length));
      }
      function Qt2(e10, a4, r3, o3) {
        if (!ei2(e10)) return e10;
        for (var n3 = -1, s3 = (a4 = wo2(a4, e10)).length, i3 = s3 - 1, d3 = e10; null != d3 && ++n3 < s3; ) {
          var c3 = Dn2(a4[n3]), u3 = r3;
          if ("__proto__" === c3 || "constructor" === c3 || "prototype" === c3) return e10;
          if (n3 != i3) {
            var l3 = d3[c3];
            (u3 = o3 ? o3(l3, c3, d3) : t2) === t2 && (u3 = ei2(l3) ? l3 : wn2(a4[n3 + 1]) ? [] : {});
          }
          et2(d3, c3, u3), d3 = d3[c3];
        }
        return e10;
      }
      var Zt2 = Or2 ? function(e10, a4) {
        return Or2.set(e10, a4), e10;
      } : td2, eo2 = aa3 ? function(e10, a4) {
        return aa3(e10, "toString", { configurable: true, enumerable: false, value: ed2(a4), writable: true });
      } : td2;
      function ao2(e10) {
        return Mn2(Bi2(e10));
      }
      function ro2(e10, a4, t3) {
        var o3 = -1, n3 = e10.length;
        a4 < 0 && (a4 = -a4 > n3 ? 0 : n3 + a4), (t3 = t3 > n3 ? n3 : t3) < 0 && (t3 += n3), n3 = a4 > t3 ? 0 : t3 - a4 >>> 0, a4 >>>= 0;
        for (var s3 = r2(n3); ++o3 < n3; ) s3[o3] = e10[o3 + a4];
        return s3;
      }
      function to2(e10, a4) {
        var r3;
        return lt2(e10, function(e11, t3, o3) {
          return !(r3 = a4(e11, t3, o3));
        }), !!r3;
      }
      function oo2(e10, a4, r3) {
        var t3 = 0, o3 = null == e10 ? t3 : e10.length;
        if ("number" == typeof a4 && a4 == a4 && o3 <= 2147483647) {
          for (; t3 < o3; ) {
            var n3 = t3 + o3 >>> 1, s3 = e10[n3];
            null !== s3 && !di2(s3) && (r3 ? s3 <= a4 : s3 < a4) ? t3 = n3 + 1 : o3 = n3;
          }
          return o3;
        }
        return no2(e10, a4, td2, r3);
      }
      function no2(e10, a4, r3, o3) {
        var n3 = 0, s3 = null == e10 ? 0 : e10.length;
        if (0 === s3) return 0;
        for (var i3 = (a4 = r3(a4)) != a4, d3 = null === a4, c3 = di2(a4), u3 = a4 === t2; n3 < s3; ) {
          var l3 = fa3((n3 + s3) / 2), p3 = r3(e10[l3]), m3 = p3 !== t2, h3 = null === p3, f3 = p3 == p3, v3 = di2(p3);
          if (i3) var g3 = o3 || f3;
          else g3 = u3 ? f3 && (o3 || m3) : d3 ? f3 && m3 && (o3 || !h3) : c3 ? f3 && m3 && !h3 && (o3 || !v3) : !h3 && !v3 && (o3 ? p3 <= a4 : p3 < a4);
          g3 ? n3 = l3 + 1 : s3 = l3;
        }
        return br2(s3, 4294967294);
      }
      function so2(e10, a4) {
        for (var r3 = -1, t3 = e10.length, o3 = 0, n3 = []; ++r3 < t3; ) {
          var s3 = e10[r3], i3 = a4 ? a4(s3) : s3;
          if (!r3 || !Bs2(i3, d3)) {
            var d3 = i3;
            n3[o3++] = 0 === s3 ? 0 : s3;
          }
        }
        return n3;
      }
      function io2(e10) {
        return "number" == typeof e10 ? e10 : di2(e10) ? h2 : +e10;
      }
      function co2(e10) {
        if ("string" == typeof e10) return e10;
        if (Hs2(e10)) return Pa2(e10, co2) + "";
        if (di2(e10)) return zr2 ? zr2.call(e10) : "";
        var a4 = e10 + "";
        return "0" == a4 && 1 / e10 == -1 / 0 ? "-0" : a4;
      }
      function uo2(e10, a4, r3) {
        var t3 = -1, o3 = Ra2, n3 = e10.length, s3 = true, i3 = [], d3 = i3;
        if (r3) s3 = false, o3 = Na2;
        else if (n3 >= 200) {
          var c3 = a4 ? null : Yo2(e10);
          if (c3) return ur2(c3);
          s3 = false, o3 = er2, d3 = new Vr2();
        } else d3 = a4 ? [] : i3;
        e: for (; ++t3 < n3; ) {
          var u3 = e10[t3], l3 = a4 ? a4(u3) : u3;
          if (u3 = r3 || 0 !== u3 ? u3 : 0, s3 && l3 == l3) {
            for (var p3 = d3.length; p3--; ) if (d3[p3] === l3) continue e;
            a4 && d3.push(l3), i3.push(u3);
          } else o3(d3, l3, r3) || (d3 !== i3 && d3.push(l3), i3.push(u3));
        }
        return i3;
      }
      function lo2(e10, a4) {
        return null == (e10 = jn2(e10, a4 = wo2(a4, e10))) || delete e10[Dn2(Jn2(a4))];
      }
      function po2(e10, a4, r3, t3) {
        return Qt2(e10, a4, r3(_t2(e10, a4)), t3);
      }
      function mo2(e10, a4, r3, t3) {
        for (var o3 = e10.length, n3 = t3 ? o3 : -1; (t3 ? n3-- : ++n3 < o3) && a4(e10[n3], n3, e10); ) ;
        return r3 ? ro2(e10, t3 ? 0 : n3, t3 ? n3 + 1 : o3) : ro2(e10, t3 ? n3 + 1 : 0, t3 ? o3 : n3);
      }
      function ho2(e10, a4) {
        var r3 = e10;
        return r3 instanceof Ur2 && (r3 = r3.value()), La2(a4, function(e11, a5) {
          return a5.func.apply(a5.thisArg, Ma2([e11], a5.args));
        }, r3);
      }
      function fo2(e10, a4, t3) {
        var o3 = e10.length;
        if (o3 < 2) return o3 ? uo2(e10[0]) : [];
        for (var n3 = -1, s3 = r2(o3); ++n3 < o3; ) for (var i3 = e10[n3], d3 = -1; ++d3 < o3; ) d3 != n3 && (s3[n3] = ut2(s3[n3] || i3, e10[d3], a4, t3));
        return uo2(vt2(s3, 1), a4, t3);
      }
      function vo2(e10, a4, r3) {
        for (var o3 = -1, n3 = e10.length, s3 = a4.length, i3 = {}; ++o3 < n3; ) {
          var d3 = o3 < s3 ? a4[o3] : t2;
          r3(i3, e10[o3], d3);
        }
        return i3;
      }
      function go2(e10) {
        return Vs2(e10) ? e10 : [];
      }
      function bo2(e10) {
        return "function" == typeof e10 ? e10 : td2;
      }
      function wo2(e10, a4) {
        return Hs2(e10) ? e10 : xn2(e10, a4) ? [e10] : Ln2(bi2(e10));
      }
      var yo2 = Yt2;
      function xo2(e10, a4, r3) {
        var o3 = e10.length;
        return r3 = r3 === t2 ? o3 : r3, !a4 && r3 >= o3 ? e10 : ro2(e10, a4, r3);
      }
      var _o2 = ta3 || function(e10) {
        return ha2.clearTimeout(e10);
      };
      function Io2(e10, a4) {
        if (a4) return e10.slice();
        var r3 = e10.length, t3 = We3 ? We3(r3) : new e10.constructor(r3);
        return e10.copy(t3), t3;
      }
      function ko2(e10) {
        var a4 = new e10.constructor(e10.byteLength);
        return new He3(a4).set(new He3(e10)), a4;
      }
      function So2(e10, a4) {
        var r3 = a4 ? ko2(e10.buffer) : e10.buffer;
        return new e10.constructor(r3, e10.byteOffset, e10.length);
      }
      function To2(e10, a4) {
        if (e10 !== a4) {
          var r3 = e10 !== t2, o3 = null === e10, n3 = e10 == e10, s3 = di2(e10), i3 = a4 !== t2, d3 = null === a4, c3 = a4 == a4, u3 = di2(a4);
          if (!d3 && !u3 && !s3 && e10 > a4 || s3 && i3 && c3 && !d3 && !u3 || o3 && i3 && c3 || !r3 && c3 || !n3) return 1;
          if (!o3 && !s3 && !u3 && e10 < a4 || u3 && r3 && n3 && !o3 && !s3 || d3 && r3 && n3 || !i3 && n3 || !c3) return -1;
        }
        return 0;
      }
      function Eo2(e10, a4, t3, o3) {
        for (var n3 = -1, s3 = e10.length, i3 = t3.length, d3 = -1, c3 = a4.length, u3 = gr2(s3 - i3, 0), l3 = r2(c3 + u3), p3 = !o3; ++d3 < c3; ) l3[d3] = a4[d3];
        for (; ++n3 < i3; ) (p3 || n3 < s3) && (l3[t3[n3]] = e10[n3]);
        for (; u3--; ) l3[d3++] = e10[n3++];
        return l3;
      }
      function jo2(e10, a4, t3, o3) {
        for (var n3 = -1, s3 = e10.length, i3 = -1, d3 = t3.length, c3 = -1, u3 = a4.length, l3 = gr2(s3 - d3, 0), p3 = r2(l3 + u3), m3 = !o3; ++n3 < l3; ) p3[n3] = e10[n3];
        for (var h3 = n3; ++c3 < u3; ) p3[h3 + c3] = a4[c3];
        for (; ++i3 < d3; ) (m3 || n3 < s3) && (p3[h3 + t3[i3]] = e10[n3++]);
        return p3;
      }
      function Oo2(e10, a4) {
        var t3 = -1, o3 = e10.length;
        for (a4 || (a4 = r2(o3)); ++t3 < o3; ) a4[t3] = e10[t3];
        return a4;
      }
      function Ao2(e10, a4, r3, o3) {
        var n3 = !r3;
        r3 || (r3 = {});
        for (var s3 = -1, i3 = a4.length; ++s3 < i3; ) {
          var d3 = a4[s3], c3 = o3 ? o3(r3[d3], e10[d3], d3, r3, e10) : t2;
          c3 === t2 && (c3 = e10[d3]), n3 ? ot2(r3, d3, c3) : et2(r3, d3, c3);
        }
        return r3;
      }
      function Co2(e10, a4) {
        return function(r3, t3) {
          var o3 = Hs2(r3) ? Ea2 : rt2, n3 = a4 ? a4() : {};
          return o3(r3, e10, cn2(t3, 2), n3);
        };
      }
      function Ro2(e10) {
        return Yt2(function(a4, r3) {
          var o3 = -1, n3 = r3.length, s3 = n3 > 1 ? r3[n3 - 1] : t2, i3 = n3 > 2 ? r3[2] : t2;
          for (s3 = e10.length > 3 && "function" == typeof s3 ? (n3--, s3) : t2, i3 && yn2(r3[0], r3[1], i3) && (s3 = n3 < 3 ? t2 : s3, n3 = 1), a4 = Te3(a4); ++o3 < n3; ) {
            var d3 = r3[o3];
            d3 && e10(a4, d3, o3, s3);
          }
          return a4;
        });
      }
      function No2(e10, a4) {
        return function(r3, t3) {
          if (null == r3) return r3;
          if (!Ks2(r3)) return e10(r3, t3);
          for (var o3 = r3.length, n3 = a4 ? o3 : -1, s3 = Te3(r3); (a4 ? n3-- : ++n3 < o3) && false !== t3(s3[n3], n3, s3); ) ;
          return r3;
        };
      }
      function Po2(e10) {
        return function(a4, r3, t3) {
          for (var o3 = -1, n3 = Te3(a4), s3 = t3(a4), i3 = s3.length; i3--; ) {
            var d3 = s3[e10 ? i3 : ++o3];
            if (false === r3(n3[d3], d3, n3)) break;
          }
          return a4;
        };
      }
      function Mo2(e10) {
        return function(a4) {
          var r3 = sr2(a4 = bi2(a4)) ? mr2(a4) : t2, o3 = r3 ? r3[0] : a4.charAt(0), n3 = r3 ? xo2(r3, 1).join("") : a4.slice(1);
          return o3[e10]() + n3;
        };
      }
      function Lo2(e10) {
        return function(a4) {
          return La2(Xi2(Ui2(a4).replace(Ze2, "")), e10, "");
        };
      }
      function Do2(e10) {
        return function() {
          var a4 = arguments;
          switch (a4.length) {
            case 0:
              return new e10();
            case 1:
              return new e10(a4[0]);
            case 2:
              return new e10(a4[0], a4[1]);
            case 3:
              return new e10(a4[0], a4[1], a4[2]);
            case 4:
              return new e10(a4[0], a4[1], a4[2], a4[3]);
            case 5:
              return new e10(a4[0], a4[1], a4[2], a4[3], a4[4]);
            case 6:
              return new e10(a4[0], a4[1], a4[2], a4[3], a4[4], a4[5]);
            case 7:
              return new e10(a4[0], a4[1], a4[2], a4[3], a4[4], a4[5], a4[6]);
          }
          var r3 = Br2(e10.prototype), t3 = e10.apply(r3, a4);
          return ei2(t3) ? t3 : r3;
        };
      }
      function zo2(e10) {
        return function(a4, r3, o3) {
          var n3 = Te3(a4);
          if (!Ks2(a4)) {
            var s3 = cn2(r3, 3);
            a4 = Ci2(a4), r3 = function(e11) {
              return s3(n3[e11], e11, n3);
            };
          }
          var i3 = e10(a4, r3, o3);
          return i3 > -1 ? n3[s3 ? a4[i3] : i3] : t2;
        };
      }
      function Fo2(e10) {
        return rn2(function(a4) {
          var r3 = a4.length, n3 = r3, s3 = $r2.prototype.thru;
          for (e10 && a4.reverse(); n3--; ) {
            var i3 = a4[n3];
            if ("function" != typeof i3) throw new Oe3(o2);
            if (s3 && !d3 && "wrapper" == sn2(i3)) var d3 = new $r2([], true);
          }
          for (n3 = d3 ? n3 : r3; ++n3 < r3; ) {
            var c3 = sn2(i3 = a4[n3]), u3 = "wrapper" == c3 ? nn2(i3) : t2;
            d3 = u3 && _n2(u3[0]) && 424 == u3[1] && !u3[4].length && 1 == u3[9] ? d3[sn2(u3[0])].apply(d3, u3[3]) : 1 == i3.length && _n2(i3) ? d3[c3]() : d3.thru(i3);
          }
          return function() {
            var e11 = arguments, t3 = e11[0];
            if (d3 && 1 == e11.length && Hs2(t3)) return d3.plant(t3).value();
            for (var o3 = 0, n4 = r3 ? a4[o3].apply(this, e11) : t3; ++o3 < r3; ) n4 = a4[o3].call(this, n4);
            return n4;
          };
        });
      }
      function Bo2(e10, a4, o3, n3, s3, i3, d3, c3, l3, p3) {
        var m3 = a4 & u2, h3 = 1 & a4, f3 = 2 & a4, v3 = 24 & a4, g3 = 512 & a4, b3 = f3 ? t2 : Do2(e10);
        return function u3() {
          for (var w3 = arguments.length, y3 = r2(w3), x3 = w3; x3--; ) y3[x3] = arguments[x3];
          if (v3) var _3 = dn2(u3), I3 = function(e11, a5) {
            for (var r3 = e11.length, t3 = 0; r3--; ) e11[r3] === a5 && ++t3;
            return t3;
          }(y3, _3);
          if (n3 && (y3 = Eo2(y3, n3, s3, v3)), i3 && (y3 = jo2(y3, i3, d3, v3)), w3 -= I3, v3 && w3 < p3) {
            var k3 = cr2(y3, _3);
            return Vo2(e10, a4, Bo2, u3.placeholder, o3, y3, k3, c3, l3, p3 - w3);
          }
          var S3 = h3 ? o3 : this, T3 = f3 ? S3[e10] : e10;
          return w3 = y3.length, c3 ? y3 = function(e11, a5) {
            var r3 = e11.length, o4 = br2(a5.length, r3), n4 = Oo2(e11);
            for (; o4--; ) {
              var s4 = a5[o4];
              e11[o4] = wn2(s4, r3) ? n4[s4] : t2;
            }
            return e11;
          }(y3, c3) : g3 && w3 > 1 && y3.reverse(), m3 && l3 < w3 && (y3.length = l3), this && this !== ha2 && this instanceof u3 && (T3 = b3 || Do2(T3)), T3.apply(S3, y3);
        };
      }
      function qo2(e10, a4) {
        return function(r3, t3) {
          return function(e11, a5, r4, t4) {
            return wt2(e11, function(e12, o3, n3) {
              a5(t4, r4(e12), o3, n3);
            }), t4;
          }(r3, e10, a4(t3), {});
        };
      }
      function $o2(e10, a4) {
        return function(r3, o3) {
          var n3;
          if (r3 === t2 && o3 === t2) return a4;
          if (r3 !== t2 && (n3 = r3), o3 !== t2) {
            if (n3 === t2) return o3;
            "string" == typeof r3 || "string" == typeof o3 ? (r3 = co2(r3), o3 = co2(o3)) : (r3 = io2(r3), o3 = io2(o3)), n3 = e10(r3, o3);
          }
          return n3;
        };
      }
      function Uo2(e10) {
        return rn2(function(a4) {
          return a4 = Pa2(a4, Qa2(cn2())), Yt2(function(r3) {
            var t3 = this;
            return e10(a4, function(e11) {
              return Ta2(e11, t3, r3);
            });
          });
        });
      }
      function Ho2(e10, a4) {
        var r3 = (a4 = a4 === t2 ? " " : co2(a4)).length;
        if (r3 < 2) return r3 ? Gt2(a4, e10) : a4;
        var o3 = Gt2(a4, ma3(e10 / pr2(a4)));
        return sr2(a4) ? xo2(mr2(o3), 0, e10).join("") : o3.slice(0, e10);
      }
      function Wo2(e10) {
        return function(a4, o3, n3) {
          return n3 && "number" != typeof n3 && yn2(a4, o3, n3) && (o3 = n3 = t2), a4 = mi2(a4), o3 === t2 ? (o3 = a4, a4 = 0) : o3 = mi2(o3), function(e11, a5, t3, o4) {
            for (var n4 = -1, s3 = gr2(ma3((a5 - e11) / (t3 || 1)), 0), i3 = r2(s3); s3--; ) i3[o4 ? s3 : ++n4] = e11, e11 += t3;
            return i3;
          }(a4, o3, n3 = n3 === t2 ? a4 < o3 ? 1 : -1 : mi2(n3), e10);
        };
      }
      function Ko2(e10) {
        return function(a4, r3) {
          return "string" == typeof a4 && "string" == typeof r3 || (a4 = vi2(a4), r3 = vi2(r3)), e10(a4, r3);
        };
      }
      function Vo2(e10, a4, r3, o3, n3, s3, i3, u3, l3, p3) {
        var m3 = 8 & a4;
        a4 |= m3 ? d2 : c2, 4 & (a4 &= ~(m3 ? c2 : d2)) || (a4 &= -4);
        var h3 = [e10, a4, n3, m3 ? s3 : t2, m3 ? i3 : t2, m3 ? t2 : s3, m3 ? t2 : i3, u3, l3, p3], f3 = r3.apply(t2, h3);
        return _n2(e10) && An2(f3, h3), f3.placeholder = o3, Nn2(f3, e10, a4);
      }
      function Go2(e10) {
        var a4 = Se3[e10];
        return function(e11, r3) {
          if (e11 = vi2(e11), (r3 = null == r3 ? 0 : br2(hi2(r3), 292)) && wa3(e11)) {
            var t3 = (bi2(e11) + "e").split("e");
            return +((t3 = (bi2(a4(t3[0] + "e" + (+t3[1] + r3))) + "e").split("e"))[0] + "e" + (+t3[1] - r3));
          }
          return a4(e11);
        };
      }
      var Yo2 = Tr2 && 1 / ur2(new Tr2([, -0]))[1] == p2 ? function(e10) {
        return new Tr2(e10);
      } : dd2;
      function Jo2(e10) {
        return function(a4) {
          var r3 = fn2(a4);
          return r3 == k2 ? ir2(a4) : r3 == O2 ? lr2(a4) : function(e11, a5) {
            return Pa2(a5, function(a6) {
              return [a6, e11[a6]];
            });
          }(a4, e10(a4));
        };
      }
      function Xo2(e10, a4, n3, p3, m3, h3, f3, v3) {
        var g3 = 2 & a4;
        if (!g3 && "function" != typeof e10) throw new Oe3(o2);
        var b3 = p3 ? p3.length : 0;
        if (b3 || (a4 &= -97, p3 = m3 = t2), f3 = f3 === t2 ? f3 : gr2(hi2(f3), 0), v3 = v3 === t2 ? v3 : hi2(v3), b3 -= m3 ? m3.length : 0, a4 & c2) {
          var w3 = p3, y3 = m3;
          p3 = m3 = t2;
        }
        var x3 = g3 ? t2 : nn2(e10), _3 = [e10, a4, n3, p3, m3, w3, y3, h3, f3, v3];
        if (x3 && function(e11, a5) {
          var r3 = e11[1], t3 = a5[1], o3 = r3 | t3, n4 = o3 < 131, i3 = t3 == u2 && 8 == r3 || t3 == u2 && r3 == l2 && e11[7].length <= a5[8] || 384 == t3 && a5[7].length <= a5[8] && 8 == r3;
          if (!n4 && !i3) return e11;
          1 & t3 && (e11[2] = a5[2], o3 |= 1 & r3 ? 0 : 4);
          var d3 = a5[3];
          if (d3) {
            var c3 = e11[3];
            e11[3] = c3 ? Eo2(c3, d3, a5[4]) : d3, e11[4] = c3 ? cr2(e11[3], s2) : a5[4];
          }
          (d3 = a5[5]) && (c3 = e11[5], e11[5] = c3 ? jo2(c3, d3, a5[6]) : d3, e11[6] = c3 ? cr2(e11[5], s2) : a5[6]);
          (d3 = a5[7]) && (e11[7] = d3);
          t3 & u2 && (e11[8] = null == e11[8] ? a5[8] : br2(e11[8], a5[8]));
          null == e11[9] && (e11[9] = a5[9]);
          e11[0] = a5[0], e11[1] = o3;
        }(_3, x3), e10 = _3[0], a4 = _3[1], n3 = _3[2], p3 = _3[3], m3 = _3[4], !(v3 = _3[9] = _3[9] === t2 ? g3 ? 0 : e10.length : gr2(_3[9] - b3, 0)) && 24 & a4 && (a4 &= -25), a4 && 1 != a4) I3 = 8 == a4 || a4 == i2 ? function(e11, a5, o3) {
          var n4 = Do2(e11);
          return function s3() {
            for (var i3 = arguments.length, d3 = r2(i3), c3 = i3, u3 = dn2(s3); c3--; ) d3[c3] = arguments[c3];
            var l3 = i3 < 3 && d3[0] !== u3 && d3[i3 - 1] !== u3 ? [] : cr2(d3, u3);
            return (i3 -= l3.length) < o3 ? Vo2(e11, a5, Bo2, s3.placeholder, t2, d3, l3, t2, t2, o3 - i3) : Ta2(this && this !== ha2 && this instanceof s3 ? n4 : e11, this, d3);
          };
        }(e10, a4, v3) : a4 != d2 && 33 != a4 || m3.length ? Bo2.apply(t2, _3) : function(e11, a5, t3, o3) {
          var n4 = 1 & a5, s3 = Do2(e11);
          return function a6() {
            for (var i3 = -1, d3 = arguments.length, c3 = -1, u3 = o3.length, l3 = r2(u3 + d3), p4 = this && this !== ha2 && this instanceof a6 ? s3 : e11; ++c3 < u3; ) l3[c3] = o3[c3];
            for (; d3--; ) l3[c3++] = arguments[++i3];
            return Ta2(p4, n4 ? t3 : this, l3);
          };
        }(e10, a4, n3, p3);
        else var I3 = function(e11, a5, r3) {
          var t3 = 1 & a5, o3 = Do2(e11);
          return function a6() {
            return (this && this !== ha2 && this instanceof a6 ? o3 : e11).apply(t3 ? r3 : this, arguments);
          };
        }(e10, a4, n3);
        return Nn2((x3 ? Zt2 : An2)(I3, _3), e10, a4);
      }
      function Qo2(e10, a4, r3, o3) {
        return e10 === t2 || Bs2(e10, Re3[r3]) && !Me3.call(o3, r3) ? a4 : e10;
      }
      function Zo2(e10, a4, r3, o3, n3, s3) {
        return ei2(e10) && ei2(a4) && (s3.set(a4, e10), qt2(e10, a4, t2, Zo2, s3), s3.delete(a4)), e10;
      }
      function en2(e10) {
        return oi2(e10) ? t2 : e10;
      }
      function an2(e10, a4, r3, o3, n3, s3) {
        var i3 = 1 & r3, d3 = e10.length, c3 = a4.length;
        if (d3 != c3 && !(i3 && c3 > d3)) return false;
        var u3 = s3.get(e10), l3 = s3.get(a4);
        if (u3 && l3) return u3 == a4 && l3 == e10;
        var p3 = -1, m3 = true, h3 = 2 & r3 ? new Vr2() : t2;
        for (s3.set(e10, a4), s3.set(a4, e10); ++p3 < d3; ) {
          var f3 = e10[p3], v3 = a4[p3];
          if (o3) var g3 = i3 ? o3(v3, f3, p3, a4, e10, s3) : o3(f3, v3, p3, e10, a4, s3);
          if (g3 !== t2) {
            if (g3) continue;
            m3 = false;
            break;
          }
          if (h3) {
            if (!za2(a4, function(e11, a5) {
              if (!er2(h3, a5) && (f3 === e11 || n3(f3, e11, r3, o3, s3))) return h3.push(a5);
            })) {
              m3 = false;
              break;
            }
          } else if (f3 !== v3 && !n3(f3, v3, r3, o3, s3)) {
            m3 = false;
            break;
          }
        }
        return s3.delete(e10), s3.delete(a4), m3;
      }
      function rn2(e10) {
        return Rn2(En2(e10, t2, Wn2), e10 + "");
      }
      function tn2(e10) {
        return It2(e10, Ci2, mn2);
      }
      function on2(e10) {
        return It2(e10, Ri2, hn2);
      }
      var nn2 = Or2 ? function(e10) {
        return Or2.get(e10);
      } : dd2;
      function sn2(e10) {
        for (var a4 = e10.name + "", r3 = Ar2[a4], t3 = Me3.call(Ar2, a4) ? r3.length : 0; t3--; ) {
          var o3 = r3[t3], n3 = o3.func;
          if (null == n3 || n3 == e10) return o3.name;
        }
        return a4;
      }
      function dn2(e10) {
        return (Me3.call(Fr2, "placeholder") ? Fr2 : e10).placeholder;
      }
      function cn2() {
        var e10 = Fr2.iteratee || od2;
        return e10 = e10 === od2 ? Pt2 : e10, arguments.length ? e10(arguments[0], arguments[1]) : e10;
      }
      function un2(e10, a4) {
        var r3, t3, o3 = e10.__data__;
        return ("string" == (t3 = typeof (r3 = a4)) || "number" == t3 || "symbol" == t3 || "boolean" == t3 ? "__proto__" !== r3 : null === r3) ? o3["string" == typeof a4 ? "string" : "hash"] : o3.map;
      }
      function ln2(e10) {
        for (var a4 = Ci2(e10), r3 = a4.length; r3--; ) {
          var t3 = a4[r3], o3 = e10[t3];
          a4[r3] = [t3, o3, Sn2(o3)];
        }
        return a4;
      }
      function pn2(e10, a4) {
        var r3 = function(e11, a5) {
          return null == e11 ? t2 : e11[a5];
        }(e10, a4);
        return Nt2(r3) ? r3 : t2;
      }
      var mn2 = va3 ? function(e10) {
        return null == e10 ? [] : (e10 = Te3(e10), Ca2(va3(e10), function(a4) {
          return Ge3.call(e10, a4);
        }));
      } : fd2, hn2 = va3 ? function(e10) {
        for (var a4 = []; e10; ) Ma2(a4, mn2(e10)), e10 = Ke3(e10);
        return a4;
      } : fd2, fn2 = kt2;
      function vn2(e10, a4, r3) {
        for (var t3 = -1, o3 = (a4 = wo2(a4, e10)).length, n3 = false; ++t3 < o3; ) {
          var s3 = Dn2(a4[t3]);
          if (!(n3 = null != e10 && r3(e10, s3))) break;
          e10 = e10[s3];
        }
        return n3 || ++t3 != o3 ? n3 : !!(o3 = null == e10 ? 0 : e10.length) && Zs2(o3) && wn2(s3, o3) && (Hs2(e10) || Us2(e10));
      }
      function gn2(e10) {
        return "function" != typeof e10.constructor || kn2(e10) ? {} : Br2(Ke3(e10));
      }
      function bn2(e10) {
        return Hs2(e10) || Us2(e10) || !!(Je3 && e10 && e10[Je3]);
      }
      function wn2(e10, a4) {
        var r3 = typeof e10;
        return !!(a4 = null == a4 ? m2 : a4) && ("number" == r3 || "symbol" != r3 && we2.test(e10)) && e10 > -1 && e10 % 1 == 0 && e10 < a4;
      }
      function yn2(e10, a4, r3) {
        if (!ei2(r3)) return false;
        var t3 = typeof a4;
        return !!("number" == t3 ? Ks2(r3) && wn2(a4, r3.length) : "string" == t3 && a4 in r3) && Bs2(r3[a4], e10);
      }
      function xn2(e10, a4) {
        if (Hs2(e10)) return false;
        var r3 = typeof e10;
        return !("number" != r3 && "symbol" != r3 && "boolean" != r3 && null != e10 && !di2(e10)) || (ae2.test(e10) || !ee2.test(e10) || null != a4 && e10 in Te3(a4));
      }
      function _n2(e10) {
        var a4 = sn2(e10), r3 = Fr2[a4];
        if ("function" != typeof r3 || !(a4 in Ur2.prototype)) return false;
        if (e10 === r3) return true;
        var t3 = nn2(r3);
        return !!t3 && e10 === t3[0];
      }
      (Ir2 && fn2(new Ir2(new ArrayBuffer(1))) != P2 || kr2 && fn2(new kr2()) != k2 || Sr2 && fn2(Sr2.resolve()) != E2 || Tr2 && fn2(new Tr2()) != O2 || Er2 && fn2(new Er2()) != R2) && (fn2 = function(e10) {
        var a4 = kt2(e10), r3 = a4 == T2 ? e10.constructor : t2, o3 = r3 ? zn2(r3) : "";
        if (o3) switch (o3) {
          case Cr2:
            return P2;
          case Rr2:
            return k2;
          case Nr2:
            return E2;
          case Pr2:
            return O2;
          case Mr2:
            return R2;
        }
        return a4;
      });
      var In2 = Ne3 ? Xs2 : vd2;
      function kn2(e10) {
        var a4 = e10 && e10.constructor;
        return e10 === ("function" == typeof a4 && a4.prototype || Re3);
      }
      function Sn2(e10) {
        return e10 == e10 && !ei2(e10);
      }
      function Tn2(e10, a4) {
        return function(r3) {
          return null != r3 && (r3[e10] === a4 && (a4 !== t2 || e10 in Te3(r3)));
        };
      }
      function En2(e10, a4, o3) {
        return a4 = gr2(a4 === t2 ? e10.length - 1 : a4, 0), function() {
          for (var t3 = arguments, n3 = -1, s3 = gr2(t3.length - a4, 0), i3 = r2(s3); ++n3 < s3; ) i3[n3] = t3[a4 + n3];
          n3 = -1;
          for (var d3 = r2(a4 + 1); ++n3 < a4; ) d3[n3] = t3[n3];
          return d3[a4] = o3(i3), Ta2(e10, this, d3);
        };
      }
      function jn2(e10, a4) {
        return a4.length < 2 ? e10 : _t2(e10, ro2(a4, 0, -1));
      }
      function On2(e10, a4) {
        if (("constructor" !== a4 || "function" != typeof e10[a4]) && "__proto__" != a4) return e10[a4];
      }
      var An2 = Pn2(Zt2), Cn2 = pa3 || function(e10, a4) {
        return ha2.setTimeout(e10, a4);
      }, Rn2 = Pn2(eo2);
      function Nn2(e10, a4, r3) {
        var t3 = a4 + "";
        return Rn2(e10, function(e11, a5) {
          var r4 = a5.length;
          if (!r4) return e11;
          var t4 = r4 - 1;
          return a5[t4] = (r4 > 1 ? "& " : "") + a5[t4], a5 = a5.join(r4 > 2 ? ", " : " "), e11.replace(ie2, "{\n/* [wrapped with " + a5 + "] */\n");
        }(t3, function(e11, a5) {
          return ja2(v2, function(r4) {
            var t4 = "_." + r4[0];
            a5 & r4[1] && !Ra2(e11, t4) && e11.push(t4);
          }), e11.sort();
        }(function(e11) {
          var a5 = e11.match(de2);
          return a5 ? a5[1].split(ce2) : [];
        }(t3), r3)));
      }
      function Pn2(e10) {
        var a4 = 0, r3 = 0;
        return function() {
          var o3 = wr2(), n3 = 16 - (o3 - r3);
          if (r3 = o3, n3 > 0) {
            if (++a4 >= 800) return arguments[0];
          } else a4 = 0;
          return e10.apply(t2, arguments);
        };
      }
      function Mn2(e10, a4) {
        var r3 = -1, o3 = e10.length, n3 = o3 - 1;
        for (a4 = a4 === t2 ? o3 : a4; ++r3 < a4; ) {
          var s3 = Vt2(r3, n3), i3 = e10[s3];
          e10[s3] = e10[r3], e10[r3] = i3;
        }
        return e10.length = a4, e10;
      }
      var Ln2 = function(e10) {
        var a4 = Ps2(e10, function(e11) {
          return 500 === r3.size && r3.clear(), e11;
        }), r3 = a4.cache;
        return a4;
      }(function(e10) {
        var a4 = [];
        return 46 === e10.charCodeAt(0) && a4.push(""), e10.replace(re2, function(e11, r3, t3, o3) {
          a4.push(t3 ? o3.replace(pe2, "$1") : r3 || e11);
        }), a4;
      });
      function Dn2(e10) {
        if ("string" == typeof e10 || di2(e10)) return e10;
        var a4 = e10 + "";
        return "0" == a4 && 1 / e10 == -1 / 0 ? "-0" : a4;
      }
      function zn2(e10) {
        if (null != e10) {
          try {
            return Pe3.call(e10);
          } catch (e11) {
          }
          try {
            return e10 + "";
          } catch (e11) {
          }
        }
        return "";
      }
      function Fn2(e10) {
        if (e10 instanceof Ur2) return e10.clone();
        var a4 = new $r2(e10.__wrapped__, e10.__chain__);
        return a4.__actions__ = Oo2(e10.__actions__), a4.__index__ = e10.__index__, a4.__values__ = e10.__values__, a4;
      }
      var Bn2 = Yt2(function(e10, a4) {
        return Vs2(e10) ? ut2(e10, vt2(a4, 1, Vs2, true)) : [];
      }), qn2 = Yt2(function(e10, a4) {
        var r3 = Jn2(a4);
        return Vs2(r3) && (r3 = t2), Vs2(e10) ? ut2(e10, vt2(a4, 1, Vs2, true), cn2(r3, 2)) : [];
      }), $n2 = Yt2(function(e10, a4) {
        var r3 = Jn2(a4);
        return Vs2(r3) && (r3 = t2), Vs2(e10) ? ut2(e10, vt2(a4, 1, Vs2, true), t2, r3) : [];
      });
      function Un2(e10, a4, r3) {
        var t3 = null == e10 ? 0 : e10.length;
        if (!t3) return -1;
        var o3 = null == r3 ? 0 : hi2(r3);
        return o3 < 0 && (o3 = gr2(t3 + o3, 0)), qa2(e10, cn2(a4, 3), o3);
      }
      function Hn2(e10, a4, r3) {
        var o3 = null == e10 ? 0 : e10.length;
        if (!o3) return -1;
        var n3 = o3 - 1;
        return r3 !== t2 && (n3 = hi2(r3), n3 = r3 < 0 ? gr2(o3 + n3, 0) : br2(n3, o3 - 1)), qa2(e10, cn2(a4, 3), n3, true);
      }
      function Wn2(e10) {
        return (null == e10 ? 0 : e10.length) ? vt2(e10, 1) : [];
      }
      function Kn2(e10) {
        return e10 && e10.length ? e10[0] : t2;
      }
      var Vn2 = Yt2(function(e10) {
        var a4 = Pa2(e10, go2);
        return a4.length && a4[0] === e10[0] ? jt2(a4) : [];
      }), Gn2 = Yt2(function(e10) {
        var a4 = Jn2(e10), r3 = Pa2(e10, go2);
        return a4 === Jn2(r3) ? a4 = t2 : r3.pop(), r3.length && r3[0] === e10[0] ? jt2(r3, cn2(a4, 2)) : [];
      }), Yn2 = Yt2(function(e10) {
        var a4 = Jn2(e10), r3 = Pa2(e10, go2);
        return (a4 = "function" == typeof a4 ? a4 : t2) && r3.pop(), r3.length && r3[0] === e10[0] ? jt2(r3, t2, a4) : [];
      });
      function Jn2(e10) {
        var a4 = null == e10 ? 0 : e10.length;
        return a4 ? e10[a4 - 1] : t2;
      }
      var Xn2 = Yt2(Qn2);
      function Qn2(e10, a4) {
        return e10 && e10.length && a4 && a4.length ? Wt2(e10, a4) : e10;
      }
      var Zn2 = rn2(function(e10, a4) {
        var r3 = null == e10 ? 0 : e10.length, t3 = nt2(e10, a4);
        return Kt2(e10, Pa2(a4, function(e11) {
          return wn2(e11, r3) ? +e11 : e11;
        }).sort(To2)), t3;
      });
      function es2(e10) {
        return null == e10 ? e10 : _r2.call(e10);
      }
      var as2 = Yt2(function(e10) {
        return uo2(vt2(e10, 1, Vs2, true));
      }), rs2 = Yt2(function(e10) {
        var a4 = Jn2(e10);
        return Vs2(a4) && (a4 = t2), uo2(vt2(e10, 1, Vs2, true), cn2(a4, 2));
      }), ts2 = Yt2(function(e10) {
        var a4 = Jn2(e10);
        return a4 = "function" == typeof a4 ? a4 : t2, uo2(vt2(e10, 1, Vs2, true), t2, a4);
      });
      function os2(e10) {
        if (!e10 || !e10.length) return [];
        var a4 = 0;
        return e10 = Ca2(e10, function(e11) {
          if (Vs2(e11)) return a4 = gr2(e11.length, a4), true;
        }), Ja2(a4, function(a5) {
          return Pa2(e10, Ka2(a5));
        });
      }
      function ns2(e10, a4) {
        if (!e10 || !e10.length) return [];
        var r3 = os2(e10);
        return null == a4 ? r3 : Pa2(r3, function(e11) {
          return Ta2(a4, t2, e11);
        });
      }
      var ss2 = Yt2(function(e10, a4) {
        return Vs2(e10) ? ut2(e10, a4) : [];
      }), is2 = Yt2(function(e10) {
        return fo2(Ca2(e10, Vs2));
      }), ds2 = Yt2(function(e10) {
        var a4 = Jn2(e10);
        return Vs2(a4) && (a4 = t2), fo2(Ca2(e10, Vs2), cn2(a4, 2));
      }), cs2 = Yt2(function(e10) {
        var a4 = Jn2(e10);
        return a4 = "function" == typeof a4 ? a4 : t2, fo2(Ca2(e10, Vs2), t2, a4);
      }), us2 = Yt2(os2);
      var ls2 = Yt2(function(e10) {
        var a4 = e10.length, r3 = a4 > 1 ? e10[a4 - 1] : t2;
        return r3 = "function" == typeof r3 ? (e10.pop(), r3) : t2, ns2(e10, r3);
      });
      function ps2(e10) {
        var a4 = Fr2(e10);
        return a4.__chain__ = true, a4;
      }
      function ms2(e10, a4) {
        return a4(e10);
      }
      var hs2 = rn2(function(e10) {
        var a4 = e10.length, r3 = a4 ? e10[0] : 0, o3 = this.__wrapped__, n3 = function(a5) {
          return nt2(a5, e10);
        };
        return !(a4 > 1 || this.__actions__.length) && o3 instanceof Ur2 && wn2(r3) ? ((o3 = o3.slice(r3, +r3 + (a4 ? 1 : 0))).__actions__.push({ func: ms2, args: [n3], thisArg: t2 }), new $r2(o3, this.__chain__).thru(function(e11) {
          return a4 && !e11.length && e11.push(t2), e11;
        })) : this.thru(n3);
      });
      var fs2 = Co2(function(e10, a4, r3) {
        Me3.call(e10, r3) ? ++e10[r3] : ot2(e10, r3, 1);
      });
      var vs2 = zo2(Un2), gs2 = zo2(Hn2);
      function bs2(e10, a4) {
        return (Hs2(e10) ? ja2 : lt2)(e10, cn2(a4, 3));
      }
      function ws2(e10, a4) {
        return (Hs2(e10) ? Oa2 : pt2)(e10, cn2(a4, 3));
      }
      var ys2 = Co2(function(e10, a4, r3) {
        Me3.call(e10, r3) ? e10[r3].push(a4) : ot2(e10, r3, [a4]);
      });
      var xs2 = Yt2(function(e10, a4, t3) {
        var o3 = -1, n3 = "function" == typeof a4, s3 = Ks2(e10) ? r2(e10.length) : [];
        return lt2(e10, function(e11) {
          s3[++o3] = n3 ? Ta2(a4, e11, t3) : Ot2(e11, a4, t3);
        }), s3;
      }), _s2 = Co2(function(e10, a4, r3) {
        ot2(e10, r3, a4);
      });
      function Is2(e10, a4) {
        return (Hs2(e10) ? Pa2 : zt2)(e10, cn2(a4, 3));
      }
      var ks2 = Co2(function(e10, a4, r3) {
        e10[r3 ? 0 : 1].push(a4);
      }, function() {
        return [[], []];
      });
      var Ss2 = Yt2(function(e10, a4) {
        if (null == e10) return [];
        var r3 = a4.length;
        return r3 > 1 && yn2(e10, a4[0], a4[1]) ? a4 = [] : r3 > 2 && yn2(a4[0], a4[1], a4[2]) && (a4 = [a4[0]]), Ut2(e10, vt2(a4, 1), []);
      }), Ts2 = ca3 || function() {
        return ha2.Date.now();
      };
      function Es2(e10, a4, r3) {
        return a4 = r3 ? t2 : a4, a4 = e10 && null == a4 ? e10.length : a4, Xo2(e10, u2, t2, t2, t2, t2, a4);
      }
      function js2(e10, a4) {
        var r3;
        if ("function" != typeof a4) throw new Oe3(o2);
        return e10 = hi2(e10), function() {
          return --e10 > 0 && (r3 = a4.apply(this, arguments)), e10 <= 1 && (a4 = t2), r3;
        };
      }
      var Os2 = Yt2(function(e10, a4, r3) {
        var t3 = 1;
        if (r3.length) {
          var o3 = cr2(r3, dn2(Os2));
          t3 |= d2;
        }
        return Xo2(e10, t3, a4, r3, o3);
      }), As2 = Yt2(function(e10, a4, r3) {
        var t3 = 3;
        if (r3.length) {
          var o3 = cr2(r3, dn2(As2));
          t3 |= d2;
        }
        return Xo2(a4, t3, e10, r3, o3);
      });
      function Cs2(e10, a4, r3) {
        var n3, s3, i3, d3, c3, u3, l3 = 0, p3 = false, m3 = false, h3 = true;
        if ("function" != typeof e10) throw new Oe3(o2);
        function f3(a5) {
          var r4 = n3, o3 = s3;
          return n3 = s3 = t2, l3 = a5, d3 = e10.apply(o3, r4);
        }
        function v3(e11) {
          var r4 = e11 - u3;
          return u3 === t2 || r4 >= a4 || r4 < 0 || m3 && e11 - l3 >= i3;
        }
        function g3() {
          var e11 = Ts2();
          if (v3(e11)) return b3(e11);
          c3 = Cn2(g3, function(e12) {
            var r4 = a4 - (e12 - u3);
            return m3 ? br2(r4, i3 - (e12 - l3)) : r4;
          }(e11));
        }
        function b3(e11) {
          return c3 = t2, h3 && n3 ? f3(e11) : (n3 = s3 = t2, d3);
        }
        function w3() {
          var e11 = Ts2(), r4 = v3(e11);
          if (n3 = arguments, s3 = this, u3 = e11, r4) {
            if (c3 === t2) return function(e12) {
              return l3 = e12, c3 = Cn2(g3, a4), p3 ? f3(e12) : d3;
            }(u3);
            if (m3) return _o2(c3), c3 = Cn2(g3, a4), f3(u3);
          }
          return c3 === t2 && (c3 = Cn2(g3, a4)), d3;
        }
        return a4 = vi2(a4) || 0, ei2(r3) && (p3 = !!r3.leading, i3 = (m3 = "maxWait" in r3) ? gr2(vi2(r3.maxWait) || 0, a4) : i3, h3 = "trailing" in r3 ? !!r3.trailing : h3), w3.cancel = function() {
          c3 !== t2 && _o2(c3), l3 = 0, n3 = u3 = s3 = c3 = t2;
        }, w3.flush = function() {
          return c3 === t2 ? d3 : b3(Ts2());
        }, w3;
      }
      var Rs2 = Yt2(function(e10, a4) {
        return ct2(e10, 1, a4);
      }), Ns2 = Yt2(function(e10, a4, r3) {
        return ct2(e10, vi2(a4) || 0, r3);
      });
      function Ps2(e10, a4) {
        if ("function" != typeof e10 || null != a4 && "function" != typeof a4) throw new Oe3(o2);
        var r3 = function() {
          var t3 = arguments, o3 = a4 ? a4.apply(this, t3) : t3[0], n3 = r3.cache;
          if (n3.has(o3)) return n3.get(o3);
          var s3 = e10.apply(this, t3);
          return r3.cache = n3.set(o3, s3) || n3, s3;
        };
        return r3.cache = new (Ps2.Cache || Kr2)(), r3;
      }
      function Ms2(e10) {
        if ("function" != typeof e10) throw new Oe3(o2);
        return function() {
          var a4 = arguments;
          switch (a4.length) {
            case 0:
              return !e10.call(this);
            case 1:
              return !e10.call(this, a4[0]);
            case 2:
              return !e10.call(this, a4[0], a4[1]);
            case 3:
              return !e10.call(this, a4[0], a4[1], a4[2]);
          }
          return !e10.apply(this, a4);
        };
      }
      Ps2.Cache = Kr2;
      var Ls2 = yo2(function(e10, a4) {
        var r3 = (a4 = 1 == a4.length && Hs2(a4[0]) ? Pa2(a4[0], Qa2(cn2())) : Pa2(vt2(a4, 1), Qa2(cn2()))).length;
        return Yt2(function(t3) {
          for (var o3 = -1, n3 = br2(t3.length, r3); ++o3 < n3; ) t3[o3] = a4[o3].call(this, t3[o3]);
          return Ta2(e10, this, t3);
        });
      }), Ds2 = Yt2(function(e10, a4) {
        var r3 = cr2(a4, dn2(Ds2));
        return Xo2(e10, d2, t2, a4, r3);
      }), zs2 = Yt2(function(e10, a4) {
        var r3 = cr2(a4, dn2(zs2));
        return Xo2(e10, c2, t2, a4, r3);
      }), Fs2 = rn2(function(e10, a4) {
        return Xo2(e10, l2, t2, t2, t2, a4);
      });
      function Bs2(e10, a4) {
        return e10 === a4 || e10 != e10 && a4 != a4;
      }
      var qs2 = Ko2(St2), $s2 = Ko2(function(e10, a4) {
        return e10 >= a4;
      }), Us2 = At2(/* @__PURE__ */ function() {
        return arguments;
      }()) ? At2 : function(e10) {
        return ai2(e10) && Me3.call(e10, "callee") && !Ge3.call(e10, "callee");
      }, Hs2 = r2.isArray, Ws2 = ya2 ? Qa2(ya2) : function(e10) {
        return ai2(e10) && kt2(e10) == N2;
      };
      function Ks2(e10) {
        return null != e10 && Zs2(e10.length) && !Xs2(e10);
      }
      function Vs2(e10) {
        return ai2(e10) && Ks2(e10);
      }
      var Gs2 = ba3 || vd2, Ys2 = xa2 ? Qa2(xa2) : function(e10) {
        return ai2(e10) && kt2(e10) == y2;
      };
      function Js2(e10) {
        if (!ai2(e10)) return false;
        var a4 = kt2(e10);
        return a4 == x2 || "[object DOMException]" == a4 || "string" == typeof e10.message && "string" == typeof e10.name && !oi2(e10);
      }
      function Xs2(e10) {
        if (!ei2(e10)) return false;
        var a4 = kt2(e10);
        return a4 == _2 || a4 == I2 || "[object AsyncFunction]" == a4 || "[object Proxy]" == a4;
      }
      function Qs2(e10) {
        return "number" == typeof e10 && e10 == hi2(e10);
      }
      function Zs2(e10) {
        return "number" == typeof e10 && e10 > -1 && e10 % 1 == 0 && e10 <= m2;
      }
      function ei2(e10) {
        var a4 = typeof e10;
        return null != e10 && ("object" == a4 || "function" == a4);
      }
      function ai2(e10) {
        return null != e10 && "object" == typeof e10;
      }
      var ri2 = _a2 ? Qa2(_a2) : function(e10) {
        return ai2(e10) && fn2(e10) == k2;
      };
      function ti2(e10) {
        return "number" == typeof e10 || ai2(e10) && kt2(e10) == S2;
      }
      function oi2(e10) {
        if (!ai2(e10) || kt2(e10) != T2) return false;
        var a4 = Ke3(e10);
        if (null === a4) return true;
        var r3 = Me3.call(a4, "constructor") && a4.constructor;
        return "function" == typeof r3 && r3 instanceof r3 && Pe3.call(r3) == Fe3;
      }
      var ni2 = Ia2 ? Qa2(Ia2) : function(e10) {
        return ai2(e10) && kt2(e10) == j2;
      };
      var si2 = ka2 ? Qa2(ka2) : function(e10) {
        return ai2(e10) && fn2(e10) == O2;
      };
      function ii2(e10) {
        return "string" == typeof e10 || !Hs2(e10) && ai2(e10) && kt2(e10) == A2;
      }
      function di2(e10) {
        return "symbol" == typeof e10 || ai2(e10) && kt2(e10) == C2;
      }
      var ci2 = Sa2 ? Qa2(Sa2) : function(e10) {
        return ai2(e10) && Zs2(e10.length) && !!ia2[kt2(e10)];
      };
      var ui2 = Ko2(Dt2), li2 = Ko2(function(e10, a4) {
        return e10 <= a4;
      });
      function pi2(e10) {
        if (!e10) return [];
        if (Ks2(e10)) return ii2(e10) ? mr2(e10) : Oo2(e10);
        if (Xe3 && e10[Xe3]) return function(e11) {
          for (var a5, r3 = []; !(a5 = e11.next()).done; ) r3.push(a5.value);
          return r3;
        }(e10[Xe3]());
        var a4 = fn2(e10);
        return (a4 == k2 ? ir2 : a4 == O2 ? ur2 : Bi2)(e10);
      }
      function mi2(e10) {
        return e10 ? (e10 = vi2(e10)) === p2 || e10 === -1 / 0 ? 17976931348623157e292 * (e10 < 0 ? -1 : 1) : e10 == e10 ? e10 : 0 : 0 === e10 ? e10 : 0;
      }
      function hi2(e10) {
        var a4 = mi2(e10), r3 = a4 % 1;
        return a4 == a4 ? r3 ? a4 - r3 : a4 : 0;
      }
      function fi2(e10) {
        return e10 ? st2(hi2(e10), 0, f2) : 0;
      }
      function vi2(e10) {
        if ("number" == typeof e10) return e10;
        if (di2(e10)) return h2;
        if (ei2(e10)) {
          var a4 = "function" == typeof e10.valueOf ? e10.valueOf() : e10;
          e10 = ei2(a4) ? a4 + "" : a4;
        }
        if ("string" != typeof e10) return 0 === e10 ? e10 : +e10;
        e10 = Xa2(e10);
        var r3 = ve2.test(e10);
        return r3 || be2.test(e10) ? la2(e10.slice(2), r3 ? 2 : 8) : fe2.test(e10) ? h2 : +e10;
      }
      function gi2(e10) {
        return Ao2(e10, Ri2(e10));
      }
      function bi2(e10) {
        return null == e10 ? "" : co2(e10);
      }
      var wi2 = Ro2(function(e10, a4) {
        if (kn2(a4) || Ks2(a4)) Ao2(a4, Ci2(a4), e10);
        else for (var r3 in a4) Me3.call(a4, r3) && et2(e10, r3, a4[r3]);
      }), yi2 = Ro2(function(e10, a4) {
        Ao2(a4, Ri2(a4), e10);
      }), xi2 = Ro2(function(e10, a4, r3, t3) {
        Ao2(a4, Ri2(a4), e10, t3);
      }), _i2 = Ro2(function(e10, a4, r3, t3) {
        Ao2(a4, Ci2(a4), e10, t3);
      }), Ii2 = rn2(nt2);
      var ki2 = Yt2(function(e10, a4) {
        e10 = Te3(e10);
        var r3 = -1, o3 = a4.length, n3 = o3 > 2 ? a4[2] : t2;
        for (n3 && yn2(a4[0], a4[1], n3) && (o3 = 1); ++r3 < o3; ) for (var s3 = a4[r3], i3 = Ri2(s3), d3 = -1, c3 = i3.length; ++d3 < c3; ) {
          var u3 = i3[d3], l3 = e10[u3];
          (l3 === t2 || Bs2(l3, Re3[u3]) && !Me3.call(e10, u3)) && (e10[u3] = s3[u3]);
        }
        return e10;
      }), Si2 = Yt2(function(e10) {
        return e10.push(t2, Zo2), Ta2(Pi2, t2, e10);
      });
      function Ti2(e10, a4, r3) {
        var o3 = null == e10 ? t2 : _t2(e10, a4);
        return o3 === t2 ? r3 : o3;
      }
      function Ei2(e10, a4) {
        return null != e10 && vn2(e10, a4, Et2);
      }
      var ji2 = qo2(function(e10, a4, r3) {
        null != a4 && "function" != typeof a4.toString && (a4 = ze3.call(a4)), e10[a4] = r3;
      }, ed2(td2)), Oi2 = qo2(function(e10, a4, r3) {
        null != a4 && "function" != typeof a4.toString && (a4 = ze3.call(a4)), Me3.call(e10, a4) ? e10[a4].push(r3) : e10[a4] = [r3];
      }, cn2), Ai2 = Yt2(Ot2);
      function Ci2(e10) {
        return Ks2(e10) ? Yr2(e10) : Mt2(e10);
      }
      function Ri2(e10) {
        return Ks2(e10) ? Yr2(e10, true) : Lt2(e10);
      }
      var Ni2 = Ro2(function(e10, a4, r3) {
        qt2(e10, a4, r3);
      }), Pi2 = Ro2(function(e10, a4, r3, t3) {
        qt2(e10, a4, r3, t3);
      }), Mi2 = rn2(function(e10, a4) {
        var r3 = {};
        if (null == e10) return r3;
        var t3 = false;
        a4 = Pa2(a4, function(a5) {
          return a5 = wo2(a5, e10), t3 || (t3 = a5.length > 1), a5;
        }), Ao2(e10, on2(e10), r3), t3 && (r3 = it2(r3, 7, en2));
        for (var o3 = a4.length; o3--; ) lo2(r3, a4[o3]);
        return r3;
      });
      var Li2 = rn2(function(e10, a4) {
        return null == e10 ? {} : function(e11, a5) {
          return Ht2(e11, a5, function(a6, r3) {
            return Ei2(e11, r3);
          });
        }(e10, a4);
      });
      function Di2(e10, a4) {
        if (null == e10) return {};
        var r3 = Pa2(on2(e10), function(e11) {
          return [e11];
        });
        return a4 = cn2(a4), Ht2(e10, r3, function(e11, r4) {
          return a4(e11, r4[0]);
        });
      }
      var zi2 = Jo2(Ci2), Fi2 = Jo2(Ri2);
      function Bi2(e10) {
        return null == e10 ? [] : Za2(e10, Ci2(e10));
      }
      var qi2 = Lo2(function(e10, a4, r3) {
        return a4 = a4.toLowerCase(), e10 + (r3 ? $i2(a4) : a4);
      });
      function $i2(e10) {
        return Ji2(bi2(e10).toLowerCase());
      }
      function Ui2(e10) {
        return (e10 = bi2(e10)) && e10.replace(ye2, tr2).replace(ea2, "");
      }
      var Hi2 = Lo2(function(e10, a4, r3) {
        return e10 + (r3 ? "-" : "") + a4.toLowerCase();
      }), Wi2 = Lo2(function(e10, a4, r3) {
        return e10 + (r3 ? " " : "") + a4.toLowerCase();
      }), Ki2 = Mo2("toLowerCase");
      var Vi2 = Lo2(function(e10, a4, r3) {
        return e10 + (r3 ? "_" : "") + a4.toLowerCase();
      });
      var Gi2 = Lo2(function(e10, a4, r3) {
        return e10 + (r3 ? " " : "") + Ji2(a4);
      });
      var Yi2 = Lo2(function(e10, a4, r3) {
        return e10 + (r3 ? " " : "") + a4.toUpperCase();
      }), Ji2 = Mo2("toUpperCase");
      function Xi2(e10, a4, r3) {
        return e10 = bi2(e10), (a4 = r3 ? t2 : a4) === t2 ? function(e11) {
          return oa2.test(e11);
        }(e10) ? function(e11) {
          return e11.match(ra2) || [];
        }(e10) : function(e11) {
          return e11.match(ue2) || [];
        }(e10) : e10.match(a4) || [];
      }
      var Qi2 = Yt2(function(e10, a4) {
        try {
          return Ta2(e10, t2, a4);
        } catch (e11) {
          return Js2(e11) ? e11 : new Ie3(e11);
        }
      }), Zi2 = rn2(function(e10, a4) {
        return ja2(a4, function(a5) {
          a5 = Dn2(a5), ot2(e10, a5, Os2(e10[a5], e10));
        }), e10;
      });
      function ed2(e10) {
        return function() {
          return e10;
        };
      }
      var ad2 = Fo2(), rd2 = Fo2(true);
      function td2(e10) {
        return e10;
      }
      function od2(e10) {
        return Pt2("function" == typeof e10 ? e10 : it2(e10, 1));
      }
      var nd2 = Yt2(function(e10, a4) {
        return function(r3) {
          return Ot2(r3, e10, a4);
        };
      }), sd2 = Yt2(function(e10, a4) {
        return function(r3) {
          return Ot2(e10, r3, a4);
        };
      });
      function id2(e10, a4, r3) {
        var t3 = Ci2(a4), o3 = xt2(a4, t3);
        null != r3 || ei2(a4) && (o3.length || !t3.length) || (r3 = a4, a4 = e10, e10 = this, o3 = xt2(a4, Ci2(a4)));
        var n3 = !(ei2(r3) && "chain" in r3 && !r3.chain), s3 = Xs2(e10);
        return ja2(o3, function(r4) {
          var t4 = a4[r4];
          e10[r4] = t4, s3 && (e10.prototype[r4] = function() {
            var a5 = this.__chain__;
            if (n3 || a5) {
              var r5 = e10(this.__wrapped__);
              return (r5.__actions__ = Oo2(this.__actions__)).push({ func: t4, args: arguments, thisArg: e10 }), r5.__chain__ = a5, r5;
            }
            return t4.apply(e10, Ma2([this.value()], arguments));
          });
        }), e10;
      }
      function dd2() {
      }
      var cd2 = Uo2(Pa2), ud2 = Uo2(Aa2), ld2 = Uo2(za2);
      function pd2(e10) {
        return xn2(e10) ? Ka2(Dn2(e10)) : /* @__PURE__ */ function(e11) {
          return function(a4) {
            return _t2(a4, e11);
          };
        }(e10);
      }
      var md2 = Wo2(), hd2 = Wo2(true);
      function fd2() {
        return [];
      }
      function vd2() {
        return false;
      }
      var gd2 = $o2(function(e10, a4) {
        return e10 + a4;
      }, 0), bd2 = Go2("ceil"), wd2 = $o2(function(e10, a4) {
        return e10 / a4;
      }, 1), yd2 = Go2("floor");
      var xd2, _d2 = $o2(function(e10, a4) {
        return e10 * a4;
      }, 1), Id2 = Go2("round"), kd2 = $o2(function(e10, a4) {
        return e10 - a4;
      }, 0);
      return Fr2.after = function(e10, a4) {
        if ("function" != typeof a4) throw new Oe3(o2);
        return e10 = hi2(e10), function() {
          if (--e10 < 1) return a4.apply(this, arguments);
        };
      }, Fr2.ary = Es2, Fr2.assign = wi2, Fr2.assignIn = yi2, Fr2.assignInWith = xi2, Fr2.assignWith = _i2, Fr2.at = Ii2, Fr2.before = js2, Fr2.bind = Os2, Fr2.bindAll = Zi2, Fr2.bindKey = As2, Fr2.castArray = function() {
        if (!arguments.length) return [];
        var e10 = arguments[0];
        return Hs2(e10) ? e10 : [e10];
      }, Fr2.chain = ps2, Fr2.chunk = function(e10, a4, o3) {
        a4 = (o3 ? yn2(e10, a4, o3) : a4 === t2) ? 1 : gr2(hi2(a4), 0);
        var n3 = null == e10 ? 0 : e10.length;
        if (!n3 || a4 < 1) return [];
        for (var s3 = 0, i3 = 0, d3 = r2(ma3(n3 / a4)); s3 < n3; ) d3[i3++] = ro2(e10, s3, s3 += a4);
        return d3;
      }, Fr2.compact = function(e10) {
        for (var a4 = -1, r3 = null == e10 ? 0 : e10.length, t3 = 0, o3 = []; ++a4 < r3; ) {
          var n3 = e10[a4];
          n3 && (o3[t3++] = n3);
        }
        return o3;
      }, Fr2.concat = function() {
        var e10 = arguments.length;
        if (!e10) return [];
        for (var a4 = r2(e10 - 1), t3 = arguments[0], o3 = e10; o3--; ) a4[o3 - 1] = arguments[o3];
        return Ma2(Hs2(t3) ? Oo2(t3) : [t3], vt2(a4, 1));
      }, Fr2.cond = function(e10) {
        var a4 = null == e10 ? 0 : e10.length, r3 = cn2();
        return e10 = a4 ? Pa2(e10, function(e11) {
          if ("function" != typeof e11[1]) throw new Oe3(o2);
          return [r3(e11[0]), e11[1]];
        }) : [], Yt2(function(r4) {
          for (var t3 = -1; ++t3 < a4; ) {
            var o3 = e10[t3];
            if (Ta2(o3[0], this, r4)) return Ta2(o3[1], this, r4);
          }
        });
      }, Fr2.conforms = function(e10) {
        return function(e11) {
          var a4 = Ci2(e11);
          return function(r3) {
            return dt2(r3, e11, a4);
          };
        }(it2(e10, 1));
      }, Fr2.constant = ed2, Fr2.countBy = fs2, Fr2.create = function(e10, a4) {
        var r3 = Br2(e10);
        return null == a4 ? r3 : tt2(r3, a4);
      }, Fr2.curry = function e10(a4, r3, o3) {
        var n3 = Xo2(a4, 8, t2, t2, t2, t2, t2, r3 = o3 ? t2 : r3);
        return n3.placeholder = e10.placeholder, n3;
      }, Fr2.curryRight = function e10(a4, r3, o3) {
        var n3 = Xo2(a4, i2, t2, t2, t2, t2, t2, r3 = o3 ? t2 : r3);
        return n3.placeholder = e10.placeholder, n3;
      }, Fr2.debounce = Cs2, Fr2.defaults = ki2, Fr2.defaultsDeep = Si2, Fr2.defer = Rs2, Fr2.delay = Ns2, Fr2.difference = Bn2, Fr2.differenceBy = qn2, Fr2.differenceWith = $n2, Fr2.drop = function(e10, a4, r3) {
        var o3 = null == e10 ? 0 : e10.length;
        return o3 ? ro2(e10, (a4 = r3 || a4 === t2 ? 1 : hi2(a4)) < 0 ? 0 : a4, o3) : [];
      }, Fr2.dropRight = function(e10, a4, r3) {
        var o3 = null == e10 ? 0 : e10.length;
        return o3 ? ro2(e10, 0, (a4 = o3 - (a4 = r3 || a4 === t2 ? 1 : hi2(a4))) < 0 ? 0 : a4) : [];
      }, Fr2.dropRightWhile = function(e10, a4) {
        return e10 && e10.length ? mo2(e10, cn2(a4, 3), true, true) : [];
      }, Fr2.dropWhile = function(e10, a4) {
        return e10 && e10.length ? mo2(e10, cn2(a4, 3), true) : [];
      }, Fr2.fill = function(e10, a4, r3, o3) {
        var n3 = null == e10 ? 0 : e10.length;
        return n3 ? (r3 && "number" != typeof r3 && yn2(e10, a4, r3) && (r3 = 0, o3 = n3), function(e11, a5, r4, o4) {
          var n4 = e11.length;
          for ((r4 = hi2(r4)) < 0 && (r4 = -r4 > n4 ? 0 : n4 + r4), (o4 = o4 === t2 || o4 > n4 ? n4 : hi2(o4)) < 0 && (o4 += n4), o4 = r4 > o4 ? 0 : fi2(o4); r4 < o4; ) e11[r4++] = a5;
          return e11;
        }(e10, a4, r3, o3)) : [];
      }, Fr2.filter = function(e10, a4) {
        return (Hs2(e10) ? Ca2 : ft2)(e10, cn2(a4, 3));
      }, Fr2.flatMap = function(e10, a4) {
        return vt2(Is2(e10, a4), 1);
      }, Fr2.flatMapDeep = function(e10, a4) {
        return vt2(Is2(e10, a4), p2);
      }, Fr2.flatMapDepth = function(e10, a4, r3) {
        return r3 = r3 === t2 ? 1 : hi2(r3), vt2(Is2(e10, a4), r3);
      }, Fr2.flatten = Wn2, Fr2.flattenDeep = function(e10) {
        return (null == e10 ? 0 : e10.length) ? vt2(e10, p2) : [];
      }, Fr2.flattenDepth = function(e10, a4) {
        return (null == e10 ? 0 : e10.length) ? vt2(e10, a4 = a4 === t2 ? 1 : hi2(a4)) : [];
      }, Fr2.flip = function(e10) {
        return Xo2(e10, 512);
      }, Fr2.flow = ad2, Fr2.flowRight = rd2, Fr2.fromPairs = function(e10) {
        for (var a4 = -1, r3 = null == e10 ? 0 : e10.length, t3 = {}; ++a4 < r3; ) {
          var o3 = e10[a4];
          t3[o3[0]] = o3[1];
        }
        return t3;
      }, Fr2.functions = function(e10) {
        return null == e10 ? [] : xt2(e10, Ci2(e10));
      }, Fr2.functionsIn = function(e10) {
        return null == e10 ? [] : xt2(e10, Ri2(e10));
      }, Fr2.groupBy = ys2, Fr2.initial = function(e10) {
        return (null == e10 ? 0 : e10.length) ? ro2(e10, 0, -1) : [];
      }, Fr2.intersection = Vn2, Fr2.intersectionBy = Gn2, Fr2.intersectionWith = Yn2, Fr2.invert = ji2, Fr2.invertBy = Oi2, Fr2.invokeMap = xs2, Fr2.iteratee = od2, Fr2.keyBy = _s2, Fr2.keys = Ci2, Fr2.keysIn = Ri2, Fr2.map = Is2, Fr2.mapKeys = function(e10, a4) {
        var r3 = {};
        return a4 = cn2(a4, 3), wt2(e10, function(e11, t3, o3) {
          ot2(r3, a4(e11, t3, o3), e11);
        }), r3;
      }, Fr2.mapValues = function(e10, a4) {
        var r3 = {};
        return a4 = cn2(a4, 3), wt2(e10, function(e11, t3, o3) {
          ot2(r3, t3, a4(e11, t3, o3));
        }), r3;
      }, Fr2.matches = function(e10) {
        return Ft2(it2(e10, 1));
      }, Fr2.matchesProperty = function(e10, a4) {
        return Bt2(e10, it2(a4, 1));
      }, Fr2.memoize = Ps2, Fr2.merge = Ni2, Fr2.mergeWith = Pi2, Fr2.method = nd2, Fr2.methodOf = sd2, Fr2.mixin = id2, Fr2.negate = Ms2, Fr2.nthArg = function(e10) {
        return e10 = hi2(e10), Yt2(function(a4) {
          return $t2(a4, e10);
        });
      }, Fr2.omit = Mi2, Fr2.omitBy = function(e10, a4) {
        return Di2(e10, Ms2(cn2(a4)));
      }, Fr2.once = function(e10) {
        return js2(2, e10);
      }, Fr2.orderBy = function(e10, a4, r3, o3) {
        return null == e10 ? [] : (Hs2(a4) || (a4 = null == a4 ? [] : [a4]), Hs2(r3 = o3 ? t2 : r3) || (r3 = null == r3 ? [] : [r3]), Ut2(e10, a4, r3));
      }, Fr2.over = cd2, Fr2.overArgs = Ls2, Fr2.overEvery = ud2, Fr2.overSome = ld2, Fr2.partial = Ds2, Fr2.partialRight = zs2, Fr2.partition = ks2, Fr2.pick = Li2, Fr2.pickBy = Di2, Fr2.property = pd2, Fr2.propertyOf = function(e10) {
        return function(a4) {
          return null == e10 ? t2 : _t2(e10, a4);
        };
      }, Fr2.pull = Xn2, Fr2.pullAll = Qn2, Fr2.pullAllBy = function(e10, a4, r3) {
        return e10 && e10.length && a4 && a4.length ? Wt2(e10, a4, cn2(r3, 2)) : e10;
      }, Fr2.pullAllWith = function(e10, a4, r3) {
        return e10 && e10.length && a4 && a4.length ? Wt2(e10, a4, t2, r3) : e10;
      }, Fr2.pullAt = Zn2, Fr2.range = md2, Fr2.rangeRight = hd2, Fr2.rearg = Fs2, Fr2.reject = function(e10, a4) {
        return (Hs2(e10) ? Ca2 : ft2)(e10, Ms2(cn2(a4, 3)));
      }, Fr2.remove = function(e10, a4) {
        var r3 = [];
        if (!e10 || !e10.length) return r3;
        var t3 = -1, o3 = [], n3 = e10.length;
        for (a4 = cn2(a4, 3); ++t3 < n3; ) {
          var s3 = e10[t3];
          a4(s3, t3, e10) && (r3.push(s3), o3.push(t3));
        }
        return Kt2(e10, o3), r3;
      }, Fr2.rest = function(e10, a4) {
        if ("function" != typeof e10) throw new Oe3(o2);
        return Yt2(e10, a4 = a4 === t2 ? a4 : hi2(a4));
      }, Fr2.reverse = es2, Fr2.sampleSize = function(e10, a4, r3) {
        return a4 = (r3 ? yn2(e10, a4, r3) : a4 === t2) ? 1 : hi2(a4), (Hs2(e10) ? Xr2 : Xt2)(e10, a4);
      }, Fr2.set = function(e10, a4, r3) {
        return null == e10 ? e10 : Qt2(e10, a4, r3);
      }, Fr2.setWith = function(e10, a4, r3, o3) {
        return o3 = "function" == typeof o3 ? o3 : t2, null == e10 ? e10 : Qt2(e10, a4, r3, o3);
      }, Fr2.shuffle = function(e10) {
        return (Hs2(e10) ? Qr2 : ao2)(e10);
      }, Fr2.slice = function(e10, a4, r3) {
        var o3 = null == e10 ? 0 : e10.length;
        return o3 ? (r3 && "number" != typeof r3 && yn2(e10, a4, r3) ? (a4 = 0, r3 = o3) : (a4 = null == a4 ? 0 : hi2(a4), r3 = r3 === t2 ? o3 : hi2(r3)), ro2(e10, a4, r3)) : [];
      }, Fr2.sortBy = Ss2, Fr2.sortedUniq = function(e10) {
        return e10 && e10.length ? so2(e10) : [];
      }, Fr2.sortedUniqBy = function(e10, a4) {
        return e10 && e10.length ? so2(e10, cn2(a4, 2)) : [];
      }, Fr2.split = function(e10, a4, r3) {
        return r3 && "number" != typeof r3 && yn2(e10, a4, r3) && (a4 = r3 = t2), (r3 = r3 === t2 ? f2 : r3 >>> 0) ? (e10 = bi2(e10)) && ("string" == typeof a4 || null != a4 && !ni2(a4)) && !(a4 = co2(a4)) && sr2(e10) ? xo2(mr2(e10), 0, r3) : e10.split(a4, r3) : [];
      }, Fr2.spread = function(e10, a4) {
        if ("function" != typeof e10) throw new Oe3(o2);
        return a4 = null == a4 ? 0 : gr2(hi2(a4), 0), Yt2(function(r3) {
          var t3 = r3[a4], o3 = xo2(r3, 0, a4);
          return t3 && Ma2(o3, t3), Ta2(e10, this, o3);
        });
      }, Fr2.tail = function(e10) {
        var a4 = null == e10 ? 0 : e10.length;
        return a4 ? ro2(e10, 1, a4) : [];
      }, Fr2.take = function(e10, a4, r3) {
        return e10 && e10.length ? ro2(e10, 0, (a4 = r3 || a4 === t2 ? 1 : hi2(a4)) < 0 ? 0 : a4) : [];
      }, Fr2.takeRight = function(e10, a4, r3) {
        var o3 = null == e10 ? 0 : e10.length;
        return o3 ? ro2(e10, (a4 = o3 - (a4 = r3 || a4 === t2 ? 1 : hi2(a4))) < 0 ? 0 : a4, o3) : [];
      }, Fr2.takeRightWhile = function(e10, a4) {
        return e10 && e10.length ? mo2(e10, cn2(a4, 3), false, true) : [];
      }, Fr2.takeWhile = function(e10, a4) {
        return e10 && e10.length ? mo2(e10, cn2(a4, 3)) : [];
      }, Fr2.tap = function(e10, a4) {
        return a4(e10), e10;
      }, Fr2.throttle = function(e10, a4, r3) {
        var t3 = true, n3 = true;
        if ("function" != typeof e10) throw new Oe3(o2);
        return ei2(r3) && (t3 = "leading" in r3 ? !!r3.leading : t3, n3 = "trailing" in r3 ? !!r3.trailing : n3), Cs2(e10, a4, { leading: t3, maxWait: a4, trailing: n3 });
      }, Fr2.thru = ms2, Fr2.toArray = pi2, Fr2.toPairs = zi2, Fr2.toPairsIn = Fi2, Fr2.toPath = function(e10) {
        return Hs2(e10) ? Pa2(e10, Dn2) : di2(e10) ? [e10] : Oo2(Ln2(bi2(e10)));
      }, Fr2.toPlainObject = gi2, Fr2.transform = function(e10, a4, r3) {
        var t3 = Hs2(e10), o3 = t3 || Gs2(e10) || ci2(e10);
        if (a4 = cn2(a4, 4), null == r3) {
          var n3 = e10 && e10.constructor;
          r3 = o3 ? t3 ? new n3() : [] : ei2(e10) && Xs2(n3) ? Br2(Ke3(e10)) : {};
        }
        return (o3 ? ja2 : wt2)(e10, function(e11, t4, o4) {
          return a4(r3, e11, t4, o4);
        }), r3;
      }, Fr2.unary = function(e10) {
        return Es2(e10, 1);
      }, Fr2.union = as2, Fr2.unionBy = rs2, Fr2.unionWith = ts2, Fr2.uniq = function(e10) {
        return e10 && e10.length ? uo2(e10) : [];
      }, Fr2.uniqBy = function(e10, a4) {
        return e10 && e10.length ? uo2(e10, cn2(a4, 2)) : [];
      }, Fr2.uniqWith = function(e10, a4) {
        return a4 = "function" == typeof a4 ? a4 : t2, e10 && e10.length ? uo2(e10, t2, a4) : [];
      }, Fr2.unset = function(e10, a4) {
        return null == e10 || lo2(e10, a4);
      }, Fr2.unzip = os2, Fr2.unzipWith = ns2, Fr2.update = function(e10, a4, r3) {
        return null == e10 ? e10 : po2(e10, a4, bo2(r3));
      }, Fr2.updateWith = function(e10, a4, r3, o3) {
        return o3 = "function" == typeof o3 ? o3 : t2, null == e10 ? e10 : po2(e10, a4, bo2(r3), o3);
      }, Fr2.values = Bi2, Fr2.valuesIn = function(e10) {
        return null == e10 ? [] : Za2(e10, Ri2(e10));
      }, Fr2.without = ss2, Fr2.words = Xi2, Fr2.wrap = function(e10, a4) {
        return Ds2(bo2(a4), e10);
      }, Fr2.xor = is2, Fr2.xorBy = ds2, Fr2.xorWith = cs2, Fr2.zip = us2, Fr2.zipObject = function(e10, a4) {
        return vo2(e10 || [], a4 || [], et2);
      }, Fr2.zipObjectDeep = function(e10, a4) {
        return vo2(e10 || [], a4 || [], Qt2);
      }, Fr2.zipWith = ls2, Fr2.entries = zi2, Fr2.entriesIn = Fi2, Fr2.extend = yi2, Fr2.extendWith = xi2, id2(Fr2, Fr2), Fr2.add = gd2, Fr2.attempt = Qi2, Fr2.camelCase = qi2, Fr2.capitalize = $i2, Fr2.ceil = bd2, Fr2.clamp = function(e10, a4, r3) {
        return r3 === t2 && (r3 = a4, a4 = t2), r3 !== t2 && (r3 = (r3 = vi2(r3)) == r3 ? r3 : 0), a4 !== t2 && (a4 = (a4 = vi2(a4)) == a4 ? a4 : 0), st2(vi2(e10), a4, r3);
      }, Fr2.clone = function(e10) {
        return it2(e10, 4);
      }, Fr2.cloneDeep = function(e10) {
        return it2(e10, 5);
      }, Fr2.cloneDeepWith = function(e10, a4) {
        return it2(e10, 5, a4 = "function" == typeof a4 ? a4 : t2);
      }, Fr2.cloneWith = function(e10, a4) {
        return it2(e10, 4, a4 = "function" == typeof a4 ? a4 : t2);
      }, Fr2.conformsTo = function(e10, a4) {
        return null == a4 || dt2(e10, a4, Ci2(a4));
      }, Fr2.deburr = Ui2, Fr2.defaultTo = function(e10, a4) {
        return null == e10 || e10 != e10 ? a4 : e10;
      }, Fr2.divide = wd2, Fr2.endsWith = function(e10, a4, r3) {
        e10 = bi2(e10), a4 = co2(a4);
        var o3 = e10.length, n3 = r3 = r3 === t2 ? o3 : st2(hi2(r3), 0, o3);
        return (r3 -= a4.length) >= 0 && e10.slice(r3, n3) == a4;
      }, Fr2.eq = Bs2, Fr2.escape = function(e10) {
        return (e10 = bi2(e10)) && J2.test(e10) ? e10.replace(G2, or2) : e10;
      }, Fr2.escapeRegExp = function(e10) {
        return (e10 = bi2(e10)) && oe2.test(e10) ? e10.replace(te2, "\\$&") : e10;
      }, Fr2.every = function(e10, a4, r3) {
        var o3 = Hs2(e10) ? Aa2 : mt2;
        return r3 && yn2(e10, a4, r3) && (a4 = t2), o3(e10, cn2(a4, 3));
      }, Fr2.find = vs2, Fr2.findIndex = Un2, Fr2.findKey = function(e10, a4) {
        return Ba2(e10, cn2(a4, 3), wt2);
      }, Fr2.findLast = gs2, Fr2.findLastIndex = Hn2, Fr2.findLastKey = function(e10, a4) {
        return Ba2(e10, cn2(a4, 3), yt2);
      }, Fr2.floor = yd2, Fr2.forEach = bs2, Fr2.forEachRight = ws2, Fr2.forIn = function(e10, a4) {
        return null == e10 ? e10 : gt2(e10, cn2(a4, 3), Ri2);
      }, Fr2.forInRight = function(e10, a4) {
        return null == e10 ? e10 : bt2(e10, cn2(a4, 3), Ri2);
      }, Fr2.forOwn = function(e10, a4) {
        return e10 && wt2(e10, cn2(a4, 3));
      }, Fr2.forOwnRight = function(e10, a4) {
        return e10 && yt2(e10, cn2(a4, 3));
      }, Fr2.get = Ti2, Fr2.gt = qs2, Fr2.gte = $s2, Fr2.has = function(e10, a4) {
        return null != e10 && vn2(e10, a4, Tt2);
      }, Fr2.hasIn = Ei2, Fr2.head = Kn2, Fr2.identity = td2, Fr2.includes = function(e10, a4, r3, t3) {
        e10 = Ks2(e10) ? e10 : Bi2(e10), r3 = r3 && !t3 ? hi2(r3) : 0;
        var o3 = e10.length;
        return r3 < 0 && (r3 = gr2(o3 + r3, 0)), ii2(e10) ? r3 <= o3 && e10.indexOf(a4, r3) > -1 : !!o3 && $a2(e10, a4, r3) > -1;
      }, Fr2.indexOf = function(e10, a4, r3) {
        var t3 = null == e10 ? 0 : e10.length;
        if (!t3) return -1;
        var o3 = null == r3 ? 0 : hi2(r3);
        return o3 < 0 && (o3 = gr2(t3 + o3, 0)), $a2(e10, a4, o3);
      }, Fr2.inRange = function(e10, a4, r3) {
        return a4 = mi2(a4), r3 === t2 ? (r3 = a4, a4 = 0) : r3 = mi2(r3), function(e11, a5, r4) {
          return e11 >= br2(a5, r4) && e11 < gr2(a5, r4);
        }(e10 = vi2(e10), a4, r3);
      }, Fr2.invoke = Ai2, Fr2.isArguments = Us2, Fr2.isArray = Hs2, Fr2.isArrayBuffer = Ws2, Fr2.isArrayLike = Ks2, Fr2.isArrayLikeObject = Vs2, Fr2.isBoolean = function(e10) {
        return true === e10 || false === e10 || ai2(e10) && kt2(e10) == w2;
      }, Fr2.isBuffer = Gs2, Fr2.isDate = Ys2, Fr2.isElement = function(e10) {
        return ai2(e10) && 1 === e10.nodeType && !oi2(e10);
      }, Fr2.isEmpty = function(e10) {
        if (null == e10) return true;
        if (Ks2(e10) && (Hs2(e10) || "string" == typeof e10 || "function" == typeof e10.splice || Gs2(e10) || ci2(e10) || Us2(e10))) return !e10.length;
        var a4 = fn2(e10);
        if (a4 == k2 || a4 == O2) return !e10.size;
        if (kn2(e10)) return !Mt2(e10).length;
        for (var r3 in e10) if (Me3.call(e10, r3)) return false;
        return true;
      }, Fr2.isEqual = function(e10, a4) {
        return Ct2(e10, a4);
      }, Fr2.isEqualWith = function(e10, a4, r3) {
        var o3 = (r3 = "function" == typeof r3 ? r3 : t2) ? r3(e10, a4) : t2;
        return o3 === t2 ? Ct2(e10, a4, t2, r3) : !!o3;
      }, Fr2.isError = Js2, Fr2.isFinite = function(e10) {
        return "number" == typeof e10 && wa3(e10);
      }, Fr2.isFunction = Xs2, Fr2.isInteger = Qs2, Fr2.isLength = Zs2, Fr2.isMap = ri2, Fr2.isMatch = function(e10, a4) {
        return e10 === a4 || Rt2(e10, a4, ln2(a4));
      }, Fr2.isMatchWith = function(e10, a4, r3) {
        return r3 = "function" == typeof r3 ? r3 : t2, Rt2(e10, a4, ln2(a4), r3);
      }, Fr2.isNaN = function(e10) {
        return ti2(e10) && e10 != +e10;
      }, Fr2.isNative = function(e10) {
        if (In2(e10)) throw new Ie3("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");
        return Nt2(e10);
      }, Fr2.isNil = function(e10) {
        return null == e10;
      }, Fr2.isNull = function(e10) {
        return null === e10;
      }, Fr2.isNumber = ti2, Fr2.isObject = ei2, Fr2.isObjectLike = ai2, Fr2.isPlainObject = oi2, Fr2.isRegExp = ni2, Fr2.isSafeInteger = function(e10) {
        return Qs2(e10) && e10 >= -9007199254740991 && e10 <= m2;
      }, Fr2.isSet = si2, Fr2.isString = ii2, Fr2.isSymbol = di2, Fr2.isTypedArray = ci2, Fr2.isUndefined = function(e10) {
        return e10 === t2;
      }, Fr2.isWeakMap = function(e10) {
        return ai2(e10) && fn2(e10) == R2;
      }, Fr2.isWeakSet = function(e10) {
        return ai2(e10) && "[object WeakSet]" == kt2(e10);
      }, Fr2.join = function(e10, a4) {
        return null == e10 ? "" : Fa3.call(e10, a4);
      }, Fr2.kebabCase = Hi2, Fr2.last = Jn2, Fr2.lastIndexOf = function(e10, a4, r3) {
        var o3 = null == e10 ? 0 : e10.length;
        if (!o3) return -1;
        var n3 = o3;
        return r3 !== t2 && (n3 = (n3 = hi2(r3)) < 0 ? gr2(o3 + n3, 0) : br2(n3, o3 - 1)), a4 == a4 ? function(e11, a5, r4) {
          for (var t3 = r4 + 1; t3--; ) if (e11[t3] === a5) return t3;
          return t3;
        }(e10, a4, n3) : qa2(e10, Ha2, n3, true);
      }, Fr2.lowerCase = Wi2, Fr2.lowerFirst = Ki2, Fr2.lt = ui2, Fr2.lte = li2, Fr2.max = function(e10) {
        return e10 && e10.length ? ht2(e10, td2, St2) : t2;
      }, Fr2.maxBy = function(e10, a4) {
        return e10 && e10.length ? ht2(e10, cn2(a4, 2), St2) : t2;
      }, Fr2.mean = function(e10) {
        return Wa2(e10, td2);
      }, Fr2.meanBy = function(e10, a4) {
        return Wa2(e10, cn2(a4, 2));
      }, Fr2.min = function(e10) {
        return e10 && e10.length ? ht2(e10, td2, Dt2) : t2;
      }, Fr2.minBy = function(e10, a4) {
        return e10 && e10.length ? ht2(e10, cn2(a4, 2), Dt2) : t2;
      }, Fr2.stubArray = fd2, Fr2.stubFalse = vd2, Fr2.stubObject = function() {
        return {};
      }, Fr2.stubString = function() {
        return "";
      }, Fr2.stubTrue = function() {
        return true;
      }, Fr2.multiply = _d2, Fr2.nth = function(e10, a4) {
        return e10 && e10.length ? $t2(e10, hi2(a4)) : t2;
      }, Fr2.noConflict = function() {
        return ha2._ === this && (ha2._ = Be3), this;
      }, Fr2.noop = dd2, Fr2.now = Ts2, Fr2.pad = function(e10, a4, r3) {
        e10 = bi2(e10);
        var t3 = (a4 = hi2(a4)) ? pr2(e10) : 0;
        if (!a4 || t3 >= a4) return e10;
        var o3 = (a4 - t3) / 2;
        return Ho2(fa3(o3), r3) + e10 + Ho2(ma3(o3), r3);
      }, Fr2.padEnd = function(e10, a4, r3) {
        e10 = bi2(e10);
        var t3 = (a4 = hi2(a4)) ? pr2(e10) : 0;
        return a4 && t3 < a4 ? e10 + Ho2(a4 - t3, r3) : e10;
      }, Fr2.padStart = function(e10, a4, r3) {
        e10 = bi2(e10);
        var t3 = (a4 = hi2(a4)) ? pr2(e10) : 0;
        return a4 && t3 < a4 ? Ho2(a4 - t3, r3) + e10 : e10;
      }, Fr2.parseInt = function(e10, a4, r3) {
        return r3 || null == a4 ? a4 = 0 : a4 && (a4 = +a4), yr2(bi2(e10).replace(ne2, ""), a4 || 0);
      }, Fr2.random = function(e10, a4, r3) {
        if (r3 && "boolean" != typeof r3 && yn2(e10, a4, r3) && (a4 = r3 = t2), r3 === t2 && ("boolean" == typeof a4 ? (r3 = a4, a4 = t2) : "boolean" == typeof e10 && (r3 = e10, e10 = t2)), e10 === t2 && a4 === t2 ? (e10 = 0, a4 = 1) : (e10 = mi2(e10), a4 === t2 ? (a4 = e10, e10 = 0) : a4 = mi2(a4)), e10 > a4) {
          var o3 = e10;
          e10 = a4, a4 = o3;
        }
        if (r3 || e10 % 1 || a4 % 1) {
          var n3 = xr2();
          return br2(e10 + n3 * (a4 - e10 + ua2("1e-" + ((n3 + "").length - 1))), a4);
        }
        return Vt2(e10, a4);
      }, Fr2.reduce = function(e10, a4, r3) {
        var t3 = Hs2(e10) ? La2 : Ga2, o3 = arguments.length < 3;
        return t3(e10, cn2(a4, 4), r3, o3, lt2);
      }, Fr2.reduceRight = function(e10, a4, r3) {
        var t3 = Hs2(e10) ? Da2 : Ga2, o3 = arguments.length < 3;
        return t3(e10, cn2(a4, 4), r3, o3, pt2);
      }, Fr2.repeat = function(e10, a4, r3) {
        return a4 = (r3 ? yn2(e10, a4, r3) : a4 === t2) ? 1 : hi2(a4), Gt2(bi2(e10), a4);
      }, Fr2.replace = function() {
        var e10 = arguments, a4 = bi2(e10[0]);
        return e10.length < 3 ? a4 : a4.replace(e10[1], e10[2]);
      }, Fr2.result = function(e10, a4, r3) {
        var o3 = -1, n3 = (a4 = wo2(a4, e10)).length;
        for (n3 || (n3 = 1, e10 = t2); ++o3 < n3; ) {
          var s3 = null == e10 ? t2 : e10[Dn2(a4[o3])];
          s3 === t2 && (o3 = n3, s3 = r3), e10 = Xs2(s3) ? s3.call(e10) : s3;
        }
        return e10;
      }, Fr2.round = Id2, Fr2.runInContext = e9, Fr2.sample = function(e10) {
        return (Hs2(e10) ? Jr2 : Jt2)(e10);
      }, Fr2.size = function(e10) {
        if (null == e10) return 0;
        if (Ks2(e10)) return ii2(e10) ? pr2(e10) : e10.length;
        var a4 = fn2(e10);
        return a4 == k2 || a4 == O2 ? e10.size : Mt2(e10).length;
      }, Fr2.snakeCase = Vi2, Fr2.some = function(e10, a4, r3) {
        var o3 = Hs2(e10) ? za2 : to2;
        return r3 && yn2(e10, a4, r3) && (a4 = t2), o3(e10, cn2(a4, 3));
      }, Fr2.sortedIndex = function(e10, a4) {
        return oo2(e10, a4);
      }, Fr2.sortedIndexBy = function(e10, a4, r3) {
        return no2(e10, a4, cn2(r3, 2));
      }, Fr2.sortedIndexOf = function(e10, a4) {
        var r3 = null == e10 ? 0 : e10.length;
        if (r3) {
          var t3 = oo2(e10, a4);
          if (t3 < r3 && Bs2(e10[t3], a4)) return t3;
        }
        return -1;
      }, Fr2.sortedLastIndex = function(e10, a4) {
        return oo2(e10, a4, true);
      }, Fr2.sortedLastIndexBy = function(e10, a4, r3) {
        return no2(e10, a4, cn2(r3, 2), true);
      }, Fr2.sortedLastIndexOf = function(e10, a4) {
        if (null == e10 ? 0 : e10.length) {
          var r3 = oo2(e10, a4, true) - 1;
          if (Bs2(e10[r3], a4)) return r3;
        }
        return -1;
      }, Fr2.startCase = Gi2, Fr2.startsWith = function(e10, a4, r3) {
        return e10 = bi2(e10), r3 = null == r3 ? 0 : st2(hi2(r3), 0, e10.length), a4 = co2(a4), e10.slice(r3, r3 + a4.length) == a4;
      }, Fr2.subtract = kd2, Fr2.sum = function(e10) {
        return e10 && e10.length ? Ya2(e10, td2) : 0;
      }, Fr2.sumBy = function(e10, a4) {
        return e10 && e10.length ? Ya2(e10, cn2(a4, 2)) : 0;
      }, Fr2.template = function(e10, a4, r3) {
        var o3 = Fr2.templateSettings;
        r3 && yn2(e10, a4, r3) && (a4 = t2), e10 = bi2(e10), a4 = xi2({}, a4, o3, Qo2);
        var n3, s3, i3 = xi2({}, a4.imports, o3.imports, Qo2), d3 = Ci2(i3), c3 = Za2(i3, d3), u3 = 0, l3 = a4.interpolate || xe2, p3 = "__p += '", m3 = Ee3((a4.escape || xe2).source + "|" + l3.source + "|" + (l3 === Z2 ? me2 : xe2).source + "|" + (a4.evaluate || xe2).source + "|$", "g"), h3 = "//# sourceURL=" + (Me3.call(a4, "sourceURL") ? (a4.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++sa2 + "]") + "\n";
        e10.replace(m3, function(a5, r4, t3, o4, i4, d4) {
          return t3 || (t3 = o4), p3 += e10.slice(u3, d4).replace(_e2, nr2), r4 && (n3 = true, p3 += "' +\n__e(" + r4 + ") +\n'"), i4 && (s3 = true, p3 += "';\n" + i4 + ";\n__p += '"), t3 && (p3 += "' +\n((__t = (" + t3 + ")) == null ? '' : __t) +\n'"), u3 = d4 + a5.length, a5;
        }), p3 += "';\n";
        var f3 = Me3.call(a4, "variable") && a4.variable;
        if (f3) {
          if (le2.test(f3)) throw new Ie3("Invalid `variable` option passed into `_.template`");
        } else p3 = "with (obj) {\n" + p3 + "\n}\n";
        p3 = (s3 ? p3.replace(H2, "") : p3).replace(W2, "$1").replace(K2, "$1;"), p3 = "function(" + (f3 || "obj") + ") {\n" + (f3 ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (n3 ? ", __e = _.escape" : "") + (s3 ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + p3 + "return __p\n}";
        var v3 = Qi2(function() {
          return ke3(d3, h3 + "return " + p3).apply(t2, c3);
        });
        if (v3.source = p3, Js2(v3)) throw v3;
        return v3;
      }, Fr2.times = function(e10, a4) {
        if ((e10 = hi2(e10)) < 1 || e10 > m2) return [];
        var r3 = f2, t3 = br2(e10, f2);
        a4 = cn2(a4), e10 -= f2;
        for (var o3 = Ja2(t3, a4); ++r3 < e10; ) a4(r3);
        return o3;
      }, Fr2.toFinite = mi2, Fr2.toInteger = hi2, Fr2.toLength = fi2, Fr2.toLower = function(e10) {
        return bi2(e10).toLowerCase();
      }, Fr2.toNumber = vi2, Fr2.toSafeInteger = function(e10) {
        return e10 ? st2(hi2(e10), -9007199254740991, m2) : 0 === e10 ? e10 : 0;
      }, Fr2.toString = bi2, Fr2.toUpper = function(e10) {
        return bi2(e10).toUpperCase();
      }, Fr2.trim = function(e10, a4, r3) {
        if ((e10 = bi2(e10)) && (r3 || a4 === t2)) return Xa2(e10);
        if (!e10 || !(a4 = co2(a4))) return e10;
        var o3 = mr2(e10), n3 = mr2(a4);
        return xo2(o3, ar2(o3, n3), rr2(o3, n3) + 1).join("");
      }, Fr2.trimEnd = function(e10, a4, r3) {
        if ((e10 = bi2(e10)) && (r3 || a4 === t2)) return e10.slice(0, hr2(e10) + 1);
        if (!e10 || !(a4 = co2(a4))) return e10;
        var o3 = mr2(e10);
        return xo2(o3, 0, rr2(o3, mr2(a4)) + 1).join("");
      }, Fr2.trimStart = function(e10, a4, r3) {
        if ((e10 = bi2(e10)) && (r3 || a4 === t2)) return e10.replace(ne2, "");
        if (!e10 || !(a4 = co2(a4))) return e10;
        var o3 = mr2(e10);
        return xo2(o3, ar2(o3, mr2(a4))).join("");
      }, Fr2.truncate = function(e10, a4) {
        var r3 = 30, o3 = "...";
        if (ei2(a4)) {
          var n3 = "separator" in a4 ? a4.separator : n3;
          r3 = "length" in a4 ? hi2(a4.length) : r3, o3 = "omission" in a4 ? co2(a4.omission) : o3;
        }
        var s3 = (e10 = bi2(e10)).length;
        if (sr2(e10)) {
          var i3 = mr2(e10);
          s3 = i3.length;
        }
        if (r3 >= s3) return e10;
        var d3 = r3 - pr2(o3);
        if (d3 < 1) return o3;
        var c3 = i3 ? xo2(i3, 0, d3).join("") : e10.slice(0, d3);
        if (n3 === t2) return c3 + o3;
        if (i3 && (d3 += c3.length - d3), ni2(n3)) {
          if (e10.slice(d3).search(n3)) {
            var u3, l3 = c3;
            for (n3.global || (n3 = Ee3(n3.source, bi2(he2.exec(n3)) + "g")), n3.lastIndex = 0; u3 = n3.exec(l3); ) var p3 = u3.index;
            c3 = c3.slice(0, p3 === t2 ? d3 : p3);
          }
        } else if (e10.indexOf(co2(n3), d3) != d3) {
          var m3 = c3.lastIndexOf(n3);
          m3 > -1 && (c3 = c3.slice(0, m3));
        }
        return c3 + o3;
      }, Fr2.unescape = function(e10) {
        return (e10 = bi2(e10)) && Y2.test(e10) ? e10.replace(V2, fr2) : e10;
      }, Fr2.uniqueId = function(e10) {
        var a4 = ++Le3;
        return bi2(e10) + a4;
      }, Fr2.upperCase = Yi2, Fr2.upperFirst = Ji2, Fr2.each = bs2, Fr2.eachRight = ws2, Fr2.first = Kn2, id2(Fr2, (xd2 = {}, wt2(Fr2, function(e10, a4) {
        Me3.call(Fr2.prototype, a4) || (xd2[a4] = e10);
      }), xd2), { chain: false }), Fr2.VERSION = "4.17.21", ja2(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(e10) {
        Fr2[e10].placeholder = Fr2;
      }), ja2(["drop", "take"], function(e10, a4) {
        Ur2.prototype[e10] = function(r3) {
          r3 = r3 === t2 ? 1 : gr2(hi2(r3), 0);
          var o3 = this.__filtered__ && !a4 ? new Ur2(this) : this.clone();
          return o3.__filtered__ ? o3.__takeCount__ = br2(r3, o3.__takeCount__) : o3.__views__.push({ size: br2(r3, f2), type: e10 + (o3.__dir__ < 0 ? "Right" : "") }), o3;
        }, Ur2.prototype[e10 + "Right"] = function(a5) {
          return this.reverse()[e10](a5).reverse();
        };
      }), ja2(["filter", "map", "takeWhile"], function(e10, a4) {
        var r3 = a4 + 1, t3 = 1 == r3 || 3 == r3;
        Ur2.prototype[e10] = function(e11) {
          var a5 = this.clone();
          return a5.__iteratees__.push({ iteratee: cn2(e11, 3), type: r3 }), a5.__filtered__ = a5.__filtered__ || t3, a5;
        };
      }), ja2(["head", "last"], function(e10, a4) {
        var r3 = "take" + (a4 ? "Right" : "");
        Ur2.prototype[e10] = function() {
          return this[r3](1).value()[0];
        };
      }), ja2(["initial", "tail"], function(e10, a4) {
        var r3 = "drop" + (a4 ? "" : "Right");
        Ur2.prototype[e10] = function() {
          return this.__filtered__ ? new Ur2(this) : this[r3](1);
        };
      }), Ur2.prototype.compact = function() {
        return this.filter(td2);
      }, Ur2.prototype.find = function(e10) {
        return this.filter(e10).head();
      }, Ur2.prototype.findLast = function(e10) {
        return this.reverse().find(e10);
      }, Ur2.prototype.invokeMap = Yt2(function(e10, a4) {
        return "function" == typeof e10 ? new Ur2(this) : this.map(function(r3) {
          return Ot2(r3, e10, a4);
        });
      }), Ur2.prototype.reject = function(e10) {
        return this.filter(Ms2(cn2(e10)));
      }, Ur2.prototype.slice = function(e10, a4) {
        e10 = hi2(e10);
        var r3 = this;
        return r3.__filtered__ && (e10 > 0 || a4 < 0) ? new Ur2(r3) : (e10 < 0 ? r3 = r3.takeRight(-e10) : e10 && (r3 = r3.drop(e10)), a4 !== t2 && (r3 = (a4 = hi2(a4)) < 0 ? r3.dropRight(-a4) : r3.take(a4 - e10)), r3);
      }, Ur2.prototype.takeRightWhile = function(e10) {
        return this.reverse().takeWhile(e10).reverse();
      }, Ur2.prototype.toArray = function() {
        return this.take(f2);
      }, wt2(Ur2.prototype, function(e10, a4) {
        var r3 = /^(?:filter|find|map|reject)|While$/.test(a4), o3 = /^(?:head|last)$/.test(a4), n3 = Fr2[o3 ? "take" + ("last" == a4 ? "Right" : "") : a4], s3 = o3 || /^find/.test(a4);
        n3 && (Fr2.prototype[a4] = function() {
          var a5 = this.__wrapped__, i3 = o3 ? [1] : arguments, d3 = a5 instanceof Ur2, c3 = i3[0], u3 = d3 || Hs2(a5), l3 = function(e11) {
            var a6 = n3.apply(Fr2, Ma2([e11], i3));
            return o3 && p3 ? a6[0] : a6;
          };
          u3 && r3 && "function" == typeof c3 && 1 != c3.length && (d3 = u3 = false);
          var p3 = this.__chain__, m3 = !!this.__actions__.length, h3 = s3 && !p3, f3 = d3 && !m3;
          if (!s3 && u3) {
            a5 = f3 ? a5 : new Ur2(this);
            var v3 = e10.apply(a5, i3);
            return v3.__actions__.push({ func: ms2, args: [l3], thisArg: t2 }), new $r2(v3, p3);
          }
          return h3 && f3 ? e10.apply(this, i3) : (v3 = this.thru(l3), h3 ? o3 ? v3.value()[0] : v3.value() : v3);
        });
      }), ja2(["pop", "push", "shift", "sort", "splice", "unshift"], function(e10) {
        var a4 = Ae3[e10], r3 = /^(?:push|sort|unshift)$/.test(e10) ? "tap" : "thru", t3 = /^(?:pop|shift)$/.test(e10);
        Fr2.prototype[e10] = function() {
          var e11 = arguments;
          if (t3 && !this.__chain__) {
            var o3 = this.value();
            return a4.apply(Hs2(o3) ? o3 : [], e11);
          }
          return this[r3](function(r4) {
            return a4.apply(Hs2(r4) ? r4 : [], e11);
          });
        };
      }), wt2(Ur2.prototype, function(e10, a4) {
        var r3 = Fr2[a4];
        if (r3) {
          var t3 = r3.name + "";
          Me3.call(Ar2, t3) || (Ar2[t3] = []), Ar2[t3].push({ name: a4, func: r3 });
        }
      }), Ar2[Bo2(t2, 2).name] = [{ name: "wrapper", func: t2 }], Ur2.prototype.clone = function() {
        var e10 = new Ur2(this.__wrapped__);
        return e10.__actions__ = Oo2(this.__actions__), e10.__dir__ = this.__dir__, e10.__filtered__ = this.__filtered__, e10.__iteratees__ = Oo2(this.__iteratees__), e10.__takeCount__ = this.__takeCount__, e10.__views__ = Oo2(this.__views__), e10;
      }, Ur2.prototype.reverse = function() {
        if (this.__filtered__) {
          var e10 = new Ur2(this);
          e10.__dir__ = -1, e10.__filtered__ = true;
        } else (e10 = this.clone()).__dir__ *= -1;
        return e10;
      }, Ur2.prototype.value = function() {
        var e10 = this.__wrapped__.value(), a4 = this.__dir__, r3 = Hs2(e10), t3 = a4 < 0, o3 = r3 ? e10.length : 0, n3 = function(e11, a5, r4) {
          var t4 = -1, o4 = r4.length;
          for (; ++t4 < o4; ) {
            var n4 = r4[t4], s4 = n4.size;
            switch (n4.type) {
              case "drop":
                e11 += s4;
                break;
              case "dropRight":
                a5 -= s4;
                break;
              case "take":
                a5 = br2(a5, e11 + s4);
                break;
              case "takeRight":
                e11 = gr2(e11, a5 - s4);
            }
          }
          return { start: e11, end: a5 };
        }(0, o3, this.__views__), s3 = n3.start, i3 = n3.end, d3 = i3 - s3, c3 = t3 ? i3 : s3 - 1, u3 = this.__iteratees__, l3 = u3.length, p3 = 0, m3 = br2(d3, this.__takeCount__);
        if (!r3 || !t3 && o3 == d3 && m3 == d3) return ho2(e10, this.__actions__);
        var h3 = [];
        e: for (; d3-- && p3 < m3; ) {
          for (var f3 = -1, v3 = e10[c3 += a4]; ++f3 < l3; ) {
            var g3 = u3[f3], b3 = g3.iteratee, w3 = g3.type, y3 = b3(v3);
            if (2 == w3) v3 = y3;
            else if (!y3) {
              if (1 == w3) continue e;
              break e;
            }
          }
          h3[p3++] = v3;
        }
        return h3;
      }, Fr2.prototype.at = hs2, Fr2.prototype.chain = function() {
        return ps2(this);
      }, Fr2.prototype.commit = function() {
        return new $r2(this.value(), this.__chain__);
      }, Fr2.prototype.next = function() {
        this.__values__ === t2 && (this.__values__ = pi2(this.value()));
        var e10 = this.__index__ >= this.__values__.length;
        return { done: e10, value: e10 ? t2 : this.__values__[this.__index__++] };
      }, Fr2.prototype.plant = function(e10) {
        for (var a4, r3 = this; r3 instanceof qr2; ) {
          var o3 = Fn2(r3);
          o3.__index__ = 0, o3.__values__ = t2, a4 ? n3.__wrapped__ = o3 : a4 = o3;
          var n3 = o3;
          r3 = r3.__wrapped__;
        }
        return n3.__wrapped__ = e10, a4;
      }, Fr2.prototype.reverse = function() {
        var e10 = this.__wrapped__;
        if (e10 instanceof Ur2) {
          var a4 = e10;
          return this.__actions__.length && (a4 = new Ur2(this)), (a4 = a4.reverse()).__actions__.push({ func: ms2, args: [es2], thisArg: t2 }), new $r2(a4, this.__chain__);
        }
        return this.thru(es2);
      }, Fr2.prototype.toJSON = Fr2.prototype.valueOf = Fr2.prototype.value = function() {
        return ho2(this.__wrapped__, this.__actions__);
      }, Fr2.prototype.first = Fr2.prototype.head, Xe3 && (Fr2.prototype[Xe3] = function() {
        return this;
      }), Fr2;
    }();
    va2 ? ((va2.exports = vr2)._ = vr2, fa2._ = vr2) : ha2._ = vr2;
  }).call(r);
}(Om, Om.exports);
var Am = Om.exports;
var Cm = {};
var Rm = function(e8, a2, r2, t2, o2) {
  var n2, s2;
  if (void 0 === t2) t2 = 0;
  else if ((t2 |= 0) < 0 || t2 >= e8.length) throw new RangeError("invalid lower bound");
  if (void 0 === o2) o2 = e8.length - 1;
  else if ((o2 |= 0) < t2 || o2 >= e8.length) throw new RangeError("invalid upper bound");
  for (; t2 <= o2; ) if ((s2 = +r2(e8[n2 = t2 + (o2 - t2 >>> 1)], a2, n2, e8)) < 0) t2 = n2 + 1;
  else {
    if (!(s2 > 0)) return n2;
    o2 = n2 - 1;
  }
  return ~t2;
};
!function(e8) {
  var a2 = r && r.__importDefault || function(e9) {
    return e9 && e9.__esModule ? e9 : { default: e9 };
  };
  Object.defineProperty(e8, "__esModule", { value: true }), e8.findClosest = e8.normal = e8.fisherInformation = e8.itemResponseFunction = void 0;
  const t2 = a2(Rm);
  e8.itemResponseFunction = (e9, a3) => a3.c + (a3.d - a3.c) / (1 + Math.exp(-a3.a * (e9 - a3.b)));
  e8.fisherInformation = (a3, r2) => {
    const t3 = (0, e8.itemResponseFunction)(a3, r2), o2 = 1 - t3;
    return Math.pow(r2.a, 2) * (o2 / t3) * (Math.pow(t3 - r2.c, 2) / Math.pow(1 - r2.c, 2));
  };
  e8.normal = (e9 = 0, a3 = 1, r2 = -4, t3 = 4, o2 = 0.1) => {
    const n2 = [];
    for (let i2 = r2; i2 <= t3; i2 += o2) n2.push([i2, (s2 = i2, 1 / (Math.sqrt(2 * Math.PI) * a3) * Math.exp(-Math.pow(s2 - e9, 2) / (2 * Math.pow(a3, 2))))]);
    var s2;
    return n2;
  };
  e8.findClosest = (e9, a3) => {
    if (a3 <= e9[0].difficulty) return 0;
    if (a3 >= e9[e9.length - 1].difficulty) return e9.length - 1;
    const r2 = (0, t2.default)(e9, a3, (e10, a4) => e10.difficulty - a4);
    if (r2 >= 0) return r2;
    {
      const t3 = -2 - r2, o2 = -1 - r2;
      return Math.abs(e9[t3].difficulty - a3) < Math.abs(e9[o2].difficulty - a3) ? t3 : o2;
    }
  };
}(Cm);
var Nm = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this, r3 = /* @__PURE__ */ function() {
      var e10 = 4022871197, a4 = function(a5) {
        a5 = String(a5);
        for (var r4 = 0; r4 < a5.length; r4++) {
          var t3 = 0.02519603282416938 * (e10 += a5.charCodeAt(r4));
          t3 -= e10 = t3 >>> 0, e10 = (t3 *= e10) >>> 0, e10 += 4294967296 * (t3 -= e10);
        }
        return 23283064365386963e-26 * (e10 >>> 0);
      };
      return a4;
    }();
    a3.next = function() {
      var e10 = 2091639 * a3.s0 + 23283064365386963e-26 * a3.c;
      return a3.s0 = a3.s1, a3.s1 = a3.s2, a3.s2 = e10 - (a3.c = 0 | e10);
    }, a3.c = 1, a3.s0 = r3(" "), a3.s1 = r3(" "), a3.s2 = r3(" "), a3.s0 -= r3(e9), a3.s0 < 0 && (a3.s0 += 1), a3.s1 -= r3(e9), a3.s1 < 0 && (a3.s1 += 1), a3.s2 -= r3(e9), a3.s2 < 0 && (a3.s2 += 1), r3 = null;
  }
  function o2(e9, a3) {
    return a3.c = e9.c, a3.s0 = e9.s0, a3.s1 = e9.s1, a3.s2 = e9.s2, a3;
  }
  function n2(e9, a3) {
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = r3.next;
    return s2.int32 = function() {
      return 4294967296 * r3.next() | 0;
    }, s2.double = function() {
      return s2() + 11102230246251565e-32 * (2097152 * s2() | 0);
    }, s2.quick = s2, n3 && ("object" == typeof n3 && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.alea = n2;
}(0, Nm, false);
var Pm = Nm.exports;
var Mm = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this, r3 = "";
    a3.x = 0, a3.y = 0, a3.z = 0, a3.w = 0, a3.next = function() {
      var e10 = a3.x ^ a3.x << 11;
      return a3.x = a3.y, a3.y = a3.z, a3.z = a3.w, a3.w ^= a3.w >>> 19 ^ e10 ^ e10 >>> 8;
    }, e9 === (0 | e9) ? a3.x = e9 : r3 += e9;
    for (var t3 = 0; t3 < r3.length + 64; t3++) a3.x ^= 0 | r3.charCodeAt(t3), a3.next();
  }
  function o2(e9, a3) {
    return a3.x = e9.x, a3.y = e9.y, a3.z = e9.z, a3.w = e9.w, a3;
  }
  function n2(e9, a3) {
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && ("object" == typeof n3 && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.xor128 = n2;
}(0, Mm, false);
var Lm = Mm.exports;
var Dm = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this, r3 = "";
    a3.next = function() {
      var e10 = a3.x ^ a3.x >>> 2;
      return a3.x = a3.y, a3.y = a3.z, a3.z = a3.w, a3.w = a3.v, (a3.d = a3.d + 362437 | 0) + (a3.v = a3.v ^ a3.v << 4 ^ e10 ^ e10 << 1) | 0;
    }, a3.x = 0, a3.y = 0, a3.z = 0, a3.w = 0, a3.v = 0, e9 === (0 | e9) ? a3.x = e9 : r3 += e9;
    for (var t3 = 0; t3 < r3.length + 64; t3++) a3.x ^= 0 | r3.charCodeAt(t3), t3 == r3.length && (a3.d = a3.x << 10 ^ a3.x >>> 4), a3.next();
  }
  function o2(e9, a3) {
    return a3.x = e9.x, a3.y = e9.y, a3.z = e9.z, a3.w = e9.w, a3.v = e9.v, a3.d = e9.d, a3;
  }
  function n2(e9, a3) {
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && ("object" == typeof n3 && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.xorwow = n2;
}(0, Dm, false);
var zm = Dm.exports;
var Fm = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this;
    a3.next = function() {
      var e10, r3, t3 = a3.x, o3 = a3.i;
      return e10 = t3[o3], r3 = (e10 ^= e10 >>> 7) ^ e10 << 24, r3 ^= (e10 = t3[o3 + 1 & 7]) ^ e10 >>> 10, r3 ^= (e10 = t3[o3 + 3 & 7]) ^ e10 >>> 3, r3 ^= (e10 = t3[o3 + 4 & 7]) ^ e10 << 7, e10 = t3[o3 + 7 & 7], r3 ^= (e10 ^= e10 << 13) ^ e10 << 9, t3[o3] = r3, a3.i = o3 + 1 & 7, r3;
    }, function(e10, a4) {
      var r3, t3 = [];
      if (a4 === (0 | a4)) t3[0] = a4;
      else for (a4 = "" + a4, r3 = 0; r3 < a4.length; ++r3) t3[7 & r3] = t3[7 & r3] << 15 ^ a4.charCodeAt(r3) + t3[r3 + 1 & 7] << 13;
      for (; t3.length < 8; ) t3.push(0);
      for (r3 = 0; r3 < 8 && 0 === t3[r3]; ++r3) ;
      for (8 == r3 ? t3[7] = -1 : t3[r3], e10.x = t3, e10.i = 0, r3 = 256; r3 > 0; --r3) e10.next();
    }(a3, e9);
  }
  function o2(e9, a3) {
    return a3.x = e9.x.slice(), a3.i = e9.i, a3;
  }
  function n2(e9, a3) {
    null == e9 && (e9 = +/* @__PURE__ */ new Date());
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && (n3.x && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.xorshift7 = n2;
}(0, Fm, false);
var Bm = Fm.exports;
var qm = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this;
    a3.next = function() {
      var e10, r3, t3 = a3.w, o3 = a3.X, n3 = a3.i;
      return a3.w = t3 = t3 + 1640531527 | 0, r3 = o3[n3 + 34 & 127], e10 = o3[n3 = n3 + 1 & 127], r3 ^= r3 << 13, e10 ^= e10 << 17, r3 ^= r3 >>> 15, e10 ^= e10 >>> 12, r3 = o3[n3] = r3 ^ e10, a3.i = n3, r3 + (t3 ^ t3 >>> 16) | 0;
    }, function(e10, a4) {
      var r3, t3, o3, n3, s2, i2 = [], d2 = 128;
      for (a4 === (0 | a4) ? (t3 = a4, a4 = null) : (a4 += "\0", t3 = 0, d2 = Math.max(d2, a4.length)), o3 = 0, n3 = -32; n3 < d2; ++n3) a4 && (t3 ^= a4.charCodeAt((n3 + 32) % a4.length)), 0 === n3 && (s2 = t3), t3 ^= t3 << 10, t3 ^= t3 >>> 15, t3 ^= t3 << 4, t3 ^= t3 >>> 13, n3 >= 0 && (s2 = s2 + 1640531527 | 0, o3 = 0 == (r3 = i2[127 & n3] ^= t3 + s2) ? o3 + 1 : 0);
      for (o3 >= 128 && (i2[127 & (a4 && a4.length || 0)] = -1), o3 = 127, n3 = 512; n3 > 0; --n3) t3 = i2[o3 + 34 & 127], r3 = i2[o3 = o3 + 1 & 127], t3 ^= t3 << 13, r3 ^= r3 << 17, t3 ^= t3 >>> 15, r3 ^= r3 >>> 12, i2[o3] = t3 ^ r3;
      e10.w = s2, e10.X = i2, e10.i = o3;
    }(a3, e9);
  }
  function o2(e9, a3) {
    return a3.i = e9.i, a3.w = e9.w, a3.X = e9.X.slice(), a3;
  }
  function n2(e9, a3) {
    null == e9 && (e9 = +/* @__PURE__ */ new Date());
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && (n3.X && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.xor4096 = n2;
}(0, qm, false);
var $m = qm.exports;
var Um = { exports: {} };
!function(e8, a2, r2) {
  function t2(e9) {
    var a3 = this, r3 = "";
    a3.next = function() {
      var e10 = a3.b, r4 = a3.c, t4 = a3.d, o3 = a3.a;
      return e10 = e10 << 25 ^ e10 >>> 7 ^ r4, r4 = r4 - t4 | 0, t4 = t4 << 24 ^ t4 >>> 8 ^ o3, o3 = o3 - e10 | 0, a3.b = e10 = e10 << 20 ^ e10 >>> 12 ^ r4, a3.c = r4 = r4 - t4 | 0, a3.d = t4 << 16 ^ r4 >>> 16 ^ o3, a3.a = o3 - e10 | 0;
    }, a3.a = 0, a3.b = 0, a3.c = -1640531527, a3.d = 1367130551, e9 === Math.floor(e9) ? (a3.a = e9 / 4294967296 | 0, a3.b = 0 | e9) : r3 += e9;
    for (var t3 = 0; t3 < r3.length + 20; t3++) a3.b ^= 0 | r3.charCodeAt(t3), a3.next();
  }
  function o2(e9, a3) {
    return a3.a = e9.a, a3.b = e9.b, a3.c = e9.c, a3.d = e9.d, a3;
  }
  function n2(e9, a3) {
    var r3 = new t2(e9), n3 = a3 && a3.state, s2 = function() {
      return (r3.next() >>> 0) / 4294967296;
    };
    return s2.double = function() {
      do {
        var e10 = ((r3.next() >>> 11) + (r3.next() >>> 0) / 4294967296) / (1 << 21);
      } while (0 === e10);
      return e10;
    }, s2.int32 = r3.next, s2.quick = s2, n3 && ("object" == typeof n3 && o2(n3, r3), s2.state = function() {
      return o2(r3, {});
    }), s2;
  }
  a2 && a2.exports ? a2.exports = n2 : r2 && r2.amd ? r2(function() {
    return n2;
  }) : this.tychei = n2;
}(0, Um, false);
var Hm = Um.exports;
var Wm = { exports: {} };
!function(e8) {
  !function(a2, r2, t2) {
    var o2, n2 = 256, s2 = "random", i2 = t2.pow(n2, 6), d2 = t2.pow(2, 52), c2 = 2 * d2, u2 = 255;
    function l2(e9, u3, l3) {
      var g2 = [], b2 = f2(h2((u3 = 1 == u3 ? { entropy: true } : u3 || {}).entropy ? [e9, v2(r2)] : null == e9 ? function() {
        try {
          var e10;
          return o2 && (e10 = o2.randomBytes) ? e10 = e10(n2) : (e10 = new Uint8Array(n2), (a2.crypto || a2.msCrypto).getRandomValues(e10)), v2(e10);
        } catch (e11) {
          var t3 = a2.navigator, s3 = t3 && t3.plugins;
          return [+/* @__PURE__ */ new Date(), a2, s3, a2.screen, v2(r2)];
        }
      }() : e9, 3), g2), w2 = new p2(g2), y2 = function() {
        for (var e10 = w2.g(6), a3 = i2, r3 = 0; e10 < d2; ) e10 = (e10 + r3) * n2, a3 *= n2, r3 = w2.g(1);
        for (; e10 >= c2; ) e10 /= 2, a3 /= 2, r3 >>>= 1;
        return (e10 + r3) / a3;
      };
      return y2.int32 = function() {
        return 0 | w2.g(4);
      }, y2.quick = function() {
        return w2.g(4) / 4294967296;
      }, y2.double = y2, f2(v2(w2.S), r2), (u3.pass || l3 || function(e10, a3, r3, o3) {
        return o3 && (o3.S && m2(o3, w2), e10.state = function() {
          return m2(w2, {});
        }), r3 ? (t2[s2] = e10, a3) : e10;
      })(y2, b2, "global" in u3 ? u3.global : this == t2, u3.state);
    }
    function p2(e9) {
      var a3, r3 = e9.length, t3 = this, o3 = 0, s3 = t3.i = t3.j = 0, i3 = t3.S = [];
      for (r3 || (e9 = [r3++]); o3 < n2; ) i3[o3] = o3++;
      for (o3 = 0; o3 < n2; o3++) i3[o3] = i3[s3 = u2 & s3 + e9[o3 % r3] + (a3 = i3[o3])], i3[s3] = a3;
      (t3.g = function(e10) {
        for (var a4, r4 = 0, o4 = t3.i, s4 = t3.j, i4 = t3.S; e10--; ) a4 = i4[o4 = u2 & o4 + 1], r4 = r4 * n2 + i4[u2 & (i4[o4] = i4[s4 = u2 & s4 + a4]) + (i4[s4] = a4)];
        return t3.i = o4, t3.j = s4, r4;
      })(n2);
    }
    function m2(e9, a3) {
      return a3.i = e9.i, a3.j = e9.j, a3.S = e9.S.slice(), a3;
    }
    function h2(e9, a3) {
      var r3, t3 = [], o3 = typeof e9;
      if (a3 && "object" == o3) for (r3 in e9) try {
        t3.push(h2(e9[r3], a3 - 1));
      } catch (e10) {
      }
      return t3.length ? t3 : "string" == o3 ? e9 : e9 + "\0";
    }
    function f2(e9, a3) {
      for (var r3, t3 = e9 + "", o3 = 0; o3 < t3.length; ) a3[u2 & o3] = u2 & (r3 ^= 19 * a3[u2 & o3]) + t3.charCodeAt(o3++);
      return v2(a3);
    }
    function v2(e9) {
      return String.fromCharCode.apply(0, e9);
    }
    if (f2(t2.random(), r2), e8.exports) {
      e8.exports = l2;
      try {
        o2 = require_crypto_browserify();
      } catch (e9) {
      }
    } else t2["seed" + s2] = l2;
  }("undefined" != typeof self ? self : r, [], Math);
}(Wm);
var Km = Pm;
var Vm = Lm;
var Gm = zm;
var Ym = Bm;
var Jm = $m;
var Xm = Hm;
var Qm = Wm.exports;
Qm.alea = Km, Qm.xor128 = Vm, Qm.xorwow = Gm, Qm.xorshift7 = Ym, Qm.xor4096 = Jm, Qm.tychei = Xm;
var Zm = Qm;
!function(e8) {
  var a2 = r && r.__importDefault || function(e9) {
    return e9 && e9.__esModule ? e9 : { default: e9 };
  };
  Object.defineProperty(e8, "__esModule", { value: true }), e8.Cat = e8.abilityPrior = void 0;
  const t2 = jm, o2 = Am, n2 = Cm, s2 = a2(Zm);
  e8.abilityPrior = (0, n2.normal)();
  class i2 {
    constructor({ method: a3 = "MLE", itemSelect: r2 = "MFI", nStartItems: t3 = 0, startSelect: o3 = "middle", theta: n3 = 0, minTheta: d2 = -6, maxTheta: c2 = 6, prior: u2 = e8.abilityPrior, randomSeed: l2 = null } = {}) {
      this.method = i2.validateMethod(a3), this.itemSelect = i2.validateItemSelect(r2), this.startSelect = i2.validateStartSelect(o3), this.minTheta = d2, this.maxTheta = c2, this.prior = u2, this._zetas = [], this._resps = [], this._theta = n3, this._nItems = 0, this._seMeasurement = Number.MAX_VALUE, this.nStartItems = t3, this._rng = null === l2 ? (0, s2.default)() : (0, s2.default)(l2);
    }
    get theta() {
      return this._theta;
    }
    get seMeasurement() {
      return this._seMeasurement;
    }
    get nItems() {
      return this._resps.length;
    }
    get resps() {
      return this._resps;
    }
    get zetas() {
      return this._zetas;
    }
    static validateMethod(e9) {
      const a3 = e9.toLowerCase();
      if (!["mle", "eap"].includes(a3)) throw new Error("The abilityEstimator you provided is not in the list of valid methods");
      return a3;
    }
    static validateItemSelect(e9) {
      const a3 = e9.toLowerCase();
      if (!["mfi", "random", "closest"].includes(a3)) throw new Error("The itemSelector you provided is not in the list of valid methods");
      return a3;
    }
    static validateStartSelect(e9) {
      const a3 = e9.toLowerCase();
      if (!["random", "middle"].includes(a3)) throw new Error("The startSelect you provided is not in the list of valid methods");
      return a3;
    }
    updateAbilityEstimate(e9, a3, r2 = this.method) {
      if (r2 = i2.validateMethod(r2), e9 = Array.isArray(e9) ? e9 : [e9], a3 = Array.isArray(a3) ? a3 : [a3], e9.length !== a3.length) throw new Error("Unmatched length between answers and item params");
      this._zetas.push(...e9), this._resps.push(...a3), "eap" === r2 ? this._theta = this.estimateAbilityEAP() : "mle" === r2 && (this._theta = this.estimateAbilityMLE()), this.calculateSE();
    }
    estimateAbilityEAP() {
      let e9 = 0, a3 = 0;
      return this.prior.forEach(([r2, t3]) => {
        const o3 = this.likelihood(r2);
        e9 += r2 * o3 * t3, a3 += o3 * t3;
      }), e9 / a3;
    }
    estimateAbilityMLE() {
      let e9 = (0, t2.minimize_Powell)(this.negLikelihood.bind(this), [0]).argument[0];
      return e9 > this.maxTheta ? e9 = this.maxTheta : e9 < this.minTheta && (e9 = this.minTheta), e9;
    }
    negLikelihood(e9) {
      return -this.likelihood(e9[0]);
    }
    likelihood(e9) {
      return this._zetas.reduce((a3, r2, t3) => {
        const o3 = (0, n2.itemResponseFunction)(e9, r2);
        return 1 === this._resps[t3] ? a3 + Math.log(o3) : a3 + Math.log(1 - o3);
      }, 1);
    }
    calculateSE() {
      const e9 = this._zetas.reduce((e10, a3) => e10 + (0, n2.fisherInformation)(this._theta, a3), 0);
      this._seMeasurement = 1 / Math.sqrt(e9);
    }
    findNextItem(e9, a3 = this.itemSelect, r2 = true) {
      let t3, n3 = i2.validateItemSelect(a3);
      return t3 = r2 ? (0, o2.cloneDeep)(e9) : e9, this.nItems < this.nStartItems && (n3 = this.startSelect), "mfi" !== n3 && t3.sort((e10, a4) => e10.difficulty - a4.difficulty), "middle" === n3 ? this.selectorMiddle(t3) : "closest" === n3 ? this.selectorClosest(t3) : "random" === n3 ? this.selectorRandom(t3) : this.selectorMFI(t3);
    }
    selectorMFI(e9) {
      const a3 = e9.map((e10) => Object.assign({ fisherInformation: (0, n2.fisherInformation)(this._theta, { a: e10.a || 1, b: e10.difficulty || 0, c: e10.c || 0, d: e10.d || 1 }) }, e10));
      return a3.sort((e10, a4) => a4.fisherInformation - e10.fisherInformation), a3.forEach((e10) => {
        delete e10.fisherInformation;
      }), { nextStimulus: a3[0], remainingStimuli: a3.slice(1).sort((e10, a4) => e10.difficulty - a4.difficulty) };
    }
    selectorMiddle(e9) {
      let a3;
      a3 = e9.length < this.nStartItems ? Math.floor(e9.length / 2) : Math.floor(e9.length / 2) + this.randomInteger(-Math.floor(this.nStartItems / 2), Math.floor(this.nStartItems / 2));
      const r2 = e9[a3];
      return e9.splice(a3, 1), { nextStimulus: r2, remainingStimuli: e9 };
    }
    selectorClosest(e9) {
      const a3 = (0, n2.findClosest)(e9, this._theta + 0.481), r2 = e9[a3];
      return e9.splice(a3, 1), { nextStimulus: r2, remainingStimuli: e9 };
    }
    selectorRandom(e9) {
      const a3 = Math.floor(this._rng() * e9.length);
      return { nextStimulus: e9.splice(a3, 1)[0], remainingStimuli: e9 };
    }
    randomInteger(e9, a3) {
      return Math.floor(this._rng() * (a3 - e9 + 1)) + e9;
    }
  }
  e8.Cat = i2;
}(Tm);
var eh = { default: { languageSpecific: { device: ["coin_intro.mp3", "end_block_1.mp3", "end_block_1_ns.mp3", "end_block_2.mp3", "end_block_2_ns.mp3", "end_game.mp3", "end_game_ns.mp3", "end_block_general_ns.mp3", "feedback_1_correct.mp3", "feedback_1_correct_ns.mp3", "feedback_1_wrong.mp3", "feedback_1_wrong_ns.mp3", "feedback_2_correct.mp3", "feedback_2_correct_ns.mp3", "feedback_2_wrong.mp3", "feedback_2_wrong_ns.mp3", "feedback_3_correct.mp3", "feedback_3_correct_ns.mp3", "feedback_3_wrong.mp3", "feedback_3_wrong_ns.mp3", "feedback_4_correct.mp3", "feedback_4_correct_ns.mp3", "feedback_4_wrong.mp3", "feedback_4_wrong_ns.mp3", "feedback_5_correct.mp3", "feedback_5_correct_ns.mp3", "feedback_5_wrong.mp3", "feedback_5_wrong_ns.mp3", "intro_1.mp3", "intro_1_ns.mp3", "intro_2.mp3", "intro_2_ns.mp3", "intro_3.mp3", "intro_3_ns.mp3", "mid_block_1.mp3", "mid_block_1_ns.mp3", "mid_block_2.mp3", "mid_block_2_ns.mp3", "mid_block_3.mp3", "mid_block_3_ns.mp3", "post_practice_ns.mp3"], shared: ["arrow_left_p2.webp", "arrow_p3.webp", "arrow_right_p2.webp"] }, shared: ["beep.mp3", "break.webp", "coin.mp3", "countdown0.mp3", "countdown1.mp3", "countdown2.mp3", "countdown3.mp3", "fail.mp3", "fairyCoin.mp3", "select.mp3", "adventurer1.webp", "adventurer2.webp", "adventurer3.webp", "animated_left_key.webp", "animated_right_key.webp", "arrow_p2.webp", "arrowkey_lex.webp", "arrowkey_lex_left.webp", "arrowkey_lex_right.webp", "coin_bag.webp", "coin_bag_old.webp", "coin_icon.webp", "ending.webp", "ending_background.webp", "ending_coinbag.webp", "ending_gate.webp", "ending_gate_coinbag.webp", "gate_close.webp", "gate_open.webp", "gold_coin.webp", "guardian1.webp", "guardian2.webp", "guardian3.webp", "half_valley.webp", "reward_anim.webp", "static_center_key.webp", "static_left_key.webp", "static_right_key.webp", "swr_laptop.webp", "valley.webp", "valley2.webp", "valley3.webp", "valley4.webp", "valley5.webp", "wizard_coin.webp", "wizard_idle.webp", "wizard_idle.webp", "wizard_magic.webp"] } };
var ah = { name: "audio-keyboard-response", parameters: { stimulus: { type: Us.AUDIO, pretty_name: "Stimulus", default: void 0 }, choices: { type: Us.KEYS, pretty_name: "Choices", default: "ALL_KEYS" }, prompt: { type: Us.HTML_STRING, pretty_name: "Prompt", default: null }, trial_duration: { type: Us.INT, pretty_name: "Trial duration", default: null }, response_ends_trial: { type: Us.BOOL, pretty_name: "Response ends trial", default: true }, trial_ends_after_audio: { type: Us.BOOL, pretty_name: "Trial ends after audio", default: false }, response_allowed_while_playing: { type: Us.BOOL, pretty_name: "Response allowed while playing", default: true } } };
var rh = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2, r2) {
    let t2;
    var o2, n2 = this.jsPsych.pluginAPI.audioContext(), s2 = { rt: null, key: null };
    this.jsPsych.pluginAPI.getAudioBuffer(a2.stimulus).then((e9) => {
      null !== n2 ? (this.audio = n2.createBufferSource(), this.audio.buffer = e9, this.audio.connect(n2.destination)) : (this.audio = e9, this.audio.currentTime = 0), i2();
    }).catch((e9) => {
      console.error(`Failed to load audio file "${a2.stimulus}". Try checking the file path. We recommend using the preload plugin to load audio files.`), console.error(e9);
    });
    const i2 = () => {
      a2.trial_ends_after_audio && this.audio.addEventListener("ended", d2), null !== a2.prompt && (e8.innerHTML = a2.prompt), null !== n2 ? (o2 = n2.currentTime, this.audio.start(o2)) : this.audio.play(), a2.response_allowed_while_playing ? u2() : a2.trial_ends_after_audio || this.audio.addEventListener("ended", u2), null !== a2.trial_duration && this.jsPsych.pluginAPI.setTimeout(() => {
        d2();
      }, a2.trial_duration), r2();
    }, d2 = () => {
      this.jsPsych.pluginAPI.clearAllTimeouts(), null !== n2 ? this.audio.stop() : this.audio.pause(), this.audio.removeEventListener("ended", d2), this.audio.removeEventListener("ended", u2), this.jsPsych.pluginAPI.cancelAllKeyboardResponses();
      var r3 = { rt: s2.rt, stimulus: a2.stimulus, response: s2.key };
      e8.innerHTML = "", this.jsPsych.finishTrial(r3), t2();
    };
    function c2(e9) {
      null == s2.key && (s2 = e9), a2.response_ends_trial && d2();
    }
    const u2 = () => {
      null !== n2 ? this.jsPsych.pluginAPI.getKeyboardResponse({ callback_function: c2, valid_responses: a2.choices, rt_method: "audio", persist: false, allow_held_key: false, audio_context: n2, audio_context_start_time: o2 }) : this.jsPsych.pluginAPI.getKeyboardResponse({ callback_function: c2, valid_responses: a2.choices, rt_method: "performance", persist: false, allow_held_key: false });
    };
    return new Promise((e9) => {
      t2 = e9;
    });
  }
  simulate(e8, a2, r2, t2) {
    "data-only" == a2 && (t2(), this.simulate_data_only(e8, r2)), "visual" == a2 && this.simulate_visual(e8, r2, t2);
  }
  simulate_data_only(e8, a2) {
    const r2 = this.create_simulation_data(e8, a2);
    this.jsPsych.finishTrial(r2);
  }
  simulate_visual(e8, a2, r2) {
    const t2 = this.create_simulation_data(e8, a2), o2 = this.jsPsych.getDisplayElement(), n2 = () => {
      null !== t2.rt && this.jsPsych.pluginAPI.pressKey(t2.response, t2.rt);
    };
    this.trial(o2, e8, () => {
      r2(), e8.response_allowed_while_playing ? n2() : this.audio.addEventListener("ended", n2);
    });
  }
  create_simulation_data(e8, a2) {
    const r2 = { stimulus: e8.stimulus, rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true), response: this.jsPsych.pluginAPI.getValidKey(e8.choices) }, t2 = this.jsPsych.pluginAPI.mergeSimulationData(r2, a2);
    return this.jsPsych.pluginAPI.ensureSimulationDataConsistency(e8, t2), t2;
  }
};
rh.info = ah;
var th = "mobile" === Es();
var oh = (e8) => {
  let a2 = Math.random() < 0.5 ? "corpus_real" : "corpus_pseudo";
  return e8[a2].length < 1 && (a2 = "corpus_pseudo" === a2 ? "corpus_real" : "corpus_pseudo"), a2;
};
var nh = { type: rh, stimulus: () => "binary" === s.session.get("config").audioFeedback && s.session("currentTrialCorrect") ? Rh.audio.coin : "binary" !== s.session.get("config").audioFeedback || s.session("currentTrialCorrect") ? Rh.audio.select : Rh.audio.fail, choices: "NO_KEYS", trial_ends_after_audio: true, prompt: () => `
  <div id='${th ? "countdown-wrapper" : ""}'>
    ${th ? `<div id='countdown-arrows-wrapper'>
        <div class="countdown-arrows">
          <img class='btn-arrows' src=${Rh.images.staticLeftKey} alt='left arrow' />
        </div>
        <div class="countdown-arrows">
          <img class='btn-arrows' src=${Rh.images.staticRightKey} alt='right arrow' />
        </div>
      </div>` : `<img class="lower" src="${Rh.images.arrowkeyLex}" alt="arrow keys">`}
  </div>` };
var sh = { name: "audio-multi-response", parameters: { stimulus: { type: Us.HTML_STRING, pretty_name: "Stimulus", default: void 0 }, button_choices: { type: Us.STRING, pretty_name: "Button Choices", default: [], array: true }, keyboard_choices: { type: Us.KEYS, pretty_name: "Keyboard Choices", default: "NO_KEYS" }, button_html: { type: Us.HTML_STRING, pretty_name: "Button HTML", default: '<button class="jspsych-btn">%choice%</button>', array: true }, prompt: { type: Us.HTML_STRING, pretty_name: "Prompt", default: null }, prompt_above_buttons: { type: Us.BOOL, pretty_name: "Prompt above buttons", default: false }, trial_duration: { type: Us.INT, pretty_name: "Trial duration", default: null }, margin_vertical: { type: Us.STRING, pretty_name: "Margin vertical", default: "0px" }, margin_horizontal: { type: Us.STRING, pretty_name: "Margin horizontal", default: "8px" }, response_ends_trial: { type: Us.BOOL, pretty_name: "Response ends trial", default: true }, trial_ends_after_audio: { type: Us.BOOL, pretty_name: "Trial ends after audio", default: false }, response_allowed_while_playing: { type: Us.BOOL, pretty_name: "Response allowed while playing", default: true } } };
var ih = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2, r2) {
    let t2;
    var o2 = this.jsPsych.pluginAPI.audioContext();
    let n2 = { rt: null, key: null, button: null, source: null };
    var s2;
    this.jsPsych.pluginAPI.getAudioBuffer(a2.stimulus).then((e9) => {
      null !== o2 ? (this.audio = o2.createBufferSource(), this.audio.buffer = e9, this.audio.connect(o2.destination)) : (this.audio = e9, this.audio.currentTime = 0), i2();
    }).catch((e9) => {
      console.error(`Failed to load audio file "${a2.stimulus}". Try checking the file path. We recommend using the preload plugin to load audio files.`), console.error(e9);
    });
    const i2 = () => {
      a2.trial_ends_after_audio && this.audio.addEventListener("ended", d2), a2.response_allowed_while_playing || a2.trial_ends_after_audio || (this.audio.addEventListener("ended", m2), this.audio.addEventListener("ended", l2));
      var t3 = [];
      if (Array.isArray(a2.button_html)) a2.button_html.length == a2.button_choices.length ? t3 = a2.button_html : console.error("Error in audio-multi-response plugin. The length of the button_html array does not equal the length of the choices array");
      else for (var n3 = 0; n3 < a2.button_choices.length; n3++) t3.push(a2.button_html);
      let i3 = '<div id="jspsych-audio-multi-response-btngroup">';
      for (n3 = 0; n3 < a2.button_choices.length; n3++) {
        var c3 = t3[n3].replace(/%choice%/g, a2.button_choices[n3]);
        i3 += '<div class="jspsych-audio-multi-response-button" style="cursor: pointer; display: inline-block; margin:' + a2.margin_vertical + " " + a2.margin_horizontal + '" id="jspsych-audio-multi-response-button-' + n3 + '" data-choice="' + n3 + '">' + c3 + "</div>";
      }
      i3 += "</div>", null !== a2.prompt && (a2.prompt_above_buttons ? i3 = '<div id="jspsych-audio-multi-response-prompt">' + a2.prompt + "</div>" + i3 : i3 += '<div id="jspsych-audio-multi-response-prompt">' + a2.prompt + "</div>"), e8.innerHTML = i3, a2.response_allowed_while_playing ? (l2(), m2()) : u2(), s2 = performance.now(), null !== o2 ? (s2 = o2.currentTime, this.audio.start(s2)) : this.audio.play(), null !== a2.trial_duration && this.jsPsych.pluginAPI.setTimeout(() => {
        d2();
      }, a2.trial_duration), r2();
    }, d2 = () => {
      this.jsPsych.pluginAPI.clearAllTimeouts(), null !== o2 ? this.audio.stop() : this.audio.pause(), this.audio.removeEventListener("ended", d2), this.audio.removeEventListener("ended", m2), this.audio.removeEventListener("ended", l2), this.jsPsych.pluginAPI.cancelAllKeyboardResponses();
      const r3 = { rt: n2.rt, stimulus: a2.stimulus, keyboard_response: n2.key, button_response: n2.button, response_source: n2.source };
      e8.innerHTML = "", this.jsPsych.finishTrial(r3), t2();
    };
    function c2(e9) {
      !function(e10) {
        var r3 = performance.now(), t3 = Math.round(r3 - s2);
        null !== o2 && (r3 = o2.currentTime, t3 = Math.round(1e3 * (r3 - s2)));
        n2.button = parseInt(e10), n2.rt = t3, n2.source = "button", u2(), a2.response_ends_trial && d2();
      }(e9.currentTarget.getAttribute("data-choice"));
    }
    function u2() {
      for (var e9 = document.querySelectorAll(".jspsych-audio-multi-response-button"), a3 = 0; a3 < e9.length; a3++) {
        var r3 = e9[a3].querySelector("button");
        r3 && (r3.disabled = true), e9[a3].removeEventListener("click", c2);
      }
    }
    function l2() {
      for (var e9 = document.querySelectorAll(".jspsych-audio-multi-response-button"), a3 = 0; a3 < e9.length; a3++) {
        var r3 = e9[a3].querySelector("button");
        r3 && (r3.disabled = false), e9[a3].addEventListener("click", c2);
      }
    }
    const p2 = (e9) => {
      null == n2.key && (n2 = Object.assign({ source: "keyboard", button: null }, e9)), a2.response_ends_trial && d2();
    }, m2 = () => {
      if ("NO_KEYS" != a2.keyboard_choices) {
        let e9;
        e9 = null !== o2 ? { rt_method: "audio", audio_context: o2, audio_context_start_time: s2 } : { rt_method: "performance" }, this.jsPsych.pluginAPI.getKeyboardResponse(Object.assign({ callback_function: p2, valid_responses: a2.keyboard_choices, persist: false, allow_held_key: false }, e9));
      }
    };
    return new Promise((e9) => {
      t2 = e9;
    });
  }
  simulate(e8, a2, r2, t2) {
    "data-only" == a2 && (t2(), this.simulate_data_only(e8, r2)), "visual" == a2 && this.simulate_visual(e8, r2, t2);
  }
  create_simulation_data(e8, a2) {
    const r2 = { stimulus: e8.stimulus, rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true), keyboard_response: this.jsPsych.pluginAPI.getValidKey(e8.keyboard_choices), button_response: null, response_source: "keyboard" }, t2 = { stimulus: e8.stimulus, rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true), button_response: this.jsPsych.randomization.randomInt(0, e8.button_choices.length - 1), keyboard_response: null, response_source: "button" }, o2 = Math.random() < 0.5 ? r2 : t2, n2 = this.jsPsych.pluginAPI.mergeSimulationData(o2, a2);
    return this.jsPsych.pluginAPI.ensureSimulationDataConsistency(e8, n2), n2;
  }
  simulate_data_only(e8, a2) {
    const r2 = this.create_simulation_data(e8, a2);
    this.jsPsych.finishTrial(r2);
  }
  simulate_visual(e8, a2, r2) {
    const t2 = this.create_simulation_data(e8, a2), o2 = this.jsPsych.getDisplayElement(), n2 = () => {
      null !== t2.rt && (null !== t2.button_response ? this.jsPsych.pluginAPI.clickTarget(o2.querySelector(`div[data-choice="${t2.response}"] button`), t2.rt) : this.jsPsych.pluginAPI.pressKey(t2.keyboard_response, t2.rt));
    };
    this.trial(o2, e8, () => {
      r2(), e8.response_allowed_while_playing ? n2() : this.audio.addEventListener("ended", n2);
    });
  }
};
ih.info = sh;
var dh = { timeline: [...[{ stimulus: () => s.session.get("config").story ? Rh.audio.intro1 : Rh.audio.intro1Ns, prompt: () => s.session.get("config").story ? `<h1 id='lexicality-intro-header'>${nc.t("introTrials.trial1.header1")}</h1>
        <div class="row">
        <div class="column_1">
        <img class="characterleft" src="${Rh.images.wizardMagic}" alt="animation of a wizard waving a magic wand">
        </div>
        <div class="column_3">
        <p class="middle">${nc.t("introTrials.trial1.paragraph1")}</p>
        <p class="middle">${nc.t("introTrials.trial1.paragraph2")}</p>
        </div>
        </div>
        ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` : `<h1 id='lexicality-intro-header'>${nc.t("introTrials.trial1.header2")}</h1>
        <p>${nc.t("introTrials.trial1.paragraph3")}</p>
        <p>${nc.t("introTrials.trial1.paragraph4")}</p>
        <img class="charactercenter" src="${Rh.images.swrLaptop}" alt="animation of a wizard waving a magic wand">
        ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })} </div>`}` }, { stimulus: () => s.session.get("config").story ? Rh.audio.intro2 : Rh.audio.intro2Ns, prompt: () => `
    <h1>${nc.t("introTrials.trial2.header")}</h1>
    <div class="row">
      <div class="column_2_upper" style="background-color:#f2f2f2;">
        <p style = "text-align:left;">${nc.t("introTrials.trial2.paragraph1")}</p>
      </div>
      <div class="column_2_upper" style="background-color:#f2f2f2;">
        <p style = "text-align:left;">${nc.t("introTrials.trial2.paragraph2")}</p>
      </div>
    </div>
    <div class="row">
      <div class="column_2_lower" style="background-color:#f2f2f2;">
        <img width="100%" src=${Rh.images.arrowLeftP2} alt="Magic Word, Press the Left Arrow Key" align="right">
      </div>
      <div class="column_2_lower" style="background-color:#f2f2f2;">
        <img width="100%" src=${Rh.images.arrowRightP2} alt="Real Word, Press the Right Arrow key">
    </div>
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` }, { stimulus: () => s.session.get("config").story ? Rh.audio.intro3 : Rh.audio.intro3Ns, prompt: () => `
    <h1>${nc.t("introTrials.trial3.header")}</h1>
    <div>
      <img class='cues' src="${Rh.images.arrowP3}" alt="arrow keys">
      <p class="center">${nc.t("introTrials.trial3.paragraph1")}</p>
      <p>${nc.t("introTrials.trial3.paragraph2")}</p>
    </div>
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.practice")}` })}</div>`}` }].map((e8, a2) => ({ type: ih, stimulus: e8.stimulus, keyboard_choices: () => th ? "NO_KEYS" : "ALL_KEYS", button_choices: () => th ? ["HERE"] : [], button_html: () => `<button class='button'>${nc.t("navigation.continueButtonTextMobile", { action: `${th && 2 === a2 ? nc.t("terms.practice") : nc.t("terms.continue")}` })}</button>`, response_allowed_while_playing: () => s.session.get("config").skipInstructions, prompt: e8.prompt, prompt_above_buttons: true, on_start: () => {
  0 === a2 && (document.body.style.cursor = "none");
} }))] };
var ch = { type: ih, stimulus: () => s.session.get("config").story ? Rh.audio.coinIntro : Rh.audio.postPracticeNs, keyboard_choices: () => th ? "NO_KEYS" : "ALL_KEYS", button_choices: () => th ? ["HERE"] : [], button_html: () => `<button class='button'>${nc.t("navigation.continueButtonTextMobile", { action: `${nc.t("terms.begin")}` })}</button>`, response_allowed_while_playing: () => s.session.get("config").skipInstructions, prompt: () => s.session.get("config").story ? `<h1>${nc.t("introTrials.postPracticeTrial.header1")}</h1> <div>
      <p class="center">${nc.t("introTrials.postPracticeTrial.paragraph1")}</p>
      <img class = "coin" src="${Rh.images.goldCoin}" alt="gold">
      </div>
      ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.begin")}` })}</div>`}` : `<h1 id='lexicality-intro-header'>${nc.t("introTrials.postPracticeTrial.header2")}</h1>
    <p>${nc.t("introTrials.postPracticeTrial.paragraph2")}</p>
    <img class="charactercenter" src="${Rh.images.swrLaptop}" alt="animation of a wizard waving a magic wand">
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}`, prompt_above_buttons: true };
var uh = 0;
function lh(e8, a2, r2) {
  const t2 = {};
  return t2.direction = e8 ? nc.t("terms.left") : nc.t("terms.right"), "en" === nc.language || "de" === nc.language ? t2.typeWord = a2 ? nc.t("terms.real") : nc.t("terms.made-up") : t2.typeWord = 1 === r2 ? a2 ? nc.t("terms.real-plural") : nc.t("terms.made-up-plural") : a2 ? nc.t("terms.real-singular") : nc.t("terms.made-up-singular"), t2;
}
var ph = { type: ih, response_allowed_while_playing: () => s.session.get("config").skipInstructions, prompt_above_buttons: true, stimulus: () => (() => {
  const e8 = fm.data.get().last(2).values()[0];
  let a2;
  return a2 = e8.keyboard_response ? e8.keyboard_response === e8.correctResponse.toLowerCase() : "ArrowLeft" === e8.correctResponse && 0 === e8.button_response || "ArrowRight" === e8.correctResponse && 1 === e8.button_response, uh += 1, a2 ? s.session.get("config").story ? Rh.audio[`feedback${uh}Correct`] : Rh.audio[`feedback${uh}CorrectNs`] : s.session.get("config").story ? Rh.audio[`feedback${uh}Wrong`] : Rh.audio[`feedback${uh}WrongNs`];
})(), prompt: () => `
  <div class = stimulus_div>
    <p class="feedback">
      <span class=${s.session("responseColor")}>${nc.t("practiceFeedbackTrial.paragraph1", lh("left" === s.session("responseLR"), "real" === s.session("answerRP"), 1))}</span>
      <br></br>
      <span translate = "no">${fm.timelineVariable("stimulus")}</span>
      <span class=${s.session("answerColor")}>${nc.t("practiceFeedbackTrial.paragraph2", lh("left" === s.session("correctLR"), "real" === s.session("correctRP"), 2))}</span>
    </p>
  </div>
  ${th ? "" : `<img class="lower" src="${"made-up" === s.session("correctRP") ? `${Rh.images.arrowkeyLexLeft}` : `${Rh.images.arrowkeyLexRight}`}" alt="arrow keys">`}`, keyboard_choices: () => "made-up" === s.session("correctRP") ? ["ArrowLeft"] : ["ArrowRight"], button_choices: () => th ? "made-up" === s.session("correctRP") ? ["Left"] : ["Right"] : [], button_html: () => `
  <button style="background-color: transparent;">
    <img class='lower' src=${"made-up" === s.session("correctRP") ? `${Rh.images.arrowkeyLexLeft}` : `${Rh.images.arrowkeyLexRight}`} alt="Arrow choices"/>
  </button>` };
var mh = [...[{ stimulus: () => s.session.get("config").story ? Rh.audio.midBlock1 : Rh.audio.midBlock1Ns, prompt: () => s.session.get("config").story ? `
      <div>
        <h1>${nc.t("gameBreakTrials.midBlockTrials.trial1.header1")}</h1>
        <div>
          <p class="center" style="position: relative; top: 50%; margin-bottom: 1.5rem;">${nc.t("gameBreakTrials.midBlockTrials.trial1.paragraph1")}</p>
          <p class="center" style="position: relative; top: 50%;">${nc.t("gameBreakTrials.midBlockTrials.trial1.paragraph2")}</p>  
        </div>
        <div class = "story-scene">
          <img class="scene" src="${Rh.images.halfValley}" alt="background image with hills and trees">
          <img class = 'adventure_mid_break' src="${Rh.images.adventurer1}" alt="adventurer with harp">
        </div>
      </div>
      ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` : `<h1>${nc.t("gameBreakTrials.midBlockTrials.trial1.header2")}</h1>
    <p>${nc.t("gameBreakTrials.midBlockTrials.trial1.paragraph3")}</p>
    <p>${nc.t("gameBreakTrials.midBlockTrials.trial1.paragraph4")}</p>
    <img class="charactercenter" src="${Rh.images.break}" alt="animation of a wizard waving a magic wand">
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` }, { stimulus: () => s.session.get("config").story ? Rh.audio.midBlock2 : Rh.audio.midBlock2Ns, prompt: () => s.session.get("config").story ? `
        <div>
        <h1>${nc.t("gameBreakTrials.midBlockTrials.trial2.header1")}</h1>
        <div>
        <p class="center" style="position: relative; top: 50%; margin-bottom: 1.5rem;">${nc.t("gameBreakTrials.midBlockTrials.trial2.paragraph1")}</p>
        <p class="center" style="position: relative; top: 50%;">${nc.t("gameBreakTrials.midBlockTrials.trial2.paragraph2")}</p>
      </div>
      <div class="story-scene">
        <img class="scene" src="${Rh.images.valley4}" alt="background with hills and trees">
        <img class = 'adventure_mid_break' src="${Rh.images.adventurer1}" alt="adventurer with harp">
        <img class = 'adventure_mid_break' src="${Rh.images.adventurer3}" alt="adventurer with making heart shapes">
      </div>
    </div>
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` : `<h1>${nc.t("gameBreakTrials.midBlockTrials.trial2.header2")}</h1>
    <p>${nc.t("gameBreakTrials.midBlockTrials.trial2.paragraph3")}</p>
    <p>${nc.t("gameBreakTrials.midBlockTrials.trial2.paragraph4")}</p>
    <img class="charactercenter" src="${Rh.images.break}" alt="animation of a wizard waving a magic wand">
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` }, { stimulus: () => s.session.get("config").story ? Rh.audio.midBlock3 : Rh.audio.midBlock3Ns, prompt: () => s.session.get("config").story ? `<div>
      <h1>${nc.t("gameBreakTrials.midBlockTrials.trial3.header1")}</h1>
      <div>
          <p class="center" style="position: relative; top: 50%; margin-bottom: 1.5rem;">${nc.t("gameBreakTrials.midBlockTrials.trial3.paragraph1")}</p>
          <p class="center" style="position: relative; top: 50%;">${nc.t("gameBreakTrials.midBlockTrials.trial3.paragraph2")}</p>
      </div>
      <div class="story-scene">
        <img class="scene" src="${Rh.images.valley3}" alt="backgroun image with hills and trees">
        <img class = 'adventure_mid_break'  src="${Rh.images.adventurer1}" alt="adventurer with harp">
        <img class = 'adventure_mid_break'  src="${Rh.images.adventurer3}" alt="adventurer playing rainbow">
        <img class = 'adventure_mid_break'  src="${Rh.images.adventurer2}" alt="adventurer making heart shapes">
      </div>
    </div>
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` : `<h1>${nc.t("gameBreakTrials.midBlockTrials.trial3.header2")}</h1>
    <p>${nc.t("gameBreakTrials.midBlockTrials.trial3.paragraph3")}</p>
    <p>${nc.t("gameBreakTrials.midBlockTrials.trial3.paragraph4")}</p>
    <img class="charactercenter" src="${Rh.images.break}" alt="animation of a wizard waving a magic wand">
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` }].map((e8, a2) => ({ type: ih, stimulus: e8.stimulus, keyboard_choices: () => th ? "NO_KEYS" : "ALL_KEYS", button_choices: () => th ? ["HERE"] : [], button_html: () => `<button class='button'>${nc.t("navigation.continueButtonTextMobile", { action: `${nc.t("terms.continue")}` })}</button>`, response_allowed_while_playing: () => s.session.get("config").skipInstructions, prompt: e8.prompt, prompt_above_buttons: true }))];
var hh = [...[{ stimulus: () => s.session.get("config").story ? Rh.audio.endBlock1 : Rh.audio.endBlock1Ns, prompt: () => s.session.get("config").story ? `
        <div>
        <h1>${nc.t("gameBreakTrials.postBlockTrials.trial1.header1")}</h1>
        <div>
        <p class="center" style="margin-bottom: 1.5rem;">${nc.t("gameBreakTrials.postBlockTrials.trial1.paragraph1")}</p> 
        <p class="center">${nc.t("gameBreakTrials.postBlockTrials.trial1.paragraph2")}</p>
      </div>
      <div class = "story-scene">
        <img class="scene" src="${Rh.images.valley}" alt="background image of hills and trees">
        <img class='wizard' src="${Rh.images.wizardCoin}" alt="adventure playing rainbow">
        <img class="guardian" src="${Rh.images.guardian1}" alt="adventure making heart shapes">
      </div>
    </div>
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` : `<h1>${nc.t("gameBreakTrials.postBlockTrials.trial1.header2")}</h1>
    <p>${nc.t("gameBreakTrials.postBlockTrials.trial1.paragraph3")}</p>
    <p>${nc.t("gameBreakTrials.postBlockTrials.trial1.paragraph4")}</p>
    <img class="coin" src="${Rh.images.goldCoin}" alt="coin">
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })} </div>`}` }, { stimulus: () => s.session.get("config").story ? Rh.audio.endBlock2 : Rh.audio.endBlock2Ns, prompt: () => s.session.get("config").story ? `
        <div>
      <h1>${nc.t("gameBreakTrials.postBlockTrials.trial2.header1")}</h1>
      <div>
        <p class="center" style="margin-bottom: 1.5rem;">${nc.t("gameBreakTrials.postBlockTrials.trial2.paragraph1")}</p>

        <p class="center">${nc.t("gameBreakTrials.postBlockTrials.trial2.paragraph2")}</p>
      </div>
      <div class="story-scene">
        <img class="scene" src="${Rh.images.valley5}" alt="background image of hills and trees">
        <img class='wizard' src="${Rh.images.wizardCoin}" alt="adventure playing rainbow">
        <img class='guardian' src="${Rh.images.guardian2}" alt="adventure making heart shapes">
      </div>
    </div>
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` : `<h1>${nc.t("gameBreakTrials.postBlockTrials.trial2.header2")}</h1>
    <p>${nc.t("gameBreakTrials.postBlockTrials.trial2.paragraph3")}</p>
    <p>${nc.t("gameBreakTrials.postBlockTrials.trial2.paragraph4")}</p>
    <img class="coin" src="${Rh.images.goldCoin}" alt="coin">
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })} </div>`}` }, { stimulus: () => s.session.get("config").story ? Rh.audio.endBlock1 : Rh.audio.endBlockGeneralNs, prompt: () => s.session.get("config").story ? `
        <div>
       <h1>${nc.t("gameBreakTrials.postBlockTrials.trial3.header1")}</h1>
      <div>
        <p class="center" style="margin-bottom: 1.5rem;">${nc.t("gameBreakTrials.postBlockTrials.trial3.paragraph1")}</p>

        <p class="center">${nc.t("gameBreakTrials.postBlockTrials.trial3.paragraph2")}</p>
      </div>
      <div class="story-scene">
        <img class="scene" src="${Rh.images.valley5}" alt="background image of hills and trees">
        <img class='wizard' src="${Rh.images.wizardCoin}" alt="adventure playing rainbow">
        <img class='guardian' src="${Rh.images.guardian2}" alt="adventure making heart shapes">
      </div>
    </div>
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })}</div>`}` : `<h1>${nc.t("gameBreakTrials.postBlockTrials.trial3.header2")}</h1>
    <p>${nc.t("gameBreakTrials.postBlockTrials.trial3.paragraph3")}</p>
    <p>${nc.t("gameBreakTrials.postBlockTrials.trial3.paragraph4")}</p>
    <img class="coin" src="${Rh.images.goldCoin}" alt="coin">
    ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.continue")}` })} </div>`}` }].map((e8) => ({ type: ih, stimulus: e8.stimulus, keyboard_choices: () => th ? "NO_KEYS" : "ALL_KEYS", button_choices: () => th ? ["HERE"] : [], button_html: () => `<button class='button'>${nc.t("navigation.continueButtonTextMobile", { action: `${nc.t("terms.continue")}` })}</button>`, response_allowed_while_playing: () => s.session.get("config").skipInstructions, prompt: e8.prompt, prompt_above_buttons: true }))];
var fh = { type: ih, stimulus: () => s.session.get("config").story ? Rh.audio.endGame : Rh.audio.endGameNs, keyboard_choices: () => th ? "NO_KEYS" : "ALL_KEYS", button_choices: () => th ? ["HERE"] : [], button_html: () => `<button class='button'>${nc.t("navigation.continueButtonTextMobile", { action: `${nc.t("terms.save")}` })}</button>`, response_allowed_while_playing: () => s.session.get("config").skipInstructions, prompt_above_buttons: true, prompt: () => s.session.get("config").story ? `
      <div>
      <h1>${nc.t("gameBreakTrials.finalTrial.header1")}</h1>
      <div>
      <p class="center" style="margin-bottom: 1.5rem;">${nc.t("gameBreakTrials.finalTrial.paragraph1")}</p>
      <p class="center">${nc.t("gameBreakTrials.finalTrial.paragraph2")}</p>
      </div>
      <div class="story-scene">
      <img class="scene" src="${Rh.images.endingBackground}" alt="background image of gate">
      <img class='guardian' src="${Rh.images.guardian3}" alt="image of a unicorn winking">
      <img class='guardian' id = "gate" src="${Rh.images.endingGateCoinbag}" alt="gate">
    </div>
  </div>
  ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.save")}` })}</div>`}` : `<h1>${nc.t("gameBreakTrials.finalTrial.header2")}</h1>
  <p>${nc.t("gameBreakTrials.finalTrial.paragraph3")}</p>
  <p>${nc.t("gameBreakTrials.finalTrial.paragraph4")}</p>
  <img class="coin" src="${Rh.images.goldCoin}" alt="coin">
  ${th ? "" : `<div class="button">${nc.t("navigation.continueButtonText", { action: `${nc.t("terms.save")}` })}</div>`}`, on_finish: function() {
  document.body.style.cursor = "auto";
} };
var vh = { name: "html-keyboard-response", parameters: { stimulus: { type: Us.HTML_STRING, pretty_name: "Stimulus", default: void 0 }, choices: { type: Us.KEYS, pretty_name: "Choices", default: "ALL_KEYS" }, prompt: { type: Us.HTML_STRING, pretty_name: "Prompt", default: null }, stimulus_duration: { type: Us.INT, pretty_name: "Stimulus duration", default: null }, trial_duration: { type: Us.INT, pretty_name: "Trial duration", default: null }, response_ends_trial: { type: Us.BOOL, pretty_name: "Response ends trial", default: true } } };
var gh = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2) {
    var r2 = '<div id="jspsych-html-keyboard-response-stimulus">' + a2.stimulus + "</div>";
    null !== a2.prompt && (r2 += a2.prompt), e8.innerHTML = r2;
    var t2 = { rt: null, key: null };
    const o2 = () => {
      this.jsPsych.pluginAPI.clearAllTimeouts(), void 0 !== n2 && this.jsPsych.pluginAPI.cancelKeyboardResponse(n2);
      var r3 = { rt: t2.rt, stimulus: a2.stimulus, response: t2.key };
      e8.innerHTML = "", this.jsPsych.finishTrial(r3);
    };
    if ("NO_KEYS" != a2.choices) var n2 = this.jsPsych.pluginAPI.getKeyboardResponse({ callback_function: (r3) => {
      e8.querySelector("#jspsych-html-keyboard-response-stimulus").className += " responded", null == t2.key && (t2 = r3), a2.response_ends_trial && o2();
    }, valid_responses: a2.choices, rt_method: "performance", persist: false, allow_held_key: false });
    null !== a2.stimulus_duration && this.jsPsych.pluginAPI.setTimeout(() => {
      e8.querySelector("#jspsych-html-keyboard-response-stimulus").style.visibility = "hidden";
    }, a2.stimulus_duration), null !== a2.trial_duration && this.jsPsych.pluginAPI.setTimeout(o2, a2.trial_duration);
  }
  simulate(e8, a2, r2, t2) {
    "data-only" == a2 && (t2(), this.simulate_data_only(e8, r2)), "visual" == a2 && this.simulate_visual(e8, r2, t2);
  }
  create_simulation_data(e8, a2) {
    const r2 = { stimulus: e8.stimulus, rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true), response: this.jsPsych.pluginAPI.getValidKey(e8.choices) }, t2 = this.jsPsych.pluginAPI.mergeSimulationData(r2, a2);
    return this.jsPsych.pluginAPI.ensureSimulationDataConsistency(e8, t2), t2;
  }
  simulate_data_only(e8, a2) {
    const r2 = this.create_simulation_data(e8, a2);
    this.jsPsych.finishTrial(r2);
  }
  simulate_visual(e8, a2, r2) {
    const t2 = this.create_simulation_data(e8, a2), o2 = this.jsPsych.getDisplayElement();
    this.trial(o2, e8), r2(), null !== t2.rt && this.jsPsych.pluginAPI.pressKey(t2.response, t2.rt);
  }
};
gh.info = vh;
var bh = [{ onFinish: () => {
} }, { onFinish: () => (() => {
  const e8 = s.session("demoCounter");
  let a2, r2, t2;
  const o2 = s.session("currentBlockIndex"), n2 = s.session.get("config").stimulusRuleList[o2];
  if ("presentationExp" === s.session.get("config").userMode || "presentationExpShort" === s.session.get("config").userMode || "presentationExp2Conditions" === s.session.get("config").userMode) a2 = s.session("corpusExperiment"), s.session.set("itemSelect", n2), t2 = Oh.findNextItem(a2[o2], n2), s.session.set("nextStimulus", t2.nextStimulus), a2[o2] = t2.remainingStimuli, s.session.set("corpusExperiment", a2);
  else if ("shortAdaptiveEasyBlock" === s.session.get("config").userMode) {
    const e9 = 0 === o2 ? "corpusNewEasy" : "corpusAll";
    a2 = s.session.get(e9), r2 = oh(a2), s.session.set("itemSelect", n2), t2 = Oh.findNextItem(a2[r2], n2), s.session.set("nextStimulus", t2.nextStimulus), a2[r2] = t2.remainingStimuli, s.session.set(e9, a2);
  } else "shortAdaptive" === s.session.get("config").userMode || "longAdaptive" === s.session.get("config").userMode || "demo" === s.session.get("config").userMode ? e8 !== s.session.get("config").adaptive2new ? (a2 = s.session("corpusAll"), r2 = oh(a2), s.session.set("itemSelect", n2), t2 = Oh.findNextItem(a2[r2], n2), s.session.transact("demoCounter", (e9) => e9 + 1), s.session.set("nextStimulus", t2.nextStimulus), a2[r2] = t2.remainingStimuli, s.session.set("corpusAll", a2)) : (a2 = s.session("corpusNew"), r2 = oh(a2), s.session.set("itemSelect", "random"), t2 = Oh.findNextItem(a2[r2], "random"), s.session.set("demoCounter", 0), s.session.set("nextStimulus", t2.nextStimulus), a2[r2] = t2.remainingStimuli, s.session.set("corpusNew", a2)) : "fullItemBank" === s.session.get("config").userMode ? 0 === s.session.get("config").indexArray[s.session("trialNumTotal")] ? (a2 = s.session("corpusNew"), r2 = oh(a2), t2 = Oh.findNextItem(a2[r2]), s.session.set("nextStimulus", t2.nextStimulus), a2[r2] = t2.remainingStimuli, s.session.set("corpusNew", a2)) : (a2 = s.session("corpusOriginal"), r2 = oh(a2), t2 = Oh.findNextItem(a2[r2]), s.session.set("nextStimulus", t2.nextStimulus), a2[r2] = t2.remainingStimuli, s.session.set("corpusOriginal", a2)) : (a2 = s.session("corpusAll"), r2 = oh(a2), t2 = Oh.findNextItem(a2[r2]), s.session.set("nextStimulus", t2.nextStimulus), a2[r2] = t2.remainingStimuli, s.session.set("corpusAll", a2));
})() }].map((e8, a2) => ({ type: gh, stimulus: function() {
  return "<div class='stimulus_div'>\n                <p class='stimulus'>+</p>\n              </div>";
}, prompt: () => th ? `<div id='${th ? "countdown-wrapper" : ""}'>
              <div id='countdown-arrows-wrapper'>
                <div class="countdown-arrows">
                  <img class='btn-arrows' src=${Rh.images.staticLeftKey} alt='left arrow' />
                </div>
                <div class="countdown-arrows">
                  <img class='btn-arrows' src=${Rh.images.staticRightKey} alt='right arrow' />
                </div>
              </div>
           </div>` : `<img class="lower" src="${Rh.images.arrowkeyLex}" alt = "arrow-key">`, choices: "NO_KEYS", trial_duration: () => s.session.get("config").timing.fixationTime, data: { assessment_stage: "fixation" }, on_finish: e8.onFinish }));
var wh = bh[0];
var yh = bh[1];
var xh = { name: "html-multi-response", parameters: { stimulus: { type: Us.HTML_STRING, pretty_name: "Stimulus", default: void 0 }, button_choices: { type: Us.STRING, pretty_name: "Button Choices", default: [], array: true }, keyboard_choices: { type: Us.KEYS, pretty_name: "Keyboard Choices", default: "NO_KEYS" }, button_html: { type: Us.HTML_STRING, pretty_name: "Button HTML", default: '<button class="jspsych-btn">%choice%</button>', array: true }, prompt: { type: Us.HTML_STRING, pretty_name: "Prompt", default: null }, stimulus_duration: { type: Us.INT, pretty_name: "Stimulus duration", default: null }, trial_duration: { type: Us.INT, pretty_name: "Trial duration", default: null }, margin_vertical: { type: Us.STRING, pretty_name: "Margin vertical", default: "0px" }, margin_horizontal: { type: Us.STRING, pretty_name: "Margin horizontal", default: "8px" }, response_ends_trial: { type: Us.BOOL, pretty_name: "Response ends trial", default: true } } };
var _h = class {
  constructor(e8) {
    this.jsPsych = e8;
  }
  trial(e8, a2) {
    var r2 = '<div id="jspsych-html-multi-response-stimulus">' + a2.stimulus + "</div>", t2 = [];
    if (Array.isArray(a2.button_html)) a2.button_html.length == a2.button_choices.length ? t2 = a2.button_html : console.error("Error in html-multi-response plugin. The length of the button_html array does not equal the length of the button_choices array");
    else for (var o2 = 0; o2 < a2.button_choices.length; o2++) t2.push(a2.button_html);
    r2 += '<div id="jspsych-html-multi-response-btngroup">';
    for (o2 = 0; o2 < a2.button_choices.length; o2++) {
      var n2 = t2[o2].replace(/%choice%/g, a2.button_choices[o2]);
      r2 += '<div class="jspsych-html-multi-response-button" style="display: inline-block; margin:' + a2.margin_vertical + " " + a2.margin_horizontal + '" id="jspsych-html-multi-response-button-' + o2 + '" data-choice="' + o2 + '">' + n2 + "</div>";
    }
    r2 += "</div>", null !== a2.prompt && (r2 += a2.prompt), e8.innerHTML = r2;
    if ("NO_KEYS" != a2.keyboard_choices) var s2 = this.jsPsych.pluginAPI.getKeyboardResponse({ callback_function: function(r3) {
      e8.querySelector("#jspsych-html-multi-response-stimulus").className += " responded", null == d2.key && (d2 = Object.assign({ source: "keyboard", button: null }, r3)), a2.response_ends_trial && c2();
    }, valid_responses: a2.keyboard_choices, rt_method: "performance", persist: false, allow_held_key: false });
    var i2 = performance.now();
    for (o2 = 0; o2 < a2.button_choices.length; o2++) e8.querySelector("#jspsych-html-multi-response-button-" + o2).addEventListener("click", (e9) => {
      u2(e9.currentTarget.getAttribute("data-choice"));
    });
    var d2 = { rt: null, button: null, key: null, source: null };
    const c2 = () => {
      this.jsPsych.pluginAPI.clearAllTimeouts(), void 0 !== s2 && this.jsPsych.pluginAPI.cancelKeyboardResponse(s2);
      var r3 = { rt: d2.rt, stimulus: a2.stimulus, button_response: d2.button, keyboard_response: d2.key, response_source: d2.source };
      e8.innerHTML = "", this.jsPsych.finishTrial(r3);
    };
    function u2(r3) {
      var t3 = performance.now(), o3 = Math.round(t3 - i2);
      d2.button = parseInt(r3), d2.rt = o3, d2.source = "button", e8.querySelector("#jspsych-html-multi-response-stimulus").className += " responded";
      for (var n3 = document.querySelectorAll(".jspsych-html-multi-response-button button"), s3 = 0; s3 < n3.length; s3++) n3[s3].setAttribute("disabled", "disabled");
      a2.response_ends_trial && c2();
    }
    null !== a2.stimulus_duration && this.jsPsych.pluginAPI.setTimeout(() => {
      e8.querySelector("#jspsych-html-multi-response-stimulus").style.visibility = "hidden";
    }, a2.stimulus_duration), null !== a2.trial_duration && this.jsPsych.pluginAPI.setTimeout(c2, a2.trial_duration);
  }
  simulate(e8, a2, r2, t2) {
    "data-only" == a2 && (t2(), this.simulate_data_only(e8, r2)), "visual" == a2 && this.simulate_visual(e8, r2, t2);
  }
  create_simulation_data(e8, a2) {
    const r2 = { stimulus: e8.stimulus, rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true), keyboard_response: this.jsPsych.pluginAPI.getValidKey(e8.keyboard_choices), button_response: null, response_source: "keyboard" }, t2 = { stimulus: e8.stimulus, rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true), button_response: this.jsPsych.randomization.randomInt(0, e8.button_choices.length - 1), keyboard_response: null, response_source: "button" }, o2 = Math.random() < 0.5 ? r2 : t2, n2 = this.jsPsych.pluginAPI.mergeSimulationData(o2, a2);
    return this.jsPsych.pluginAPI.ensureSimulationDataConsistency(e8, n2), n2;
  }
  simulate_data_only(e8, a2) {
    const r2 = this.create_simulation_data(e8, a2);
    this.jsPsych.finishTrial(r2);
  }
  simulate_visual(e8, a2, r2) {
    const t2 = this.create_simulation_data(e8, a2), o2 = this.jsPsych.getDisplayElement();
    this.trial(o2, e8), r2(), null !== t2.rt && (null !== t2.button_response ? this.jsPsych.pluginAPI.clickTarget(o2.querySelector(`div[data-choice="${t2.button_response}"] button`), t2.rt) : this.jsPsych.pluginAPI.pressKey(t2.keyboard_response, t2.rt));
  }
};
_h.info = xh;
var Ih = [{ stimulus: () => `
    <div class='stimulus_div'>
      <p class='stimulus'><span translate="no">${fm.timelineVariable("stimulus")}</span></p>
    </div>`, stimulus_duration: () => (s.session.transact("practiceIndex", (e8) => e8 + 1), s.session("practiceIndex") > s.session.get("config").countSlowPractice ? s.session.get("config").timing.stimulusTime : s.session.get("config").timing.stimulusTimePracticeOnly), data: { save_trial: true, assessment_stage: "practice_response", word: () => {
  fm.timelineVariable("stimulus");
} }, on_finish: (e8) => {
  const a2 = fm.timelineVariable("correct_response");
  e8.keyboard_response ? e8.correct = fm.pluginAPI.compareKeys(e8.keyboard_response, a2) : "ArrowLeft" === a2 && 0 === e8.button_response || "ArrowRight" === a2 && 1 === e8.button_response ? e8.correct = true : e8.correct = false, e8.correct ? s.session.set("response", 1) : s.session.set("response", 0), s.session.set("currentTrialCorrect", e8.correct);
  const r2 = "arrowleft" === e8.keyboard_response || 0 === e8.button_response;
  s.session.set("responseLR", r2 ? "left" : "right"), s.session.set("answerRP", r2 ? "made-up" : "real"), s.session.set("responseColor", r2 ? "orange" : "blue");
  const t2 = "ArrowLeft" === fm.timelineVariable("correct_response");
  s.session.set("correctLR", t2 ? "left" : "right"), s.session.set("correctRP", t2 ? "made-up" : "real"), s.session.set("answerColor", t2 ? "orange" : "blue"), fm.data.addDataToLastTrial({ correct: s.session("response"), correctResponse: fm.timelineVariable("correct_response"), realpseudo: fm.timelineVariable("realpseudo"), block: "Practice", corpusId: "Practice", trialNumPractice: s.session("practiceIndex"), pid: s.session.get("config").pid, language: s.session.get("config").language, audioFeedback: s.session.get("config").audioFeedback }), fm.setProgressBar(0);
} }, { stimulus: () => `
    <div class='stimulus_div'>
      <p id="stimulus-word" class='stimulus'><span translate="no">
        ${s.session("nextStimulus").stimulus}
      </span></p>
    </div>`, stimulus_duration: () => {
  const e8 = s.session.get("config"), { userMode: a2 } = e8;
  let r2 = e8.timing.stimulusTime;
  return ["presentationExp", "presentationExpShort", "presentationExp2Conditions"].includes(a2) ? r2 = s.session.get("nextStimulus").presentationTime : "shortAdaptiveEasyBlock" === a2 && 0 === s.session.get("currentBlockIndex") && (r2 = null), s.session.set("presentationTime", r2), r2;
}, data: { save_trial: true, assessment_stage: "test_response" }, on_finish: (e8) => {
  const a2 = s.session("nextStimulus");
  e8.keyboard_response ? e8.correct = fm.pluginAPI.compareKeys(e8.keyboard_response, a2.correct_response) : "ArrowLeft" === a2.correct_response && 0 === e8.button_response || "ArrowRight" === a2.correct_response && 1 === e8.button_response ? e8.correct = true : e8.correct = false, s.session.set("currentTrialCorrect", e8.correct), e8.correct ? s.session.set("response", 1) : s.session.set("response", 0);
  const { a: r2, difficulty: t2, c: o2, d: n2, presentationTime: i2, corpus_src: d2 } = a2, c2 = { a: r2, b: t2, c: o2, d: n2 };
  ["presentationExp", "presentationExpShort", "presentationExp2Conditions"].includes(s.session.get("config").userMode) ? (Ch[i2].updateAbilityEstimate(c2, s.session("response")), [160, 350].includes(i2) && Oh.updateAbilityEstimate(c2, s.session("response"))) : ["corpusNew", "en-corpusNew-easy"].includes(d2) || Oh.updateAbilityEstimate(c2, s.session("response")), Ah.updateAbilityEstimate({ a: a2.a, b: a2.difficulty, c: a2.c, d: a2.d }, s.session("response")), Ph.addResponseData(e8.rt, e8.keyboard_response ? e8.keyboard_response : e8.button_response, s.session("response")), fm.data.addDataToLastTrial({ block: s.session("currentBlockIndex"), corpusId: a2.corpus_src, word: a2.stimulus, correct: s.session("response"), correctResponse: a2.correct_response, responseInput: e8.keyboard_response ? "keyboard" : "touch", realpseudo: a2.realpseudo, difficulty: a2.difficulty, thetaEstimate: Oh.theta, thetaSE: Oh.seMeasurement === 1 / 0 ? Number.MAX_VALUE : Oh.seMeasurement, thetaEstimate2: Ah.theta, thetaSE2: Ah.seMeasurement === 1 / 0 ? Number.MAX_VALUE : Ah.seMeasurement, stimulusRule: s.session("itemSelect"), trialNumTotal: s.session("trialNumTotal"), trialNumBlock: s.session("trialNumBlock"), pid: s.session.get("config").pid, language: s.session.get("config").language, audioFeedback: s.session.get("config").audioFeedback, stimulusPresentationTime: s.session("presentationTime") ? s.session("presentationTime") : "infinite" }), "presentationExp" !== s.session.get("config").userMode && "presentationExpShort" !== s.session.get("config").userMode && "presentationExp2Conditions" !== s.session.get("config").userMode || fm.data.addDataToLastTrial({ thetaEstimate3: Ch[a2.presentationTime].theta, thetaSE3: Ch[a2.presentationTime].seMeasurement === 1 / 0 ? Number.MAX_VALUE : Ch[a2.presentationTime].seMeasurement });
  const u2 = s.session.get("config"), l2 = fm.getProgressBarCompleted();
  fm.setProgressBar(l2 + 1 / u2.stimulusCountList.reduce((e9, a3) => e9 + a3, 0)), (() => {
    const e9 = s.session("trialNumBlock"), a3 = s.session("currentBlockIndex");
    e9 === km(s.session.get("config").userMode)[a3] ? s.session.set("trialNumBlock", 1) : s.session.transact("trialNumBlock", (e10) => e10 + 1), s.session.transact("trialNumTotal", (e10) => e10 + 1);
  })();
} }].map((e8) => ({ type: _h, stimulus: e8.stimulus, prompt: () => th ? "" : `<img class="lower" src="${Rh.images.arrowkeyLex}" alt = "arrow-key">`, stimulus_duration: e8.stimulus_duration, trial_duration: () => s.session.get("config").timing.trialTime, keyboard_choices: () => s.session.get("config").addNoResponse ? ["ArrowLeft", "ArrowRight", " "] : ["ArrowLeft", "ArrowRight", ""], button_choices: () => th ? ["ArrowLeft", "ArrowRight"] : [], button_html: () => {
  if (th) return [`<button class="lexicality-trial-arrows">
                    <img class='btn-arrows' src=${Rh.images.staticLeftKey} alt='left arrow' />
                    </button>`, `<button class="lexicality-trial-arrows">
                    <img class='btn-arrows' src=${Rh.images.staticRightKey} alt='right arrow' />
                    </button>`];
}, data: e8.data, on_load: () => {
  th && (document.getElementById("jspsych-html-multi-response-button-0").style.margin = "0rem 5rem 0rem 5rem", document.getElementById("jspsych-html-multi-response-button-1").style.margin = "0rem 5rem 0rem 5rem");
}, on_finish: e8.on_finish }));
var kh = Ih[0];
var Sh = Ih[1];
var Th = { timeline: [{ count: 3 }, { count: 2 }, { count: 1 }, { count: 0 }].map((e8) => ({ type: rh, stimulus: () => Rh.audio[`countdown${e8.count}`], prompt: () => `
  
    <div class='stimulus_div'>
      <p class='stimulus'>${e8.count}</p>
    </div>
    <div id='${th ? "countdown-wrapper" : ""}'>
    ${th ? `<div id='countdown-arrows-wrapper'>
          <div class="countdown-arrows">
            <img class='btn-arrows' src=${Rh.images.staticLeftKey} alt='left arrow' />
          </div>
          <div class="countdown-arrows">
            <img class='btn-arrows' src=${Rh.images.staticRightKey} alt='right arrow' />
          </div>
        </div>` : `<img class="lower" src="${Rh.images.arrowkeyLex}" alt="arrow keys">`}
  </div>`, choices: "NO_KEYS", trial_duration: 1e3, data: { assessment_stage: "countdown" } })) };
var Eh = { timeline: [{ type: rh, stimulus: () => Rh.audio.fairyCoin, prompt: () => `<div class = "stimulus_div"><img class = "coin_feedback" src="${Rh.images.coinBag}" alt="gold"></div>`, choices: "NO_KEYS", trial_duration: 2e3 }], conditional_function: () => {
  if ("presentationExp" === s.session.get("config").userMode || "presentationExpShort" === s.session.get("config").userMode || "presentationExp2Conditions" === s.session.get("config").userMode) return 1 === s.session.get("trialNumBlock");
  const e8 = s.session("coinTrackingIndex");
  return s.session("currentTrialCorrect") && e8 >= 10 ? (s.session.set("coinTrackingIndex", 0), true) : (s.session.set("coinTrackingIndex", e8 + 1), false);
} };
var jh = "https://storage.googleapis.com/roar-swr";
var Oh;
var Ah;
var Ch = {};
var Rh;
var Nh;
var Ph;
function Mh(e8, a2) {
  Rh = Hi(eh, jh, nc.language), Nh = Wi(eh, jh, nc.language).default, Nh.message = nc.t("loading"), ((e9) => {
    e9.displayElement && (fm.opts.display_element = e9.displayElement);
    const a3 = (e10, a4) => function() {
      e10.apply(e10, arguments), a4.apply(e10, arguments);
    };
    fm.opts.on_finish = a3(fm.opts.on_finish, () => {
      e9.firekit.finishRun();
    });
    const r3 = new lm();
    fm.opts.on_data_update = a3(fm.opts.on_data_update, (a4) => {
      a4.save_trial && e9.firekit.writeTrial(a4, r3.computedScoreCallback.bind(r3));
    }), window.addEventListener("error", (a4) => {
      var _a2;
      const { msg: r4, url: t3, lineNo: o3, columnNo: n3, error: s2 } = a4;
      (_a2 = e9.firekit) == null ? void 0 : _a2.writeTrial({ assessment_stage: "error", lastTrial: fm.data.getLastTrialData().trials[0], message: String(r4), source: t3 || null, lineNo: String(o3 || null), colNo: String(n3 || null), error: JSON.stringify(s2 || null), timeStamp: (/* @__PURE__ */ new Date()).toISOString() });
    }), vm(e9);
  })(a2);
  const r2 = Sm(e8);
  Oh = new Tm.Cat({ method: "MLE", minTheta: -6, maxTheta: 6, itemSelect: s.session("itemSelect") }), Ah = new Tm.Cat({ method: "MLE", minTheta: -6, maxTheta: 6, itemSelect: s.session("itemSelect") });
  const t2 = s.session.get("presentationTimeOption");
  for (let e9 = 0; e9 < t2.length; e9 += 1) {
    const a3 = new Tm.Cat({ method: "MLE", minTheta: -6, maxTheta: 6, itemSelect: s.session("itemSelect") });
    Ch[s.session.get("presentationTimeOption")[e9]] = a3;
  }
  const o2 = [Nh, ...r2, dh, Nu, Th], n2 = s.session("corpusPractice").slice(0, a2.totalTrialsPractice);
  n2.forEach((e9) => {
    const a3 = { timeline: [wh, kh, nh, ph], timeline_variables: [e9] };
    o2.push(a3);
  }), o2.push(ch), o2.push(Nu);
  const i2 = { timeline: [yh, Sh, nh, Eh] };
  ((e9, a3) => {
    const r3 = ["presentationExp", "presentationExpShort", "presentationExp2Conditions"];
    for (let n3 = 0; n3 < a3.length; n3 += 1) {
      const d3 = (t3 = a3[n3]) % 2 == 0 ? [t3 / 2, t3 / 2] : [Math.floor(t3 / 2) + 1, Math.floor(t3 / 2)], c2 = { timeline: [i2], conditional_function: () => 0 !== a3[n3] && (s.session.set("currentBlockIndex", n3), true), repetitions: d3[0] }, u2 = { timeline: [i2], conditional_function: () => 0 !== a3[n3], repetitions: d3[1] }, l2 = { timeline: [i2], conditional_function: () => 0 !== a3[n3] && (s.session.set("currentBlockIndex", n3), true), repetitions: a3[n3] };
      if (r3.includes(e9)) {
        const e10 = { timeline: [Th, l2] };
        o2.push(e10), n3 < a3.length - 1 && (o2.push(hh[2]), o2.push(Nu));
      } else if ("shortAdaptiveEasyBlock" === e9) if (0 === n3) {
        const e10 = { timeline: [Th, l2] };
        o2.push(e10), o2.push(hh[0]), o2.push(Nu);
      } else {
        const e10 = { timeline: [Th, c2, mh[n3 - 1], Nu, Th, u2] };
        o2.push(e10), n3 < a3.length - 1 && (o2.push(hh[n3 - 1]), o2.push(Nu));
      }
      else {
        const e10 = { timeline: [Th, c2, mh[n3], Nu, Th, u2] };
        o2.push(e10), n3 < a3.length - 1 && (o2.push(hh[n3]), o2.push(Nu));
      }
    }
    var t3;
  })(a2.userMode, a2.stimulusCountList), o2.push(fh, Pu);
  const d2 = Ns({ responseTimeLowThreshold: 400, minResponsesRequired: 40, includedReliabilityFlags: ["responseTimeTooFast"] });
  return Ph = new Ps({ evaluateValidity: d2, handleEngagementFlags: (e9, r3) => {
    var _a2;
    return a2.firekit.run.started ? (_a2 = a2.firekit) == null ? void 0 : _a2.updateEngagementFlags(e9, r3) : null;
  } }), { jsPsych: fm, timeline: o2 };
}
var Lh = Object.prototype.toString;
function Dh(e8) {
  switch (Lh.call(e8)) {
    case "[object Error]":
    case "[object Exception]":
    case "[object DOMException]":
      return true;
    default:
      return Gh(e8, Error);
  }
}
function zh(e8, a2) {
  return Lh.call(e8) === `[object ${a2}]`;
}
function Fh(e8) {
  return zh(e8, "ErrorEvent");
}
function Bh(e8) {
  return zh(e8, "DOMError");
}
function qh(e8) {
  return zh(e8, "String");
}
function $h(e8) {
  return "object" == typeof e8 && null !== e8 && "__sentry_template_string__" in e8 && "__sentry_template_values__" in e8;
}
function Uh(e8) {
  return null === e8 || $h(e8) || "object" != typeof e8 && "function" != typeof e8;
}
function Hh(e8) {
  return zh(e8, "Object");
}
function Wh(e8) {
  return "undefined" != typeof Event && Gh(e8, Event);
}
function Kh(e8) {
  return Boolean(e8 && e8.then && "function" == typeof e8.then);
}
function Vh(e8) {
  return "number" == typeof e8 && e8 != e8;
}
function Gh(e8, a2) {
  try {
    return e8 instanceof a2;
  } catch (e9) {
    return false;
  }
}
function Yh(e8) {
  return !("object" != typeof e8 || null === e8 || !e8.__isVue && !e8._isVue);
}
function Jh(e8, a2 = 0) {
  return "string" != typeof e8 || 0 === a2 || e8.length <= a2 ? e8 : `${e8.slice(0, a2)}...`;
}
function Xh(e8, a2) {
  let r2 = e8;
  const t2 = r2.length;
  if (t2 <= 150) return r2;
  a2 > t2 && (a2 = t2);
  let o2 = Math.max(a2 - 60, 0);
  o2 < 5 && (o2 = 0);
  let n2 = Math.min(o2 + 140, t2);
  return n2 > t2 - 5 && (n2 = t2), n2 === t2 && (o2 = Math.max(n2 - 140, 0)), r2 = r2.slice(o2, n2), o2 > 0 && (r2 = `'{snip} ${r2}`), n2 < t2 && (r2 += " {snip}"), r2;
}
function Qh(e8, a2) {
  if (!Array.isArray(e8)) return "";
  const r2 = [];
  for (let a3 = 0; a3 < e8.length; a3++) {
    const t2 = e8[a3];
    try {
      Yh(t2) ? r2.push("[VueViewModel]") : r2.push(String(t2));
    } catch (e9) {
      r2.push("[value cannot be serialized]");
    }
  }
  return r2.join(a2);
}
function Zh(e8, a2, r2 = false) {
  return !!qh(e8) && (zh(a2, "RegExp") ? a2.test(e8) : !!qh(a2) && (r2 ? e8 === a2 : e8.includes(a2)));
}
function ef(e8, a2 = [], r2 = false) {
  return a2.some((a3) => Zh(e8, a3, r2));
}
function af(e8, a2, r2 = 250, t2, o2, n2, s2) {
  if (!(n2.exception && n2.exception.values && s2 && Gh(s2.originalException, Error))) return;
  const i2 = n2.exception.values.length > 0 ? n2.exception.values[n2.exception.values.length - 1] : void 0;
  var d2, c2;
  i2 && (n2.exception.values = (d2 = rf(e8, a2, o2, s2.originalException, t2, n2.exception.values, i2, 0), c2 = r2, d2.map((e9) => (e9.value && (e9.value = Jh(e9.value, c2)), e9))));
}
function rf(e8, a2, r2, t2, o2, n2, s2, i2) {
  if (n2.length >= r2 + 1) return n2;
  let d2 = [...n2];
  if (Gh(t2[o2], Error)) {
    tf(s2, i2);
    const n3 = e8(a2, t2[o2]), c2 = d2.length;
    of(n3, o2, c2, i2), d2 = rf(e8, a2, r2, t2[o2], o2, [n3, ...d2], n3, c2);
  }
  return Array.isArray(t2.errors) && t2.errors.forEach((t3, n3) => {
    if (Gh(t3, Error)) {
      tf(s2, i2);
      const c2 = e8(a2, t3), u2 = d2.length;
      of(c2, `errors[${n3}]`, u2, i2), d2 = rf(e8, a2, r2, t3, o2, [c2, ...d2], c2, u2);
    }
  }), d2;
}
function tf(e8, a2) {
  e8.mechanism = e8.mechanism || { type: "generic", handled: true }, e8.mechanism = { ...e8.mechanism, ..."AggregateError" === e8.type && { is_exception_group: true }, exception_id: a2 };
}
function of(e8, a2, r2, t2) {
  e8.mechanism = e8.mechanism || { type: "generic", handled: true }, e8.mechanism = { ...e8.mechanism, type: "chained", source: a2, exception_id: r2, parent_id: t2 };
}
function nf(e8) {
  return e8 && e8.Math == Math ? e8 : void 0;
}
var sf = "object" == typeof globalThis && nf(globalThis) || "object" == typeof window && nf(window) || "object" == typeof self && nf(self) || "object" == typeof global && nf(global) || /* @__PURE__ */ function() {
  return this;
}() || {};
function df() {
  return sf;
}
function cf(e8, a2, r2) {
  const t2 = r2 || sf, o2 = t2.__SENTRY__ = t2.__SENTRY__ || {};
  return o2[e8] || (o2[e8] = a2());
}
var uf = df();
function lf(e8, a2 = {}) {
  if (!e8) return "<unknown>";
  try {
    let r2 = e8;
    const t2 = 5, o2 = [];
    let n2 = 0, s2 = 0;
    const i2 = " > ", d2 = i2.length;
    let c2;
    const u2 = Array.isArray(a2) ? a2 : a2.keyAttrs, l2 = !Array.isArray(a2) && a2.maxStringLength || 80;
    for (; r2 && n2++ < t2 && (c2 = pf(r2, u2), !("html" === c2 || n2 > 1 && s2 + o2.length * d2 + c2.length >= l2)); ) o2.push(c2), s2 += c2.length, r2 = r2.parentNode;
    return o2.reverse().join(i2);
  } catch (e9) {
    return "<unknown>";
  }
}
function pf(e8, a2) {
  const r2 = e8, t2 = [];
  let o2, n2, s2, i2, d2;
  if (!r2 || !r2.tagName) return "";
  if (uf.HTMLElement && r2 instanceof HTMLElement && r2.dataset && r2.dataset.sentryComponent) return r2.dataset.sentryComponent;
  t2.push(r2.tagName.toLowerCase());
  const c2 = a2 && a2.length ? a2.filter((e9) => r2.getAttribute(e9)).map((e9) => [e9, r2.getAttribute(e9)]) : null;
  if (c2 && c2.length) c2.forEach((e9) => {
    t2.push(`[${e9[0]}="${e9[1]}"]`);
  });
  else if (r2.id && t2.push(`#${r2.id}`), o2 = r2.className, o2 && qh(o2)) for (n2 = o2.split(/\s+/), d2 = 0; d2 < n2.length; d2++) t2.push(`.${n2[d2]}`);
  const u2 = ["aria-label", "type", "name", "title", "alt"];
  for (d2 = 0; d2 < u2.length; d2++) s2 = u2[d2], i2 = r2.getAttribute(s2), i2 && t2.push(`[${s2}="${i2}"]`);
  return t2.join("");
}
function mf(e8) {
  if (!uf.HTMLElement) return null;
  let a2 = e8;
  for (let e9 = 0; e9 < 5; e9++) {
    if (!a2) return null;
    if (a2 instanceof HTMLElement && a2.dataset.sentryComponent) return a2.dataset.sentryComponent;
    a2 = a2.parentNode;
  }
  return null;
}
var hf = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
var ff = ["debug", "info", "warn", "error", "log", "assert", "trace"];
var vf = {};
function gf(e8) {
  if (!("console" in sf)) return e8();
  const a2 = sf.console, r2 = {}, t2 = Object.keys(vf);
  t2.forEach((e9) => {
    const t3 = vf[e9];
    r2[e9] = a2[e9], a2[e9] = t3;
  });
  try {
    return e8();
  } finally {
    t2.forEach((e9) => {
      a2[e9] = r2[e9];
    });
  }
}
var bf = function() {
  let e8 = false;
  const a2 = { enable: () => {
    e8 = true;
  }, disable: () => {
    e8 = false;
  }, isEnabled: () => e8 };
  return hf ? ff.forEach((r2) => {
    a2[r2] = (...a3) => {
      e8 && gf(() => {
        sf.console[r2](`Sentry Logger [${r2}]:`, ...a3);
      });
    };
  }) : ff.forEach((e9) => {
    a2[e9] = () => {
    };
  }), a2;
}();
var wf = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
function yf(e8, a2 = false) {
  const { host: r2, path: t2, pass: o2, port: n2, projectId: s2, protocol: i2, publicKey: d2 } = e8;
  return `${i2}://${d2}${a2 && o2 ? `:${o2}` : ""}@${r2}${n2 ? `:${n2}` : ""}/${t2 ? `${t2}/` : t2}${s2}`;
}
function xf(e8) {
  return { protocol: e8.protocol, publicKey: e8.publicKey || "", pass: e8.pass || "", host: e8.host, port: e8.port || "", path: e8.path || "", projectId: e8.projectId };
}
function _f(e8) {
  const a2 = "string" == typeof e8 ? function(e9) {
    const a3 = wf.exec(e9);
    if (!a3) return void gf(() => {
      console.error(`Invalid Sentry Dsn: ${e9}`);
    });
    const [r2, t2, o2 = "", n2, s2 = "", i2] = a3.slice(1);
    let d2 = "", c2 = i2;
    const u2 = c2.split("/");
    if (u2.length > 1 && (d2 = u2.slice(0, -1).join("/"), c2 = u2.pop()), c2) {
      const e10 = c2.match(/^\d+/);
      e10 && (c2 = e10[0]);
    }
    return xf({ host: n2, pass: o2, path: d2, projectId: c2, port: s2, protocol: r2, publicKey: t2 });
  }(e8) : xf(e8);
  if (a2 && function(e9) {
    if (!hf) return true;
    const { port: a3, projectId: r2, protocol: t2 } = e9;
    return !(["protocol", "publicKey", "host", "projectId"].find((a4) => !e9[a4] && (bf.error(`Invalid Sentry Dsn: ${a4} missing`), true)) || (r2.match(/^\d+$/) ? /* @__PURE__ */ function(e10) {
      return "http" === e10 || "https" === e10;
    }(t2) ? a3 && isNaN(parseInt(a3, 10)) && (bf.error(`Invalid Sentry Dsn: Invalid port ${a3}`), 1) : (bf.error(`Invalid Sentry Dsn: Invalid protocol ${t2}`), 1) : (bf.error(`Invalid Sentry Dsn: Invalid projectId ${r2}`), 1)));
  }(a2)) return a2;
}
var If = class extends Error {
  constructor(e8, a2 = "warn") {
    super(e8), this.message = e8, this.name = new.target.prototype.constructor.name, Object.setPrototypeOf(this, new.target.prototype), this.logLevel = a2;
  }
};
function kf(e8, a2, r2) {
  if (!(a2 in e8)) return;
  const t2 = e8[a2], o2 = r2(t2);
  "function" == typeof o2 && Tf(o2, t2), e8[a2] = o2;
}
function Sf(e8, a2, r2) {
  try {
    Object.defineProperty(e8, a2, { value: r2, writable: true, configurable: true });
  } catch (r3) {
    hf && bf.log(`Failed to add non-enumerable property "${a2}" to object`, e8);
  }
}
function Tf(e8, a2) {
  try {
    const r2 = a2.prototype || {};
    e8.prototype = a2.prototype = r2, Sf(e8, "__sentry_original__", a2);
  } catch (e9) {
  }
}
function Ef(e8) {
  return e8.__sentry_original__;
}
function jf(e8) {
  if (Dh(e8)) return { message: e8.message, name: e8.name, stack: e8.stack, ...Af(e8) };
  if (Wh(e8)) {
    const a2 = { type: e8.type, target: Of(e8.target), currentTarget: Of(e8.currentTarget), ...Af(e8) };
    return "undefined" != typeof CustomEvent && Gh(e8, CustomEvent) && (a2.detail = e8.detail), a2;
  }
  return e8;
}
function Of(e8) {
  try {
    return a2 = e8, "undefined" != typeof Element && Gh(a2, Element) ? lf(e8) : Object.prototype.toString.call(e8);
  } catch (e9) {
    return "<unknown>";
  }
  var a2;
}
function Af(e8) {
  if ("object" == typeof e8 && null !== e8) {
    const a2 = {};
    for (const r2 in e8) Object.prototype.hasOwnProperty.call(e8, r2) && (a2[r2] = e8[r2]);
    return a2;
  }
  return {};
}
function Cf(e8) {
  return Rf(e8, /* @__PURE__ */ new Map());
}
function Rf(e8, a2) {
  if (function(e9) {
    if (!Hh(e9)) return false;
    try {
      const a3 = Object.getPrototypeOf(e9).constructor.name;
      return !a3 || "Object" === a3;
    } catch (e10) {
      return true;
    }
  }(e8)) {
    const r2 = a2.get(e8);
    if (void 0 !== r2) return r2;
    const t2 = {};
    a2.set(e8, t2);
    for (const r3 of Object.keys(e8)) void 0 !== e8[r3] && (t2[r3] = Rf(e8[r3], a2));
    return t2;
  }
  if (Array.isArray(e8)) {
    const r2 = a2.get(e8);
    if (void 0 !== r2) return r2;
    const t2 = [];
    return a2.set(e8, t2), e8.forEach((e9) => {
      t2.push(Rf(e9, a2));
    }), t2;
  }
  return e8;
}
var Nf = /\(error: (.*)\)/;
var Pf = /captureMessage|captureException/;
function Mf(...e8) {
  const a2 = e8.sort((e9, a3) => e9[0] - a3[0]).map((e9) => e9[1]);
  return (e9, r2 = 0) => {
    const t2 = [], o2 = e9.split("\n");
    for (let e10 = r2; e10 < o2.length; e10++) {
      const r3 = o2[e10];
      if (r3.length > 1024) continue;
      const n2 = Nf.test(r3) ? r3.replace(Nf, "$1") : r3;
      if (!n2.match(/\S*Error: /)) {
        for (const e11 of a2) {
          const a3 = e11(n2);
          if (a3) {
            t2.push(a3);
            break;
          }
        }
        if (t2.length >= 50) break;
      }
    }
    return function(e10) {
      if (!e10.length) return [];
      const a3 = Array.from(e10);
      /sentryWrapped/.test(a3[a3.length - 1].function || "") && a3.pop();
      a3.reverse(), Pf.test(a3[a3.length - 1].function || "") && (a3.pop(), Pf.test(a3[a3.length - 1].function || "") && a3.pop());
      return a3.slice(0, 50).map((e11) => ({ ...e11, filename: e11.filename || a3[a3.length - 1].filename, function: e11.function || "?" }));
    }(t2);
  };
}
var Lf = "<anonymous>";
function Df(e8) {
  try {
    return e8 && "function" == typeof e8 && e8.name || Lf;
  } catch (e9) {
    return Lf;
  }
}
var zf = {};
var Ff = {};
function Bf(e8, a2) {
  zf[e8] = zf[e8] || [], zf[e8].push(a2);
}
function qf(e8, a2) {
  Ff[e8] || (a2(), Ff[e8] = true);
}
function $f(e8, a2) {
  const r2 = e8 && zf[e8];
  if (r2) for (const t2 of r2) try {
    t2(a2);
  } catch (a3) {
    hf && bf.error(`Error while triggering instrumentation handler.
Type: ${e8}
Name: ${Df(t2)}
Error:`, a3);
  }
}
function Uf(e8) {
  const a2 = "console";
  Bf(a2, e8), qf(a2, Hf);
}
function Hf() {
  "console" in sf && ff.forEach(function(e8) {
    e8 in sf.console && kf(sf.console, e8, function(a2) {
      return vf[e8] = a2, function(...a3) {
        $f("console", { args: a3, level: e8 });
        const r2 = vf[e8];
        r2 && r2.apply(sf.console, a3);
      };
    });
  });
}
function Wf() {
  const e8 = sf, a2 = e8.crypto || e8.msCrypto;
  let r2 = () => 16 * Math.random();
  try {
    if (a2 && a2.randomUUID) return a2.randomUUID().replace(/-/g, "");
    a2 && a2.getRandomValues && (r2 = () => {
      const e9 = new Uint8Array(1);
      return a2.getRandomValues(e9), e9[0];
    });
  } catch (e9) {
  }
  return ("10000000100040008000" + 1e11).replace(/[018]/g, (e9) => (e9 ^ (15 & r2()) >> e9 / 4).toString(16));
}
function Kf(e8) {
  return e8.exception && e8.exception.values ? e8.exception.values[0] : void 0;
}
function Vf(e8) {
  const { message: a2, event_id: r2 } = e8;
  if (a2) return a2;
  const t2 = Kf(e8);
  return t2 ? t2.type && t2.value ? `${t2.type}: ${t2.value}` : t2.type || t2.value || r2 || "<unknown>" : r2 || "<unknown>";
}
function Gf(e8, a2, r2) {
  const t2 = e8.exception = e8.exception || {}, o2 = t2.values = t2.values || [], n2 = o2[0] = o2[0] || {};
  n2.value || (n2.value = a2 || ""), n2.type || (n2.type = r2 || "Error");
}
function Yf(e8, a2) {
  const r2 = Kf(e8);
  if (!r2) return;
  const t2 = r2.mechanism;
  if (r2.mechanism = { type: "generic", handled: true, ...t2, ...a2 }, a2 && "data" in a2) {
    const e9 = { ...t2 && t2.data, ...a2.data };
    r2.mechanism.data = e9;
  }
}
function Jf(e8) {
  if (e8 && e8.__sentry_captured__) return true;
  try {
    Sf(e8, "__sentry_captured__", true);
  } catch (e9) {
  }
  return false;
}
function Xf(e8) {
  return Array.isArray(e8) ? e8 : [e8];
}
var Qf = sf;
var Zf;
var ev;
var av;
function rv(e8) {
  Bf("dom", e8), qf("dom", tv);
}
function tv() {
  if (!Qf.document) return;
  const e8 = $f.bind(null, "dom"), a2 = ov(e8, true);
  Qf.document.addEventListener("click", a2, false), Qf.document.addEventListener("keypress", a2, false), ["EventTarget", "Node"].forEach((a3) => {
    const r2 = Qf[a3] && Qf[a3].prototype;
    r2 && r2.hasOwnProperty && r2.hasOwnProperty("addEventListener") && (kf(r2, "addEventListener", function(a4) {
      return function(r3, t2, o2) {
        if ("click" === r3 || "keypress" == r3) try {
          const t3 = this, n2 = t3.__sentry_instrumentation_handlers__ = t3.__sentry_instrumentation_handlers__ || {}, s2 = n2[r3] = n2[r3] || { refCount: 0 };
          if (!s2.handler) {
            const t4 = ov(e8);
            s2.handler = t4, a4.call(this, r3, t4, o2);
          }
          s2.refCount++;
        } catch (e9) {
        }
        return a4.call(this, r3, t2, o2);
      };
    }), kf(r2, "removeEventListener", function(e9) {
      return function(a4, r3, t2) {
        if ("click" === a4 || "keypress" == a4) try {
          const r4 = this, o2 = r4.__sentry_instrumentation_handlers__ || {}, n2 = o2[a4];
          n2 && (n2.refCount--, n2.refCount <= 0 && (e9.call(this, a4, n2.handler, t2), n2.handler = void 0, delete o2[a4]), 0 === Object.keys(o2).length && delete r4.__sentry_instrumentation_handlers__);
        } catch (e10) {
        }
        return e9.call(this, a4, r3, t2);
      };
    }));
  });
}
function ov(e8, a2 = false) {
  return (r2) => {
    if (!r2 || r2._sentryCaptured) return;
    const t2 = function(e9) {
      try {
        return e9.target;
      } catch (e10) {
        return null;
      }
    }(r2);
    if (function(e9, a3) {
      return "keypress" === e9 && (!a3 || !a3.tagName || "INPUT" !== a3.tagName && "TEXTAREA" !== a3.tagName && !a3.isContentEditable);
    }(r2.type, t2)) return;
    Sf(r2, "_sentryCaptured", true), t2 && !t2._sentryId && Sf(t2, "_sentryId", Wf());
    const o2 = "keypress" === r2.type ? "input" : r2.type;
    if (!function(e9) {
      if (e9.type !== ev) return false;
      try {
        if (!e9.target || e9.target._sentryId !== av) return false;
      } catch (e10) {
      }
      return true;
    }(r2)) {
      e8({ event: r2, name: o2, global: a2 }), ev = r2.type, av = t2 ? t2._sentryId : void 0;
    }
    clearTimeout(Zf), Zf = Qf.setTimeout(() => {
      av = void 0, ev = void 0;
    }, 1e3);
  };
}
var nv = df();
function sv() {
  if (!("fetch" in nv)) return false;
  try {
    return new Headers(), new Request("http://www.example.com"), new Response(), true;
  } catch (e8) {
    return false;
  }
}
function iv(e8) {
  return e8 && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(e8.toString());
}
function dv(e8) {
  const a2 = "fetch";
  Bf(a2, e8), qf(a2, cv);
}
function cv() {
  (function() {
    if ("string" == typeof EdgeRuntime) return true;
    if (!sv()) return false;
    if (iv(nv.fetch)) return true;
    let e8 = false;
    const a2 = nv.document;
    if (a2 && "function" == typeof a2.createElement) try {
      const r2 = a2.createElement("iframe");
      r2.hidden = true, a2.head.appendChild(r2), r2.contentWindow && r2.contentWindow.fetch && (e8 = iv(r2.contentWindow.fetch)), a2.head.removeChild(r2);
    } catch (e9) {
      hf && bf.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", e9);
    }
    return e8;
  })() && kf(sf, "fetch", function(e8) {
    return function(...a2) {
      const { method: r2, url: t2 } = function(e9) {
        if (0 === e9.length) return { method: "GET", url: "" };
        if (2 === e9.length) {
          const [a4, r3] = e9;
          return { url: lv(a4), method: uv(r3, "method") ? String(r3.method).toUpperCase() : "GET" };
        }
        const a3 = e9[0];
        return { url: lv(a3), method: uv(a3, "method") ? String(a3.method).toUpperCase() : "GET" };
      }(a2), o2 = { args: a2, fetchData: { method: r2, url: t2 }, startTimestamp: Date.now() };
      return $f("fetch", { ...o2 }), e8.apply(sf, a2).then((e9) => ($f("fetch", { ...o2, endTimestamp: Date.now(), response: e9 }), e9), (e9) => {
        throw $f("fetch", { ...o2, endTimestamp: Date.now(), error: e9 }), e9;
      });
    };
  });
}
function uv(e8, a2) {
  return !!e8 && "object" == typeof e8 && !!e8[a2];
}
function lv(e8) {
  return "string" == typeof e8 ? e8 : e8 ? uv(e8, "url") ? e8.url : e8.toString ? e8.toString() : "" : "";
}
var pv = null;
function mv(e8) {
  const a2 = "error";
  Bf(a2, e8), qf(a2, hv);
}
function hv() {
  pv = sf.onerror, sf.onerror = function(e8, a2, r2, t2, o2) {
    return $f("error", { column: t2, error: o2, line: r2, msg: e8, url: a2 }), !(!pv || pv.__SENTRY_LOADER__) && pv.apply(this, arguments);
  }, sf.onerror.__SENTRY_INSTRUMENTED__ = true;
}
var fv = null;
function vv(e8) {
  const a2 = "unhandledrejection";
  Bf(a2, e8), qf(a2, gv);
}
function gv() {
  fv = sf.onunhandledrejection, sf.onunhandledrejection = function(e8) {
    return $f("unhandledrejection", e8), !(fv && !fv.__SENTRY_LOADER__) || fv.apply(this, arguments);
  }, sf.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;
}
var bv = df();
var wv = sf;
var yv;
function xv(e8) {
  const a2 = "history";
  Bf(a2, e8), qf(a2, _v);
}
function _v() {
  if (!function() {
    const e9 = bv.chrome, a3 = e9 && e9.app && e9.app.runtime, r2 = "history" in bv && !!bv.history.pushState && !!bv.history.replaceState;
    return !a3 && r2;
  }()) return;
  const e8 = wv.onpopstate;
  function a2(e9) {
    return function(...a3) {
      const r2 = a3.length > 2 ? a3[2] : void 0;
      if (r2) {
        const e10 = yv, a4 = String(r2);
        yv = a4;
        $f("history", { from: e10, to: a4 });
      }
      return e9.apply(this, a3);
    };
  }
  wv.onpopstate = function(...a3) {
    const r2 = wv.location.href, t2 = yv;
    yv = r2;
    if ($f("history", { from: t2, to: r2 }), e8) try {
      return e8.apply(this, a3);
    } catch (e9) {
    }
  }, kf(wv.history, "pushState", a2), kf(wv.history, "replaceState", a2);
}
var Iv = sf;
var kv = "__sentry_xhr_v3__";
function Sv(e8) {
  Bf("xhr", e8), qf("xhr", Tv);
}
function Tv() {
  if (!Iv.XMLHttpRequest) return;
  const e8 = XMLHttpRequest.prototype;
  kf(e8, "open", function(e9) {
    return function(...a2) {
      const r2 = Date.now(), t2 = qh(a2[0]) ? a2[0].toUpperCase() : void 0, o2 = function(e10) {
        if (qh(e10)) return e10;
        try {
          return e10.toString();
        } catch (e11) {
        }
        return;
      }(a2[1]);
      if (!t2 || !o2) return e9.apply(this, a2);
      this[kv] = { method: t2, url: o2, request_headers: {} }, "POST" === t2 && o2.match(/sentry_key/) && (this.__sentry_own_request__ = true);
      const n2 = () => {
        const e10 = this[kv];
        if (e10 && 4 === this.readyState) {
          try {
            e10.status_code = this.status;
          } catch (e11) {
          }
          $f("xhr", { args: [t2, o2], endTimestamp: Date.now(), startTimestamp: r2, xhr: this });
        }
      };
      return "onreadystatechange" in this && "function" == typeof this.onreadystatechange ? kf(this, "onreadystatechange", function(e10) {
        return function(...a3) {
          return n2(), e10.apply(this, a3);
        };
      }) : this.addEventListener("readystatechange", n2), kf(this, "setRequestHeader", function(e10) {
        return function(...a3) {
          const [r3, t3] = a3, o3 = this[kv];
          return o3 && qh(r3) && qh(t3) && (o3.request_headers[r3.toLowerCase()] = t3), e10.apply(this, a3);
        };
      }), e9.apply(this, a2);
    };
  }), kf(e8, "send", function(e9) {
    return function(...a2) {
      const r2 = this[kv];
      if (!r2) return e9.apply(this, a2);
      void 0 !== a2[0] && (r2.body = a2[0]);
      return $f("xhr", { args: [r2.method, r2.url], startTimestamp: Date.now(), xhr: this }), e9.apply(this, a2);
    };
  });
}
function Ev() {
  return !("undefined" != typeof __SENTRY_BROWSER_BUNDLE__ && __SENTRY_BROWSER_BUNDLE__) && "[object process]" === Object.prototype.toString.call("undefined" != typeof process ? process : 0);
}
function jv() {
  return "undefined" != typeof window && (!Ev() || void 0 !== sf.process && "renderer" === sf.process.type);
}
function Ov(e8, a2 = 100, r2 = 1 / 0) {
  try {
    return Cv("", e8, a2, r2);
  } catch (e9) {
    return { ERROR: `**non-serializable** (${e9})` };
  }
}
function Av(e8, a2 = 3, r2 = 102400) {
  const t2 = Ov(e8, a2);
  return o2 = t2, function(e9) {
    return ~-encodeURI(e9).split(/%..|./).length;
  }(JSON.stringify(o2)) > r2 ? Av(e8, a2 - 1, r2) : t2;
  var o2;
}
function Cv(e8, a2, r2 = 1 / 0, t2 = 1 / 0, o2 = /* @__PURE__ */ function() {
  const e9 = "function" == typeof WeakSet, a3 = e9 ? /* @__PURE__ */ new WeakSet() : [];
  return [function(r3) {
    if (e9) return !!a3.has(r3) || (a3.add(r3), false);
    for (let e10 = 0; e10 < a3.length; e10++) if (a3[e10] === r3) return true;
    return a3.push(r3), false;
  }, function(r3) {
    if (e9) a3.delete(r3);
    else for (let e10 = 0; e10 < a3.length; e10++) if (a3[e10] === r3) {
      a3.splice(e10, 1);
      break;
    }
  }];
}()) {
  const [n2, s2] = o2;
  if (null == a2 || ["number", "boolean", "string"].includes(typeof a2) && !Vh(a2)) return a2;
  const i2 = function(e9, a3) {
    try {
      if ("domain" === e9 && a3 && "object" == typeof a3 && a3._events) return "[Domain]";
      if ("domainEmitter" === e9) return "[DomainEmitter]";
      if ("undefined" != typeof global && a3 === global) return "[Global]";
      if ("undefined" != typeof window && a3 === window) return "[Window]";
      if ("undefined" != typeof document && a3 === document) return "[Document]";
      if (Yh(a3)) return "[VueViewModel]";
      if (Hh(r3 = a3) && "nativeEvent" in r3 && "preventDefault" in r3 && "stopPropagation" in r3) return "[SyntheticEvent]";
      if ("number" == typeof a3 && a3 != a3) return "[NaN]";
      if ("function" == typeof a3) return `[Function: ${Df(a3)}]`;
      if ("symbol" == typeof a3) return `[${String(a3)}]`;
      if ("bigint" == typeof a3) return `[BigInt: ${String(a3)}]`;
      const t3 = function(e10) {
        const a4 = Object.getPrototypeOf(e10);
        return a4 ? a4.constructor.name : "null prototype";
      }(a3);
      return /^HTML(\w*)Element$/.test(t3) ? `[HTMLElement: ${t3}]` : `[object ${t3}]`;
    } catch (e10) {
      return `**non-serializable** (${e10})`;
    }
    var r3;
  }(e8, a2);
  if (!i2.startsWith("[object ")) return i2;
  if (a2.__sentry_skip_normalization__) return a2;
  const d2 = "number" == typeof a2.__sentry_override_normalization_depth__ ? a2.__sentry_override_normalization_depth__ : r2;
  if (0 === d2) return i2.replace("object ", "");
  if (n2(a2)) return "[Circular ~]";
  const c2 = a2;
  if (c2 && "function" == typeof c2.toJSON) try {
    return Cv("", c2.toJSON(), d2 - 1, t2, o2);
  } catch (e9) {
  }
  const u2 = Array.isArray(a2) ? [] : {};
  let l2 = 0;
  const p2 = jf(a2);
  for (const e9 in p2) {
    if (!Object.prototype.hasOwnProperty.call(p2, e9)) continue;
    if (l2 >= t2) {
      u2[e9] = "[MaxProperties ~]";
      break;
    }
    const a3 = p2[e9];
    u2[e9] = Cv(e9, a3, d2 - 1, t2, o2), l2++;
  }
  return s2(a2), u2;
}
var Rv;
function Nv(e8) {
  return new Mv((a2) => {
    a2(e8);
  });
}
function Pv(e8) {
  return new Mv((a2, r2) => {
    r2(e8);
  });
}
!function(e8) {
  e8[e8.PENDING = 0] = "PENDING";
  e8[e8.RESOLVED = 1] = "RESOLVED";
  e8[e8.REJECTED = 2] = "REJECTED";
}(Rv || (Rv = {}));
var Mv = class _Mv {
  constructor(e8) {
    _Mv.prototype.__init.call(this), _Mv.prototype.__init2.call(this), _Mv.prototype.__init3.call(this), _Mv.prototype.__init4.call(this), this._state = Rv.PENDING, this._handlers = [];
    try {
      e8(this._resolve, this._reject);
    } catch (e9) {
      this._reject(e9);
    }
  }
  then(e8, a2) {
    return new _Mv((r2, t2) => {
      this._handlers.push([false, (a3) => {
        if (e8) try {
          r2(e8(a3));
        } catch (e9) {
          t2(e9);
        }
        else r2(a3);
      }, (e9) => {
        if (a2) try {
          r2(a2(e9));
        } catch (e10) {
          t2(e10);
        }
        else t2(e9);
      }]), this._executeHandlers();
    });
  }
  catch(e8) {
    return this.then((e9) => e9, e8);
  }
  finally(e8) {
    return new _Mv((a2, r2) => {
      let t2, o2;
      return this.then((a3) => {
        o2 = false, t2 = a3, e8 && e8();
      }, (a3) => {
        o2 = true, t2 = a3, e8 && e8();
      }).then(() => {
        o2 ? r2(t2) : a2(t2);
      });
    });
  }
  __init() {
    this._resolve = (e8) => {
      this._setResult(Rv.RESOLVED, e8);
    };
  }
  __init2() {
    this._reject = (e8) => {
      this._setResult(Rv.REJECTED, e8);
    };
  }
  __init3() {
    this._setResult = (e8, a2) => {
      this._state === Rv.PENDING && (Kh(a2) ? a2.then(this._resolve, this._reject) : (this._state = e8, this._value = a2, this._executeHandlers()));
    };
  }
  __init4() {
    this._executeHandlers = () => {
      if (this._state === Rv.PENDING) return;
      const e8 = this._handlers.slice();
      this._handlers = [], e8.forEach((e9) => {
        e9[0] || (this._state === Rv.RESOLVED && e9[1](this._value), this._state === Rv.REJECTED && e9[2](this._value), e9[0] = true);
      });
    };
  }
};
function Lv(e8) {
  const a2 = [];
  function r2(e9) {
    return a2.splice(a2.indexOf(e9), 1)[0];
  }
  return { $: a2, add: function(t2) {
    if (!(void 0 === e8 || a2.length < e8)) return Pv(new If("Not adding Promise because buffer limit was reached."));
    const o2 = t2();
    return -1 === a2.indexOf(o2) && a2.push(o2), o2.then(() => r2(o2)).then(null, () => r2(o2).then(null, () => {
    })), o2;
  }, drain: function(e9) {
    return new Mv((r3, t2) => {
      let o2 = a2.length;
      if (!o2) return r3(true);
      const n2 = setTimeout(() => {
        e9 && e9 > 0 && r3(false);
      }, e9);
      a2.forEach((e10) => {
        Nv(e10).then(() => {
          --o2 || (clearTimeout(n2), r3(true));
        }, t2);
      });
    });
  } };
}
function Dv(e8) {
  if (!e8) return {};
  const a2 = e8.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
  if (!a2) return {};
  const r2 = a2[6] || "", t2 = a2[8] || "";
  return { host: a2[4], path: a2[5], protocol: a2[2], search: r2, hash: t2, relative: a2[5] + r2 + t2 };
}
var zv = ["fatal", "error", "warning", "log", "info", "debug"];
function Fv(e8) {
  return "warn" === e8 ? "warning" : zv.includes(e8) ? e8 : "log";
}
function Bv() {
  return Date.now() / 1e3;
}
var qv = function() {
  const { performance: e8 } = sf;
  if (!e8 || !e8.now) return Bv;
  const a2 = Date.now() - e8.now(), r2 = null == e8.timeOrigin ? a2 : e8.timeOrigin;
  return () => (r2 + e8.now()) / 1e3;
}();
var $v = (() => {
  const { performance: e8 } = sf;
  if (!e8 || !e8.now) return;
  const a2 = 36e5, r2 = e8.now(), t2 = Date.now(), o2 = e8.timeOrigin ? Math.abs(e8.timeOrigin + r2 - t2) : a2, n2 = o2 < a2, s2 = e8.timing && e8.timing.navigationStart, i2 = "number" == typeof s2 ? Math.abs(s2 + r2 - t2) : a2;
  return n2 || i2 < a2 ? o2 <= i2 ? e8.timeOrigin : s2 : t2;
})();
var Uv = "baggage";
var Hv = "sentry-";
var Wv = /^sentry-/;
function Kv(e8) {
  if (!e8) return;
  return function(e9) {
    if (0 === Object.keys(e9).length) return;
    return Object.entries(e9).reduce((e10, [a2, r2], t2) => {
      const o2 = `${encodeURIComponent(a2)}=${encodeURIComponent(r2)}`, n2 = 0 === t2 ? o2 : `${e10},${o2}`;
      return n2.length > 8192 ? (hf && bf.warn(`Not adding key: ${a2} with val: ${r2} to baggage header due to exceeding baggage size limits.`), e10) : n2;
    }, "");
  }(Object.entries(e8).reduce((e9, [a2, r2]) => (r2 && (e9[`${Hv}${a2}`] = r2), e9), {}));
}
function Vv(e8) {
  return e8.split(",").map((e9) => e9.split("=").map((e10) => decodeURIComponent(e10.trim()))).reduce((e9, [a2, r2]) => (e9[a2] = r2, e9), {});
}
var Gv = new RegExp("^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$");
function Yv(e8, a2) {
  const r2 = function(e9) {
    if (!e9) return;
    const a3 = e9.match(Gv);
    if (!a3) return;
    let r3;
    return "1" === a3[3] ? r3 = true : "0" === a3[3] && (r3 = false), { traceId: a3[1], parentSampled: r3, parentSpanId: a3[2] };
  }(e8), t2 = function(e9) {
    if (!qh(e9) && !Array.isArray(e9)) return;
    let a3 = {};
    if (Array.isArray(e9)) a3 = e9.reduce((e10, a4) => {
      const r4 = Vv(a4);
      for (const a5 of Object.keys(r4)) e10[a5] = r4[a5];
      return e10;
    }, {});
    else {
      if (!e9) return;
      a3 = Vv(e9);
    }
    const r3 = Object.entries(a3).reduce((e10, [a4, r4]) => (a4.match(Wv) && (e10[a4.slice(7)] = r4), e10), {});
    return Object.keys(r3).length > 0 ? r3 : void 0;
  }(a2), { traceId: o2, parentSpanId: n2, parentSampled: s2 } = r2 || {};
  return r2 ? { traceId: o2 || Wf(), parentSpanId: n2 || Wf().substring(16), spanId: Wf().substring(16), sampled: s2, dsc: t2 || {} } : { traceId: o2 || Wf(), spanId: Wf().substring(16) };
}
function Jv(e8 = Wf(), a2 = Wf().substring(16), r2) {
  let t2 = "";
  return void 0 !== r2 && (t2 = r2 ? "-1" : "-0"), `${e8}-${a2}${t2}`;
}
function Xv(e8, a2 = []) {
  return [e8, a2];
}
function Qv(e8, a2) {
  const [r2, t2] = e8;
  return [r2, [...t2, a2]];
}
function Zv(e8, a2) {
  const r2 = e8[1];
  for (const e9 of r2) {
    if (a2(e9, e9[0].type)) return true;
  }
  return false;
}
function eg(e8, a2) {
  return (a2 || new TextEncoder()).encode(e8);
}
function ag(e8, a2) {
  const [r2, t2] = e8;
  let o2 = JSON.stringify(r2);
  function n2(e9) {
    "string" == typeof o2 ? o2 = "string" == typeof e9 ? o2 + e9 : [eg(o2, a2), e9] : o2.push("string" == typeof e9 ? eg(e9, a2) : e9);
  }
  for (const e9 of t2) {
    const [a3, r3] = e9;
    if (n2(`
${JSON.stringify(a3)}
`), "string" == typeof r3 || r3 instanceof Uint8Array) n2(r3);
    else {
      let e10;
      try {
        e10 = JSON.stringify(r3);
      } catch (a4) {
        e10 = JSON.stringify(Ov(r3));
      }
      n2(e10);
    }
  }
  return "string" == typeof o2 ? o2 : function(e9) {
    const a3 = e9.reduce((e10, a4) => e10 + a4.length, 0), r3 = new Uint8Array(a3);
    let t3 = 0;
    for (const a4 of e9) r3.set(a4, t3), t3 += a4.length;
    return r3;
  }(o2);
}
function rg(e8, a2) {
  const r2 = "string" == typeof e8.data ? eg(e8.data, a2) : e8.data;
  return [Cf({ type: "attachment", length: r2.length, filename: e8.filename, content_type: e8.contentType, attachment_type: e8.attachmentType }), r2];
}
var tg = { session: "session", sessions: "session", attachment: "attachment", transaction: "transaction", event: "error", client_report: "internal", user_report: "default", profile: "profile", replay_event: "replay", replay_recording: "replay", check_in: "monitor", feedback: "feedback", span: "span", statsd: "metric_bucket" };
function og(e8) {
  return tg[e8];
}
function ng(e8) {
  if (!e8 || !e8.sdk) return;
  const { name: a2, version: r2 } = e8.sdk;
  return { name: a2, version: r2 };
}
function sg(e8, a2, r2, t2) {
  const o2 = e8.sdkProcessingMetadata && e8.sdkProcessingMetadata.dynamicSamplingContext;
  return { event_id: e8.event_id, sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...a2 && { sdk: a2 }, ...!!r2 && t2 && { dsn: yf(t2) }, ...o2 && { trace: Cf({ ...o2 }) } };
}
function ig(e8, a2, r2 = Date.now()) {
  return function(e9, a3) {
    return e9[a3] || e9.all || 0;
  }(e8, a2) > r2;
}
function dg(e8, { statusCode: a2, headers: r2 }, t2 = Date.now()) {
  const o2 = { ...e8 }, n2 = r2 && r2["x-sentry-rate-limits"], s2 = r2 && r2["retry-after"];
  if (n2) for (const e9 of n2.trim().split(",")) {
    const [a3, r3, , , n3] = e9.split(":", 5), s3 = parseInt(a3, 10), i2 = 1e3 * (isNaN(s3) ? 60 : s3);
    if (r3) for (const e10 of r3.split(";")) "metric_bucket" === e10 && n3 && !n3.split(";").includes("custom") || (o2[e10] = t2 + i2);
    else o2.all = t2 + i2;
  }
  else s2 ? o2.all = t2 + function(e9, a3 = Date.now()) {
    const r3 = parseInt(`${e9}`, 10);
    if (!isNaN(r3)) return 1e3 * r3;
    const t3 = Date.parse(`${e9}`);
    return isNaN(t3) ? 6e4 : t3 - a3;
  }(s2, t2) : 429 === a2 && (o2.all = t2 + 6e4);
  return o2;
}
function cg(e8) {
  let a2, r2 = e8[0], t2 = 1;
  for (; t2 < e8.length; ) {
    const o2 = e8[t2], n2 = e8[t2 + 1];
    if (t2 += 2, ("optionalAccess" === o2 || "optionalCall" === o2) && null == r2) return;
    "access" === o2 || "optionalAccess" === o2 ? (a2 = r2, r2 = n2(r2)) : "call" !== o2 && "optionalCall" !== o2 || (r2 = n2((...e9) => r2.call(a2, ...e9)), a2 = void 0);
  }
  return r2;
}
var ug = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
var lg = "production";
function pg() {
  return cf("globalEventProcessors", () => []);
}
function mg(e8) {
  pg().push(e8);
}
function hg(e8, a2, r2, t2 = 0) {
  return new Mv((o2, n2) => {
    const s2 = e8[t2];
    if (null === a2 || "function" != typeof s2) o2(a2);
    else {
      const i2 = s2({ ...a2 }, r2);
      ug && s2.id && null === i2 && bf.log(`Event processor "${s2.id}" dropped event`), Kh(i2) ? i2.then((a3) => hg(e8, a3, r2, t2 + 1).then(o2)).then(null, n2) : hg(e8, i2, r2, t2 + 1).then(o2).then(null, n2);
    }
  });
}
function fg(e8) {
  const a2 = qv(), r2 = { sid: Wf(), init: true, timestamp: a2, started: a2, duration: 0, status: "ok", errors: 0, ignoreDuration: false, toJSON: () => function(e9) {
    return Cf({ sid: `${e9.sid}`, init: e9.init, started: new Date(1e3 * e9.started).toISOString(), timestamp: new Date(1e3 * e9.timestamp).toISOString(), status: e9.status, errors: e9.errors, did: "number" == typeof e9.did || "string" == typeof e9.did ? `${e9.did}` : void 0, duration: e9.duration, abnormal_mechanism: e9.abnormal_mechanism, attrs: { release: e9.release, environment: e9.environment, ip_address: e9.ipAddress, user_agent: e9.userAgent } });
  }(r2) };
  return e8 && vg(r2, e8), r2;
}
function vg(e8, a2 = {}) {
  if (a2.user && (!e8.ipAddress && a2.user.ip_address && (e8.ipAddress = a2.user.ip_address), e8.did || a2.did || (e8.did = a2.user.id || a2.user.email || a2.user.username)), e8.timestamp = a2.timestamp || qv(), a2.abnormal_mechanism && (e8.abnormal_mechanism = a2.abnormal_mechanism), a2.ignoreDuration && (e8.ignoreDuration = a2.ignoreDuration), a2.sid && (e8.sid = 32 === a2.sid.length ? a2.sid : Wf()), void 0 !== a2.init && (e8.init = a2.init), !e8.did && a2.did && (e8.did = `${a2.did}`), "number" == typeof a2.started && (e8.started = a2.started), e8.ignoreDuration) e8.duration = void 0;
  else if ("number" == typeof a2.duration) e8.duration = a2.duration;
  else {
    const a3 = e8.timestamp - e8.started;
    e8.duration = a3 >= 0 ? a3 : 0;
  }
  a2.release && (e8.release = a2.release), a2.environment && (e8.environment = a2.environment), !e8.ipAddress && a2.ipAddress && (e8.ipAddress = a2.ipAddress), !e8.userAgent && a2.userAgent && (e8.userAgent = a2.userAgent), "number" == typeof a2.errors && (e8.errors = a2.errors), a2.status && (e8.status = a2.status);
}
function gg(e8, a2) {
  let r2 = {};
  a2 ? r2 = { status: a2 } : "ok" === e8.status && (r2 = { status: "exited" }), vg(e8, r2);
}
function bg(e8) {
  const { spanId: a2, traceId: r2 } = e8.spanContext(), { data: t2, op: o2, parent_span_id: n2, status: s2, tags: i2, origin: d2 } = _g(e8);
  return Cf({ data: t2, op: o2, parent_span_id: n2, span_id: a2, status: s2, tags: i2, trace_id: r2, origin: d2 });
}
function wg(e8) {
  const { traceId: a2, spanId: r2 } = e8.spanContext();
  return Jv(a2, r2, Ig(e8));
}
function yg(e8) {
  return "number" == typeof e8 ? xg(e8) : Array.isArray(e8) ? e8[0] + e8[1] / 1e9 : e8 instanceof Date ? xg(e8.getTime()) : qv();
}
function xg(e8) {
  return e8 > 9999999999 ? e8 / 1e3 : e8;
}
function _g(e8) {
  return function(e9) {
    return "function" == typeof e9.getSpanJSON;
  }(e8) ? e8.getSpanJSON() : "function" == typeof e8.toJSON ? e8.toJSON() : {};
}
function Ig(e8) {
  const { traceFlags: a2 } = e8.spanContext();
  return Boolean(1 & a2);
}
function kg(e8, a2, r2, t2, o2, n2) {
  const { normalizeDepth: s2 = 3, normalizeMaxBreadth: i2 = 1e3 } = e8, d2 = { ...a2, event_id: a2.event_id || r2.event_id || Wf(), timestamp: a2.timestamp || Bv() }, c2 = r2.integrations || e8.integrations.map((e9) => e9.name);
  !function(e9, a3) {
    const { environment: r3, release: t3, dist: o3, maxValueLength: n3 = 250 } = a3;
    "environment" in e9 || (e9.environment = "environment" in a3 ? r3 : lg);
    void 0 === e9.release && void 0 !== t3 && (e9.release = t3);
    void 0 === e9.dist && void 0 !== o3 && (e9.dist = o3);
    e9.message && (e9.message = Jh(e9.message, n3));
    const s3 = e9.exception && e9.exception.values && e9.exception.values[0];
    s3 && s3.value && (s3.value = Jh(s3.value, n3));
    const i3 = e9.request;
    i3 && i3.url && (i3.url = Jh(i3.url, n3));
  }(d2, e8), function(e9, a3) {
    a3.length > 0 && (e9.sdk = e9.sdk || {}, e9.sdk.integrations = [...e9.sdk.integrations || [], ...a3]);
  }(d2, c2), void 0 === a2.type && function(e9, a3) {
    const r3 = sf._sentryDebugIds;
    if (!r3) return;
    let t3;
    const o3 = Sg.get(a3);
    o3 ? t3 = o3 : (t3 = /* @__PURE__ */ new Map(), Sg.set(a3, t3));
    const n3 = Object.keys(r3).reduce((e10, o4) => {
      let n4;
      const s3 = t3.get(o4);
      s3 ? n4 = s3 : (n4 = a3(o4), t3.set(o4, n4));
      for (let a4 = n4.length - 1; a4 >= 0; a4--) {
        const t4 = n4[a4];
        if (t4.filename) {
          e10[t4.filename] = r3[o4];
          break;
        }
      }
      return e10;
    }, {});
    try {
      e9.exception.values.forEach((e10) => {
        e10.stacktrace.frames.forEach((e11) => {
          e11.filename && (e11.debug_id = n3[e11.filename]);
        });
      });
    } catch (e10) {
    }
  }(d2, e8.stackParser);
  const u2 = function(e9, a3) {
    if (!a3) return e9;
    const r3 = e9 ? e9.clone() : new Kg();
    return r3.update(a3), r3;
  }(t2, r2.captureContext);
  r2.mechanism && Yf(d2, r2.mechanism);
  const l2 = o2 && o2.getEventProcessors ? o2.getEventProcessors() : [], p2 = function() {
    Wg || (Wg = new Kg());
    return Wg;
  }().getScopeData();
  if (n2) {
    Ug(p2, n2.getScopeData());
  }
  if (u2) {
    Ug(p2, u2.getScopeData());
  }
  const m2 = [...r2.attachments || [], ...p2.attachments];
  m2.length && (r2.attachments = m2), $g(d2, p2);
  return hg([...l2, ...pg(), ...p2.eventProcessors], d2, r2).then((e9) => (e9 && function(e10) {
    const a3 = {};
    try {
      e10.exception.values.forEach((e11) => {
        e11.stacktrace.frames.forEach((e12) => {
          e12.debug_id && (e12.abs_path ? a3[e12.abs_path] = e12.debug_id : e12.filename && (a3[e12.filename] = e12.debug_id), delete e12.debug_id);
        });
      });
    } catch (e11) {
    }
    if (0 === Object.keys(a3).length) return;
    e10.debug_meta = e10.debug_meta || {}, e10.debug_meta.images = e10.debug_meta.images || [];
    const r3 = e10.debug_meta.images;
    Object.keys(a3).forEach((e11) => {
      r3.push({ type: "sourcemap", code_file: e11, debug_id: a3[e11] });
    });
  }(e9), "number" == typeof s2 && s2 > 0 ? function(e10, a3, r3) {
    if (!e10) return null;
    const t3 = { ...e10, ...e10.breadcrumbs && { breadcrumbs: e10.breadcrumbs.map((e11) => ({ ...e11, ...e11.data && { data: Ov(e11.data, a3, r3) } })) }, ...e10.user && { user: Ov(e10.user, a3, r3) }, ...e10.contexts && { contexts: Ov(e10.contexts, a3, r3) }, ...e10.extra && { extra: Ov(e10.extra, a3, r3) } };
    e10.contexts && e10.contexts.trace && t3.contexts && (t3.contexts.trace = e10.contexts.trace, e10.contexts.trace.data && (t3.contexts.trace.data = Ov(e10.contexts.trace.data, a3, r3)));
    e10.spans && (t3.spans = e10.spans.map((e11) => {
      const t4 = _g(e11).data;
      return t4 && (e11.data = Ov(t4, a3, r3)), e11;
    }));
    return t3;
  }(e9, s2, i2) : e9));
}
var Sg = /* @__PURE__ */ new WeakMap();
function Tg(e8) {
  if (e8) return function(e9) {
    return e9 instanceof Kg || "function" == typeof e9;
  }(e8) || function(e9) {
    return Object.keys(e9).some((e10) => Eg.includes(e10));
  }(e8) ? { captureContext: e8 } : e8;
}
var Eg = ["user", "level", "extra", "contexts", "tags", "fingerprint", "requestSession", "propagationContext"];
function jg(e8, a2) {
  return eb().captureException(e8, Tg(a2));
}
function Og(e8, a2) {
  const r2 = "string" == typeof a2 ? a2 : void 0, t2 = "string" != typeof a2 ? { captureContext: a2 } : void 0;
  return eb().captureMessage(e8, r2, t2);
}
function Ag(e8, a2) {
  return eb().captureEvent(e8, a2);
}
function Cg(e8, a2) {
  eb().addBreadcrumb(e8, a2);
}
function Rg(...e8) {
  const a2 = eb();
  if (2 === e8.length) {
    const [r2, t2] = e8;
    return r2 ? a2.withScope(() => (a2.getStackTop().scope = r2, t2(r2))) : a2.withScope(t2);
  }
  return a2.withScope(e8[0]);
}
function Ng() {
  return eb().getClient();
}
function Pg() {
  return eb().getScope();
}
function Mg(e8) {
  const a2 = Ng(), r2 = ab(), t2 = Pg(), { release: o2, environment: n2 = lg } = a2 && a2.getOptions() || {}, { userAgent: s2 } = sf.navigator || {}, i2 = fg({ release: o2, environment: n2, user: t2.getUser() || r2.getUser(), ...s2 && { userAgent: s2 }, ...e8 }), d2 = r2.getSession();
  return d2 && "ok" === d2.status && vg(d2, { status: "exited" }), Lg(), r2.setSession(i2), t2.setSession(i2), i2;
}
function Lg() {
  const e8 = ab(), a2 = Pg(), r2 = a2.getSession() || e8.getSession();
  r2 && gg(r2), Dg(), e8.setSession(), a2.setSession();
}
function Dg() {
  const e8 = ab(), a2 = Pg(), r2 = Ng(), t2 = a2.getSession() || e8.getSession();
  t2 && r2 && r2.captureSession && r2.captureSession(t2);
}
function zg(e8 = false) {
  e8 ? Lg() : Dg();
}
function Fg(e8) {
  return e8.transaction;
}
function Bg(e8, a2, r2) {
  const t2 = a2.getOptions(), { publicKey: o2 } = a2.getDsn() || {}, { segment: n2 } = r2 && r2.getUser() || {}, s2 = Cf({ environment: t2.environment || lg, release: t2.release, user_segment: n2, public_key: o2, trace_id: e8 });
  return a2.emit && a2.emit("createDsc", s2), s2;
}
function qg(e8) {
  const a2 = Ng();
  if (!a2) return {};
  const r2 = Bg(_g(e8).trace_id || "", a2, Pg()), t2 = Fg(e8);
  if (!t2) return r2;
  const o2 = t2 && t2._frozenDynamicSamplingContext;
  if (o2) return o2;
  const { sampleRate: n2, source: s2 } = t2.metadata;
  null != n2 && (r2.sample_rate = `${n2}`);
  const i2 = _g(t2);
  return s2 && "url" !== s2 && (r2.transaction = i2.description), r2.sampled = String(Ig(t2)), a2.emit && a2.emit("createDsc", r2), r2;
}
function $g(e8, a2) {
  const { fingerprint: r2, span: t2, breadcrumbs: o2, sdkProcessingMetadata: n2 } = a2;
  !function(e9, a3) {
    const { extra: r3, tags: t3, user: o3, contexts: n3, level: s2, transactionName: i2 } = a3, d2 = Cf(r3);
    d2 && Object.keys(d2).length && (e9.extra = { ...d2, ...e9.extra });
    const c2 = Cf(t3);
    c2 && Object.keys(c2).length && (e9.tags = { ...c2, ...e9.tags });
    const u2 = Cf(o3);
    u2 && Object.keys(u2).length && (e9.user = { ...u2, ...e9.user });
    const l2 = Cf(n3);
    l2 && Object.keys(l2).length && (e9.contexts = { ...l2, ...e9.contexts });
    s2 && (e9.level = s2);
    i2 && (e9.transaction = i2);
  }(e8, a2), t2 && function(e9, a3) {
    e9.contexts = { trace: bg(a3), ...e9.contexts };
    const r3 = Fg(a3);
    if (r3) {
      e9.sdkProcessingMetadata = { dynamicSamplingContext: qg(a3), ...e9.sdkProcessingMetadata };
      const t3 = _g(r3).description;
      t3 && (e9.tags = { transaction: t3, ...e9.tags });
    }
  }(e8, t2), function(e9, a3) {
    e9.fingerprint = e9.fingerprint ? Xf(e9.fingerprint) : [], a3 && (e9.fingerprint = e9.fingerprint.concat(a3));
    e9.fingerprint && !e9.fingerprint.length && delete e9.fingerprint;
  }(e8, r2), function(e9, a3) {
    const r3 = [...e9.breadcrumbs || [], ...a3];
    e9.breadcrumbs = r3.length ? r3 : void 0;
  }(e8, o2), function(e9, a3) {
    e9.sdkProcessingMetadata = { ...e9.sdkProcessingMetadata, ...a3 };
  }(e8, n2);
}
function Ug(e8, a2) {
  const { extra: r2, tags: t2, user: o2, contexts: n2, level: s2, sdkProcessingMetadata: i2, breadcrumbs: d2, fingerprint: c2, eventProcessors: u2, attachments: l2, propagationContext: p2, transactionName: m2, span: h2 } = a2;
  Hg(e8, "extra", r2), Hg(e8, "tags", t2), Hg(e8, "user", o2), Hg(e8, "contexts", n2), Hg(e8, "sdkProcessingMetadata", i2), s2 && (e8.level = s2), m2 && (e8.transactionName = m2), h2 && (e8.span = h2), d2.length && (e8.breadcrumbs = [...e8.breadcrumbs, ...d2]), c2.length && (e8.fingerprint = [...e8.fingerprint, ...c2]), u2.length && (e8.eventProcessors = [...e8.eventProcessors, ...u2]), l2.length && (e8.attachments = [...e8.attachments, ...l2]), e8.propagationContext = { ...e8.propagationContext, ...p2 };
}
function Hg(e8, a2, r2) {
  if (r2 && Object.keys(r2).length) {
    e8[a2] = { ...e8[a2] };
    for (const t2 in r2) Object.prototype.hasOwnProperty.call(r2, t2) && (e8[a2][t2] = r2[t2]);
  }
}
var Wg;
var Kg = class _Kg {
  constructor() {
    this._notifyingListeners = false, this._scopeListeners = [], this._eventProcessors = [], this._breadcrumbs = [], this._attachments = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}, this._sdkProcessingMetadata = {}, this._propagationContext = Vg();
  }
  static clone(e8) {
    return e8 ? e8.clone() : new _Kg();
  }
  clone() {
    const e8 = new _Kg();
    return e8._breadcrumbs = [...this._breadcrumbs], e8._tags = { ...this._tags }, e8._extra = { ...this._extra }, e8._contexts = { ...this._contexts }, e8._user = this._user, e8._level = this._level, e8._span = this._span, e8._session = this._session, e8._transactionName = this._transactionName, e8._fingerprint = this._fingerprint, e8._eventProcessors = [...this._eventProcessors], e8._requestSession = this._requestSession, e8._attachments = [...this._attachments], e8._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }, e8._propagationContext = { ...this._propagationContext }, e8._client = this._client, e8;
  }
  setClient(e8) {
    this._client = e8;
  }
  getClient() {
    return this._client;
  }
  addScopeListener(e8) {
    this._scopeListeners.push(e8);
  }
  addEventProcessor(e8) {
    return this._eventProcessors.push(e8), this;
  }
  setUser(e8) {
    return this._user = e8 || { email: void 0, id: void 0, ip_address: void 0, segment: void 0, username: void 0 }, this._session && vg(this._session, { user: e8 }), this._notifyScopeListeners(), this;
  }
  getUser() {
    return this._user;
  }
  getRequestSession() {
    return this._requestSession;
  }
  setRequestSession(e8) {
    return this._requestSession = e8, this;
  }
  setTags(e8) {
    return this._tags = { ...this._tags, ...e8 }, this._notifyScopeListeners(), this;
  }
  setTag(e8, a2) {
    return this._tags = { ...this._tags, [e8]: a2 }, this._notifyScopeListeners(), this;
  }
  setExtras(e8) {
    return this._extra = { ...this._extra, ...e8 }, this._notifyScopeListeners(), this;
  }
  setExtra(e8, a2) {
    return this._extra = { ...this._extra, [e8]: a2 }, this._notifyScopeListeners(), this;
  }
  setFingerprint(e8) {
    return this._fingerprint = e8, this._notifyScopeListeners(), this;
  }
  setLevel(e8) {
    return this._level = e8, this._notifyScopeListeners(), this;
  }
  setTransactionName(e8) {
    return this._transactionName = e8, this._notifyScopeListeners(), this;
  }
  setContext(e8, a2) {
    return null === a2 ? delete this._contexts[e8] : this._contexts[e8] = a2, this._notifyScopeListeners(), this;
  }
  setSpan(e8) {
    return this._span = e8, this._notifyScopeListeners(), this;
  }
  getSpan() {
    return this._span;
  }
  getTransaction() {
    const e8 = this._span;
    return e8 && e8.transaction;
  }
  setSession(e8) {
    return e8 ? this._session = e8 : delete this._session, this._notifyScopeListeners(), this;
  }
  getSession() {
    return this._session;
  }
  update(e8) {
    if (!e8) return this;
    const a2 = "function" == typeof e8 ? e8(this) : e8;
    if (a2 instanceof _Kg) {
      const e9 = a2.getScopeData();
      this._tags = { ...this._tags, ...e9.tags }, this._extra = { ...this._extra, ...e9.extra }, this._contexts = { ...this._contexts, ...e9.contexts }, e9.user && Object.keys(e9.user).length && (this._user = e9.user), e9.level && (this._level = e9.level), e9.fingerprint.length && (this._fingerprint = e9.fingerprint), a2.getRequestSession() && (this._requestSession = a2.getRequestSession()), e9.propagationContext && (this._propagationContext = e9.propagationContext);
    } else if (Hh(a2)) {
      const a3 = e8;
      this._tags = { ...this._tags, ...a3.tags }, this._extra = { ...this._extra, ...a3.extra }, this._contexts = { ...this._contexts, ...a3.contexts }, a3.user && (this._user = a3.user), a3.level && (this._level = a3.level), a3.fingerprint && (this._fingerprint = a3.fingerprint), a3.requestSession && (this._requestSession = a3.requestSession), a3.propagationContext && (this._propagationContext = a3.propagationContext);
    }
    return this;
  }
  clear() {
    return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, this._requestSession = void 0, this._span = void 0, this._session = void 0, this._notifyScopeListeners(), this._attachments = [], this._propagationContext = Vg(), this;
  }
  addBreadcrumb(e8, a2) {
    const r2 = "number" == typeof a2 ? a2 : 100;
    if (r2 <= 0) return this;
    const t2 = { timestamp: Bv(), ...e8 }, o2 = this._breadcrumbs;
    return o2.push(t2), this._breadcrumbs = o2.length > r2 ? o2.slice(-r2) : o2, this._notifyScopeListeners(), this;
  }
  getLastBreadcrumb() {
    return this._breadcrumbs[this._breadcrumbs.length - 1];
  }
  clearBreadcrumbs() {
    return this._breadcrumbs = [], this._notifyScopeListeners(), this;
  }
  addAttachment(e8) {
    return this._attachments.push(e8), this;
  }
  getAttachments() {
    return this.getScopeData().attachments;
  }
  clearAttachments() {
    return this._attachments = [], this;
  }
  getScopeData() {
    const { _breadcrumbs: e8, _attachments: a2, _contexts: r2, _tags: t2, _extra: o2, _user: n2, _level: s2, _fingerprint: i2, _eventProcessors: d2, _propagationContext: c2, _sdkProcessingMetadata: u2, _transactionName: l2, _span: p2 } = this;
    return { breadcrumbs: e8, attachments: a2, contexts: r2, tags: t2, extra: o2, user: n2, level: s2, fingerprint: i2 || [], eventProcessors: d2, propagationContext: c2, sdkProcessingMetadata: u2, transactionName: l2, span: p2 };
  }
  applyToEvent(e8, a2 = {}, r2 = []) {
    $g(e8, this.getScopeData());
    return hg([...r2, ...pg(), ...this._eventProcessors], e8, a2);
  }
  setSDKProcessingMetadata(e8) {
    return this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...e8 }, this;
  }
  setPropagationContext(e8) {
    return this._propagationContext = e8, this;
  }
  getPropagationContext() {
    return this._propagationContext;
  }
  captureException(e8, a2) {
    const r2 = a2 && a2.event_id ? a2.event_id : Wf();
    if (!this._client) return bf.warn("No client configured on scope - will not capture exception!"), r2;
    const t2 = new Error("Sentry syntheticException");
    return this._client.captureException(e8, { originalException: e8, syntheticException: t2, ...a2, event_id: r2 }, this), r2;
  }
  captureMessage(e8, a2, r2) {
    const t2 = r2 && r2.event_id ? r2.event_id : Wf();
    if (!this._client) return bf.warn("No client configured on scope - will not capture message!"), t2;
    const o2 = new Error(e8);
    return this._client.captureMessage(e8, a2, { originalException: e8, syntheticException: o2, ...r2, event_id: t2 }, this), t2;
  }
  captureEvent(e8, a2) {
    const r2 = a2 && a2.event_id ? a2.event_id : Wf();
    return this._client ? (this._client.captureEvent(e8, { ...a2, event_id: r2 }, this), r2) : (bf.warn("No client configured on scope - will not capture event!"), r2);
  }
  _notifyScopeListeners() {
    this._notifyingListeners || (this._notifyingListeners = true, this._scopeListeners.forEach((e8) => {
      e8(this);
    }), this._notifyingListeners = false);
  }
};
function Vg() {
  return { traceId: Wf(), spanId: Wf().substring(16) };
}
var Gg = "7.119.0";
var Yg = parseFloat(Gg);
var Jg = 100;
var Xg = class {
  constructor(e8, a2, r2, t2 = Yg) {
    let o2, n2;
    this._version = t2, a2 ? o2 = a2 : (o2 = new Kg(), o2.setClient(e8)), r2 ? n2 = r2 : (n2 = new Kg(), n2.setClient(e8)), this._stack = [{ scope: o2 }], e8 && this.bindClient(e8), this._isolationScope = n2;
  }
  isOlderThan(e8) {
    return this._version < e8;
  }
  bindClient(e8) {
    const a2 = this.getStackTop();
    a2.client = e8, a2.scope.setClient(e8), e8 && e8.setupIntegrations && e8.setupIntegrations();
  }
  pushScope() {
    const e8 = this.getScope().clone();
    return this.getStack().push({ client: this.getClient(), scope: e8 }), e8;
  }
  popScope() {
    return !(this.getStack().length <= 1) && !!this.getStack().pop();
  }
  withScope(e8) {
    const a2 = this.pushScope();
    let r2;
    try {
      r2 = e8(a2);
    } catch (e9) {
      throw this.popScope(), e9;
    }
    return Kh(r2) ? r2.then((e9) => (this.popScope(), e9), (e9) => {
      throw this.popScope(), e9;
    }) : (this.popScope(), r2);
  }
  getClient() {
    return this.getStackTop().client;
  }
  getScope() {
    return this.getStackTop().scope;
  }
  getIsolationScope() {
    return this._isolationScope;
  }
  getStack() {
    return this._stack;
  }
  getStackTop() {
    return this._stack[this._stack.length - 1];
  }
  captureException(e8, a2) {
    const r2 = this._lastEventId = a2 && a2.event_id ? a2.event_id : Wf(), t2 = new Error("Sentry syntheticException");
    return this.getScope().captureException(e8, { originalException: e8, syntheticException: t2, ...a2, event_id: r2 }), r2;
  }
  captureMessage(e8, a2, r2) {
    const t2 = this._lastEventId = r2 && r2.event_id ? r2.event_id : Wf(), o2 = new Error(e8);
    return this.getScope().captureMessage(e8, a2, { originalException: e8, syntheticException: o2, ...r2, event_id: t2 }), t2;
  }
  captureEvent(e8, a2) {
    const r2 = a2 && a2.event_id ? a2.event_id : Wf();
    return e8.type || (this._lastEventId = r2), this.getScope().captureEvent(e8, { ...a2, event_id: r2 }), r2;
  }
  lastEventId() {
    return this._lastEventId;
  }
  addBreadcrumb(e8, a2) {
    const { scope: r2, client: t2 } = this.getStackTop();
    if (!t2) return;
    const { beforeBreadcrumb: o2 = null, maxBreadcrumbs: n2 = Jg } = t2.getOptions && t2.getOptions() || {};
    if (n2 <= 0) return;
    const s2 = { timestamp: Bv(), ...e8 }, i2 = o2 ? gf(() => o2(s2, a2)) : s2;
    null !== i2 && (t2.emit && t2.emit("beforeAddBreadcrumb", i2, a2), r2.addBreadcrumb(i2, n2));
  }
  setUser(e8) {
    this.getScope().setUser(e8), this.getIsolationScope().setUser(e8);
  }
  setTags(e8) {
    this.getScope().setTags(e8), this.getIsolationScope().setTags(e8);
  }
  setExtras(e8) {
    this.getScope().setExtras(e8), this.getIsolationScope().setExtras(e8);
  }
  setTag(e8, a2) {
    this.getScope().setTag(e8, a2), this.getIsolationScope().setTag(e8, a2);
  }
  setExtra(e8, a2) {
    this.getScope().setExtra(e8, a2), this.getIsolationScope().setExtra(e8, a2);
  }
  setContext(e8, a2) {
    this.getScope().setContext(e8, a2), this.getIsolationScope().setContext(e8, a2);
  }
  configureScope(e8) {
    const { scope: a2, client: r2 } = this.getStackTop();
    r2 && e8(a2);
  }
  run(e8) {
    const a2 = Zg(this);
    try {
      e8(this);
    } finally {
      Zg(a2);
    }
  }
  getIntegration(e8) {
    const a2 = this.getClient();
    if (!a2) return null;
    try {
      return a2.getIntegration(e8);
    } catch (a3) {
      return ug && bf.warn(`Cannot retrieve integration ${e8.id} from the current Hub`), null;
    }
  }
  startTransaction(e8, a2) {
    const r2 = this._callExtensionMethod("startTransaction", e8, a2);
    if (ug && !r2) {
      this.getClient() ? bf.warn("Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n") : bf.warn("Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'");
    }
    return r2;
  }
  traceHeaders() {
    return this._callExtensionMethod("traceHeaders");
  }
  captureSession(e8 = false) {
    if (e8) return this.endSession();
    this._sendSessionUpdate();
  }
  endSession() {
    const e8 = this.getStackTop().scope, a2 = e8.getSession();
    a2 && gg(a2), this._sendSessionUpdate(), e8.setSession();
  }
  startSession(e8) {
    const { scope: a2, client: r2 } = this.getStackTop(), { release: t2, environment: o2 = lg } = r2 && r2.getOptions() || {}, { userAgent: n2 } = sf.navigator || {}, s2 = fg({ release: t2, environment: o2, user: a2.getUser(), ...n2 && { userAgent: n2 }, ...e8 }), i2 = a2.getSession && a2.getSession();
    return i2 && "ok" === i2.status && vg(i2, { status: "exited" }), this.endSession(), a2.setSession(s2), s2;
  }
  shouldSendDefaultPii() {
    const e8 = this.getClient(), a2 = e8 && e8.getOptions();
    return Boolean(a2 && a2.sendDefaultPii);
  }
  _sendSessionUpdate() {
    const { scope: e8, client: a2 } = this.getStackTop(), r2 = e8.getSession();
    r2 && a2 && a2.captureSession && a2.captureSession(r2);
  }
  _callExtensionMethod(e8, ...a2) {
    const r2 = Qg().__SENTRY__;
    if (r2 && r2.extensions && "function" == typeof r2.extensions[e8]) return r2.extensions[e8].apply(this, a2);
    ug && bf.warn(`Extension method ${e8} couldn't be found, doing nothing.`);
  }
};
function Qg() {
  return sf.__SENTRY__ = sf.__SENTRY__ || { extensions: {}, hub: void 0 }, sf;
}
function Zg(e8) {
  const a2 = Qg(), r2 = rb(a2);
  return tb(a2, e8), r2;
}
function eb() {
  const e8 = Qg();
  if (e8.__SENTRY__ && e8.__SENTRY__.acs) {
    const a2 = e8.__SENTRY__.acs.getCurrentHub();
    if (a2) return a2;
  }
  return function(e9 = Qg()) {
    a2 = e9, a2 && a2.__SENTRY__ && a2.__SENTRY__.hub && !rb(e9).isOlderThan(Yg) || tb(e9, new Xg());
    var a2;
    return rb(e9);
  }(e8);
}
function ab() {
  return eb().getIsolationScope();
}
function rb(e8) {
  return cf("hub", () => new Xg(), e8);
}
function tb(e8, a2) {
  if (!e8) return false;
  return (e8.__SENTRY__ = e8.__SENTRY__ || {}).hub = a2, true;
}
function ob(e8) {
  return (e8 || eb()).getScope().getTransaction();
}
var nb = false;
function sb() {
  const e8 = ob();
  if (e8) {
    const a2 = "internal_error";
    ug && bf.log(`[Tracing] Transaction: ${a2} -> Global error occured`), e8.setStatus(a2);
  }
}
var ib;
function db(e8, a2) {
  e8.setTag("http.status_code", String(a2)), e8.setData("http.response.status_code", a2);
  const r2 = function(e9) {
    if (e9 < 400 && e9 >= 100) return "ok";
    if (e9 >= 400 && e9 < 500) switch (e9) {
      case 401:
        return "unauthenticated";
      case 403:
        return "permission_denied";
      case 404:
        return "not_found";
      case 409:
        return "already_exists";
      case 413:
        return "failed_precondition";
      case 429:
        return "resource_exhausted";
      default:
        return "invalid_argument";
    }
    if (e9 >= 500 && e9 < 600) switch (e9) {
      case 501:
        return "unimplemented";
      case 503:
        return "unavailable";
      case 504:
        return "deadline_exceeded";
      default:
        return "internal_error";
    }
    return "unknown_error";
  }(a2);
  "unknown_error" !== r2 && e8.setStatus(r2);
}
function cb(e8) {
  if ("boolean" == typeof __SENTRY_TRACING__ && !__SENTRY_TRACING__) return false;
  const a2 = Ng(), r2 = e8 || a2 && a2.getOptions();
  return !!r2 && (r2.enableTracing || "tracesSampleRate" in r2 || "tracesSampler" in r2);
}
function ub(e8) {
  if (!cb()) return;
  const a2 = function(e9) {
    if (e9.startTime) {
      const a3 = { ...e9 };
      return a3.startTimestamp = yg(e9.startTime), delete a3.startTime, a3;
    }
    return e9;
  }(e8), r2 = eb(), t2 = e8.scope ? e8.scope.getSpan() : lb();
  if (e8.onlyIfParent && !t2) return;
  const o2 = (e8.scope || Pg()).clone();
  return function(e9, { parentSpan: a3, spanContext: r3, forceTransaction: t3, scope: o3 }) {
    if (!cb()) return;
    const n2 = ab();
    let s2;
    if (a3 && !t3) s2 = a3.startChild(r3);
    else if (a3) {
      const t4 = qg(a3), { traceId: o4, spanId: n3 } = a3.spanContext(), i2 = Ig(a3);
      s2 = e9.startTransaction({ traceId: o4, parentSpanId: n3, parentSampled: i2, ...r3, metadata: { dynamicSamplingContext: t4, ...r3.metadata } });
    } else {
      const { traceId: a4, dsc: t4, parentSpanId: i2, sampled: d2 } = { ...n2.getPropagationContext(), ...o3.getPropagationContext() };
      s2 = e9.startTransaction({ traceId: a4, parentSpanId: i2, parentSampled: d2, ...r3, metadata: { dynamicSamplingContext: t4, ...r3.metadata } });
    }
    return o3.setSpan(s2), function(e10, a4, r4) {
      e10 && (Sf(e10, mb, r4), Sf(e10, pb, a4));
    }(s2, o3, n2), s2;
  }(r2, { parentSpan: t2, spanContext: a2, forceTransaction: e8.forceTransaction, scope: o2 });
}
function lb() {
  return Pg().getSpan();
}
sb.tag = "sentry_tracingErrorCallback", function(e8) {
  e8.Ok = "ok";
  e8.DeadlineExceeded = "deadline_exceeded";
  e8.Unauthenticated = "unauthenticated";
  e8.PermissionDenied = "permission_denied";
  e8.NotFound = "not_found";
  e8.ResourceExhausted = "resource_exhausted";
  e8.InvalidArgument = "invalid_argument";
  e8.Unimplemented = "unimplemented";
  e8.Unavailable = "unavailable";
  e8.InternalError = "internal_error";
  e8.UnknownError = "unknown_error";
  e8.Cancelled = "cancelled";
  e8.AlreadyExists = "already_exists";
  e8.FailedPrecondition = "failed_precondition";
  e8.Aborted = "aborted";
  e8.OutOfRange = "out_of_range";
  e8.DataLoss = "data_loss";
}(ib || (ib = {}));
var pb = "_sentryScope";
var mb = "_sentryIsolationScope";
var hb = "sentry.source";
var fb = "sentry.sample_rate";
var vb = "sentry.op";
var gb = "sentry.origin";
var bb = class {
  constructor(e8 = 1e3) {
    this._maxlen = e8, this.spans = [];
  }
  add(e8) {
    this.spans.length > this._maxlen ? e8.spanRecorder = void 0 : this.spans.push(e8);
  }
};
var wb = class _wb {
  constructor(e8 = {}) {
    this._traceId = e8.traceId || Wf(), this._spanId = e8.spanId || Wf().substring(16), this._startTime = e8.startTimestamp || qv(), this.tags = e8.tags ? { ...e8.tags } : {}, this.data = e8.data ? { ...e8.data } : {}, this.instrumenter = e8.instrumenter || "sentry", this._attributes = {}, this.setAttributes({ [gb]: e8.origin || "manual", [vb]: e8.op, ...e8.attributes }), this._name = e8.name || e8.description, e8.parentSpanId && (this._parentSpanId = e8.parentSpanId), "sampled" in e8 && (this._sampled = e8.sampled), e8.status && (this._status = e8.status), e8.endTimestamp && (this._endTime = e8.endTimestamp), void 0 !== e8.exclusiveTime && (this._exclusiveTime = e8.exclusiveTime), this._measurements = e8.measurements ? { ...e8.measurements } : {};
  }
  get name() {
    return this._name || "";
  }
  set name(e8) {
    this.updateName(e8);
  }
  get description() {
    return this._name;
  }
  set description(e8) {
    this._name = e8;
  }
  get traceId() {
    return this._traceId;
  }
  set traceId(e8) {
    this._traceId = e8;
  }
  get spanId() {
    return this._spanId;
  }
  set spanId(e8) {
    this._spanId = e8;
  }
  set parentSpanId(e8) {
    this._parentSpanId = e8;
  }
  get parentSpanId() {
    return this._parentSpanId;
  }
  get sampled() {
    return this._sampled;
  }
  set sampled(e8) {
    this._sampled = e8;
  }
  get attributes() {
    return this._attributes;
  }
  set attributes(e8) {
    this._attributes = e8;
  }
  get startTimestamp() {
    return this._startTime;
  }
  set startTimestamp(e8) {
    this._startTime = e8;
  }
  get endTimestamp() {
    return this._endTime;
  }
  set endTimestamp(e8) {
    this._endTime = e8;
  }
  get status() {
    return this._status;
  }
  set status(e8) {
    this._status = e8;
  }
  get op() {
    return this._attributes[vb];
  }
  set op(e8) {
    this.setAttribute(vb, e8);
  }
  get origin() {
    return this._attributes[gb];
  }
  set origin(e8) {
    this.setAttribute(gb, e8);
  }
  spanContext() {
    const { _spanId: e8, _traceId: a2, _sampled: r2 } = this;
    return { spanId: e8, traceId: a2, traceFlags: r2 ? 1 : 0 };
  }
  startChild(e8) {
    const a2 = new _wb({ ...e8, parentSpanId: this._spanId, sampled: this._sampled, traceId: this._traceId });
    a2.spanRecorder = this.spanRecorder, a2.spanRecorder && a2.spanRecorder.add(a2);
    const r2 = Fg(this);
    if (a2.transaction = r2, ug && r2) {
      const t2 = `[Tracing] Starting '${e8 && e8.op || "< unknown op >"}' span on transaction '${_g(a2).description || "< unknown name >"}' (${r2.spanContext().spanId}).`;
      bf.log(t2), this._logMessage = t2;
    }
    return a2;
  }
  setTag(e8, a2) {
    return this.tags = { ...this.tags, [e8]: a2 }, this;
  }
  setData(e8, a2) {
    return this.data = { ...this.data, [e8]: a2 }, this;
  }
  setAttribute(e8, a2) {
    void 0 === a2 ? delete this._attributes[e8] : this._attributes[e8] = a2;
  }
  setAttributes(e8) {
    Object.keys(e8).forEach((a2) => this.setAttribute(a2, e8[a2]));
  }
  setStatus(e8) {
    return this._status = e8, this;
  }
  setHttpStatus(e8) {
    return db(this, e8), this;
  }
  setName(e8) {
    this.updateName(e8);
  }
  updateName(e8) {
    return this._name = e8, this;
  }
  isSuccess() {
    return "ok" === this._status;
  }
  finish(e8) {
    return this.end(e8);
  }
  end(e8) {
    if (this._endTime) return;
    const a2 = Fg(this);
    if (ug && a2 && a2.spanContext().spanId !== this._spanId) {
      const e9 = this._logMessage;
      e9 && bf.log(e9.replace("Starting", "Finishing"));
    }
    this._endTime = yg(e8);
  }
  toTraceparent() {
    return wg(this);
  }
  toContext() {
    return Cf({ data: this._getData(), description: this._name, endTimestamp: this._endTime, op: this.op, parentSpanId: this._parentSpanId, sampled: this._sampled, spanId: this._spanId, startTimestamp: this._startTime, status: this._status, tags: this.tags, traceId: this._traceId });
  }
  updateWithContext(e8) {
    return this.data = e8.data || {}, this._name = e8.name || e8.description, this._endTime = e8.endTimestamp, this.op = e8.op, this._parentSpanId = e8.parentSpanId, this._sampled = e8.sampled, this._spanId = e8.spanId || this._spanId, this._startTime = e8.startTimestamp || this._startTime, this._status = e8.status, this.tags = e8.tags || {}, this._traceId = e8.traceId || this._traceId, this;
  }
  getTraceContext() {
    return bg(this);
  }
  getSpanJSON() {
    return Cf({ data: this._getData(), description: this._name, op: this._attributes[vb], parent_span_id: this._parentSpanId, span_id: this._spanId, start_timestamp: this._startTime, status: this._status, tags: Object.keys(this.tags).length > 0 ? this.tags : void 0, timestamp: this._endTime, trace_id: this._traceId, origin: this._attributes[gb], _metrics_summary: void 0, profile_id: this._attributes.profile_id, exclusive_time: this._exclusiveTime, measurements: Object.keys(this._measurements).length > 0 ? this._measurements : void 0 });
  }
  isRecording() {
    return !this._endTime && !!this._sampled;
  }
  toJSON() {
    return this.getSpanJSON();
  }
  _getData() {
    const { data: e8, _attributes: a2 } = this, r2 = Object.keys(e8).length > 0, t2 = Object.keys(a2).length > 0;
    if (r2 || t2) return r2 && t2 ? { ...e8, ...a2 } : r2 ? e8 : a2;
  }
};
var yb = class extends wb {
  constructor(e8, a2) {
    super(e8), this._contexts = {}, this._hub = a2 || eb(), this._name = e8.name || "", this._metadata = { ...e8.metadata }, this._trimEnd = e8.trimEnd, this.transaction = this;
    const r2 = this._metadata.dynamicSamplingContext;
    r2 && (this._frozenDynamicSamplingContext = { ...r2 });
  }
  get name() {
    return this._name;
  }
  set name(e8) {
    this.setName(e8);
  }
  get metadata() {
    return { source: "custom", spanMetadata: {}, ...this._metadata, ...this._attributes[hb] && { source: this._attributes[hb] }, ...this._attributes[fb] && { sampleRate: this._attributes[fb] } };
  }
  set metadata(e8) {
    this._metadata = e8;
  }
  setName(e8, a2 = "custom") {
    this._name = e8, this.setAttribute(hb, a2);
  }
  updateName(e8) {
    return this._name = e8, this;
  }
  initSpanRecorder(e8 = 1e3) {
    this.spanRecorder || (this.spanRecorder = new bb(e8)), this.spanRecorder.add(this);
  }
  setContext(e8, a2) {
    null === a2 ? delete this._contexts[e8] : this._contexts[e8] = a2;
  }
  setMeasurement(e8, a2, r2 = "") {
    this._measurements[e8] = { value: a2, unit: r2 };
  }
  setMetadata(e8) {
    this._metadata = { ...this._metadata, ...e8 };
  }
  end(e8) {
    const a2 = yg(e8), r2 = this._finishTransaction(a2);
    if (r2) return this._hub.captureEvent(r2);
  }
  toContext() {
    return Cf({ ...super.toContext(), name: this._name, trimEnd: this._trimEnd });
  }
  updateWithContext(e8) {
    return super.updateWithContext(e8), this._name = e8.name || "", this._trimEnd = e8.trimEnd, this;
  }
  getDynamicSamplingContext() {
    return qg(this);
  }
  setHub(e8) {
    this._hub = e8;
  }
  getProfileId() {
    if (void 0 !== this._contexts && void 0 !== this._contexts.profile) return this._contexts.profile.profile_id;
  }
  _finishTransaction(e8) {
    if (void 0 !== this._endTime) return;
    this._name || (ug && bf.warn("Transaction has no name, falling back to `<unlabeled transaction>`."), this._name = "<unlabeled transaction>"), super.end(e8);
    const a2 = this._hub.getClient();
    if (a2 && a2.emit && a2.emit("finishTransaction", this), true !== this._sampled) return ug && bf.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled."), void (a2 && a2.recordDroppedEvent("sample_rate", "transaction"));
    const r2 = this.spanRecorder ? this.spanRecorder.spans.filter((e9) => e9 !== this && _g(e9).timestamp) : [];
    if (this._trimEnd && r2.length > 0) {
      const e9 = r2.map((e10) => _g(e10).timestamp).filter(Boolean);
      this._endTime = e9.reduce((e10, a3) => e10 > a3 ? e10 : a3);
    }
    const { scope: t2, isolationScope: o2 } = { scope: (n2 = this)[pb], isolationScope: n2[mb] };
    var n2;
    const { metadata: s2 } = this, { source: i2 } = s2, d2 = { contexts: { ...this._contexts, trace: bg(this) }, spans: r2, start_timestamp: this._startTime, tags: this.tags, timestamp: this._endTime, transaction: this._name, type: "transaction", sdkProcessingMetadata: { ...s2, capturedSpanScope: t2, capturedSpanIsolationScope: o2, ...Cf({ dynamicSamplingContext: qg(this) }) }, _metrics_summary: void 0, ...i2 && { transaction_info: { source: i2 } } };
    return Object.keys(this._measurements).length > 0 && (ug && bf.log("[Measurements] Adding measurements to transaction", JSON.stringify(this._measurements, void 0, 2)), d2.measurements = this._measurements), ug && bf.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`), d2;
  }
};
var xb = { idleTimeout: 1e3, finalTimeout: 3e4, heartbeatInterval: 5e3 };
var _b = ["heartbeatFailed", "idleTimeout", "documentHidden", "finalTimeout", "externalFinish", "cancelled"];
var Ib = class extends bb {
  constructor(e8, a2, r2, t2) {
    super(t2), this._pushActivity = e8, this._popActivity = a2, this.transactionSpanId = r2;
  }
  add(e8) {
    if (e8.spanContext().spanId !== this.transactionSpanId) {
      const a2 = e8.end;
      e8.end = (...r2) => (this._popActivity(e8.spanContext().spanId), a2.apply(e8, r2)), void 0 === _g(e8).timestamp && this._pushActivity(e8.spanContext().spanId);
    }
    super.add(e8);
  }
};
var kb = class extends yb {
  constructor(e8, a2, r2 = xb.idleTimeout, t2 = xb.finalTimeout, o2 = xb.heartbeatInterval, n2 = false, s2 = false) {
    super(e8, a2), this._idleHub = a2, this._idleTimeout = r2, this._finalTimeout = t2, this._heartbeatInterval = o2, this._onScope = n2, this.activities = {}, this._heartbeatCounter = 0, this._finished = false, this._idleTimeoutCanceledPermanently = false, this._beforeFinishCallbacks = [], this._finishReason = _b[4], this._autoFinishAllowed = !s2, n2 && (ug && bf.log(`Setting idle transaction on scope. Span ID: ${this.spanContext().spanId}`), a2.getScope().setSpan(this)), s2 || this._restartIdleTimeout(), setTimeout(() => {
      this._finished || (this.setStatus("deadline_exceeded"), this._finishReason = _b[3], this.end());
    }, this._finalTimeout);
  }
  end(e8) {
    const a2 = yg(e8);
    if (this._finished = true, this.activities = {}, "ui.action.click" === this.op && this.setAttribute("finishReason", this._finishReason), this.spanRecorder) {
      ug && bf.log("[Tracing] finishing IdleTransaction", new Date(1e3 * a2).toISOString(), this.op);
      for (const e9 of this._beforeFinishCallbacks) e9(this, a2);
      this.spanRecorder.spans = this.spanRecorder.spans.filter((e9) => {
        if (e9.spanContext().spanId === this.spanContext().spanId) return true;
        _g(e9).timestamp || (e9.setStatus("cancelled"), e9.end(a2), ug && bf.log("[Tracing] cancelling span since transaction ended early", JSON.stringify(e9, void 0, 2)));
        const { start_timestamp: r2, timestamp: t2 } = _g(e9), o2 = r2 && r2 < a2, n2 = (this._finalTimeout + this._idleTimeout) / 1e3, s2 = t2 && r2 && t2 - r2 < n2;
        if (ug) {
          const a3 = JSON.stringify(e9, void 0, 2);
          o2 ? s2 || bf.log("[Tracing] discarding Span since it finished after Transaction final timeout", a3) : bf.log("[Tracing] discarding Span since it happened after Transaction was finished", a3);
        }
        return o2 && s2;
      }), ug && bf.log("[Tracing] flushing IdleTransaction");
    } else ug && bf.log("[Tracing] No active IdleTransaction");
    if (this._onScope) {
      const e9 = this._idleHub.getScope();
      e9.getTransaction() === this && e9.setSpan(void 0);
    }
    return super.end(e8);
  }
  registerBeforeFinishCallback(e8) {
    this._beforeFinishCallbacks.push(e8);
  }
  initSpanRecorder(e8) {
    if (!this.spanRecorder) {
      const a2 = (e9) => {
        this._finished || this._pushActivity(e9);
      }, r2 = (e9) => {
        this._finished || this._popActivity(e9);
      };
      this.spanRecorder = new Ib(a2, r2, this.spanContext().spanId, e8), ug && bf.log("Starting heartbeat"), this._pingHeartbeat();
    }
    this.spanRecorder.add(this);
  }
  cancelIdleTimeout(e8, { restartOnChildSpanChange: a2 } = { restartOnChildSpanChange: true }) {
    this._idleTimeoutCanceledPermanently = false === a2, this._idleTimeoutID && (clearTimeout(this._idleTimeoutID), this._idleTimeoutID = void 0, 0 === Object.keys(this.activities).length && this._idleTimeoutCanceledPermanently && (this._finishReason = _b[5], this.end(e8)));
  }
  setFinishReason(e8) {
    this._finishReason = e8;
  }
  sendAutoFinishSignal() {
    this._autoFinishAllowed || (ug && bf.log("[Tracing] Received finish signal for idle transaction."), this._restartIdleTimeout(), this._autoFinishAllowed = true);
  }
  _restartIdleTimeout(e8) {
    this.cancelIdleTimeout(), this._idleTimeoutID = setTimeout(() => {
      this._finished || 0 !== Object.keys(this.activities).length || (this._finishReason = _b[1], this.end(e8));
    }, this._idleTimeout);
  }
  _pushActivity(e8) {
    this.cancelIdleTimeout(void 0, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently }), ug && bf.log(`[Tracing] pushActivity: ${e8}`), this.activities[e8] = true, ug && bf.log("[Tracing] new activities count", Object.keys(this.activities).length);
  }
  _popActivity(e8) {
    if (this.activities[e8] && (ug && bf.log(`[Tracing] popActivity ${e8}`), delete this.activities[e8], ug && bf.log("[Tracing] new activities count", Object.keys(this.activities).length)), 0 === Object.keys(this.activities).length) {
      const e9 = qv();
      this._idleTimeoutCanceledPermanently ? this._autoFinishAllowed && (this._finishReason = _b[5], this.end(e9)) : this._restartIdleTimeout(e9 + this._idleTimeout / 1e3);
    }
  }
  _beat() {
    if (this._finished) return;
    const e8 = Object.keys(this.activities).join("");
    e8 === this._prevHeartbeatString ? this._heartbeatCounter++ : this._heartbeatCounter = 1, this._prevHeartbeatString = e8, this._heartbeatCounter >= 3 ? this._autoFinishAllowed && (ug && bf.log("[Tracing] Transaction finished because of no change for 3 heart beats"), this.setStatus("deadline_exceeded"), this._finishReason = _b[0], this.end()) : this._pingHeartbeat();
  }
  _pingHeartbeat() {
    ug && bf.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`), setTimeout(() => {
      this._beat();
    }, this._heartbeatInterval);
  }
};
function Sb(e8, a2, r2) {
  if (!cb(a2)) return e8.sampled = false, e8;
  if (void 0 !== e8.sampled) return e8.setAttribute(fb, Number(e8.sampled)), e8;
  let t2;
  return "function" == typeof a2.tracesSampler ? (t2 = a2.tracesSampler(r2), e8.setAttribute(fb, Number(t2))) : void 0 !== r2.parentSampled ? t2 = r2.parentSampled : void 0 !== a2.tracesSampleRate ? (t2 = a2.tracesSampleRate, e8.setAttribute(fb, Number(t2))) : (t2 = 1, e8.setAttribute(fb, t2)), Tb(t2) ? t2 ? (e8.sampled = Math.random() < t2, e8.sampled ? (ug && bf.log(`[Tracing] starting ${e8.op} transaction - ${_g(e8).description}`), e8) : (ug && bf.log(`[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(t2)})`), e8)) : (ug && bf.log("[Tracing] Discarding transaction because " + ("function" == typeof a2.tracesSampler ? "tracesSampler returned 0 or false" : "a negative sampling decision was inherited or tracesSampleRate is set to 0")), e8.sampled = false, e8) : (ug && bf.warn("[Tracing] Discarding transaction because of invalid sample rate."), e8.sampled = false, e8);
}
function Tb(e8) {
  return Vh(e8) || "number" != typeof e8 && "boolean" != typeof e8 ? (ug && bf.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(e8)} of type ${JSON.stringify(typeof e8)}.`), false) : !(e8 < 0 || e8 > 1) || (ug && bf.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${e8}.`), false);
}
function Eb() {
  const e8 = this.getScope().getSpan();
  return e8 ? { "sentry-trace": wg(e8) } : {};
}
function jb(e8, a2) {
  const r2 = this.getClient(), t2 = r2 && r2.getOptions() || {}, o2 = t2.instrumenter || "sentry", n2 = e8.instrumenter || "sentry";
  o2 !== n2 && (ug && bf.error(`A transaction was started with instrumenter=\`${n2}\`, but the SDK is configured with the \`${o2}\` instrumenter.
The transaction will not be sampled. Please use the ${o2} instrumentation to start transactions.`), e8.sampled = false);
  let s2 = new yb(e8, this);
  return s2 = Sb(s2, t2, { name: e8.name, parentSampled: e8.parentSampled, transactionContext: e8, attributes: { ...e8.data, ...e8.attributes }, ...a2 }), s2.isRecording() && s2.initSpanRecorder(t2._experiments && t2._experiments.maxSpans), r2 && r2.emit && r2.emit("startTransaction", s2), s2;
}
function Ob(e8, a2, r2, t2, o2, n2, s2, i2 = false) {
  const d2 = e8.getClient(), c2 = d2 && d2.getOptions() || {};
  let u2 = new kb(a2, e8, r2, t2, s2, o2, i2);
  return u2 = Sb(u2, c2, { name: a2.name, parentSampled: a2.parentSampled, transactionContext: a2, attributes: { ...a2.data, ...a2.attributes }, ...n2 }), u2.isRecording() && u2.initSpanRecorder(c2._experiments && c2._experiments.maxSpans), d2 && d2.emit && d2.emit("startTransaction", u2), u2;
}
function Ab() {
  const e8 = Qg();
  e8.__SENTRY__ && (e8.__SENTRY__.extensions = e8.__SENTRY__.extensions || {}, e8.__SENTRY__.extensions.startTransaction || (e8.__SENTRY__.extensions.startTransaction = jb), e8.__SENTRY__.extensions.traceHeaders || (e8.__SENTRY__.extensions.traceHeaders = Eb), nb || (nb = true, mv(sb), vv(sb)));
}
function Cb(e8, a2) {
  return r2 = { sentry_key: e8.publicKey, sentry_version: "7", ...a2 && { sentry_client: `${a2.name}/${a2.version}` } }, Object.keys(r2).map((e9) => `${encodeURIComponent(e9)}=${encodeURIComponent(r2[e9])}`).join("&");
  var r2;
}
var Rb = [];
function Nb(e8) {
  const a2 = e8.defaultIntegrations || [], r2 = e8.integrations;
  let t2;
  a2.forEach((e9) => {
    e9.isDefaultInstance = true;
  }), t2 = Array.isArray(r2) ? [...a2, ...r2] : "function" == typeof r2 ? Xf(r2(a2)) : a2;
  const o2 = function(e9) {
    const a3 = {};
    return e9.forEach((e10) => {
      const { name: r3 } = e10, t3 = a3[r3];
      t3 && !t3.isDefaultInstance && e10.isDefaultInstance || (a3[r3] = e10);
    }), Object.keys(a3).map((e10) => a3[e10]);
  }(t2), n2 = function(e9, a3) {
    for (let r3 = 0; r3 < e9.length; r3++) if (true === a3(e9[r3])) return r3;
    return -1;
  }(o2, (e9) => "Debug" === e9.name);
  if (-1 !== n2) {
    const [e9] = o2.splice(n2, 1);
    o2.push(e9);
  }
  return o2;
}
function Pb(e8, a2) {
  for (const r2 of a2) r2 && r2.afterAllSetup && r2.afterAllSetup(e8);
}
function Mb(e8, a2, r2) {
  if (r2[a2.name]) ug && bf.log(`Integration skipped because it was already installed: ${a2.name}`);
  else {
    if (r2[a2.name] = a2, -1 === Rb.indexOf(a2.name) && (a2.setupOnce(mg, eb), Rb.push(a2.name)), a2.setup && "function" == typeof a2.setup && a2.setup(e8), e8.on && "function" == typeof a2.preprocessEvent) {
      const r3 = a2.preprocessEvent.bind(a2);
      e8.on("preprocessEvent", (a3, t2) => r3(a3, t2, e8));
    }
    if (e8.addEventProcessor && "function" == typeof a2.processEvent) {
      const r3 = a2.processEvent.bind(a2), t2 = Object.assign((a3, t3) => r3(a3, t3, e8), { id: a2.name });
      e8.addEventProcessor(t2);
    }
    ug && bf.log(`Integration installed: ${a2.name}`);
  }
}
function Lb(e8, a2) {
  return Object.assign(function(...e9) {
    return a2(...e9);
  }, { id: e8 });
}
function Db(e8, a2, r2, t2) {
  const o2 = { sent_at: (/* @__PURE__ */ new Date()).toISOString() };
  r2 && r2.sdk && (o2.sdk = { name: r2.sdk.name, version: r2.sdk.version }), t2 && a2 && (o2.dsn = yf(a2));
  const n2 = function(e9) {
    const a3 = function(e10) {
      let a4 = "";
      for (const r3 of e10) {
        const e11 = Object.entries(r3.tags), t3 = e11.length > 0 ? `|#${e11.map(([e12, a5]) => `${e12}:${a5}`).join(",")}` : "";
        a4 += `${r3.name}@${r3.unit}:${r3.metric}|${r3.metricType}${t3}|T${r3.timestamp}
`;
      }
      return a4;
    }(e9);
    return [{ type: "statsd", length: a3.length }, a3];
  }(e8);
  return Xv(o2, [n2]);
}
var zb = "Not capturing exception because it's already been captured.";
var Fb = class {
  constructor(e8) {
    if (this._options = e8, this._integrations = {}, this._integrationsInitialized = false, this._numProcessing = 0, this._outcomes = {}, this._hooks = {}, this._eventProcessors = [], e8.dsn ? this._dsn = _f(e8.dsn) : ug && bf.warn("No DSN provided, client will not send events."), this._dsn) {
      const a2 = function(e9, a3 = {}) {
        const r2 = "string" == typeof a3 ? a3 : a3.tunnel, t2 = "string" != typeof a3 && a3._metadata ? a3._metadata.sdk : void 0;
        return r2 || `${function(e10) {
          return `${function(e11) {
            const a4 = e11.protocol ? `${e11.protocol}:` : "", r3 = e11.port ? `:${e11.port}` : "";
            return `${a4}//${e11.host}${r3}${e11.path ? `/${e11.path}` : ""}/api/`;
          }(e10)}${e10.projectId}/envelope/`;
        }(e9)}?${Cb(e9, t2)}`;
      }(this._dsn, e8);
      this._transport = e8.transport({ tunnel: this._options.tunnel, recordDroppedEvent: this.recordDroppedEvent.bind(this), ...e8.transportOptions, url: a2 });
    }
  }
  captureException(e8, a2, r2) {
    if (Jf(e8)) return void (ug && bf.log(zb));
    let t2 = a2 && a2.event_id;
    return this._process(this.eventFromException(e8, a2).then((e9) => this._captureEvent(e9, a2, r2)).then((e9) => {
      t2 = e9;
    })), t2;
  }
  captureMessage(e8, a2, r2, t2) {
    let o2 = r2 && r2.event_id;
    const n2 = $h(e8) ? e8 : String(e8), s2 = Uh(e8) ? this.eventFromMessage(n2, a2, r2) : this.eventFromException(e8, r2);
    return this._process(s2.then((e9) => this._captureEvent(e9, r2, t2)).then((e9) => {
      o2 = e9;
    })), o2;
  }
  captureEvent(e8, a2, r2) {
    if (a2 && a2.originalException && Jf(a2.originalException)) return void (ug && bf.log(zb));
    let t2 = a2 && a2.event_id;
    const o2 = (e8.sdkProcessingMetadata || {}).capturedSpanScope;
    return this._process(this._captureEvent(e8, a2, o2 || r2).then((e9) => {
      t2 = e9;
    })), t2;
  }
  captureSession(e8) {
    "string" != typeof e8.release ? ug && bf.warn("Discarded session because of missing or non-string release") : (this.sendSession(e8), vg(e8, { init: false }));
  }
  getDsn() {
    return this._dsn;
  }
  getOptions() {
    return this._options;
  }
  getSdkMetadata() {
    return this._options._metadata;
  }
  getTransport() {
    return this._transport;
  }
  flush(e8) {
    const a2 = this._transport;
    return a2 ? (this.metricsAggregator && this.metricsAggregator.flush(), this._isClientDoneProcessing(e8).then((r2) => a2.flush(e8).then((e9) => r2 && e9))) : Nv(true);
  }
  close(e8) {
    return this.flush(e8).then((e9) => (this.getOptions().enabled = false, this.metricsAggregator && this.metricsAggregator.close(), e9));
  }
  getEventProcessors() {
    return this._eventProcessors;
  }
  addEventProcessor(e8) {
    this._eventProcessors.push(e8);
  }
  setupIntegrations(e8) {
    (e8 && !this._integrationsInitialized || this._isEnabled() && !this._integrationsInitialized) && this._setupIntegrations();
  }
  init() {
    this._isEnabled() && this._setupIntegrations();
  }
  getIntegrationById(e8) {
    return this.getIntegrationByName(e8);
  }
  getIntegrationByName(e8) {
    return this._integrations[e8];
  }
  getIntegration(e8) {
    try {
      return this._integrations[e8.id] || null;
    } catch (a2) {
      return ug && bf.warn(`Cannot retrieve integration ${e8.id} from the current Client`), null;
    }
  }
  addIntegration(e8) {
    const a2 = this._integrations[e8.name];
    Mb(this, e8, this._integrations), a2 || Pb(this, [e8]);
  }
  sendEvent(e8, a2 = {}) {
    this.emit("beforeSendEvent", e8, a2);
    let r2 = function(e9, a3, r3, t3) {
      const o2 = ng(r3), n2 = e9.type && "replay_event" !== e9.type ? e9.type : "event";
      !function(e10, a4) {
        a4 && (e10.sdk = e10.sdk || {}, e10.sdk.name = e10.sdk.name || a4.name, e10.sdk.version = e10.sdk.version || a4.version, e10.sdk.integrations = [...e10.sdk.integrations || [], ...a4.integrations || []], e10.sdk.packages = [...e10.sdk.packages || [], ...a4.packages || []]);
      }(e9, r3 && r3.sdk);
      const s2 = sg(e9, o2, t3, a3);
      return delete e9.sdkProcessingMetadata, Xv(s2, [[{ type: n2 }, e9]]);
    }(e8, this._dsn, this._options._metadata, this._options.tunnel);
    for (const e9 of a2.attachments || []) r2 = Qv(r2, rg(e9, this._options.transportOptions && this._options.transportOptions.textEncoder));
    const t2 = this._sendEnvelope(r2);
    t2 && t2.then((a3) => this.emit("afterSendEvent", e8, a3), null);
  }
  sendSession(e8) {
    const a2 = function(e9, a3, r2, t2) {
      const o2 = ng(r2);
      return Xv({ sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...o2 && { sdk: o2 }, ...!!t2 && a3 && { dsn: yf(a3) } }, ["aggregates" in e9 ? [{ type: "sessions" }, e9] : [{ type: "session" }, e9.toJSON()]]);
    }(e8, this._dsn, this._options._metadata, this._options.tunnel);
    this._sendEnvelope(a2);
  }
  recordDroppedEvent(e8, a2, r2) {
    if (this._options.sendClientReports) {
      const t2 = "number" == typeof r2 ? r2 : 1, o2 = `${e8}:${a2}`;
      ug && bf.log(`Recording outcome: "${o2}"${t2 > 1 ? ` (${t2} times)` : ""}`), this._outcomes[o2] = (this._outcomes[o2] || 0) + t2;
    }
  }
  captureAggregateMetrics(e8) {
    ug && bf.log(`Flushing aggregated metrics, number of metrics: ${e8.length}`);
    const a2 = Db(e8, this._dsn, this._options._metadata, this._options.tunnel);
    this._sendEnvelope(a2);
  }
  on(e8, a2) {
    this._hooks[e8] || (this._hooks[e8] = []), this._hooks[e8].push(a2);
  }
  emit(e8, ...a2) {
    this._hooks[e8] && this._hooks[e8].forEach((e9) => e9(...a2));
  }
  _setupIntegrations() {
    const { integrations: e8 } = this._options;
    this._integrations = function(e9, a2) {
      const r2 = {};
      return a2.forEach((a3) => {
        a3 && Mb(e9, a3, r2);
      }), r2;
    }(this, e8), Pb(this, e8), this._integrationsInitialized = true;
  }
  _updateSessionFromEvent(e8, a2) {
    let r2 = false, t2 = false;
    const o2 = a2.exception && a2.exception.values;
    if (o2) {
      t2 = true;
      for (const e9 of o2) {
        const a3 = e9.mechanism;
        if (a3 && false === a3.handled) {
          r2 = true;
          break;
        }
      }
    }
    const n2 = "ok" === e8.status;
    (n2 && 0 === e8.errors || n2 && r2) && (vg(e8, { ...r2 && { status: "crashed" }, errors: e8.errors || Number(t2 || r2) }), this.captureSession(e8));
  }
  _isClientDoneProcessing(e8) {
    return new Mv((a2) => {
      let r2 = 0;
      const t2 = setInterval(() => {
        0 == this._numProcessing ? (clearInterval(t2), a2(true)) : (r2 += 1, e8 && r2 >= e8 && (clearInterval(t2), a2(false)));
      }, 1);
    });
  }
  _isEnabled() {
    return false !== this.getOptions().enabled && void 0 !== this._transport;
  }
  _prepareEvent(e8, a2, r2, t2 = ab()) {
    const o2 = this.getOptions(), n2 = Object.keys(this._integrations);
    return !a2.integrations && n2.length > 0 && (a2.integrations = n2), this.emit("preprocessEvent", e8, a2), kg(o2, e8, a2, r2, this, t2).then((e9) => {
      if (null === e9) return e9;
      const a3 = { ...t2.getPropagationContext(), ...r2 ? r2.getPropagationContext() : void 0 };
      if (!(e9.contexts && e9.contexts.trace) && a3) {
        const { traceId: t3, spanId: o3, parentSpanId: n3, dsc: s2 } = a3;
        e9.contexts = { trace: { trace_id: t3, span_id: o3, parent_span_id: n3 }, ...e9.contexts };
        const i2 = s2 || Bg(t3, this, r2);
        e9.sdkProcessingMetadata = { dynamicSamplingContext: i2, ...e9.sdkProcessingMetadata };
      }
      return e9;
    });
  }
  _captureEvent(e8, a2 = {}, r2) {
    return this._processEvent(e8, a2, r2).then((e9) => e9.event_id, (e9) => {
      if (ug) {
        const a3 = e9;
        "log" === a3.logLevel ? bf.log(a3.message) : bf.warn(a3);
      }
    });
  }
  _processEvent(e8, a2, r2) {
    const t2 = this.getOptions(), { sampleRate: o2 } = t2, n2 = qb(e8), s2 = Bb(e8), i2 = e8.type || "error", d2 = `before send for type \`${i2}\``;
    if (s2 && "number" == typeof o2 && Math.random() > o2) return this.recordDroppedEvent("sample_rate", "error", e8), Pv(new If(`Discarding event because it's not included in the random sample (sampling rate = ${o2})`, "log"));
    const c2 = "replay_event" === i2 ? "replay" : i2, u2 = (e8.sdkProcessingMetadata || {}).capturedSpanIsolationScope;
    return this._prepareEvent(e8, a2, r2, u2).then((r3) => {
      if (null === r3) throw this.recordDroppedEvent("event_processor", c2, e8), new If("An event processor returned `null`, will not send event.", "log");
      if (a2.data && true === a2.data.__sentry__) return r3;
      const o3 = function(e9, a3, r4) {
        const { beforeSend: t3, beforeSendTransaction: o4 } = e9;
        if (Bb(a3) && t3) return t3(a3, r4);
        if (qb(a3) && o4) {
          if (a3.spans) {
            const e10 = a3.spans.length;
            a3.sdkProcessingMetadata = { ...a3.sdkProcessingMetadata, spanCountBeforeProcessing: e10 };
          }
          return o4(a3, r4);
        }
        return a3;
      }(t2, r3, a2);
      return function(e9, a3) {
        const r4 = `${a3} must return \`null\` or a valid event.`;
        if (Kh(e9)) return e9.then((e10) => {
          if (!Hh(e10) && null !== e10) throw new If(r4);
          return e10;
        }, (e10) => {
          throw new If(`${a3} rejected with ${e10}`);
        });
        if (!Hh(e9) && null !== e9) throw new If(r4);
        return e9;
      }(o3, d2);
    }).then((t3) => {
      if (null === t3) {
        if (this.recordDroppedEvent("before_send", c2, e8), n2) {
          const a3 = 1 + (e8.spans || []).length;
          this.recordDroppedEvent("before_send", "span", a3);
        }
        throw new If(`${d2} returned \`null\`, will not send event.`, "log");
      }
      const o3 = r2 && r2.getSession();
      if (!n2 && o3 && this._updateSessionFromEvent(o3, t3), n2) {
        const e9 = (t3.sdkProcessingMetadata && t3.sdkProcessingMetadata.spanCountBeforeProcessing || 0) - (t3.spans ? t3.spans.length : 0);
        e9 > 0 && this.recordDroppedEvent("before_send", "span", e9);
      }
      const s3 = t3.transaction_info;
      if (n2 && s3 && t3.transaction !== e8.transaction) {
        const e9 = "custom";
        t3.transaction_info = { ...s3, source: e9 };
      }
      return this.sendEvent(t3, a2), t3;
    }).then(null, (e9) => {
      if (e9 instanceof If) throw e9;
      throw this.captureException(e9, { data: { __sentry__: true }, originalException: e9 }), new If(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${e9}`);
    });
  }
  _process(e8) {
    this._numProcessing++, e8.then((e9) => (this._numProcessing--, e9), (e9) => (this._numProcessing--, e9));
  }
  _sendEnvelope(e8) {
    if (this.emit("beforeEnvelope", e8), this._isEnabled() && this._transport) return this._transport.send(e8).then(null, (e9) => {
      ug && bf.error("Error while sending event:", e9);
    });
    ug && bf.error("Transport disabled");
  }
  _clearOutcomes() {
    const e8 = this._outcomes;
    return this._outcomes = {}, Object.keys(e8).map((a2) => {
      const [r2, t2] = a2.split(":");
      return { reason: r2, category: t2, quantity: e8[a2] };
    });
  }
};
function Bb(e8) {
  return void 0 === e8.type;
}
function qb(e8) {
  return "transaction" === e8.type;
}
function $b(e8, a2) {
  true === a2.debug && (ug ? bf.enable() : gf(() => {
    console.warn("[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.");
  }));
  Pg().update(a2.initialScope);
  const r2 = new e8(a2);
  !function(e9) {
    const a3 = eb().getStackTop();
    a3.client = e9, a3.scope.setClient(e9);
  }(r2), function(e9) {
    e9.init ? e9.init() : e9.setupIntegrations && e9.setupIntegrations();
  }(r2);
}
function Ub(e8, a2, r2 = Lv(e8.bufferSize || 30)) {
  let t2 = {};
  function o2(o3) {
    const n2 = [];
    if (Zv(o3, (a3, r3) => {
      const o4 = og(r3);
      if (ig(t2, o4)) {
        const t3 = Hb(a3, r3);
        e8.recordDroppedEvent("ratelimit_backoff", o4, t3);
      } else n2.push(a3);
    }), 0 === n2.length) return Nv();
    const s2 = Xv(o3[0], n2), i2 = (a3) => {
      Zv(s2, (r3, t3) => {
        const o4 = Hb(r3, t3);
        e8.recordDroppedEvent(a3, og(t3), o4);
      });
    };
    return r2.add(() => a2({ body: ag(s2, e8.textEncoder) }).then((e9) => (void 0 !== e9.statusCode && (e9.statusCode < 200 || e9.statusCode >= 300) && ug && bf.warn(`Sentry responded with status code ${e9.statusCode} to sent event.`), t2 = dg(t2, e9), e9), (e9) => {
      throw i2("network_error"), e9;
    })).then((e9) => e9, (e9) => {
      if (e9 instanceof If) return ug && bf.error("Skipped sending event because buffer is full."), i2("queue_overflow"), Nv();
      throw e9;
    });
  }
  return o2.__sentry__baseTransport__ = true, { send: o2, flush: (e9) => r2.drain(e9) };
}
function Hb(e8, a2) {
  if ("event" === a2 || "transaction" === a2) return Array.isArray(e8) ? e8[1] : void 0;
}
function Wb(e8) {
  return [{ type: "span" }, e8];
}
function Kb(e8, a2) {
  const r2 = a2 && function(e9) {
    return void 0 !== e9.getClient;
  }(a2) ? a2.getClient() : a2, t2 = r2 && r2.getDsn(), o2 = r2 && r2.getOptions().tunnel;
  return function(e9, a3) {
    return !!a3 && e9.includes(a3.host);
  }(e8, t2) || function(e9, a3) {
    if (!a3) return false;
    return Vb(e9) === Vb(a3);
  }(e8, o2);
}
function Vb(e8) {
  return "/" === e8[e8.length - 1] ? e8.slice(0, -1) : e8;
}
var Gb = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/, /^ResizeObserver loop completed with undelivered notifications.$/, /^Cannot redefine property: googletag$/];
var Yb = [/^.*\/healthcheck$/, /^.*\/healthy$/, /^.*\/live$/, /^.*\/ready$/, /^.*\/heartbeat$/, /^.*\/health$/, /^.*\/healthz$/];
var Jb = "InboundFilters";
var Xb = (e8 = {}) => ({ name: Jb, setupOnce() {
}, processEvent(a2, r2, t2) {
  const o2 = t2.getOptions(), n2 = function(e9 = {}, a3 = {}) {
    return { allowUrls: [...e9.allowUrls || [], ...a3.allowUrls || []], denyUrls: [...e9.denyUrls || [], ...a3.denyUrls || []], ignoreErrors: [...e9.ignoreErrors || [], ...a3.ignoreErrors || [], ...e9.disableErrorDefaults ? [] : Gb], ignoreTransactions: [...e9.ignoreTransactions || [], ...a3.ignoreTransactions || [], ...e9.disableTransactionDefaults ? [] : Yb], ignoreInternal: void 0 === e9.ignoreInternal || e9.ignoreInternal };
  }(e8, o2);
  return function(e9, a3) {
    if (a3.ignoreInternal && function(e10) {
      try {
        return "SentryError" === e10.exception.values[0].type;
      } catch (e11) {
      }
      return false;
    }(e9)) return ug && bf.warn(`Event dropped due to being internal Sentry Error.
Event: ${Vf(e9)}`), true;
    if (function(e10, a4) {
      if (e10.type || !a4 || !a4.length) return false;
      return function(e11) {
        const a5 = [];
        e11.message && a5.push(e11.message);
        let r3;
        try {
          r3 = e11.exception.values[e11.exception.values.length - 1];
        } catch (e12) {
        }
        r3 && r3.value && (a5.push(r3.value), r3.type && a5.push(`${r3.type}: ${r3.value}`));
        ug && 0 === a5.length && bf.error(`Could not extract message for event ${Vf(e11)}`);
        return a5;
      }(e10).some((e11) => ef(e11, a4));
    }(e9, a3.ignoreErrors)) return ug && bf.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${Vf(e9)}`), true;
    if (function(e10, a4) {
      if ("transaction" !== e10.type || !a4 || !a4.length) return false;
      const r3 = e10.transaction;
      return !!r3 && ef(r3, a4);
    }(e9, a3.ignoreTransactions)) return ug && bf.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${Vf(e9)}`), true;
    if (function(e10, a4) {
      if (!a4 || !a4.length) return false;
      const r3 = Qb(e10);
      return !!r3 && ef(r3, a4);
    }(e9, a3.denyUrls)) return ug && bf.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${Vf(e9)}.
Url: ${Qb(e9)}`), true;
    if (!function(e10, a4) {
      if (!a4 || !a4.length) return true;
      const r3 = Qb(e10);
      return !r3 || ef(r3, a4);
    }(e9, a3.allowUrls)) return ug && bf.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${Vf(e9)}.
Url: ${Qb(e9)}`), true;
    return false;
  }(a2, n2) ? null : a2;
} });
function Qb(e8) {
  try {
    let a2;
    try {
      a2 = e8.exception.values[0].stacktrace.frames;
    } catch (e9) {
    }
    return a2 ? function(e9 = []) {
      for (let a3 = e9.length - 1; a3 >= 0; a3--) {
        const r2 = e9[a3];
        if (r2 && "<anonymous>" !== r2.filename && "[native code]" !== r2.filename) return r2.filename || null;
      }
      return null;
    }(a2) : null;
  } catch (a2) {
    return ug && bf.error(`Cannot extract url for event ${Vf(e8)}`), null;
  }
}
var Zb;
Lb(Jb, Xb);
var ew = "FunctionToString";
var aw = /* @__PURE__ */ new WeakMap();
var rw = () => ({ name: ew, setupOnce() {
  Zb = Function.prototype.toString;
  try {
    Function.prototype.toString = function(...e8) {
      const a2 = Ef(this), r2 = aw.has(Ng()) && void 0 !== a2 ? a2 : this;
      return Zb.apply(r2, e8);
    };
  } catch (e8) {
  }
}, setup(e8) {
  aw.set(e8, true);
} });
Lb(ew, rw);
var tw = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
var ow = sf;
var nw = (e8, a2, r2) => {
  let t2, o2;
  return (n2) => {
    a2.value >= 0 && (n2 || r2) && (o2 = a2.value - (t2 || 0), (o2 || void 0 === t2) && (t2 = a2.value, a2.delta = o2, e8(a2)));
  };
};
var sw = () => ow.__WEB_VITALS_POLYFILL__ ? ow.performance && (performance.getEntriesByType && performance.getEntriesByType("navigation")[0] || (() => {
  const e8 = ow.performance.timing, a2 = ow.performance.navigation.type, r2 = { entryType: "navigation", startTime: 0, type: 2 == a2 ? "back_forward" : 1 === a2 ? "reload" : "navigate" };
  for (const a3 in e8) "navigationStart" !== a3 && "toJSON" !== a3 && (r2[a3] = Math.max(e8[a3] - e8.navigationStart, 0));
  return r2;
})()) : ow.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0];
var iw = () => {
  const e8 = sw();
  return e8 && e8.activationStart || 0;
};
var dw = (e8, a2) => {
  const r2 = sw();
  let t2 = "navigate";
  return r2 && (t2 = ow.document && ow.document.prerendering || iw() > 0 ? "prerender" : r2.type.replace(/_/g, "-")), { name: e8, value: void 0 === a2 ? -1 : a2, rating: "good", delta: 0, entries: [], id: `v3-${Date.now()}-${Math.floor(8999999999999 * Math.random()) + 1e12}`, navigationType: t2 };
};
var cw = (e8, a2, r2) => {
  try {
    if (PerformanceObserver.supportedEntryTypes.includes(e8)) {
      const t2 = new PerformanceObserver((e9) => {
        a2(e9.getEntries());
      });
      return t2.observe(Object.assign({ type: e8, buffered: true }, r2 || {})), t2;
    }
  } catch (e9) {
  }
};
var uw = (e8, a2) => {
  const r2 = (t2) => {
    "pagehide" !== t2.type && "hidden" !== ow.document.visibilityState || (e8(t2), a2 && (removeEventListener("visibilitychange", r2, true), removeEventListener("pagehide", r2, true)));
  };
  ow.document && (addEventListener("visibilitychange", r2, true), addEventListener("pagehide", r2, true));
};
var lw = -1;
var pw = () => (lw < 0 && (ow.document && ow.document.visibilityState && (lw = "hidden" !== ow.document.visibilityState || ow.document.prerendering ? 1 / 0 : 0), uw(({ timeStamp: e8 }) => {
  lw = e8;
}, true)), { get firstHiddenTime() {
  return lw;
} });
var mw = 0;
var hw = 1 / 0;
var fw = 0;
var vw = (e8) => {
  e8.forEach((e9) => {
    e9.interactionId && (hw = Math.min(hw, e9.interactionId), fw = Math.max(fw, e9.interactionId), mw = fw ? (fw - hw) / 7 + 1 : 0);
  });
};
var gw;
var bw = () => {
  "interactionCount" in performance || gw || (gw = cw("event", vw, { type: "event", buffered: true, durationThreshold: 0 }));
};
var ww = () => gw ? mw : performance.interactionCount || 0;
var yw = [];
var xw = {};
var _w = (e8) => {
  const a2 = yw[yw.length - 1], r2 = xw[e8.interactionId];
  if (r2 || yw.length < 10 || e8.duration > a2.latency) {
    if (r2) r2.entries.push(e8), r2.latency = Math.max(r2.latency, e8.duration);
    else {
      const a3 = { id: e8.interactionId, latency: e8.duration, entries: [e8] };
      xw[a3.id] = a3, yw.push(a3);
    }
    yw.sort((e9, a3) => a3.latency - e9.latency), yw.splice(10).forEach((e9) => {
      delete xw[e9.id];
    });
  }
};
var Iw = (e8, a2) => {
  a2 = a2 || {}, bw();
  const r2 = dw("INP");
  let t2;
  const o2 = (e9) => {
    e9.forEach((e10) => {
      if (e10.interactionId && _w(e10), "first-input" === e10.entryType) {
        !yw.some((a4) => a4.entries.some((a5) => e10.duration === a5.duration && e10.startTime === a5.startTime)) && _w(e10);
      }
    });
    const a3 = (() => {
      const e10 = Math.min(yw.length - 1, Math.floor(ww() / 50));
      return yw[e10];
    })();
    a3 && a3.latency !== r2.value && (r2.value = a3.latency, r2.entries = a3.entries, t2());
  }, n2 = cw("event", o2, { durationThreshold: a2.durationThreshold || 40 });
  t2 = nw(e8, r2, a2.reportAllChanges), n2 && (n2.observe({ type: "first-input", buffered: true }), uw(() => {
    o2(n2.takeRecords()), r2.value < 0 && ww() > 0 && (r2.value = 0, r2.entries = []), t2(true);
  }));
};
var kw = {};
var Sw = (e8) => {
  ow.document && (ow.document.prerendering ? addEventListener("prerenderingchange", () => Sw(e8), true) : "complete" !== ow.document.readyState ? addEventListener("load", () => Sw(e8), true) : setTimeout(e8, 0));
};
var Tw = {};
var Ew = {};
var jw;
var Ow;
var Aw;
var Cw;
var Rw;
function Nw(e8, a2 = false) {
  return qw("lcp", e8, zw, Aw, a2);
}
function Pw(e8, a2) {
  return $w(e8, a2), Ew[e8] || (!function(e9) {
    const a3 = {};
    "event" === e9 && (a3.durationThreshold = 0);
    cw(e9, (a4) => {
      Mw(e9, { entries: a4 });
    }, a3);
  }(e8), Ew[e8] = true), Uw(e8, a2);
}
function Mw(e8, a2) {
  const r2 = Tw[e8];
  if (r2 && r2.length) for (const t2 of r2) try {
    t2(a2);
  } catch (a3) {
    tw && bf.error(`Error while triggering instrumentation handler.
Type: ${e8}
Name: ${Df(t2)}
Error:`, a3);
  }
}
function Lw() {
  return ((e8, a2 = {}) => {
    const r2 = dw("CLS", 0);
    let t2, o2 = 0, n2 = [];
    const s2 = (e9) => {
      e9.forEach((e10) => {
        if (!e10.hadRecentInput) {
          const a3 = n2[0], s3 = n2[n2.length - 1];
          o2 && 0 !== n2.length && e10.startTime - s3.startTime < 1e3 && e10.startTime - a3.startTime < 5e3 ? (o2 += e10.value, n2.push(e10)) : (o2 = e10.value, n2 = [e10]), o2 > r2.value && (r2.value = o2, r2.entries = n2, t2 && t2());
        }
      });
    }, i2 = cw("layout-shift", s2);
    if (i2) {
      t2 = nw(e8, r2, a2.reportAllChanges);
      const o3 = () => {
        s2(i2.takeRecords()), t2(true);
      };
      return uw(o3), o3;
    }
  })((e8) => {
    Mw("cls", { metric: e8 }), jw = e8;
  }, { reportAllChanges: true });
}
function Dw() {
  return ((e8) => {
    const a2 = pw(), r2 = dw("FID");
    let t2;
    const o2 = (e9) => {
      e9.startTime < a2.firstHiddenTime && (r2.value = e9.processingStart - e9.startTime, r2.entries.push(e9), t2(true));
    }, n2 = (e9) => {
      e9.forEach(o2);
    }, s2 = cw("first-input", n2);
    t2 = nw(e8, r2), s2 && uw(() => {
      n2(s2.takeRecords()), s2.disconnect();
    }, true);
  })((e8) => {
    Mw("fid", { metric: e8 }), Ow = e8;
  });
}
function zw() {
  return ((e8) => {
    const a2 = pw(), r2 = dw("LCP");
    let t2;
    const o2 = (e9) => {
      const o3 = e9[e9.length - 1];
      if (o3) {
        const e10 = Math.max(o3.startTime - iw(), 0);
        e10 < a2.firstHiddenTime && (r2.value = e10, r2.entries = [o3], t2());
      }
    }, n2 = cw("largest-contentful-paint", o2);
    if (n2) {
      t2 = nw(e8, r2);
      const a3 = () => {
        kw[r2.id] || (o2(n2.takeRecords()), n2.disconnect(), kw[r2.id] = true, t2(true));
      };
      return ["keydown", "click"].forEach((e9) => {
        ow.document && addEventListener(e9, a3, { once: true, capture: true });
      }), uw(a3, true), a3;
    }
  })((e8) => {
    Mw("lcp", { metric: e8 }), Aw = e8;
  });
}
function Fw() {
  return ((e8, a2) => {
    a2 = a2 || {};
    const r2 = dw("TTFB"), t2 = nw(e8, r2, a2.reportAllChanges);
    Sw(() => {
      const e9 = sw();
      if (e9) {
        if (r2.value = Math.max(e9.responseStart - iw(), 0), r2.value < 0 || r2.value > performance.now()) return;
        r2.entries = [e9], t2(true);
      }
    });
  })((e8) => {
    Mw("ttfb", { metric: e8 }), Cw = e8;
  });
}
function Bw() {
  return Iw((e8) => {
    Mw("inp", { metric: e8 }), Rw = e8;
  });
}
function qw(e8, a2, r2, t2, o2 = false) {
  let n2;
  return $w(e8, a2), Ew[e8] || (n2 = r2(), Ew[e8] = true), t2 && a2({ metric: t2 }), Uw(e8, a2, o2 ? n2 : void 0);
}
function $w(e8, a2) {
  Tw[e8] = Tw[e8] || [], Tw[e8].push(a2);
}
function Uw(e8, a2, r2) {
  return () => {
    r2 && r2();
    const t2 = Tw[e8];
    if (!t2) return;
    const o2 = t2.indexOf(a2);
    -1 !== o2 && t2.splice(o2, 1);
  };
}
function Hw(e8) {
  return "number" == typeof e8 && isFinite(e8);
}
function Ww(e8, { startTimestamp: a2, ...r2 }) {
  return a2 && e8.startTimestamp > a2 && (e8.startTimestamp = a2), e8.startChild({ startTimestamp: a2, ...r2 });
}
function Kw(e8) {
  return e8 / 1e3;
}
function Vw() {
  return ow && ow.addEventListener && ow.performance;
}
var Gw;
var Yw;
var Jw = 0;
var Xw = {};
function Qw() {
  const e8 = Vw();
  if (e8 && $v) {
    e8.mark && ow.performance.mark("sentry-tracing-init");
    const a2 = qw("fid", ({ metric: e9 }) => {
      const a3 = e9.entries[e9.entries.length - 1];
      if (!a3) return;
      const r3 = Kw($v), t3 = Kw(a3.startTime);
      tw && bf.log("[Measurements] Adding FID"), Xw.fid = { value: e9.value, unit: "millisecond" }, Xw["mark.fid"] = { value: r3 + t3, unit: "second" };
    }, Dw, Ow), r2 = function(e9, a3 = false) {
      return qw("cls", e9, Lw, jw, a3);
    }(({ metric: e9 }) => {
      const a3 = e9.entries[e9.entries.length - 1];
      a3 && (tw && bf.log("[Measurements] Adding CLS"), Xw.cls = { value: e9.value, unit: "" }, Yw = a3);
    }, true), t2 = Nw(({ metric: e9 }) => {
      const a3 = e9.entries[e9.entries.length - 1];
      a3 && (tw && bf.log("[Measurements] Adding LCP"), Xw.lcp = { value: e9.value, unit: "millisecond" }, Gw = a3);
    }, true), o2 = function(e9) {
      return qw("ttfb", e9, Fw, Cw);
    }(({ metric: e9 }) => {
      e9.entries[e9.entries.length - 1] && (tw && bf.log("[Measurements] Adding TTFB"), Xw.ttfb = { value: e9.value, unit: "millisecond" });
    });
    return () => {
      a2(), r2(), t2(), o2();
    };
  }
  return () => {
  };
}
function Zw(e8, a2) {
  if (Vw() && $v) {
    const r2 = function(e9, a3) {
      return r3 = ({ metric: r4 }) => {
        if (void 0 === r4.value) return;
        const t2 = r4.entries.find((e10) => e10.duration === r4.value && void 0 !== ey[e10.name]), o2 = Ng();
        if (!t2 || !o2) return;
        const n2 = ey[t2.name], s2 = o2.getOptions(), i2 = Kw($v + t2.startTime), d2 = Kw(r4.value), c2 = void 0 !== t2.interactionId ? e9[t2.interactionId] : void 0;
        if (void 0 === c2) return;
        const { routeName: u2, parentContext: l2, activeTransaction: p2, user: m2, replayId: h2 } = c2, f2 = void 0 !== m2 ? m2.email || m2.id || m2.ip_address : void 0, v2 = void 0 !== p2 ? p2.getProfileId() : void 0, g2 = new wb({ startTimestamp: i2, endTimestamp: i2 + d2, op: `ui.interaction.${n2}`, name: lf(t2.target), attributes: { release: s2.release, environment: s2.environment, transaction: u2, ...void 0 !== f2 && "" !== f2 ? { user: f2 } : {}, ...void 0 !== v2 ? { profile_id: v2 } : {}, ...void 0 !== h2 ? { replay_id: h2 } : {} }, exclusiveTime: r4.value, measurements: { inp: { value: r4.value, unit: "millisecond" } } }), b2 = function(e10, a4, r5) {
          if (!cb(a4)) return false;
          let t3;
          return t3 = void 0 !== e10 && "function" == typeof a4.tracesSampler ? a4.tracesSampler({ transactionContext: e10, name: e10.name, parentSampled: e10.parentSampled, attributes: { ...e10.data, ...e10.attributes }, location: ow.location }) : void 0 !== e10 && void 0 !== e10.sampled ? e10.sampled : void 0 !== a4.tracesSampleRate ? a4.tracesSampleRate : 1, Tb(t3) ? true === t3 ? r5 : false === t3 ? 0 : t3 * r5 : (tw && bf.warn("[Tracing] Discarding interaction span because of invalid sample rate."), false);
        }(l2, s2, a3);
        if (b2 && Math.random() < b2) {
          const e10 = g2 ? function(e11, a5) {
            const r5 = { sent_at: (/* @__PURE__ */ new Date()).toISOString() };
            return a5 && (r5.dsn = yf(a5)), Xv(r5, e11.map(Wb));
          }([g2], o2.getDsn()) : void 0, a4 = o2 && o2.getTransport();
          a4 && e10 && a4.send(e10).then(null, (e11) => {
            tw && bf.error("Error while sending interaction:", e11);
          });
        }
      }, qw("inp", r3, Bw, Rw);
      var r3;
    }(e8, a2);
    return () => {
      r2();
    };
  }
  return () => {
  };
}
var ey = { click: "click", pointerdown: "click", pointerup: "click", mousedown: "click", mouseup: "click", touchstart: "click", touchend: "click", mouseover: "hover", mouseout: "hover", mouseenter: "hover", mouseleave: "hover", pointerover: "hover", pointerout: "hover", pointerenter: "hover", pointerleave: "hover", dragstart: "drag", dragend: "drag", drag: "drag", dragenter: "drag", dragleave: "drag", dragover: "drag", drop: "drag", keydown: "press", keyup: "press", keypress: "press", input: "press" };
function ay(e8) {
  const a2 = Vw();
  if (!a2 || !ow.performance.getEntries || !$v) return;
  tw && bf.log("[Tracing] Adding & adjusting spans using Performance API");
  const r2 = Kw($v), t2 = a2.getEntries(), { op: o2, start_timestamp: n2 } = _g(e8);
  if (t2.slice(Jw).forEach((a3) => {
    const t3 = Kw(a3.startTime), o3 = Kw(a3.duration);
    if (!("navigation" === e8.op && n2 && r2 + t3 < n2)) switch (a3.entryType) {
      case "navigation":
        !function(e9, a4, r3) {
          ["unloadEvent", "redirect", "domContentLoadedEvent", "loadEvent", "connect"].forEach((t4) => {
            ry(e9, a4, t4, r3);
          }), ry(e9, a4, "secureConnection", r3, "TLS/SSL", "connectEnd"), ry(e9, a4, "fetch", r3, "cache", "domainLookupStart"), ry(e9, a4, "domainLookup", r3, "DNS"), function(e10, a5, r4) {
            a5.responseEnd && (Ww(e10, { op: "browser", origin: "auto.browser.browser.metrics", description: "request", startTimestamp: r4 + Kw(a5.requestStart), endTimestamp: r4 + Kw(a5.responseEnd) }), Ww(e10, { op: "browser", origin: "auto.browser.browser.metrics", description: "response", startTimestamp: r4 + Kw(a5.responseStart), endTimestamp: r4 + Kw(a5.responseEnd) }));
          }(e9, a4, r3);
        }(e8, a3, r2);
        break;
      case "mark":
      case "paint":
      case "measure": {
        !function(e9, a4, r3, t4, o4) {
          const n4 = o4 + r3, s3 = n4 + t4;
          Ww(e9, { description: a4.name, endTimestamp: s3, op: a4.entryType, origin: "auto.resource.browser.metrics", startTimestamp: n4 });
        }(e8, a3, t3, o3, r2);
        const n3 = pw(), s2 = a3.startTime < n3.firstHiddenTime;
        "first-paint" === a3.name && s2 && (tw && bf.log("[Measurements] Adding FP"), Xw.fp = { value: a3.startTime, unit: "millisecond" }), "first-contentful-paint" === a3.name && s2 && (tw && bf.log("[Measurements] Adding FCP"), Xw.fcp = { value: a3.startTime, unit: "millisecond" });
        break;
      }
      case "resource":
        !function(e9, a4, r3, t4, o4, n3) {
          if ("xmlhttprequest" === a4.initiatorType || "fetch" === a4.initiatorType) return;
          const s2 = Dv(r3), i2 = {};
          ty(i2, a4, "transferSize", "http.response_transfer_size"), ty(i2, a4, "encodedBodySize", "http.response_content_length"), ty(i2, a4, "decodedBodySize", "http.decoded_response_content_length"), "renderBlockingStatus" in a4 && (i2["resource.render_blocking_status"] = a4.renderBlockingStatus);
          s2.protocol && (i2["url.scheme"] = s2.protocol.split(":").pop());
          s2.host && (i2["server.address"] = s2.host);
          i2["url.same_origin"] = r3.includes(ow.location.origin);
          const d2 = n3 + t4, c2 = d2 + o4;
          Ww(e9, { description: r3.replace(ow.location.origin, ""), endTimestamp: c2, op: a4.initiatorType ? `resource.${a4.initiatorType}` : "resource.other", origin: "auto.resource.browser.metrics", startTimestamp: d2, data: i2 });
        }(e8, a3, a3.name, t3, o3, r2);
    }
  }), Jw = Math.max(t2.length - 1, 0), function(e9) {
    const a3 = ow.navigator;
    if (!a3) return;
    const r3 = a3.connection;
    r3 && (r3.effectiveType && e9.setTag("effectiveConnectionType", r3.effectiveType), r3.type && e9.setTag("connectionType", r3.type), Hw(r3.rtt) && (Xw["connection.rtt"] = { value: r3.rtt, unit: "millisecond" }));
    Hw(a3.deviceMemory) && e9.setTag("deviceMemory", `${a3.deviceMemory} GB`);
    Hw(a3.hardwareConcurrency) && e9.setTag("hardwareConcurrency", String(a3.hardwareConcurrency));
  }(e8), "pageload" === o2) {
    !function(e9) {
      const a4 = sw();
      if (!a4) return;
      const { responseStart: r3, requestStart: t3 } = a4;
      t3 <= r3 && (tw && bf.log("[Measurements] Adding TTFB Request Time"), e9["ttfb.requestTime"] = { value: r3 - t3, unit: "millisecond" });
    }(Xw), ["fcp", "fp", "lcp"].forEach((e9) => {
      if (!Xw[e9] || !n2 || r2 >= n2) return;
      const a4 = Xw[e9].value, t3 = r2 + Kw(a4), o3 = Math.abs(1e3 * (t3 - n2)), s2 = o3 - a4;
      tw && bf.log(`[Measurements] Normalized ${e9} from ${a4} to ${o3} (${s2})`), Xw[e9].value = o3;
    });
    const a3 = Xw["mark.fid"];
    a3 && Xw.fid && (Ww(e8, { description: "first input delay", endTimestamp: a3.value + Kw(Xw.fid.value), op: "ui.action", origin: "auto.ui.browser.metrics", startTimestamp: a3.value }), delete Xw["mark.fid"]), "fcp" in Xw || delete Xw.cls, Object.keys(Xw).forEach((e9) => {
      !function(e10, a4, r3) {
        const t3 = ob();
        t3 && t3.setMeasurement(e10, a4, r3);
      }(e9, Xw[e9].value, Xw[e9].unit);
    }), function(e9) {
      Gw && (tw && bf.log("[Measurements] Adding LCP Data"), Gw.element && e9.setTag("lcp.element", lf(Gw.element)), Gw.id && e9.setTag("lcp.id", Gw.id), Gw.url && e9.setTag("lcp.url", Gw.url.trim().slice(0, 200)), e9.setTag("lcp.size", Gw.size));
      Yw && Yw.sources && (tw && bf.log("[Measurements] Adding CLS Data"), Yw.sources.forEach((a4, r3) => e9.setTag(`cls.source.${r3 + 1}`, lf(a4.node))));
    }(e8);
  }
  Gw = void 0, Yw = void 0, Xw = {};
}
function ry(e8, a2, r2, t2, o2, n2) {
  const s2 = n2 ? a2[n2] : a2[`${r2}End`], i2 = a2[`${r2}Start`];
  i2 && s2 && Ww(e8, { op: "browser", origin: "auto.browser.browser.metrics", description: o2 || r2, startTimestamp: t2 + Kw(i2), endTimestamp: t2 + Kw(s2) });
}
function ty(e8, a2, r2, t2) {
  const o2 = a2[r2];
  null != o2 && o2 < 2147483647 && (e8[t2] = o2);
}
function oy(e8, a2, r2, t2, o2 = "auto.http.browser") {
  if (!cb() || !e8.fetchData) return;
  const n2 = a2(e8.fetchData.url);
  if (e8.endTimestamp && n2) {
    const a3 = e8.fetchData.__span;
    if (!a3) return;
    const r3 = t2[a3];
    return void (r3 && (!function(e9, a4) {
      if (a4.response) {
        db(e9, a4.response.status);
        const r4 = a4.response && a4.response.headers && a4.response.headers.get("content-length");
        if (r4) {
          const a5 = parseInt(r4);
          a5 > 0 && e9.setAttribute("http.response_content_length", a5);
        }
      } else a4.error && e9.setStatus("internal_error");
      e9.end();
    }(r3, e8), delete t2[a3]));
  }
  const s2 = Pg(), i2 = Ng(), { method: d2, url: c2 } = e8.fetchData, u2 = function(e9) {
    try {
      return new URL(e9).href;
    } catch (e10) {
      return;
    }
  }(c2), l2 = u2 ? Dv(u2).host : void 0, p2 = n2 ? ub({ name: `${d2} ${c2}`, onlyIfParent: true, attributes: { url: c2, type: "fetch", "http.method": d2, "http.url": u2, "server.address": l2, [gb]: o2 }, op: "http.client" }) : void 0;
  if (p2 && (e8.fetchData.__span = p2.spanContext().spanId, t2[p2.spanContext().spanId] = p2), r2(e8.fetchData.url) && i2) {
    const a3 = e8.args[0];
    e8.args[1] = e8.args[1] || {};
    const r3 = e8.args[1];
    r3.headers = function(e9, a4, r4, t3, o3) {
      const n3 = o3 || r4.getSpan(), s3 = ab(), { traceId: i3, spanId: d3, sampled: c3, dsc: u3 } = { ...s3.getPropagationContext(), ...r4.getPropagationContext() }, l3 = n3 ? wg(n3) : Jv(i3, d3, c3), p3 = Kv(u3 || (n3 ? qg(n3) : Bg(i3, a4, r4))), m2 = t3.headers || ("undefined" != typeof Request && Gh(e9, Request) ? e9.headers : void 0);
      if (m2) {
        if ("undefined" != typeof Headers && Gh(m2, Headers)) {
          const e10 = new Headers(m2);
          return e10.append("sentry-trace", l3), p3 && e10.append(Uv, p3), e10;
        }
        if (Array.isArray(m2)) {
          const e10 = [...m2, ["sentry-trace", l3]];
          return p3 && e10.push([Uv, p3]), e10;
        }
        {
          const e10 = "baggage" in m2 ? m2.baggage : void 0, a5 = [];
          return Array.isArray(e10) ? a5.push(...e10) : e10 && a5.push(e10), p3 && a5.push(p3), { ...m2, "sentry-trace": l3, baggage: a5.length > 0 ? a5.join(",") : void 0 };
        }
      }
      return { "sentry-trace": l3, baggage: p3 };
    }(a3, i2, s2, r3, p2);
  }
  return p2;
}
var ny = ["localhost", /^\/(?!\/)/];
var sy = { traceFetch: true, traceXHR: true, enableHTTPTimings: true, tracingOrigins: ny, tracePropagationTargets: ny };
function iy(e8) {
  const { traceFetch: a2, traceXHR: r2, tracePropagationTargets: t2, tracingOrigins: o2, shouldCreateSpanForRequest: n2, enableHTTPTimings: s2 } = { traceFetch: sy.traceFetch, traceXHR: sy.traceXHR, ...e8 }, i2 = "function" == typeof n2 ? n2 : (e9) => true, d2 = (e9) => function(e10, a3) {
    return ef(e10, a3 || ny);
  }(e9, t2 || o2), c2 = {};
  a2 && dv((e9) => {
    const a3 = oy(e9, i2, d2, c2);
    if (a3) {
      const r3 = uy(e9.fetchData.url), t3 = r3 ? Dv(r3).host : void 0;
      a3.setAttributes({ "http.url": r3, "server.address": t3 });
    }
    s2 && a3 && dy(a3);
  }), r2 && Sv((e9) => {
    const a3 = function(e10, a4, r3, t3) {
      const o3 = e10.xhr, n3 = o3 && o3[kv];
      if (!cb() || !o3 || o3.__sentry_own_request__ || !n3) return;
      const s3 = a4(n3.url);
      if (e10.endTimestamp && s3) {
        const e11 = o3.__sentry_xhr_span_id__;
        if (!e11) return;
        const a5 = t3[e11];
        return void (a5 && void 0 !== n3.status_code && (db(a5, n3.status_code), a5.end(), delete t3[e11]));
      }
      const i3 = Pg(), d3 = ab(), c3 = uy(n3.url), u2 = c3 ? Dv(c3).host : void 0, l2 = s3 ? ub({ name: `${n3.method} ${n3.url}`, onlyIfParent: true, attributes: { type: "xhr", "http.method": n3.method, "http.url": c3, url: n3.url, "server.address": u2, [gb]: "auto.http.browser" }, op: "http.client" }) : void 0;
      l2 && (o3.__sentry_xhr_span_id__ = l2.spanContext().spanId, t3[o3.__sentry_xhr_span_id__] = l2);
      const p2 = Ng();
      if (o3.setRequestHeader && r3(n3.url) && p2) {
        const { traceId: e11, spanId: a5, sampled: r4, dsc: t4 } = { ...d3.getPropagationContext(), ...i3.getPropagationContext() };
        !function(e12, a6, r5) {
          try {
            e12.setRequestHeader("sentry-trace", a6), r5 && e12.setRequestHeader(Uv, r5);
          } catch (e13) {
          }
        }(o3, l2 ? wg(l2) : Jv(e11, a5, r4), Kv(t4 || (l2 ? qg(l2) : Bg(e11, p2, i3))));
      }
      return l2;
    }(e9, i2, d2, c2);
    s2 && a3 && dy(a3);
  });
}
function dy(e8) {
  const { url: a2 } = _g(e8).data || {};
  if (!a2 || "string" != typeof a2) return;
  const r2 = Pw("resource", ({ entries: t2 }) => {
    t2.forEach((t3) => {
      if (function(e9) {
        return "resource" === e9.entryType && "initiatorType" in e9 && "string" == typeof e9.nextHopProtocol && ("fetch" === e9.initiatorType || "xmlhttprequest" === e9.initiatorType);
      }(t3) && t3.name.endsWith(a2)) {
        const a3 = function(e9) {
          const { name: a4, version: r3 } = function(e10) {
            let a5 = "unknown", r4 = "unknown", t5 = "";
            for (const o2 of e10) {
              if ("/" === o2) {
                [a5, r4] = e10.split("/");
                break;
              }
              if (!isNaN(Number(o2))) {
                a5 = "h" === t5 ? "http" : t5, r4 = e10.split(t5)[1];
                break;
              }
              t5 += o2;
            }
            t5 === e10 && (a5 = t5);
            return { name: a5, version: r4 };
          }(e9.nextHopProtocol), t4 = [];
          if (t4.push(["network.protocol.version", r3], ["network.protocol.name", a4]), !$v) return t4;
          return [...t4, ["http.request.redirect_start", cy(e9.redirectStart)], ["http.request.fetch_start", cy(e9.fetchStart)], ["http.request.domain_lookup_start", cy(e9.domainLookupStart)], ["http.request.domain_lookup_end", cy(e9.domainLookupEnd)], ["http.request.connect_start", cy(e9.connectStart)], ["http.request.secure_connection_start", cy(e9.secureConnectionStart)], ["http.request.connection_end", cy(e9.connectEnd)], ["http.request.request_start", cy(e9.requestStart)], ["http.request.response_start", cy(e9.responseStart)], ["http.request.response_end", cy(e9.responseEnd)]];
        }(t3);
        a3.forEach((a4) => e8.setAttribute(...a4)), setTimeout(r2);
      }
    });
  });
}
function cy(e8 = 0) {
  return (($v || performance.timeOrigin) + e8) / 1e3;
}
function uy(e8) {
  try {
    return new URL(e8, ow.location.origin).href;
  } catch (e9) {
    return;
  }
}
var ly = { ...xb, instrumentNavigation: true, instrumentPageLoad: true, markBackgroundSpan: true, enableLongTask: true, enableInp: false, interactionsSampleRate: 1, _experiments: {}, ...sy };
var py = (e8 = {}) => {
  const a2 = !!tw && !(!e8.tracePropagationTargets && !e8.tracingOrigins);
  Ab(), !e8.tracePropagationTargets && e8.tracingOrigins && (e8.tracePropagationTargets = e8.tracingOrigins);
  const r2 = { ...ly, ...e8 }, t2 = Qw(), o2 = {};
  r2.enableInp && Zw(o2, r2.interactionsSampleRate), r2.enableLongTask && Pw("longtask", ({ entries: e9 }) => {
    for (const a3 of e9) {
      const e10 = ob();
      if (!e10) return;
      const r3 = Kw($v + a3.startTime), t3 = Kw(a3.duration);
      e10.startChild({ description: "Main UI thread blocked", op: "ui.long-task", origin: "auto.ui.browser.metrics", startTimestamp: r3, endTimestamp: r3 + t3 });
    }
  }), r2._experiments.enableInteractions && Pw("event", ({ entries: e9 }) => {
    for (const a3 of e9) {
      const e10 = ob();
      if (!e10) return;
      if ("click" === a3.name) {
        const r3 = Kw($v + a3.startTime), t3 = Kw(a3.duration), o3 = { description: lf(a3.target), op: `ui.interaction.${a3.name}`, origin: "auto.ui.browser.metrics", startTimestamp: r3, endTimestamp: r3 + t3 }, n3 = mf(a3.target);
        n3 && (o3.attributes = { "ui.component_name": n3 }), e10.startChild(o3);
      }
    }
  });
  const n2 = { name: void 0, context: void 0 };
  function s2(e9) {
    const a3 = eb(), { beforeStartSpan: o3, idleTimeout: s3, finalTimeout: i2, heartbeatInterval: d2 } = r2, c2 = "pageload" === e9.op;
    let u2;
    if (c2) {
      const a4 = c2 ? my("sentry-trace") : "", r3 = c2 ? my("baggage") : void 0, { traceId: t3, dsc: o4, parentSpanId: n3, sampled: s4 } = Yv(a4, r3);
      u2 = { traceId: t3, parentSpanId: n3, parentSampled: s4, ...e9, metadata: { ...e9.metadata, dynamicSamplingContext: o4 }, trimEnd: true };
    } else u2 = { trimEnd: true, ...e9 };
    const l2 = o3 ? o3(u2) : u2;
    l2.metadata = l2.name !== u2.name ? { ...l2.metadata, source: "custom" } : l2.metadata, n2.name = l2.name, n2.context = l2, false === l2.sampled && tw && bf.log(`[Tracing] Will not send ${l2.op} transaction because of beforeNavigate.`), tw && bf.log(`[Tracing] Starting ${l2.op} transaction on scope`);
    const { location: p2 } = ow, m2 = Ob(a3, l2, s3, i2, true, { location: p2 }, d2, c2);
    return c2 && ow.document && (ow.document.addEventListener("readystatechange", () => {
      ["interactive", "complete"].includes(ow.document.readyState) && m2.sendAutoFinishSignal();
    }), ["interactive", "complete"].includes(ow.document.readyState) && m2.sendAutoFinishSignal()), m2.registerBeforeFinishCallback((e10) => {
      t2(), ay(e10);
    }), m2;
  }
  return { name: "BrowserTracing", setupOnce: () => {
  }, afterAllSetup(e9) {
    const t3 = e9.getOptions(), { markBackgroundSpan: i2, traceFetch: d2, traceXHR: c2, shouldCreateSpanForRequest: u2, enableHTTPTimings: l2, _experiments: p2 } = r2, m2 = t3 && t3.tracePropagationTargets, h2 = m2 || r2.tracePropagationTargets;
    let f2;
    tw && a2 && m2 && bf.warn("[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.");
    let v2 = ow.location && ow.location.href;
    if (e9.on && (e9.on("startNavigationSpan", (e10) => {
      f2 && (tw && bf.log(`[Tracing] Finishing current transaction with op: ${_g(f2).op}`), f2.end()), f2 = s2({ op: "navigation", ...e10 });
    }), e9.on("startPageLoadSpan", (e10) => {
      f2 && (tw && bf.log(`[Tracing] Finishing current transaction with op: ${_g(f2).op}`), f2.end()), f2 = s2({ op: "pageload", ...e10 });
    })), r2.instrumentPageLoad && e9.emit && ow.location) {
      const a3 = { name: ow.location.pathname, startTimestamp: $v ? $v / 1e3 : void 0, origin: "auto.pageload.browser", attributes: { [hb]: "url" } };
      !function(e10, a4) {
        if (!e10.emit) return;
        e10.emit("startPageLoadSpan", a4);
        const r3 = lb();
        r3 && _g(r3).op;
      }(e9, a3);
    }
    r2.instrumentNavigation && e9.emit && ow.location && xv(({ to: a3, from: r3 }) => {
      if (void 0 === r3 && v2 && -1 !== v2.indexOf(a3)) v2 = void 0;
      else if (r3 !== a3) {
        v2 = void 0;
        const a4 = { name: ow.location.pathname, origin: "auto.navigation.browser", attributes: { [hb]: "url" } };
        !function(e10, a5) {
          if (!e10.emit) return;
          e10.emit("startNavigationSpan", a5);
          const r4 = lb();
          r4 && _g(r4).op;
        }(e9, a4);
      }
    }), i2 && (ow.document ? ow.document.addEventListener("visibilitychange", () => {
      const e10 = ob();
      if (ow.document.hidden && e10) {
        const a3 = "cancelled", { op: r3, status: t4 } = _g(e10);
        tw && bf.log(`[Tracing] Transaction: ${a3} -> since tab moved to the background, op: ${r3}`), t4 || e10.setStatus(a3), e10.setTag("visibilitychange", "document.hidden"), e10.end();
      }
    }) : tw && bf.warn("[Tracing] Could not set up background tab detection due to lack of global document")), p2.enableInteractions && function(e10, a3) {
      let r3;
      const t4 = () => {
        const { idleTimeout: t5, finalTimeout: o3, heartbeatInterval: n3 } = e10, s3 = "ui.action.click", i3 = ob();
        if (i3 && i3.op && ["navigation", "pageload"].includes(i3.op)) return void (tw && bf.warn(`[Tracing] Did not create ${s3} transaction because a pageload or navigation transaction is in progress.`));
        if (r3 && (r3.setFinishReason("interactionInterrupted"), r3.end(), r3 = void 0), !a3.name) return void (tw && bf.warn(`[Tracing] Did not create ${s3} transaction because _latestRouteName is missing.`));
        const { location: d3 } = ow, c3 = { name: a3.name, op: s3, trimEnd: true, data: { [hb]: a3.context ? fy(a3.context) : "url" } };
        r3 = Ob(eb(), c3, t5, o3, true, { location: d3 }, n3);
      };
      ["click"].forEach((e11) => {
        ow.document && addEventListener(e11, t4, { once: false, capture: true });
      });
    }(r2, n2), r2.enableInp && function(e10, a3) {
      const r3 = ({ entries: r4 }) => {
        const t4 = Ng(), o3 = void 0 !== t4 && void 0 !== t4.getIntegrationByName ? t4.getIntegrationByName("Replay") : void 0, n3 = void 0 !== o3 ? o3.getReplayId() : void 0, s3 = ob(), i3 = Pg(), d3 = void 0 !== i3 ? i3.getUser() : void 0;
        r4.forEach((r5) => {
          if (function(e11) {
            return "duration" in e11;
          }(r5)) {
            const t5 = r5.interactionId;
            if (void 0 === t5) return;
            const o4 = e10[t5], i4 = r5.duration, c3 = r5.startTime, u3 = Object.keys(e10), l3 = u3.length > 0 ? u3.reduce((a4, r6) => e10[a4].duration < e10[r6].duration ? a4 : r6) : void 0;
            if ("first-input" === r5.entryType) {
              const a4 = u3.map((a5) => e10[a5]).some((e11) => e11.duration === i4 && e11.startTime === c3);
              if (a4) return;
            }
            if (!t5) return;
            if (o4) o4.duration = Math.max(o4.duration, i4);
            else if (u3.length < hy || void 0 === l3 || i4 > e10[l3].duration) {
              const r6 = a3.name, o5 = a3.context;
              r6 && o5 && (l3 && Object.keys(e10).length >= hy && delete e10[l3], e10[t5] = { routeName: r6, duration: i4, parentContext: o5, user: d3, activeTransaction: s3, replayId: n3, startTime: c3 });
            }
          }
        });
      };
      Pw("event", r3), Pw("first-input", r3);
    }(o2, n2), iy({ traceFetch: d2, traceXHR: c2, tracePropagationTargets: h2, shouldCreateSpanForRequest: u2, enableHTTPTimings: l2 });
  }, options: r2 };
};
function my(e8) {
  const a2 = (r2 = `meta[name=${e8}]`, uf.document && uf.document.querySelector ? uf.document.querySelector(r2) : null);
  var r2;
  return a2 ? a2.getAttribute("content") : void 0;
}
var hy = 10;
function fy(e8) {
  const a2 = e8.attributes && e8.attributes[hb], r2 = e8.data && e8.data[hb], t2 = e8.metadata && e8.metadata.source;
  return a2 || r2 || t2;
}
var vy = sf;
var gy = 0;
function by() {
  return gy > 0;
}
function wy(e8, a2 = {}, r2) {
  if ("function" != typeof e8) return e8;
  try {
    const a3 = e8.__sentry_wrapped__;
    if (a3) return a3;
    if (Ef(e8)) return e8;
  } catch (a3) {
    return e8;
  }
  const t2 = function() {
    const t3 = Array.prototype.slice.call(arguments);
    try {
      r2 && "function" == typeof r2 && r2.apply(this, arguments);
      const o2 = t3.map((e9) => wy(e9, a2));
      return e8.apply(this, o2);
    } catch (e9) {
      throw gy++, setTimeout(() => {
        gy--;
      }), Rg((r3) => {
        r3.addEventProcessor((e10) => (a2.mechanism && (Gf(e10, void 0, void 0), Yf(e10, a2.mechanism)), e10.extra = { ...e10.extra, arguments: t3 }, e10)), jg(e9);
      }), e9;
    }
  };
  try {
    for (const a3 in e8) Object.prototype.hasOwnProperty.call(e8, a3) && (t2[a3] = e8[a3]);
  } catch (e9) {
  }
  Tf(t2, e8), Sf(e8, "__sentry_wrapped__", t2);
  try {
    Object.getOwnPropertyDescriptor(t2, "name").configurable && Object.defineProperty(t2, "name", { get: () => e8.name });
  } catch (e9) {
  }
  return t2;
}
var yy = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
function xy(e8, a2) {
  const r2 = Iy(e8, a2), t2 = { type: a2 && a2.name, value: Sy(a2) };
  return r2.length && (t2.stacktrace = { frames: r2 }), void 0 === t2.type && "" === t2.value && (t2.value = "Unrecoverable error caught"), t2;
}
function _y(e8, a2) {
  return { exception: { values: [xy(e8, a2)] } };
}
function Iy(e8, a2) {
  const r2 = a2.stacktrace || a2.stack || "", t2 = function(e9) {
    if (e9) {
      if ("number" == typeof e9.framesToPop) return e9.framesToPop;
      if (ky.test(e9.message)) return 1;
    }
    return 0;
  }(a2);
  try {
    return e8(r2, t2);
  } catch (e9) {
  }
  return [];
}
var ky = /Minified React error #\d+;/i;
function Sy(e8) {
  const a2 = e8 && e8.message;
  return a2 ? a2.error && "string" == typeof a2.error.message ? a2.error.message : a2 : "No error message";
}
function Ty(e8, a2, r2, t2, o2) {
  let n2;
  if (Fh(a2) && a2.error) {
    return _y(e8, a2.error);
  }
  if (Bh(a2) || zh(a2, "DOMException")) {
    const o3 = a2;
    if ("stack" in a2) n2 = _y(e8, a2);
    else {
      const a3 = o3.name || (Bh(o3) ? "DOMError" : "DOMException"), s2 = o3.message ? `${a3}: ${o3.message}` : a3;
      n2 = Ey(e8, s2, r2, t2), Gf(n2, s2);
    }
    return "code" in o3 && (n2.tags = { ...n2.tags, "DOMException.code": `${o3.code}` }), n2;
  }
  if (Dh(a2)) return _y(e8, a2);
  if (Hh(a2) || Wh(a2)) {
    return n2 = function(e9, a3, r3, t3) {
      const o3 = Ng(), n3 = o3 && o3.getOptions().normalizeDepth, s2 = { exception: { values: [{ type: Wh(a3) ? a3.constructor.name : t3 ? "UnhandledRejection" : "Error", value: jy(a3, { isUnhandledRejection: t3 }) }] }, extra: { __serialized__: Av(a3, n3) } };
      if (r3) {
        const a4 = Iy(e9, r3);
        a4.length && (s2.exception.values[0].stacktrace = { frames: a4 });
      }
      return s2;
    }(e8, a2, r2, o2), Yf(n2, { synthetic: true }), n2;
  }
  return n2 = Ey(e8, a2, r2, t2), Gf(n2, `${a2}`, void 0), Yf(n2, { synthetic: true }), n2;
}
function Ey(e8, a2, r2, t2) {
  const o2 = {};
  if (t2 && r2) {
    const t3 = Iy(e8, r2);
    t3.length && (o2.exception = { values: [{ value: a2, stacktrace: { frames: t3 } }] });
  }
  if ($h(a2)) {
    const { __sentry_template_string__: e9, __sentry_template_values__: r3 } = a2;
    return o2.logentry = { message: e9, params: r3 }, o2;
  }
  return o2.message = a2, o2;
}
function jy(e8, { isUnhandledRejection: a2 }) {
  const r2 = function(e9, a3 = 40) {
    const r3 = Object.keys(jf(e9));
    if (r3.sort(), !r3.length) return "[object has no keys]";
    if (r3[0].length >= a3) return Jh(r3[0], a3);
    for (let e10 = r3.length; e10 > 0; e10--) {
      const t3 = r3.slice(0, e10).join(", ");
      if (!(t3.length > a3)) return e10 === r3.length ? t3 : Jh(t3, a3);
    }
    return "";
  }(e8), t2 = a2 ? "promise rejection" : "exception";
  if (Fh(e8)) return `Event \`ErrorEvent\` captured as ${t2} with message \`${e8.message}\``;
  if (Wh(e8)) {
    return `Event \`${function(e9) {
      try {
        const a3 = Object.getPrototypeOf(e9);
        return a3 ? a3.constructor.name : void 0;
      } catch (e10) {
      }
    }(e8)}\` (type=${e8.type}) captured as ${t2}`;
  }
  return `Object captured as ${t2} with keys: ${r2}`;
}
var Oy = class extends Fb {
  constructor(e8) {
    !function(e9, a2, r2 = [a2], t2 = "npm") {
      const o2 = e9._metadata || {};
      o2.sdk || (o2.sdk = { name: `sentry.javascript.${a2}`, packages: r2.map((e10) => ({ name: `${t2}:@sentry/${e10}`, version: Gg })), version: Gg }), e9._metadata = o2;
    }(e8, "browser", ["browser"], vy.SENTRY_SDK_SOURCE || "npm"), super(e8), e8.sendClientReports && vy.document && vy.document.addEventListener("visibilitychange", () => {
      "hidden" === vy.document.visibilityState && this._flushOutcomes();
    });
  }
  eventFromException(e8, a2) {
    return function(e9, a3, r2, t2) {
      const o2 = Ty(e9, a3, r2 && r2.syntheticException || void 0, t2);
      return Yf(o2), o2.level = "error", r2 && r2.event_id && (o2.event_id = r2.event_id), Nv(o2);
    }(this._options.stackParser, e8, a2, this._options.attachStacktrace);
  }
  eventFromMessage(e8, a2 = "info", r2) {
    return function(e9, a3, r3 = "info", t2, o2) {
      const n2 = Ey(e9, a3, t2 && t2.syntheticException || void 0, o2);
      return n2.level = r3, t2 && t2.event_id && (n2.event_id = t2.event_id), Nv(n2);
    }(this._options.stackParser, e8, a2, r2, this._options.attachStacktrace);
  }
  captureUserFeedback(e8) {
    if (!this._isEnabled()) return void (yy && bf.warn("SDK not enabled, will not capture user feedback."));
    const a2 = function(e9, { metadata: a3, tunnel: r2, dsn: t2 }) {
      const o2 = { event_id: e9.event_id, sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...a3 && a3.sdk && { sdk: { name: a3.sdk.name, version: a3.sdk.version } }, ...!!r2 && !!t2 && { dsn: yf(t2) } }, n2 = /* @__PURE__ */ function(e10) {
        return [{ type: "user_report" }, e10];
      }(e9);
      return Xv(o2, [n2]);
    }(e8, { metadata: this.getSdkMetadata(), dsn: this.getDsn(), tunnel: this.getOptions().tunnel });
    this._sendEnvelope(a2);
  }
  _prepareEvent(e8, a2, r2) {
    return e8.platform = e8.platform || "javascript", super._prepareEvent(e8, a2, r2);
  }
  _flushOutcomes() {
    const e8 = this._clearOutcomes();
    if (0 === e8.length) return void (yy && bf.log("No outcomes to send"));
    if (!this._dsn) return void (yy && bf.log("No dsn provided, will not send outcomes"));
    yy && bf.log("Sending outcomes:", e8);
    const a2 = (r2 = e8, Xv((t2 = this._options.tunnel && yf(this._dsn)) ? { dsn: t2 } : {}, [[{ type: "client_report" }, { timestamp: o2 || Bv(), discarded_events: r2 }]]));
    var r2, t2, o2;
    this._sendEnvelope(a2);
  }
};
var Ay;
function Cy(e8, a2 = function() {
  if (Ay) return Ay;
  if (iv(vy.fetch)) return Ay = vy.fetch.bind(vy);
  const e9 = vy.document;
  let a3 = vy.fetch;
  if (e9 && "function" == typeof e9.createElement) try {
    const r2 = e9.createElement("iframe");
    r2.hidden = true, e9.head.appendChild(r2);
    const t2 = r2.contentWindow;
    t2 && t2.fetch && (a3 = t2.fetch), e9.head.removeChild(r2);
  } catch (e10) {
    yy && bf.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", e10);
  }
  return Ay = a3.bind(vy);
}()) {
  let r2 = 0, t2 = 0;
  return Ub(e8, function(o2) {
    const n2 = o2.body.length;
    r2 += n2, t2++;
    const s2 = { body: o2.body, method: "POST", referrerPolicy: "origin", headers: e8.headers, keepalive: r2 <= 6e4 && t2 < 15, ...e8.fetchOptions };
    try {
      return a2(e8.url, s2).then((e9) => (r2 -= n2, t2--, { statusCode: e9.status, headers: { "x-sentry-rate-limits": e9.headers.get("X-Sentry-Rate-Limits"), "retry-after": e9.headers.get("Retry-After") } }));
    } catch (e9) {
      return Ay = void 0, r2 -= n2, t2--, Pv(e9);
    }
  });
}
function Ry(e8) {
  return Ub(e8, function(a2) {
    return new Mv((r2, t2) => {
      const o2 = new XMLHttpRequest();
      o2.onerror = t2, o2.onreadystatechange = () => {
        4 === o2.readyState && r2({ statusCode: o2.status, headers: { "x-sentry-rate-limits": o2.getResponseHeader("X-Sentry-Rate-Limits"), "retry-after": o2.getResponseHeader("Retry-After") } });
      }, o2.open("POST", e8.url);
      for (const a3 in e8.headers) Object.prototype.hasOwnProperty.call(e8.headers, a3) && o2.setRequestHeader(a3, e8.headers[a3]);
      o2.send(a2.body);
    });
  });
}
var Ny = "?";
function Py(e8, a2, r2, t2) {
  const o2 = { filename: e8, function: a2, in_app: true };
  return void 0 !== r2 && (o2.lineno = r2), void 0 !== t2 && (o2.colno = t2), o2;
}
var My = /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
var Ly = /\((\S*)(?::(\d+))(?::(\d+))\)/;
var Dy = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i;
var zy = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;
var Fy = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i;
var By = Mf(...[[30, (e8) => {
  const a2 = My.exec(e8);
  if (a2) {
    if (a2[2] && 0 === a2[2].indexOf("eval")) {
      const e10 = Ly.exec(a2[2]);
      e10 && (a2[2] = e10[1], a2[3] = e10[2], a2[4] = e10[3]);
    }
    const [e9, r2] = qy(a2[1] || Ny, a2[2]);
    return Py(r2, e9, a2[3] ? +a2[3] : void 0, a2[4] ? +a2[4] : void 0);
  }
}], [50, (e8) => {
  const a2 = Dy.exec(e8);
  if (a2) {
    if (a2[3] && a2[3].indexOf(" > eval") > -1) {
      const e10 = zy.exec(a2[3]);
      e10 && (a2[1] = a2[1] || "eval", a2[3] = e10[1], a2[4] = e10[2], a2[5] = "");
    }
    let e9 = a2[3], r2 = a2[1] || Ny;
    return [r2, e9] = qy(r2, e9), Py(e9, r2, a2[4] ? +a2[4] : void 0, a2[5] ? +a2[5] : void 0);
  }
}], [40, (e8) => {
  const a2 = Fy.exec(e8);
  return a2 ? Py(a2[2], a2[1] || Ny, +a2[3], a2[4] ? +a2[4] : void 0) : void 0;
}]]);
var qy = (e8, a2) => {
  const r2 = -1 !== e8.indexOf("safari-extension"), t2 = -1 !== e8.indexOf("safari-web-extension");
  return r2 || t2 ? [-1 !== e8.indexOf("@") ? e8.split("@")[0] : Ny, r2 ? `safari-extension:${a2}` : `safari-web-extension:${a2}`] : [e8, a2];
};
var $y = 1024;
var Uy = "Breadcrumbs";
var Hy = (e8 = {}) => {
  const a2 = { console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true, ...e8 };
  return { name: Uy, setupOnce() {
  }, setup(e9) {
    a2.console && Uf(/* @__PURE__ */ function(e10) {
      return function(a3) {
        if (Ng() !== e10) return;
        const r2 = { category: "console", data: { arguments: a3.args, logger: "console" }, level: Fv(a3.level), message: Qh(a3.args, " ") };
        if ("assert" === a3.level) {
          if (false !== a3.args[0]) return;
          r2.message = `Assertion failed: ${Qh(a3.args.slice(1), " ") || "console.assert"}`, r2.data.arguments = a3.args.slice(1);
        }
        Cg(r2, { input: a3.args, level: a3.level });
      };
    }(e9)), a2.dom && rv(/* @__PURE__ */ function(e10, a3) {
      return function(r2) {
        if (Ng() !== e10) return;
        let t2, o2, n2 = "object" == typeof a3 ? a3.serializeAttribute : void 0, s2 = "object" == typeof a3 && "number" == typeof a3.maxStringLength ? a3.maxStringLength : void 0;
        s2 && s2 > $y && (yy && bf.warn(`\`dom.maxStringLength\` cannot exceed 1024, but a value of ${s2} was configured. Sentry will use 1024 instead.`), s2 = $y), "string" == typeof n2 && (n2 = [n2]);
        try {
          const e11 = r2.event, a4 = function(e12) {
            return !!e12 && !!e12.target;
          }(e11) ? e11.target : e11;
          t2 = lf(a4, { keyAttrs: n2, maxStringLength: s2 }), o2 = mf(a4);
        } catch (e11) {
          t2 = "<unknown>";
        }
        if (0 === t2.length) return;
        const i2 = { category: `ui.${r2.name}`, message: t2 };
        o2 && (i2.data = { "ui.component_name": o2 }), Cg(i2, { event: r2.event, name: r2.name, global: r2.global });
      };
    }(e9, a2.dom)), a2.xhr && Sv(/* @__PURE__ */ function(e10) {
      return function(a3) {
        if (Ng() !== e10) return;
        const { startTimestamp: r2, endTimestamp: t2 } = a3, o2 = a3.xhr[kv];
        if (!r2 || !t2 || !o2) return;
        const { method: n2, url: s2, status_code: i2, body: d2 } = o2;
        Cg({ category: "xhr", data: { method: n2, url: s2, status_code: i2 }, type: "http" }, { xhr: a3.xhr, input: d2, startTimestamp: r2, endTimestamp: t2 });
      };
    }(e9)), a2.fetch && dv(/* @__PURE__ */ function(e10) {
      return function(a3) {
        if (Ng() !== e10) return;
        const { startTimestamp: r2, endTimestamp: t2 } = a3;
        if (t2 && (!a3.fetchData.url.match(/sentry_key/) || "POST" !== a3.fetchData.method)) if (a3.error) {
          Cg({ category: "fetch", data: a3.fetchData, level: "error", type: "http" }, { data: a3.error, input: a3.args, startTimestamp: r2, endTimestamp: t2 });
        } else {
          const e11 = a3.response;
          Cg({ category: "fetch", data: { ...a3.fetchData, status_code: e11 && e11.status }, type: "http" }, { input: a3.args, response: e11, startTimestamp: r2, endTimestamp: t2 });
        }
      };
    }(e9)), a2.history && xv(/* @__PURE__ */ function(e10) {
      return function(a3) {
        if (Ng() !== e10) return;
        let r2 = a3.from, t2 = a3.to;
        const o2 = Dv(vy.location.href);
        let n2 = r2 ? Dv(r2) : void 0;
        const s2 = Dv(t2);
        n2 && n2.path || (n2 = o2), o2.protocol === s2.protocol && o2.host === s2.host && (t2 = s2.relative), o2.protocol === n2.protocol && o2.host === n2.host && (r2 = n2.relative), Cg({ category: "navigation", data: { from: r2, to: t2 } });
      };
    }(e9)), a2.sentry && e9.on && e9.on("beforeSendEvent", /* @__PURE__ */ function(e10) {
      return function(a3) {
        Ng() === e10 && Cg({ category: "sentry." + ("transaction" === a3.type ? "transaction" : "event"), event_id: a3.event_id, level: a3.level, message: Vf(a3) }, { event: a3 });
      };
    }(e9));
  } };
};
Lb(Uy, Hy);
var Wy = "Dedupe";
var Ky = () => {
  let e8;
  return { name: Wy, setupOnce() {
  }, processEvent(a2) {
    if (a2.type) return a2;
    try {
      if (function(e9, a3) {
        if (!a3) return false;
        if (function(e10, a4) {
          const r2 = e10.message, t2 = a4.message;
          if (!r2 && !t2) return false;
          if (r2 && !t2 || !r2 && t2) return false;
          if (r2 !== t2) return false;
          if (!Gy(e10, a4)) return false;
          if (!Vy(e10, a4)) return false;
          return true;
        }(e9, a3)) return true;
        if (function(e10, a4) {
          const r2 = Yy(a4), t2 = Yy(e10);
          if (!r2 || !t2) return false;
          if (r2.type !== t2.type || r2.value !== t2.value) return false;
          if (!Gy(e10, a4)) return false;
          if (!Vy(e10, a4)) return false;
          return true;
        }(e9, a3)) return true;
        return false;
      }(a2, e8)) return yy && bf.warn("Event dropped due to being a duplicate of previously captured event."), null;
    } catch (e9) {
    }
    return e8 = a2;
  } };
};
function Vy(e8, a2) {
  let r2 = Jy(e8), t2 = Jy(a2);
  if (!r2 && !t2) return true;
  if (r2 && !t2 || !r2 && t2) return false;
  if (t2.length !== r2.length) return false;
  for (let e9 = 0; e9 < t2.length; e9++) {
    const a3 = t2[e9], o2 = r2[e9];
    if (a3.filename !== o2.filename || a3.lineno !== o2.lineno || a3.colno !== o2.colno || a3.function !== o2.function) return false;
  }
  return true;
}
function Gy(e8, a2) {
  let r2 = e8.fingerprint, t2 = a2.fingerprint;
  if (!r2 && !t2) return true;
  if (r2 && !t2 || !r2 && t2) return false;
  try {
    return !(r2.join("") !== t2.join(""));
  } catch (e9) {
    return false;
  }
}
function Yy(e8) {
  return e8.exception && e8.exception.values && e8.exception.values[0];
}
function Jy(e8) {
  const a2 = e8.exception;
  if (a2) try {
    return a2.values[0].stacktrace.frames;
  } catch (e9) {
    return;
  }
}
Lb(Wy, Ky);
var Xy = "GlobalHandlers";
var Qy = (e8 = {}) => {
  const a2 = { onerror: true, onunhandledrejection: true, ...e8 };
  return { name: Xy, setupOnce() {
    Error.stackTraceLimit = 50;
  }, setup(e9) {
    a2.onerror && (!function(e10) {
      mv((a3) => {
        const { stackParser: r2, attachStacktrace: t2 } = ax();
        if (Ng() !== e10 || by()) return;
        const { msg: o2, url: n2, line: s2, column: i2, error: d2 } = a3, c2 = void 0 === d2 && qh(o2) ? function(e11, a4, r3, t3) {
          const o3 = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;
          let n3 = Fh(e11) ? e11.message : e11, s3 = "Error";
          const i3 = n3.match(o3);
          i3 && (s3 = i3[1], n3 = i3[2]);
          const d3 = { exception: { values: [{ type: s3, value: n3 }] } };
          return Zy(d3, a4, r3, t3);
        }(o2, n2, s2, i2) : Zy(Ty(r2, d2 || o2, void 0, t2, false), n2, s2, i2);
        c2.level = "error", Ag(c2, { originalException: d2, mechanism: { handled: false, type: "onerror" } });
      });
    }(e9), ex("onerror")), a2.onunhandledrejection && (!function(e10) {
      vv((a3) => {
        const { stackParser: r2, attachStacktrace: t2 } = ax();
        if (Ng() !== e10 || by()) return;
        const o2 = function(e11) {
          if (Uh(e11)) return e11;
          const a4 = e11;
          try {
            if ("reason" in a4) return a4.reason;
            if ("detail" in a4 && "reason" in a4.detail) return a4.detail.reason;
          } catch (e12) {
          }
          return e11;
        }(a3), n2 = Uh(o2) ? { exception: { values: [{ type: "UnhandledRejection", value: `Non-Error promise rejection captured with value: ${String(o2)}` }] } } : Ty(r2, o2, void 0, t2, true);
        n2.level = "error", Ag(n2, { originalException: o2, mechanism: { handled: false, type: "onunhandledrejection" } });
      });
    }(e9), ex("onunhandledrejection"));
  } };
};
function Zy(e8, a2, r2, t2) {
  const o2 = e8.exception = e8.exception || {}, n2 = o2.values = o2.values || [], s2 = n2[0] = n2[0] || {}, i2 = s2.stacktrace = s2.stacktrace || {}, d2 = i2.frames = i2.frames || [], c2 = isNaN(parseInt(t2, 10)) ? void 0 : t2, u2 = isNaN(parseInt(r2, 10)) ? void 0 : r2, l2 = qh(a2) && a2.length > 0 ? a2 : function() {
    try {
      return uf.document.location.href;
    } catch (e9) {
      return "";
    }
  }();
  return 0 === d2.length && d2.push({ colno: c2, filename: l2, function: "?", in_app: true, lineno: u2 }), e8;
}
function ex(e8) {
  yy && bf.log(`Global Handler attached: ${e8}`);
}
function ax() {
  const e8 = Ng();
  return e8 && e8.getOptions() || { stackParser: () => [], attachStacktrace: false };
}
Lb(Xy, Qy);
var rx = "HttpContext";
var tx = () => ({ name: rx, setupOnce() {
}, preprocessEvent(e8) {
  if (!vy.navigator && !vy.location && !vy.document) return;
  const a2 = e8.request && e8.request.url || vy.location && vy.location.href, { referrer: r2 } = vy.document || {}, { userAgent: t2 } = vy.navigator || {}, o2 = { ...e8.request && e8.request.headers, ...r2 && { Referer: r2 }, ...t2 && { "User-Agent": t2 } }, n2 = { ...e8.request, ...a2 && { url: a2 }, headers: o2 };
  e8.request = n2;
} });
Lb(rx, tx);
var ox = "LinkedErrors";
var nx = (e8 = {}) => {
  const a2 = e8.limit || 5, r2 = e8.key || "cause";
  return { name: ox, setupOnce() {
  }, preprocessEvent(e9, t2, o2) {
    const n2 = o2.getOptions();
    af(xy, n2.stackParser, n2.maxValueLength, r2, a2, e9, t2);
  } };
};
Lb(ox, nx);
var sx = ["EventTarget", "Window", "Node", "ApplicationCache", "AudioTrackList", "BroadcastChannel", "ChannelMergerNode", "CryptoOperation", "EventSource", "FileReader", "HTMLUnknownElement", "IDBDatabase", "IDBRequest", "IDBTransaction", "KeyOperation", "MediaController", "MessagePort", "ModalWindow", "Notification", "SVGElementInstance", "Screen", "SharedWorker", "TextTrack", "TextTrackCue", "TextTrackList", "WebSocket", "WebSocketWorker", "Worker", "XMLHttpRequest", "XMLHttpRequestEventTarget", "XMLHttpRequestUpload"];
var ix = "TryCatch";
var dx = (e8 = {}) => {
  const a2 = { XMLHttpRequest: true, eventTarget: true, requestAnimationFrame: true, setInterval: true, setTimeout: true, ...e8 };
  return { name: ix, setupOnce() {
    a2.setTimeout && kf(vy, "setTimeout", cx), a2.setInterval && kf(vy, "setInterval", cx), a2.requestAnimationFrame && kf(vy, "requestAnimationFrame", ux), a2.XMLHttpRequest && "XMLHttpRequest" in vy && kf(XMLHttpRequest.prototype, "send", lx);
    const e9 = a2.eventTarget;
    if (e9) {
      (Array.isArray(e9) ? e9 : sx).forEach(px);
    }
  } };
};
function cx(e8) {
  return function(...a2) {
    const r2 = a2[0];
    return a2[0] = wy(r2, { mechanism: { data: { function: Df(e8) }, handled: false, type: "instrument" } }), e8.apply(this, a2);
  };
}
function ux(e8) {
  return function(a2) {
    return e8.apply(this, [wy(a2, { mechanism: { data: { function: "requestAnimationFrame", handler: Df(e8) }, handled: false, type: "instrument" } })]);
  };
}
function lx(e8) {
  return function(...a2) {
    const r2 = this;
    return ["onload", "onerror", "onprogress", "onreadystatechange"].forEach((e9) => {
      e9 in r2 && "function" == typeof r2[e9] && kf(r2, e9, function(a3) {
        const r3 = { mechanism: { data: { function: e9, handler: Df(a3) }, handled: false, type: "instrument" } }, t2 = Ef(a3);
        return t2 && (r3.mechanism.data.handler = Df(t2)), wy(a3, r3);
      });
    }), e8.apply(this, a2);
  };
}
function px(e8) {
  const a2 = vy, r2 = a2[e8] && a2[e8].prototype;
  r2 && r2.hasOwnProperty && r2.hasOwnProperty("addEventListener") && (kf(r2, "addEventListener", function(a3) {
    return function(r3, t2, o2) {
      try {
        "function" == typeof t2.handleEvent && (t2.handleEvent = wy(t2.handleEvent, { mechanism: { data: { function: "handleEvent", handler: Df(t2), target: e8 }, handled: false, type: "instrument" } }));
      } catch (e9) {
      }
      return a3.apply(this, [r3, wy(t2, { mechanism: { data: { function: "addEventListener", handler: Df(t2), target: e8 }, handled: false, type: "instrument" } }), o2]);
    };
  }), kf(r2, "removeEventListener", function(e9) {
    return function(a3, r3, t2) {
      const o2 = r3;
      try {
        const r4 = o2 && o2.__sentry_wrapped__;
        r4 && e9.call(this, a3, r4, t2);
      } catch (e10) {
      }
      return e9.call(this, a3, o2, t2);
    };
  }));
}
Lb(ix, dx);
var mx = [Xb(), rw(), dx(), Hy(), Qy(), nx(), Ky(), tx()];
function hx(e8 = {}) {
  void 0 === e8.defaultIntegrations && (e8.defaultIntegrations = [...mx]), void 0 === e8.release && ("string" == typeof __SENTRY_RELEASE__ && (e8.release = __SENTRY_RELEASE__), vy.SENTRY_RELEASE && vy.SENTRY_RELEASE.id && (e8.release = vy.SENTRY_RELEASE.id)), void 0 === e8.autoSessionTracking && (e8.autoSessionTracking = true), void 0 === e8.sendClientReports && (e8.sendClientReports = true);
  const a2 = { ...e8, stackParser: (r2 = e8.stackParser || By, Array.isArray(r2) ? Mf(...r2) : r2), integrations: Nb(e8), transport: e8.transport || (sv() ? Cy : Ry) };
  var r2;
  $b(Oy, a2), e8.autoSessionTracking && function() {
    if (void 0 === vy.document) return void (yy && bf.warn("Session tracking in non-browser environment with @sentry/browser is not supported."));
    Mg({ ignoreDuration: true }), zg(), xv(({ from: e9, to: a3 }) => {
      void 0 !== e9 && e9 !== a3 && (Mg({ ignoreDuration: true }), zg());
    });
  }();
}
var fx = sf;
var vx = "sentryReplaySession";
var gx = "Unable to send Replay";
var bx = 15e4;
var wx = 5e3;
var yx = 2e7;
var xx = 36e5;
function _x(e8) {
  let a2, r2 = e8[0], t2 = 1;
  for (; t2 < e8.length; ) {
    const o2 = e8[t2], n2 = e8[t2 + 1];
    if (t2 += 2, ("optionalAccess" === o2 || "optionalCall" === o2) && null == r2) return;
    "access" === o2 || "optionalAccess" === o2 ? (a2 = r2, r2 = n2(r2)) : "call" !== o2 && "optionalCall" !== o2 || (r2 = n2((...e9) => r2.call(a2, ...e9)), a2 = void 0);
  }
  return r2;
}
var Ix;
function kx(e8) {
  const a2 = _x([e8, "optionalAccess", (e9) => e9.host]);
  return Boolean(_x([a2, "optionalAccess", (e9) => e9.shadowRoot]) === e8);
}
function Sx(e8) {
  return "[object ShadowRoot]" === Object.prototype.toString.call(e8);
}
function Tx(e8) {
  try {
    const r2 = e8.rules || e8.cssRules;
    return r2 ? ((a2 = Array.from(r2, Ex).join("")).includes(" background-clip: text;") && !a2.includes(" -webkit-background-clip: text;") && (a2 = a2.replace(" background-clip: text;", " -webkit-background-clip: text; background-clip: text;")), a2) : null;
  } catch (e9) {
    return null;
  }
  var a2;
}
function Ex(e8) {
  let a2;
  if (function(e9) {
    return "styleSheet" in e9;
  }(e8)) try {
    a2 = Tx(e8.styleSheet) || function(e9) {
      const { cssText: a3 } = e9;
      if (a3.split('"').length < 3) return a3;
      const r2 = ["@import", `url(${JSON.stringify(e9.href)})`];
      return "" === e9.layerName ? r2.push("layer") : e9.layerName && r2.push(`layer(${e9.layerName})`), e9.supportsText && r2.push(`supports(${e9.supportsText})`), e9.media.length && r2.push(e9.media.mediaText), r2.join(" ") + ";";
    }(e8);
  } catch (e9) {
  }
  else if (function(e9) {
    return "selectorText" in e9;
  }(e8) && e8.selectorText.includes(":")) return function(e9) {
    const a3 = /(\[(?:[\w-]+)[^\\])(:(?:[\w-]+)\])/gm;
    return e9.replace(a3, "$1\\$2");
  }(e8.cssText);
  return a2 || e8.cssText;
}
!function(e8) {
  e8[e8.Document = 0] = "Document", e8[e8.DocumentType = 1] = "DocumentType", e8[e8.Element = 2] = "Element", e8[e8.Text = 3] = "Text", e8[e8.CDATA = 4] = "CDATA", e8[e8.Comment = 5] = "Comment";
}(Ix || (Ix = {}));
var jx = class {
  constructor() {
    this.idNodeMap = /* @__PURE__ */ new Map(), this.nodeMetaMap = /* @__PURE__ */ new WeakMap();
  }
  getId(e8) {
    if (!e8) return -1;
    const a2 = _x([this, "access", (e9) => e9.getMeta, "call", (a3) => a3(e8), "optionalAccess", (e9) => e9.id]);
    return t2 = () => -1, null != (r2 = a2) ? r2 : t2();
    var r2, t2;
  }
  getNode(e8) {
    return this.idNodeMap.get(e8) || null;
  }
  getIds() {
    return Array.from(this.idNodeMap.keys());
  }
  getMeta(e8) {
    return this.nodeMetaMap.get(e8) || null;
  }
  removeNodeFromMap(e8) {
    const a2 = this.getId(e8);
    this.idNodeMap.delete(a2), e8.childNodes && e8.childNodes.forEach((e9) => this.removeNodeFromMap(e9));
  }
  has(e8) {
    return this.idNodeMap.has(e8);
  }
  hasNode(e8) {
    return this.nodeMetaMap.has(e8);
  }
  add(e8, a2) {
    const r2 = a2.id;
    this.idNodeMap.set(r2, e8), this.nodeMetaMap.set(e8, a2);
  }
  replace(e8, a2) {
    const r2 = this.getNode(e8);
    if (r2) {
      const e9 = this.nodeMetaMap.get(r2);
      e9 && this.nodeMetaMap.set(a2, e9);
    }
    this.idNodeMap.set(e8, a2);
  }
  reset() {
    this.idNodeMap = /* @__PURE__ */ new Map(), this.nodeMetaMap = /* @__PURE__ */ new WeakMap();
  }
};
function Ox({ maskInputOptions: e8, tagName: a2, type: r2 }) {
  return "OPTION" === a2 && (a2 = "SELECT"), Boolean(e8[a2.toLowerCase()] || r2 && e8[r2] || "password" === r2 || "INPUT" === a2 && !r2 && e8.text);
}
function Ax({ isMasked: e8, element: a2, value: r2, maskInputFn: t2 }) {
  let o2 = r2 || "";
  return e8 ? (t2 && (o2 = t2(o2, a2)), "*".repeat(o2.length)) : o2;
}
function Cx(e8) {
  return e8.toLowerCase();
}
function Rx(e8) {
  return e8.toUpperCase();
}
var Nx = "__rrweb_original__";
function Px(e8) {
  const a2 = e8.type;
  return e8.hasAttribute("data-rr-is-password") ? "password" : a2 ? Cx(a2) : null;
}
function Mx(e8, a2, r2) {
  return "INPUT" !== a2 || "radio" !== r2 && "checkbox" !== r2 ? e8.value : e8.getAttribute("value") || "";
}
var Lx = 1;
var Dx = new RegExp("[^a-z0-9-_:]");
function zx() {
  return Lx++;
}
var Fx;
var Bx;
var qx = /url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm;
var $x = /^(?:[a-z+]+:)?\/\//i;
var Ux = /^www\..*/i;
var Hx = /^(data:)([^,]*),(.*)/i;
function Wx(e8, a2) {
  return (e8 || "").replace(qx, (e9, r2, t2, o2, n2, s2) => {
    const i2 = t2 || n2 || s2, d2 = r2 || o2 || "";
    if (!i2) return e9;
    if ($x.test(i2) || Ux.test(i2)) return `url(${d2}${i2}${d2})`;
    if (Hx.test(i2)) return `url(${d2}${i2}${d2})`;
    if ("/" === i2[0]) return `url(${d2}${function(e10) {
      let a3 = "";
      return a3 = e10.indexOf("//") > -1 ? e10.split("/").slice(0, 3).join("/") : e10.split("/")[0], a3 = a3.split("?")[0], a3;
    }(a2) + i2}${d2})`;
    const c2 = a2.split("/"), u2 = i2.split("/");
    c2.pop();
    for (const e10 of u2) "." !== e10 && (".." === e10 ? c2.pop() : c2.push(e10));
    return `url(${d2}${c2.join("/")}${d2})`;
  });
}
var Kx = /^[^ \t\n\r\u000c]+/;
var Vx = /^[, \t\n\r\u000c]+/;
function Gx(e8, a2) {
  if (!a2 || "" === a2.trim()) return a2;
  const r2 = e8.createElement("a");
  return r2.href = a2, r2.href;
}
function Yx(e8) {
  return Boolean("svg" === e8.tagName || e8.ownerSVGElement);
}
function Jx() {
  const e8 = document.createElement("a");
  return e8.href = "", e8.href;
}
function Xx(e8, a2, r2, t2, o2, n2) {
  return t2 ? "src" === r2 || "href" === r2 && ("use" !== a2 || "#" !== t2[0]) || "xlink:href" === r2 && "#" !== t2[0] ? Gx(e8, t2) : "background" !== r2 || "table" !== a2 && "td" !== a2 && "th" !== a2 ? "srcset" === r2 ? function(e9, a3) {
    if ("" === a3.trim()) return a3;
    let r3 = 0;
    function t3(e10) {
      let t4;
      const o4 = e10.exec(a3.substring(r3));
      return o4 ? (t4 = o4[0], r3 += t4.length, t4) : "";
    }
    const o3 = [];
    for (; t3(Vx), !(r3 >= a3.length); ) {
      let n3 = t3(Kx);
      if ("," === n3.slice(-1)) n3 = Gx(e9, n3.substring(0, n3.length - 1)), o3.push(n3);
      else {
        let t4 = "";
        n3 = Gx(e9, n3);
        let s2 = false;
        for (; ; ) {
          const e10 = a3.charAt(r3);
          if ("" === e10) {
            o3.push((n3 + t4).trim());
            break;
          }
          if (s2) ")" === e10 && (s2 = false);
          else {
            if ("," === e10) {
              r3 += 1, o3.push((n3 + t4).trim());
              break;
            }
            "(" === e10 && (s2 = true);
          }
          t4 += e10, r3 += 1;
        }
      }
    }
    return o3.join(", ");
  }(e8, t2) : "style" === r2 ? Wx(t2, Jx()) : "object" === a2 && "data" === r2 ? Gx(e8, t2) : "function" == typeof n2 ? n2(r2, t2, o2) : t2 : Gx(e8, t2) : t2;
}
function Qx(e8, a2, r2) {
  return ("video" === e8 || "audio" === e8) && "autoplay" === a2;
}
function Zx(e8, a2, r2 = 1 / 0, t2 = 0) {
  return e8 ? e8.nodeType !== e8.ELEMENT_NODE || t2 > r2 ? -1 : a2(e8) ? t2 : Zx(e8.parentNode, a2, r2, t2 + 1) : -1;
}
function e_(e8, a2) {
  return (r2) => {
    const t2 = r2;
    if (null === t2) return false;
    try {
      if (e8) {
        if ("string" == typeof e8) {
          if (t2.matches(`.${e8}`)) return true;
        } else if (function(e9, a3) {
          for (let r3 = e9.classList.length; r3--; ) {
            const t3 = e9.classList[r3];
            if (a3.test(t3)) return true;
          }
          return false;
        }(t2, e8)) return true;
      }
      return !(!a2 || !t2.matches(a2));
    } catch (e9) {
      return false;
    }
  };
}
function a_(e8, a2, r2, t2, o2, n2) {
  try {
    const s2 = e8.nodeType === e8.ELEMENT_NODE ? e8 : e8.parentElement;
    if (null === s2) return false;
    if ("INPUT" === s2.tagName) {
      const e9 = s2.getAttribute("autocomplete");
      if (["current-password", "new-password", "cc-number", "cc-exp", "cc-exp-month", "cc-exp-year", "cc-csc"].includes(e9)) return true;
    }
    let i2 = -1, d2 = -1;
    if (n2) {
      if (d2 = Zx(s2, e_(t2, o2)), d2 < 0) return true;
      i2 = Zx(s2, e_(a2, r2), d2 >= 0 ? d2 : 1 / 0);
    } else {
      if (i2 = Zx(s2, e_(a2, r2)), i2 < 0) return false;
      d2 = Zx(s2, e_(t2, o2), i2 >= 0 ? i2 : 1 / 0);
    }
    return i2 >= 0 ? !(d2 >= 0) || i2 <= d2 : !(d2 >= 0) && !!n2;
  } catch (e9) {
  }
  return !!n2;
}
function r_(e8, a2) {
  const { doc: r2, mirror: t2, blockClass: o2, blockSelector: n2, unblockSelector: s2, maskAllText: i2, maskAttributeFn: d2, maskTextClass: c2, unmaskTextClass: u2, maskTextSelector: l2, unmaskTextSelector: p2, inlineStylesheet: m2, maskInputOptions: h2 = {}, maskTextFn: f2, maskInputFn: v2, dataURLOptions: g2 = {}, inlineImages: b2, recordCanvas: w2, keepIframeSrcFn: y2, newlyAddedElement: x2 = false } = a2, _2 = function(e9, a3) {
    if (!a3.hasNode(e9)) return;
    const r3 = a3.getId(e9);
    return 1 === r3 ? void 0 : r3;
  }(r2, t2);
  switch (e8.nodeType) {
    case e8.DOCUMENT_NODE:
      return "CSS1Compat" !== e8.compatMode ? { type: Ix.Document, childNodes: [], compatMode: e8.compatMode } : { type: Ix.Document, childNodes: [] };
    case e8.DOCUMENT_TYPE_NODE:
      return { type: Ix.DocumentType, name: e8.name, publicId: e8.publicId, systemId: e8.systemId, rootId: _2 };
    case e8.ELEMENT_NODE:
      return function(e9, a3) {
        const { doc: r3, blockClass: t3, blockSelector: o3, unblockSelector: n3, inlineStylesheet: s3, maskInputOptions: i3 = {}, maskAttributeFn: d3, maskInputFn: c3, dataURLOptions: u3 = {}, inlineImages: l3, recordCanvas: p3, keepIframeSrcFn: m3, newlyAddedElement: h3 = false, rootId: f3, maskAllText: v3, maskTextClass: g3, unmaskTextClass: b3, maskTextSelector: w3, unmaskTextSelector: y3 } = a3, x3 = function(e10, a4, r4, t4) {
          try {
            if (t4 && e10.matches(t4)) return false;
            if ("string" == typeof a4) {
              if (e10.classList.contains(a4)) return true;
            } else for (let r5 = e10.classList.length; r5--; ) {
              const t5 = e10.classList[r5];
              if (a4.test(t5)) return true;
            }
            if (r4) return e10.matches(r4);
          } catch (e11) {
          }
          return false;
        }(e9, t3, o3, n3), _3 = function(e10) {
          if (e10 instanceof HTMLFormElement) return "form";
          const a4 = Cx(e10.tagName);
          return Dx.test(a4) ? "div" : a4;
        }(e9);
        let I2 = {};
        const k2 = e9.attributes.length;
        for (let a4 = 0; a4 < k2; a4++) {
          const t4 = e9.attributes[a4];
          t4.name && !Qx(_3, t4.name, t4.value) && (I2[t4.name] = Xx(r3, _3, Cx(t4.name), t4.value, e9, d3));
        }
        if ("link" === _3 && s3) {
          const a4 = Array.from(r3.styleSheets).find((a5) => a5.href === e9.href);
          let t4 = null;
          a4 && (t4 = Tx(a4)), t4 && (delete I2.rel, delete I2.href, I2._cssText = Wx(t4, a4.href));
        }
        if ("style" === _3 && e9.sheet && !(e9.innerText || e9.textContent || "").trim().length) {
          const a4 = Tx(e9.sheet);
          a4 && (I2._cssText = Wx(a4, Jx()));
        }
        if ("input" === _3 || "textarea" === _3 || "select" === _3 || "option" === _3) {
          const a4 = e9, r4 = Px(a4), t4 = Mx(a4, Rx(_3), r4), o4 = a4.checked;
          if ("submit" !== r4 && "button" !== r4 && t4) {
            const e10 = a_(a4, g3, w3, b3, y3, Ox({ type: r4, tagName: Rx(_3), maskInputOptions: i3 }));
            I2.value = Ax({ isMasked: e10, element: a4, value: t4, maskInputFn: c3 });
          }
          o4 && (I2.checked = o4);
        }
        "option" === _3 && (e9.selected && !i3.select ? I2.selected = true : delete I2.selected);
        if ("canvas" === _3 && p3) {
          if ("2d" === e9.__context) (function(e10) {
            const a4 = e10.getContext("2d");
            if (!a4) return true;
            for (let r4 = 0; r4 < e10.width; r4 += 50) for (let t4 = 0; t4 < e10.height; t4 += 50) {
              const o4 = a4.getImageData, n4 = Nx in o4 ? o4[Nx] : o4;
              if (new Uint32Array(n4.call(a4, r4, t4, Math.min(50, e10.width - r4), Math.min(50, e10.height - t4)).data.buffer).some((e11) => 0 !== e11)) return false;
            }
            return true;
          })(e9) || (I2.rr_dataURL = e9.toDataURL(u3.type, u3.quality));
          else if (!("__context" in e9)) {
            const a4 = e9.toDataURL(u3.type, u3.quality), r4 = document.createElement("canvas");
            r4.width = e9.width, r4.height = e9.height;
            a4 !== r4.toDataURL(u3.type, u3.quality) && (I2.rr_dataURL = a4);
          }
        }
        if ("img" === _3 && l3) {
          Fx || (Fx = r3.createElement("canvas"), Bx = Fx.getContext("2d"));
          const a4 = e9, t4 = a4.crossOrigin;
          a4.crossOrigin = "anonymous";
          const o4 = () => {
            a4.removeEventListener("load", o4);
            try {
              Fx.width = a4.naturalWidth, Fx.height = a4.naturalHeight, Bx.drawImage(a4, 0, 0), I2.rr_dataURL = Fx.toDataURL(u3.type, u3.quality);
            } catch (e10) {
              console.warn(`Cannot inline img src=${a4.currentSrc}! Error: ${e10}`);
            }
            t4 ? I2.crossOrigin = t4 : a4.removeAttribute("crossorigin");
          };
          a4.complete && 0 !== a4.naturalWidth ? o4() : a4.addEventListener("load", o4);
        }
        "audio" !== _3 && "video" !== _3 || (I2.rr_mediaState = e9.paused ? "paused" : "played", I2.rr_mediaCurrentTime = e9.currentTime);
        h3 || (e9.scrollLeft && (I2.rr_scrollLeft = e9.scrollLeft), e9.scrollTop && (I2.rr_scrollTop = e9.scrollTop));
        if (x3) {
          const { width: a4, height: r4 } = e9.getBoundingClientRect();
          I2 = { class: I2.class, rr_width: `${a4}px`, rr_height: `${r4}px` };
        }
        "iframe" !== _3 || m3(I2.src) || (e9.contentDocument || (I2.rr_src = I2.src), delete I2.src);
        let S2;
        try {
          customElements.get(_3) && (S2 = true);
        } catch (e10) {
        }
        return { type: Ix.Element, tagName: _3, attributes: I2, childNodes: [], isSVG: Yx(e9) || void 0, needBlock: x3, rootId: f3, isCustom: S2 };
      }(e8, { doc: r2, blockClass: o2, blockSelector: n2, unblockSelector: s2, inlineStylesheet: m2, maskAttributeFn: d2, maskInputOptions: h2, maskInputFn: v2, dataURLOptions: g2, inlineImages: b2, recordCanvas: w2, keepIframeSrcFn: y2, newlyAddedElement: x2, rootId: _2, maskAllText: i2, maskTextClass: c2, unmaskTextClass: u2, maskTextSelector: l2, unmaskTextSelector: p2 });
    case e8.TEXT_NODE:
      return function(e9, a3) {
        const { maskAllText: r3, maskTextClass: t3, unmaskTextClass: o3, maskTextSelector: n3, unmaskTextSelector: s3, maskTextFn: i3, maskInputOptions: d3, maskInputFn: c3, rootId: u3 } = a3, l3 = e9.parentNode && e9.parentNode.tagName;
        let p3 = e9.textContent;
        const m3 = "STYLE" === l3 || void 0, h3 = "SCRIPT" === l3 || void 0, f3 = "TEXTAREA" === l3 || void 0;
        if (m3 && p3) {
          try {
            e9.nextSibling || e9.previousSibling || _x([e9, "access", (e10) => e10.parentNode, "access", (e10) => e10.sheet, "optionalAccess", (e10) => e10.cssRules]) && (p3 = Tx(e9.parentNode.sheet));
          } catch (a4) {
            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${a4}`, e9);
          }
          p3 = Wx(p3, Jx());
        }
        h3 && (p3 = "SCRIPT_PLACEHOLDER");
        const v3 = a_(e9, t3, n3, o3, s3, r3);
        m3 || h3 || f3 || !p3 || !v3 || (p3 = i3 ? i3(p3, e9.parentElement) : p3.replace(/[\S]/g, "*"));
        f3 && p3 && (d3.textarea || v3) && (p3 = c3 ? c3(p3, e9.parentNode) : p3.replace(/[\S]/g, "*"));
        if ("OPTION" === l3 && p3) {
          p3 = Ax({ isMasked: a_(e9, t3, n3, o3, s3, Ox({ type: null, tagName: l3, maskInputOptions: d3 })), element: e9, value: p3, maskInputFn: c3 });
        }
        return { type: Ix.Text, textContent: p3 || "", isStyle: m3, rootId: u3 };
      }(e8, { maskAllText: i2, maskTextClass: c2, unmaskTextClass: u2, maskTextSelector: l2, unmaskTextSelector: p2, maskTextFn: f2, maskInputOptions: h2, maskInputFn: v2, rootId: _2 });
    case e8.CDATA_SECTION_NODE:
      return { type: Ix.CDATA, textContent: "", rootId: _2 };
    case e8.COMMENT_NODE:
      return { type: Ix.Comment, textContent: e8.textContent || "", rootId: _2 };
    default:
      return false;
  }
}
function t_(e8) {
  return null == e8 ? "" : e8.toLowerCase();
}
function o_(e8, a2) {
  const { doc: r2, mirror: t2, blockClass: o2, blockSelector: n2, unblockSelector: s2, maskAllText: i2, maskTextClass: d2, unmaskTextClass: c2, maskTextSelector: u2, unmaskTextSelector: l2, skipChild: p2 = false, inlineStylesheet: m2 = true, maskInputOptions: h2 = {}, maskAttributeFn: f2, maskTextFn: v2, maskInputFn: g2, slimDOMOptions: b2, dataURLOptions: w2 = {}, inlineImages: y2 = false, recordCanvas: x2 = false, onSerialize: _2, onIframeLoad: I2, iframeLoadTimeout: k2 = 5e3, onStylesheetLoad: S2, stylesheetLoadTimeout: T2 = 5e3, keepIframeSrcFn: E2 = () => false, newlyAddedElement: j2 = false } = a2;
  let { preserveWhiteSpace: O2 = true } = a2;
  const A2 = r_(e8, { doc: r2, mirror: t2, blockClass: o2, blockSelector: n2, maskAllText: i2, unblockSelector: s2, maskTextClass: d2, unmaskTextClass: c2, maskTextSelector: u2, unmaskTextSelector: l2, inlineStylesheet: m2, maskInputOptions: h2, maskAttributeFn: f2, maskTextFn: v2, maskInputFn: g2, dataURLOptions: w2, inlineImages: y2, recordCanvas: x2, keepIframeSrcFn: E2, newlyAddedElement: j2 });
  if (!A2) return console.warn(e8, "not serialized"), null;
  let C2;
  C2 = t2.hasNode(e8) ? t2.getId(e8) : !function(e9, a3) {
    if (a3.comment && e9.type === Ix.Comment) return true;
    if (e9.type === Ix.Element) {
      if (a3.script && ("script" === e9.tagName || "link" === e9.tagName && ("preload" === e9.attributes.rel || "modulepreload" === e9.attributes.rel) && "script" === e9.attributes.as || "link" === e9.tagName && "prefetch" === e9.attributes.rel && "string" == typeof e9.attributes.href && e9.attributes.href.endsWith(".js"))) return true;
      if (a3.headFavicon && ("link" === e9.tagName && "shortcut icon" === e9.attributes.rel || "meta" === e9.tagName && (t_(e9.attributes.name).match(/^msapplication-tile(image|color)$/) || "application-name" === t_(e9.attributes.name) || "icon" === t_(e9.attributes.rel) || "apple-touch-icon" === t_(e9.attributes.rel) || "shortcut icon" === t_(e9.attributes.rel)))) return true;
      if ("meta" === e9.tagName) {
        if (a3.headMetaDescKeywords && t_(e9.attributes.name).match(/^description|keywords$/)) return true;
        if (a3.headMetaSocial && (t_(e9.attributes.property).match(/^(og|twitter|fb):/) || t_(e9.attributes.name).match(/^(og|twitter):/) || "pinterest" === t_(e9.attributes.name))) return true;
        if (a3.headMetaRobots && ("robots" === t_(e9.attributes.name) || "googlebot" === t_(e9.attributes.name) || "bingbot" === t_(e9.attributes.name))) return true;
        if (a3.headMetaHttpEquiv && void 0 !== e9.attributes["http-equiv"]) return true;
        if (a3.headMetaAuthorship && ("author" === t_(e9.attributes.name) || "generator" === t_(e9.attributes.name) || "framework" === t_(e9.attributes.name) || "publisher" === t_(e9.attributes.name) || "progid" === t_(e9.attributes.name) || t_(e9.attributes.property).match(/^article:/) || t_(e9.attributes.property).match(/^product:/))) return true;
        if (a3.headMetaVerification && ("google-site-verification" === t_(e9.attributes.name) || "yandex-verification" === t_(e9.attributes.name) || "csrf-token" === t_(e9.attributes.name) || "p:domain_verify" === t_(e9.attributes.name) || "verify-v1" === t_(e9.attributes.name) || "verification" === t_(e9.attributes.name) || "shopify-checkout-api-token" === t_(e9.attributes.name))) return true;
      }
    }
    return false;
  }(A2, b2) && (O2 || A2.type !== Ix.Text || A2.isStyle || A2.textContent.replace(/^\s+|\s+$/gm, "").length) ? zx() : -2;
  const R2 = Object.assign(A2, { id: C2 });
  if (t2.add(e8, R2), -2 === C2) return null;
  _2 && _2(e8);
  let N2 = !p2;
  if (R2.type === Ix.Element) {
    N2 = N2 && !R2.needBlock, delete R2.needBlock;
    const a3 = e8.shadowRoot;
    a3 && Sx(a3) && (R2.isShadowHost = true);
  }
  if ((R2.type === Ix.Document || R2.type === Ix.Element) && N2) {
    b2.headWhitespace && R2.type === Ix.Element && "head" === R2.tagName && (O2 = false);
    const a3 = { doc: r2, mirror: t2, blockClass: o2, blockSelector: n2, maskAllText: i2, unblockSelector: s2, maskTextClass: d2, unmaskTextClass: c2, maskTextSelector: u2, unmaskTextSelector: l2, skipChild: p2, inlineStylesheet: m2, maskInputOptions: h2, maskAttributeFn: f2, maskTextFn: v2, maskInputFn: g2, slimDOMOptions: b2, dataURLOptions: w2, inlineImages: y2, recordCanvas: x2, preserveWhiteSpace: O2, onSerialize: _2, onIframeLoad: I2, iframeLoadTimeout: k2, onStylesheetLoad: S2, stylesheetLoadTimeout: T2, keepIframeSrcFn: E2 };
    for (const r3 of Array.from(e8.childNodes)) {
      const e9 = o_(r3, a3);
      e9 && R2.childNodes.push(e9);
    }
    if (function(e9) {
      return e9.nodeType === e9.ELEMENT_NODE;
    }(e8) && e8.shadowRoot) for (const r3 of Array.from(e8.shadowRoot.childNodes)) {
      const t3 = o_(r3, a3);
      t3 && (Sx(e8.shadowRoot) && (t3.isShadow = true), R2.childNodes.push(t3));
    }
  }
  return e8.parentNode && kx(e8.parentNode) && Sx(e8.parentNode) && (R2.isShadow = true), R2.type === Ix.Element && "iframe" === R2.tagName && function(e9, a3, r3) {
    const t3 = e9.contentWindow;
    if (!t3) return;
    let o3, n3 = false;
    try {
      o3 = t3.document.readyState;
    } catch (e10) {
      return;
    }
    if ("complete" !== o3) {
      const t4 = setTimeout(() => {
        n3 || (a3(), n3 = true);
      }, r3);
      return void e9.addEventListener("load", () => {
        clearTimeout(t4), n3 = true, a3();
      });
    }
    const s3 = "about:blank";
    if (t3.location.href !== s3 || e9.src === s3 || "" === e9.src) return setTimeout(a3, 0), e9.addEventListener("load", a3);
    e9.addEventListener("load", a3);
  }(e8, () => {
    const a3 = e8.contentDocument;
    if (a3 && I2) {
      const r3 = o_(a3, { doc: a3, mirror: t2, blockClass: o2, blockSelector: n2, unblockSelector: s2, maskAllText: i2, maskTextClass: d2, unmaskTextClass: c2, maskTextSelector: u2, unmaskTextSelector: l2, skipChild: false, inlineStylesheet: m2, maskInputOptions: h2, maskAttributeFn: f2, maskTextFn: v2, maskInputFn: g2, slimDOMOptions: b2, dataURLOptions: w2, inlineImages: y2, recordCanvas: x2, preserveWhiteSpace: O2, onSerialize: _2, onIframeLoad: I2, iframeLoadTimeout: k2, onStylesheetLoad: S2, stylesheetLoadTimeout: T2, keepIframeSrcFn: E2 });
      r3 && I2(e8, r3);
    }
  }, k2), R2.type === Ix.Element && "link" === R2.tagName && "stylesheet" === R2.attributes.rel && function(e9, a3, r3) {
    let t3, o3 = false;
    try {
      t3 = e9.sheet;
    } catch (e10) {
      return;
    }
    if (t3) return;
    const n3 = setTimeout(() => {
      o3 || (a3(), o3 = true);
    }, r3);
    e9.addEventListener("load", () => {
      clearTimeout(n3), o3 = true, a3();
    });
  }(e8, () => {
    if (S2) {
      const a3 = o_(e8, { doc: r2, mirror: t2, blockClass: o2, blockSelector: n2, unblockSelector: s2, maskAllText: i2, maskTextClass: d2, unmaskTextClass: c2, maskTextSelector: u2, unmaskTextSelector: l2, skipChild: false, inlineStylesheet: m2, maskInputOptions: h2, maskAttributeFn: f2, maskTextFn: v2, maskInputFn: g2, slimDOMOptions: b2, dataURLOptions: w2, inlineImages: y2, recordCanvas: x2, preserveWhiteSpace: O2, onSerialize: _2, onIframeLoad: I2, iframeLoadTimeout: k2, onStylesheetLoad: S2, stylesheetLoadTimeout: T2, keepIframeSrcFn: E2 });
      a3 && S2(e8, a3);
    }
  }, T2), R2;
}
function n_(e8) {
  let a2, r2 = e8[0], t2 = 1;
  for (; t2 < e8.length; ) {
    const o2 = e8[t2], n2 = e8[t2 + 1];
    if (t2 += 2, ("optionalAccess" === o2 || "optionalCall" === o2) && null == r2) return;
    "access" === o2 || "optionalAccess" === o2 ? (a2 = r2, r2 = n2(r2)) : "call" !== o2 && "optionalCall" !== o2 || (r2 = n2((...e9) => r2.call(a2, ...e9)), a2 = void 0);
  }
  return r2;
}
function s_(e8, a2, r2 = document) {
  const t2 = { capture: true, passive: true };
  return r2.addEventListener(e8, a2, t2), () => r2.removeEventListener(e8, a2, t2);
}
var i_ = "Please stop import mirror directly. Instead of that,\r\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\r\nor you can use record.mirror to access the mirror instance during recording.";
var d_ = { map: {}, getId: () => (console.error(i_), -1), getNode: () => (console.error(i_), null), removeNodeFromMap() {
  console.error(i_);
}, has: () => (console.error(i_), false), reset() {
  console.error(i_);
} };
function c_(e8, a2, r2 = {}) {
  let t2 = null, o2 = 0;
  return function(...n2) {
    const s2 = Date.now();
    o2 || false !== r2.leading || (o2 = s2);
    const i2 = a2 - (s2 - o2), d2 = this;
    i2 <= 0 || i2 > a2 ? (t2 && (!function(...e9) {
      O_("clearTimeout")(...e9);
    }(t2), t2 = null), o2 = s2, e8.apply(d2, n2)) : t2 || false === r2.trailing || (t2 = A_(() => {
      o2 = false === r2.leading ? 0 : Date.now(), t2 = null, e8.apply(d2, n2);
    }, i2));
  };
}
function u_(e8, a2, r2, t2, o2 = window) {
  const n2 = o2.Object.getOwnPropertyDescriptor(e8, a2);
  return o2.Object.defineProperty(e8, a2, t2 ? r2 : { set(e9) {
    A_(() => {
      r2.set.call(this, e9);
    }, 0), n2 && n2.set && n2.set.call(this, e9);
  } }), () => u_(e8, a2, n2 || {}, true);
}
function l_(e8, a2, r2) {
  try {
    if (!(a2 in e8)) return () => {
    };
    const t2 = e8[a2], o2 = r2(t2);
    return "function" == typeof o2 && (o2.prototype = o2.prototype || {}, Object.defineProperties(o2, { __rrweb_original__: { enumerable: false, value: t2 } })), e8[a2] = o2, () => {
      e8[a2] = t2;
    };
  } catch (e9) {
    return () => {
    };
  }
}
"undefined" != typeof window && window.Proxy && window.Reflect && (d_ = new Proxy(d_, { get: (e8, a2, r2) => ("map" === a2 && console.error(i_), Reflect.get(e8, a2, r2)) }));
var p_ = Date.now;
function m_(e8) {
  const a2 = e8.document;
  return { left: a2.scrollingElement ? a2.scrollingElement.scrollLeft : void 0 !== e8.pageXOffset ? e8.pageXOffset : n_([a2, "optionalAccess", (e9) => e9.documentElement, "access", (e9) => e9.scrollLeft]) || n_([a2, "optionalAccess", (e9) => e9.body, "optionalAccess", (e9) => e9.parentElement, "optionalAccess", (e9) => e9.scrollLeft]) || n_([a2, "optionalAccess", (e9) => e9.body, "optionalAccess", (e9) => e9.scrollLeft]) || 0, top: a2.scrollingElement ? a2.scrollingElement.scrollTop : void 0 !== e8.pageYOffset ? e8.pageYOffset : n_([a2, "optionalAccess", (e9) => e9.documentElement, "access", (e9) => e9.scrollTop]) || n_([a2, "optionalAccess", (e9) => e9.body, "optionalAccess", (e9) => e9.parentElement, "optionalAccess", (e9) => e9.scrollTop]) || n_([a2, "optionalAccess", (e9) => e9.body, "optionalAccess", (e9) => e9.scrollTop]) || 0 };
}
function h_() {
  return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight;
}
function f_() {
  return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth;
}
function v_(e8) {
  if (!e8) return null;
  return e8.nodeType === e8.ELEMENT_NODE ? e8 : e8.parentElement;
}
function g_(e8, a2, r2, t2, o2) {
  if (!e8) return false;
  const n2 = v_(e8);
  if (!n2) return false;
  const s2 = e_(a2, r2);
  if (!o2) {
    const e9 = t2 && n2.matches(t2);
    return s2(n2) && !e9;
  }
  const i2 = Zx(n2, s2);
  let d2 = -1;
  return !(i2 < 0) && (t2 && (d2 = Zx(n2, e_(null, t2))), i2 > -1 && d2 < 0 || i2 < d2);
}
function b_(e8, a2) {
  return -2 === a2.getId(e8);
}
function w_(e8, a2) {
  if (kx(e8)) return false;
  const r2 = a2.getId(e8);
  return !a2.has(r2) || (!e8.parentNode || e8.parentNode.nodeType !== e8.DOCUMENT_NODE) && (!e8.parentNode || w_(e8.parentNode, a2));
}
function y_(e8) {
  return Boolean(e8.changedTouches);
}
function x_(e8, a2) {
  return Boolean("IFRAME" === e8.nodeName && a2.getMeta(e8));
}
function __(e8, a2) {
  return Boolean("LINK" === e8.nodeName && e8.nodeType === e8.ELEMENT_NODE && e8.getAttribute && "stylesheet" === e8.getAttribute("rel") && a2.getMeta(e8));
}
function I_(e8) {
  return Boolean(n_([e8, "optionalAccess", (e9) => e9.shadowRoot]));
}
/[1-9][0-9]{12}/.test(Date.now().toString()) || (p_ = () => (/* @__PURE__ */ new Date()).getTime());
var k_ = class {
  constructor() {
    this.id = 1, this.styleIDMap = /* @__PURE__ */ new WeakMap(), this.idStyleMap = /* @__PURE__ */ new Map();
  }
  getId(e8) {
    return a2 = this.styleIDMap.get(e8), r2 = () => -1, null != a2 ? a2 : r2();
    var a2, r2;
  }
  has(e8) {
    return this.styleIDMap.has(e8);
  }
  add(e8, a2) {
    if (this.has(e8)) return this.getId(e8);
    let r2;
    return r2 = void 0 === a2 ? this.id++ : a2, this.styleIDMap.set(e8, r2), this.idStyleMap.set(r2, e8), r2;
  }
  getStyle(e8) {
    return this.idStyleMap.get(e8) || null;
  }
  reset() {
    this.styleIDMap = /* @__PURE__ */ new WeakMap(), this.idStyleMap = /* @__PURE__ */ new Map(), this.id = 1;
  }
  generateId() {
    return this.id++;
  }
};
function S_(e8) {
  let a2 = null;
  return n_([e8, "access", (e9) => e9.getRootNode, "optionalCall", (e9) => e9(), "optionalAccess", (e9) => e9.nodeType]) === Node.DOCUMENT_FRAGMENT_NODE && e8.getRootNode().host && (a2 = e8.getRootNode().host), a2;
}
function T_(e8) {
  const a2 = e8.ownerDocument;
  if (!a2) return false;
  const r2 = function(e9) {
    let a3, r3 = e9;
    for (; a3 = S_(r3); ) r3 = a3;
    return r3;
  }(e8);
  return a2.contains(r2);
}
function E_(e8) {
  const a2 = e8.ownerDocument;
  return !!a2 && (a2.contains(e8) || T_(e8));
}
var j_ = {};
function O_(e8) {
  const a2 = j_[e8];
  if (a2) return a2;
  const r2 = window.document;
  let t2 = window[e8];
  if (r2 && "function" == typeof r2.createElement) try {
    const a3 = r2.createElement("iframe");
    a3.hidden = true, r2.head.appendChild(a3);
    const o2 = a3.contentWindow;
    o2 && o2[e8] && (t2 = o2[e8]), r2.head.removeChild(a3);
  } catch (e9) {
  }
  return j_[e8] = t2.bind(window);
}
function A_(...e8) {
  return O_("setTimeout")(...e8);
}
var C_ = ((e8) => (e8[e8.DomContentLoaded = 0] = "DomContentLoaded", e8[e8.Load = 1] = "Load", e8[e8.FullSnapshot = 2] = "FullSnapshot", e8[e8.IncrementalSnapshot = 3] = "IncrementalSnapshot", e8[e8.Meta = 4] = "Meta", e8[e8.Custom = 5] = "Custom", e8[e8.Plugin = 6] = "Plugin", e8))(C_ || {});
var R_ = ((e8) => (e8[e8.Mutation = 0] = "Mutation", e8[e8.MouseMove = 1] = "MouseMove", e8[e8.MouseInteraction = 2] = "MouseInteraction", e8[e8.Scroll = 3] = "Scroll", e8[e8.ViewportResize = 4] = "ViewportResize", e8[e8.Input = 5] = "Input", e8[e8.TouchMove = 6] = "TouchMove", e8[e8.MediaInteraction = 7] = "MediaInteraction", e8[e8.StyleSheetRule = 8] = "StyleSheetRule", e8[e8.CanvasMutation = 9] = "CanvasMutation", e8[e8.Font = 10] = "Font", e8[e8.Log = 11] = "Log", e8[e8.Drag = 12] = "Drag", e8[e8.StyleDeclaration = 13] = "StyleDeclaration", e8[e8.Selection = 14] = "Selection", e8[e8.AdoptedStyleSheet = 15] = "AdoptedStyleSheet", e8[e8.CustomElement = 16] = "CustomElement", e8))(R_ || {});
var N_ = ((e8) => (e8[e8.MouseUp = 0] = "MouseUp", e8[e8.MouseDown = 1] = "MouseDown", e8[e8.Click = 2] = "Click", e8[e8.ContextMenu = 3] = "ContextMenu", e8[e8.DblClick = 4] = "DblClick", e8[e8.Focus = 5] = "Focus", e8[e8.Blur = 6] = "Blur", e8[e8.TouchStart = 7] = "TouchStart", e8[e8.TouchMove_Departed = 8] = "TouchMove_Departed", e8[e8.TouchEnd = 9] = "TouchEnd", e8[e8.TouchCancel = 10] = "TouchCancel", e8))(N_ || {});
var P_ = ((e8) => (e8[e8.Mouse = 0] = "Mouse", e8[e8.Pen = 1] = "Pen", e8[e8.Touch = 2] = "Touch", e8))(P_ || {});
function M_(e8) {
  let a2, r2 = e8[0], t2 = 1;
  for (; t2 < e8.length; ) {
    const o2 = e8[t2], n2 = e8[t2 + 1];
    if (t2 += 2, ("optionalAccess" === o2 || "optionalCall" === o2) && null == r2) return;
    "access" === o2 || "optionalAccess" === o2 ? (a2 = r2, r2 = n2(r2)) : "call" !== o2 && "optionalCall" !== o2 || (r2 = n2((...e9) => r2.call(a2, ...e9)), a2 = void 0);
  }
  return r2;
}
function L_(e8) {
  return "__ln" in e8;
}
var D_ = class {
  constructor() {
    this.length = 0, this.head = null, this.tail = null;
  }
  get(e8) {
    if (e8 >= this.length) throw new Error("Position outside of list range");
    let a2 = this.head;
    for (let r2 = 0; r2 < e8; r2++) a2 = M_([a2, "optionalAccess", (e9) => e9.next]) || null;
    return a2;
  }
  addNode(e8) {
    const a2 = { value: e8, previous: null, next: null };
    if (e8.__ln = a2, e8.previousSibling && L_(e8.previousSibling)) {
      const r2 = e8.previousSibling.__ln.next;
      a2.next = r2, a2.previous = e8.previousSibling.__ln, e8.previousSibling.__ln.next = a2, r2 && (r2.previous = a2);
    } else if (e8.nextSibling && L_(e8.nextSibling) && e8.nextSibling.__ln.previous) {
      const r2 = e8.nextSibling.__ln.previous;
      a2.previous = r2, a2.next = e8.nextSibling.__ln, e8.nextSibling.__ln.previous = a2, r2 && (r2.next = a2);
    } else this.head && (this.head.previous = a2), a2.next = this.head, this.head = a2;
    null === a2.next && (this.tail = a2), this.length++;
  }
  removeNode(e8) {
    const a2 = e8.__ln;
    this.head && (a2.previous ? (a2.previous.next = a2.next, a2.next ? a2.next.previous = a2.previous : this.tail = a2.previous) : (this.head = a2.next, this.head ? this.head.previous = null : this.tail = null), e8.__ln && delete e8.__ln, this.length--);
  }
};
var z_ = (e8, a2) => `${e8}@${a2}`;
var F_ = class {
  constructor() {
    this.frozen = false, this.locked = false, this.texts = [], this.attributes = [], this.attributeMap = /* @__PURE__ */ new WeakMap(), this.removes = [], this.mapRemoves = [], this.movedMap = {}, this.addedSet = /* @__PURE__ */ new Set(), this.movedSet = /* @__PURE__ */ new Set(), this.droppedSet = /* @__PURE__ */ new Set(), this.processMutations = (e8) => {
      e8.forEach(this.processMutation), this.emit();
    }, this.emit = () => {
      if (this.frozen || this.locked) return;
      const e8 = [], a2 = /* @__PURE__ */ new Set(), r2 = new D_(), t2 = (e9) => {
        let a3 = e9, r3 = -2;
        for (; -2 === r3; ) a3 = a3 && a3.nextSibling, r3 = a3 && this.mirror.getId(a3);
        return r3;
      }, o2 = (o3) => {
        if (!o3.parentNode || !E_(o3)) return;
        const n3 = kx(o3.parentNode) ? this.mirror.getId(S_(o3)) : this.mirror.getId(o3.parentNode), s3 = t2(o3);
        if (-1 === n3 || -1 === s3) return r2.addNode(o3);
        const i2 = o_(o3, { doc: this.doc, mirror: this.mirror, blockClass: this.blockClass, blockSelector: this.blockSelector, maskAllText: this.maskAllText, unblockSelector: this.unblockSelector, maskTextClass: this.maskTextClass, unmaskTextClass: this.unmaskTextClass, maskTextSelector: this.maskTextSelector, unmaskTextSelector: this.unmaskTextSelector, skipChild: true, newlyAddedElement: true, inlineStylesheet: this.inlineStylesheet, maskInputOptions: this.maskInputOptions, maskAttributeFn: this.maskAttributeFn, maskTextFn: this.maskTextFn, maskInputFn: this.maskInputFn, slimDOMOptions: this.slimDOMOptions, dataURLOptions: this.dataURLOptions, recordCanvas: this.recordCanvas, inlineImages: this.inlineImages, onSerialize: (e9) => {
          x_(e9, this.mirror) && this.iframeManager.addIframe(e9), __(e9, this.mirror) && this.stylesheetManager.trackLinkElement(e9), I_(o3) && this.shadowDomManager.addShadowRoot(o3.shadowRoot, this.doc);
        }, onIframeLoad: (e9, a3) => {
          this.iframeManager.attachIframe(e9, a3), this.shadowDomManager.observeAttachShadow(e9);
        }, onStylesheetLoad: (e9, a3) => {
          this.stylesheetManager.attachLinkElement(e9, a3);
        } });
        i2 && (e8.push({ parentId: n3, nextId: s3, node: i2 }), a2.add(i2.id));
      };
      for (; this.mapRemoves.length; ) this.mirror.removeNodeFromMap(this.mapRemoves.shift());
      for (const e9 of this.movedSet) q_(this.removes, e9, this.mirror) && !this.movedSet.has(e9.parentNode) || o2(e9);
      for (const e9 of this.addedSet) U_(this.droppedSet, e9) || q_(this.removes, e9, this.mirror) ? U_(this.movedSet, e9) ? o2(e9) : this.droppedSet.add(e9) : o2(e9);
      let n2 = null;
      for (; r2.length; ) {
        let e9 = null;
        if (n2) {
          const a3 = this.mirror.getId(n2.value.parentNode), r3 = t2(n2.value);
          -1 !== a3 && -1 !== r3 && (e9 = n2);
        }
        if (!e9) {
          let a3 = r2.tail;
          for (; a3; ) {
            const r3 = a3;
            if (a3 = a3.previous, r3) {
              const a4 = this.mirror.getId(r3.value.parentNode);
              if (-1 === t2(r3.value)) continue;
              if (-1 !== a4) {
                e9 = r3;
                break;
              }
              {
                const a5 = r3.value;
                if (a5.parentNode && a5.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
                  const t3 = a5.parentNode.host;
                  if (-1 !== this.mirror.getId(t3)) {
                    e9 = r3;
                    break;
                  }
                }
              }
            }
          }
        }
        if (!e9) {
          for (; r2.head; ) r2.removeNode(r2.head.value);
          break;
        }
        n2 = e9.previous, r2.removeNode(e9.value), o2(e9.value);
      }
      const s2 = { texts: this.texts.map((e9) => ({ id: this.mirror.getId(e9.node), value: e9.value })).filter((e9) => !a2.has(e9.id)).filter((e9) => this.mirror.has(e9.id)), attributes: this.attributes.map((e9) => {
        const { attributes: a3 } = e9;
        if ("string" == typeof a3.style) {
          const r3 = JSON.stringify(e9.styleDiff), t3 = JSON.stringify(e9._unchangedStyles);
          r3.length < a3.style.length && (r3 + t3).split("var(").length === a3.style.split("var(").length && (a3.style = e9.styleDiff);
        }
        return { id: this.mirror.getId(e9.node), attributes: a3 };
      }).filter((e9) => !a2.has(e9.id)).filter((e9) => this.mirror.has(e9.id)), removes: this.removes, adds: e8 };
      (s2.texts.length || s2.attributes.length || s2.removes.length || s2.adds.length) && (this.texts = [], this.attributes = [], this.attributeMap = /* @__PURE__ */ new WeakMap(), this.removes = [], this.addedSet = /* @__PURE__ */ new Set(), this.movedSet = /* @__PURE__ */ new Set(), this.droppedSet = /* @__PURE__ */ new Set(), this.movedMap = {}, this.mutationCb(s2));
    }, this.processMutation = (e8) => {
      if (!b_(e8.target, this.mirror)) switch (e8.type) {
        case "characterData": {
          const a2 = e8.target.textContent;
          g_(e8.target, this.blockClass, this.blockSelector, this.unblockSelector, false) || a2 === e8.oldValue || this.texts.push({ value: a_(e8.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && a2 ? this.maskTextFn ? this.maskTextFn(a2, v_(e8.target)) : a2.replace(/[\S]/g, "*") : a2, node: e8.target });
          break;
        }
        case "attributes": {
          const a2 = e8.target;
          let r2 = e8.attributeName, t2 = e8.target.getAttribute(r2);
          if ("value" === r2) {
            const r3 = Px(a2), o3 = a2.tagName;
            t2 = Mx(a2, o3, r3);
            const n2 = Ox({ maskInputOptions: this.maskInputOptions, tagName: o3, type: r3 });
            t2 = Ax({ isMasked: a_(e8.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, n2), element: a2, value: t2, maskInputFn: this.maskInputFn });
          }
          if (g_(e8.target, this.blockClass, this.blockSelector, this.unblockSelector, false) || t2 === e8.oldValue) return;
          let o2 = this.attributeMap.get(e8.target);
          if ("IFRAME" === a2.tagName && "src" === r2 && !this.keepIframeSrcFn(t2)) {
            if (a2.contentDocument) return;
            r2 = "rr_src";
          }
          if (o2 || (o2 = { node: e8.target, attributes: {}, styleDiff: {}, _unchangedStyles: {} }, this.attributes.push(o2), this.attributeMap.set(e8.target, o2)), "type" === r2 && "INPUT" === a2.tagName && "password" === (e8.oldValue || "").toLowerCase() && a2.setAttribute("data-rr-is-password", "true"), !Qx(a2.tagName, r2) && (o2.attributes[r2] = Xx(this.doc, Cx(a2.tagName), Cx(r2), t2, a2, this.maskAttributeFn), "style" === r2)) {
            if (!this.unattachedDoc) try {
              this.unattachedDoc = document.implementation.createHTMLDocument();
            } catch (e9) {
              this.unattachedDoc = this.doc;
            }
            const r3 = this.unattachedDoc.createElement("span");
            e8.oldValue && r3.setAttribute("style", e8.oldValue);
            for (const e9 of Array.from(a2.style)) {
              const t3 = a2.style.getPropertyValue(e9), n2 = a2.style.getPropertyPriority(e9);
              t3 !== r3.style.getPropertyValue(e9) || n2 !== r3.style.getPropertyPriority(e9) ? o2.styleDiff[e9] = "" === n2 ? t3 : [t3, n2] : o2._unchangedStyles[e9] = [t3, n2];
            }
            for (const e9 of Array.from(r3.style)) "" === a2.style.getPropertyValue(e9) && (o2.styleDiff[e9] = false);
          }
          break;
        }
        case "childList":
          if (g_(e8.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) return;
          e8.addedNodes.forEach((a2) => this.genAdds(a2, e8.target)), e8.removedNodes.forEach((a2) => {
            const r2 = this.mirror.getId(a2), t2 = kx(e8.target) ? this.mirror.getId(e8.target.host) : this.mirror.getId(e8.target);
            g_(e8.target, this.blockClass, this.blockSelector, this.unblockSelector, false) || b_(a2, this.mirror) || !function(e9, a3) {
              return -1 !== a3.getId(e9);
            }(a2, this.mirror) || (this.addedSet.has(a2) ? (B_(this.addedSet, a2), this.droppedSet.add(a2)) : this.addedSet.has(e8.target) && -1 === r2 || w_(e8.target, this.mirror) || (this.movedSet.has(a2) && this.movedMap[z_(r2, t2)] ? B_(this.movedSet, a2) : this.removes.push({ parentId: t2, id: r2, isShadow: !(!kx(e8.target) || !Sx(e8.target)) || void 0 })), this.mapRemoves.push(a2));
          });
      }
    }, this.genAdds = (e8, a2) => {
      if (!this.processedNodeManager.inOtherBuffer(e8, this) && !this.addedSet.has(e8) && !this.movedSet.has(e8)) {
        if (this.mirror.hasNode(e8)) {
          if (b_(e8, this.mirror)) return;
          this.movedSet.add(e8);
          let r2 = null;
          a2 && this.mirror.hasNode(a2) && (r2 = this.mirror.getId(a2)), r2 && -1 !== r2 && (this.movedMap[z_(this.mirror.getId(e8), r2)] = true);
        } else this.addedSet.add(e8), this.droppedSet.delete(e8);
        g_(e8, this.blockClass, this.blockSelector, this.unblockSelector, false) || (e8.childNodes.forEach((e9) => this.genAdds(e9)), I_(e8) && e8.shadowRoot.childNodes.forEach((a3) => {
          this.processedNodeManager.add(a3, this), this.genAdds(a3, e8);
        }));
      }
    };
  }
  init(e8) {
    ["mutationCb", "blockClass", "blockSelector", "unblockSelector", "maskAllText", "maskTextClass", "unmaskTextClass", "maskTextSelector", "unmaskTextSelector", "inlineStylesheet", "maskInputOptions", "maskAttributeFn", "maskTextFn", "maskInputFn", "keepIframeSrcFn", "recordCanvas", "inlineImages", "slimDOMOptions", "dataURLOptions", "doc", "mirror", "iframeManager", "stylesheetManager", "shadowDomManager", "canvasManager", "processedNodeManager"].forEach((a2) => {
      this[a2] = e8[a2];
    });
  }
  freeze() {
    this.frozen = true, this.canvasManager.freeze();
  }
  unfreeze() {
    this.frozen = false, this.canvasManager.unfreeze(), this.emit();
  }
  isFrozen() {
    return this.frozen;
  }
  lock() {
    this.locked = true, this.canvasManager.lock();
  }
  unlock() {
    this.locked = false, this.canvasManager.unlock(), this.emit();
  }
  reset() {
    this.shadowDomManager.reset(), this.canvasManager.reset();
  }
};
function B_(e8, a2) {
  e8.delete(a2), a2.childNodes.forEach((a3) => B_(e8, a3));
}
function q_(e8, a2, r2) {
  return 0 !== e8.length && $_(e8, a2, r2);
}
function $_(e8, a2, r2) {
  const { parentNode: t2 } = a2;
  if (!t2) return false;
  const o2 = r2.getId(t2);
  return !!e8.some((e9) => e9.id === o2) || $_(e8, t2, r2);
}
function U_(e8, a2) {
  return 0 !== e8.size && H_(e8, a2);
}
function H_(e8, a2) {
  const { parentNode: r2 } = a2;
  return !!r2 && (!!e8.has(r2) || H_(e8, r2));
}
var W_;
function K_(e8) {
  W_ = e8;
}
function V_() {
  W_ = void 0;
}
var G_ = (e8) => {
  if (!W_) return e8;
  return (...a2) => {
    try {
      return e8(...a2);
    } catch (e9) {
      if (W_ && true === W_(e9)) return () => {
      };
      throw e9;
    }
  };
};
function Y_(e8) {
  let a2, r2 = e8[0], t2 = 1;
  for (; t2 < e8.length; ) {
    const o2 = e8[t2], n2 = e8[t2 + 1];
    if (t2 += 2, ("optionalAccess" === o2 || "optionalCall" === o2) && null == r2) return;
    "access" === o2 || "optionalAccess" === o2 ? (a2 = r2, r2 = n2(r2)) : "call" !== o2 && "optionalCall" !== o2 || (r2 = n2((...e9) => r2.call(a2, ...e9)), a2 = void 0);
  }
  return r2;
}
var J_ = [];
function X_(e8) {
  try {
    if ("composedPath" in e8) {
      const a2 = e8.composedPath();
      if (a2.length) return a2[0];
    } else if ("path" in e8 && e8.path.length) return e8.path[0];
  } catch (e9) {
  }
  return e8 && e8.target;
}
function Q_(e8, a2) {
  const r2 = new F_();
  J_.push(r2), r2.init(e8);
  let t2 = window.MutationObserver || window.__rrMutationObserver;
  const o2 = Y_([window, "optionalAccess", (e9) => e9.Zone, "optionalAccess", (e9) => e9.__symbol__, "optionalCall", (e9) => e9("MutationObserver")]);
  o2 && window[o2] && (t2 = window[o2]);
  const n2 = new t2(G_((a3) => {
    e8.onMutation && false === e8.onMutation(a3) || r2.processMutations.bind(r2)(a3);
  }));
  return n2.observe(a2, { attributes: true, attributeOldValue: true, characterData: true, characterDataOldValue: true, childList: true, subtree: true }), n2;
}
function Z_({ mouseInteractionCb: e8, doc: a2, mirror: r2, blockClass: t2, blockSelector: o2, unblockSelector: n2, sampling: s2 }) {
  if (false === s2.mouseInteraction) return () => {
  };
  const i2 = true === s2.mouseInteraction || void 0 === s2.mouseInteraction ? {} : s2.mouseInteraction, d2 = [];
  let c2 = null;
  return Object.keys(N_).filter((e9) => Number.isNaN(Number(e9)) && !e9.endsWith("_Departed") && false !== i2[e9]).forEach((s3) => {
    let i3 = Cx(s3);
    const u2 = /* @__PURE__ */ ((a3) => (s4) => {
      const i4 = X_(s4);
      if (g_(i4, t2, o2, n2, true)) return;
      let d3 = null, u3 = a3;
      if ("pointerType" in s4) {
        switch (s4.pointerType) {
          case "mouse":
            d3 = P_.Mouse;
            break;
          case "touch":
            d3 = P_.Touch;
            break;
          case "pen":
            d3 = P_.Pen;
        }
        d3 === P_.Touch ? N_[a3] === N_.MouseDown ? u3 = "TouchStart" : N_[a3] === N_.MouseUp && (u3 = "TouchEnd") : P_.Pen;
      } else y_(s4) && (d3 = P_.Touch);
      null !== d3 ? (c2 = d3, (u3.startsWith("Touch") && d3 === P_.Touch || u3.startsWith("Mouse") && d3 === P_.Mouse) && (d3 = null)) : N_[a3] === N_.Click && (d3 = c2, c2 = null);
      const l2 = y_(s4) ? s4.changedTouches[0] : s4;
      if (!l2) return;
      const p2 = r2.getId(i4), { clientX: m2, clientY: h2 } = l2;
      G_(e8)({ type: N_[u3], id: p2, x: m2, y: h2, ...null !== d3 && { pointerType: d3 } });
    })(s3);
    if (window.PointerEvent) switch (N_[s3]) {
      case N_.MouseDown:
      case N_.MouseUp:
        i3 = i3.replace("mouse", "pointer");
        break;
      case N_.TouchStart:
      case N_.TouchEnd:
        return;
    }
    d2.push(s_(i3, u2, a2));
  }), G_(() => {
    d2.forEach((e9) => e9());
  });
}
function eI({ scrollCb: e8, doc: a2, mirror: r2, blockClass: t2, blockSelector: o2, unblockSelector: n2, sampling: s2 }) {
  return s_("scroll", G_(c_(G_((s3) => {
    const i2 = X_(s3);
    if (!i2 || g_(i2, t2, o2, n2, true)) return;
    const d2 = r2.getId(i2);
    if (i2 === a2 && a2.defaultView) {
      const r3 = m_(a2.defaultView);
      e8({ id: d2, x: r3.left, y: r3.top });
    } else e8({ id: d2, x: i2.scrollLeft, y: i2.scrollTop });
  }), s2.scroll || 100)), a2);
}
var aI = ["INPUT", "TEXTAREA", "SELECT"];
var rI = /* @__PURE__ */ new WeakMap();
function tI({ inputCb: e8, doc: a2, mirror: r2, blockClass: t2, blockSelector: o2, unblockSelector: n2, ignoreClass: s2, ignoreSelector: i2, maskInputOptions: d2, maskInputFn: c2, sampling: u2, userTriggeredOnInput: l2, maskTextClass: p2, unmaskTextClass: m2, maskTextSelector: h2, unmaskTextSelector: f2 }) {
  function v2(e9) {
    let r3 = X_(e9);
    const u3 = e9.isTrusted, v3 = r3 && Rx(r3.tagName);
    if ("OPTION" === v3 && (r3 = r3.parentElement), !r3 || !v3 || aI.indexOf(v3) < 0 || g_(r3, t2, o2, n2, true)) return;
    const b3 = r3;
    if (b3.classList.contains(s2) || i2 && b3.matches(i2)) return;
    const w3 = Px(r3);
    let y3 = Mx(b3, v3, w3), x3 = false;
    const _2 = Ox({ maskInputOptions: d2, tagName: v3, type: w3 }), I2 = a_(r3, p2, h2, m2, f2, _2);
    "radio" !== w3 && "checkbox" !== w3 || (x3 = r3.checked), y3 = Ax({ isMasked: I2, element: r3, value: y3, maskInputFn: c2 }), g2(r3, l2 ? { text: y3, isChecked: x3, userTriggered: u3 } : { text: y3, isChecked: x3 });
    const k2 = r3.name;
    "radio" === w3 && k2 && x3 && a2.querySelectorAll(`input[type="radio"][name="${k2}"]`).forEach((e10) => {
      if (e10 !== r3) {
        const a3 = Ax({ isMasked: I2, element: e10, value: Mx(e10, v3, w3), maskInputFn: c2 });
        g2(e10, l2 ? { text: a3, isChecked: !x3, userTriggered: false } : { text: a3, isChecked: !x3 });
      }
    });
  }
  function g2(a3, t3) {
    const o3 = rI.get(a3);
    if (!o3 || o3.text !== t3.text || o3.isChecked !== t3.isChecked) {
      rI.set(a3, t3);
      const o4 = r2.getId(a3);
      G_(e8)({ ...t3, id: o4 });
    }
  }
  const b2 = ("last" === u2.input ? ["change"] : ["input", "change"]).map((e9) => s_(e9, G_(v2), a2)), w2 = a2.defaultView;
  if (!w2) return () => {
    b2.forEach((e9) => e9());
  };
  const y2 = w2.Object.getOwnPropertyDescriptor(w2.HTMLInputElement.prototype, "value"), x2 = [[w2.HTMLInputElement.prototype, "value"], [w2.HTMLInputElement.prototype, "checked"], [w2.HTMLSelectElement.prototype, "value"], [w2.HTMLTextAreaElement.prototype, "value"], [w2.HTMLSelectElement.prototype, "selectedIndex"], [w2.HTMLOptionElement.prototype, "selected"]];
  return y2 && y2.set && b2.push(...x2.map((e9) => u_(e9[0], e9[1], { set() {
    G_(v2)({ target: this, isTrusted: false });
  } }, false, w2))), G_(() => {
    b2.forEach((e9) => e9());
  });
}
function oI(e8) {
  return function(e9, a2) {
    if (dI("CSSGroupingRule") && e9.parentRule instanceof CSSGroupingRule || dI("CSSMediaRule") && e9.parentRule instanceof CSSMediaRule || dI("CSSSupportsRule") && e9.parentRule instanceof CSSSupportsRule || dI("CSSConditionRule") && e9.parentRule instanceof CSSConditionRule) {
      const r2 = Array.from(e9.parentRule.cssRules).indexOf(e9);
      a2.unshift(r2);
    } else if (e9.parentStyleSheet) {
      const r2 = Array.from(e9.parentStyleSheet.cssRules).indexOf(e9);
      a2.unshift(r2);
    }
    return a2;
  }(e8, []);
}
function nI(e8, a2, r2) {
  let t2, o2;
  return e8 ? (e8.ownerNode ? t2 = a2.getId(e8.ownerNode) : o2 = r2.getId(e8), { styleId: o2, id: t2 }) : {};
}
function sI({ mirror: e8, stylesheetManager: a2 }, r2) {
  let t2 = null;
  t2 = "#document" === r2.nodeName ? e8.getId(r2) : e8.getId(r2.host);
  const o2 = "#document" === r2.nodeName ? Y_([r2, "access", (e9) => e9.defaultView, "optionalAccess", (e9) => e9.Document]) : Y_([r2, "access", (e9) => e9.ownerDocument, "optionalAccess", (e9) => e9.defaultView, "optionalAccess", (e9) => e9.ShadowRoot]), n2 = Y_([o2, "optionalAccess", (e9) => e9.prototype]) ? Object.getOwnPropertyDescriptor(Y_([o2, "optionalAccess", (e9) => e9.prototype]), "adoptedStyleSheets") : void 0;
  return null !== t2 && -1 !== t2 && o2 && n2 ? (Object.defineProperty(r2, "adoptedStyleSheets", { configurable: n2.configurable, enumerable: n2.enumerable, get() {
    return Y_([n2, "access", (e9) => e9.get, "optionalAccess", (e9) => e9.call, "call", (e9) => e9(this)]);
  }, set(e9) {
    const r3 = Y_([n2, "access", (e10) => e10.set, "optionalAccess", (e10) => e10.call, "call", (a3) => a3(this, e9)]);
    if (null !== t2 && -1 !== t2) try {
      a2.adoptStyleSheets(e9, t2);
    } catch (e10) {
    }
    return r3;
  } }), G_(() => {
    Object.defineProperty(r2, "adoptedStyleSheets", { configurable: n2.configurable, enumerable: n2.enumerable, get: n2.get, set: n2.set });
  })) : () => {
  };
}
function iI(e8, a2 = {}) {
  const r2 = e8.doc.defaultView;
  if (!r2) return () => {
  };
  const t2 = Q_(e8, e8.doc), o2 = function({ mousemoveCb: e9, sampling: a3, doc: r3, mirror: t3 }) {
    if (false === a3.mousemove) return () => {
    };
    const o3 = "number" == typeof a3.mousemove ? a3.mousemove : 50, n3 = "number" == typeof a3.mousemoveCallback ? a3.mousemoveCallback : 500;
    let s3, i3 = [];
    const d3 = c_(G_((a4) => {
      const r4 = Date.now() - s3;
      e9(i3.map((e10) => (e10.timeOffset -= r4, e10)), a4), i3 = [], s3 = null;
    }), n3), c3 = G_(c_(G_((e10) => {
      const a4 = X_(e10), { clientX: r4, clientY: o4 } = y_(e10) ? e10.changedTouches[0] : e10;
      s3 || (s3 = p_()), i3.push({ x: r4, y: o4, id: t3.getId(a4), timeOffset: p_() - s3 }), d3("undefined" != typeof DragEvent && e10 instanceof DragEvent ? R_.Drag : e10 instanceof MouseEvent ? R_.MouseMove : R_.TouchMove);
    }), o3, { trailing: false })), u3 = [s_("mousemove", c3, r3), s_("touchmove", c3, r3), s_("drag", c3, r3)];
    return G_(() => {
      u3.forEach((e10) => e10());
    });
  }(e8), n2 = Z_(e8), s2 = eI(e8), i2 = function({ viewportResizeCb: e9 }, { win: a3 }) {
    let r3 = -1, t3 = -1;
    return s_("resize", G_(c_(G_(() => {
      const a4 = h_(), o3 = f_();
      r3 === a4 && t3 === o3 || (e9({ width: Number(o3), height: Number(a4) }), r3 = a4, t3 = o3);
    }), 200)), a3);
  }(e8, { win: r2 }), d2 = tI(e8), c2 = function({ mediaInteractionCb: e9, blockClass: a3, blockSelector: r3, unblockSelector: t3, mirror: o3, sampling: n3, doc: s3 }) {
    const i3 = G_((s4) => c_(G_((n4) => {
      const i4 = X_(n4);
      if (!i4 || g_(i4, a3, r3, t3, true)) return;
      const { currentTime: d4, volume: c3, muted: u3, playbackRate: l3 } = i4;
      e9({ type: s4, id: o3.getId(i4), currentTime: d4, volume: c3, muted: u3, playbackRate: l3 });
    }), n3.media || 500)), d3 = [s_("play", i3(0), s3), s_("pause", i3(1), s3), s_("seeked", i3(2), s3), s_("volumechange", i3(3), s3), s_("ratechange", i3(4), s3)];
    return G_(() => {
      d3.forEach((e10) => e10());
    });
  }(e8), u2 = function({ styleSheetRuleCb: e9, mirror: a3, stylesheetManager: r3 }, { win: t3 }) {
    if (!t3.CSSStyleSheet || !t3.CSSStyleSheet.prototype) return () => {
    };
    const o3 = t3.CSSStyleSheet.prototype.insertRule;
    t3.CSSStyleSheet.prototype.insertRule = new Proxy(o3, { apply: G_((t4, o4, n4) => {
      const [s4, i4] = n4, { id: d4, styleId: c4 } = nI(o4, a3, r3.styleMirror);
      return (d4 && -1 !== d4 || c4 && -1 !== c4) && e9({ id: d4, styleId: c4, adds: [{ rule: s4, index: i4 }] }), t4.apply(o4, n4);
    }) });
    const n3 = t3.CSSStyleSheet.prototype.deleteRule;
    let s3, i3;
    t3.CSSStyleSheet.prototype.deleteRule = new Proxy(n3, { apply: G_((t4, o4, n4) => {
      const [s4] = n4, { id: i4, styleId: d4 } = nI(o4, a3, r3.styleMirror);
      return (i4 && -1 !== i4 || d4 && -1 !== d4) && e9({ id: i4, styleId: d4, removes: [{ index: s4 }] }), t4.apply(o4, n4);
    }) }), t3.CSSStyleSheet.prototype.replace && (s3 = t3.CSSStyleSheet.prototype.replace, t3.CSSStyleSheet.prototype.replace = new Proxy(s3, { apply: G_((t4, o4, n4) => {
      const [s4] = n4, { id: i4, styleId: d4 } = nI(o4, a3, r3.styleMirror);
      return (i4 && -1 !== i4 || d4 && -1 !== d4) && e9({ id: i4, styleId: d4, replace: s4 }), t4.apply(o4, n4);
    }) })), t3.CSSStyleSheet.prototype.replaceSync && (i3 = t3.CSSStyleSheet.prototype.replaceSync, t3.CSSStyleSheet.prototype.replaceSync = new Proxy(i3, { apply: G_((t4, o4, n4) => {
      const [s4] = n4, { id: i4, styleId: d4 } = nI(o4, a3, r3.styleMirror);
      return (i4 && -1 !== i4 || d4 && -1 !== d4) && e9({ id: i4, styleId: d4, replaceSync: s4 }), t4.apply(o4, n4);
    }) }));
    const d3 = {};
    cI("CSSGroupingRule") ? d3.CSSGroupingRule = t3.CSSGroupingRule : (cI("CSSMediaRule") && (d3.CSSMediaRule = t3.CSSMediaRule), cI("CSSConditionRule") && (d3.CSSConditionRule = t3.CSSConditionRule), cI("CSSSupportsRule") && (d3.CSSSupportsRule = t3.CSSSupportsRule));
    const c3 = {};
    return Object.entries(d3).forEach(([t4, o4]) => {
      c3[t4] = { insertRule: o4.prototype.insertRule, deleteRule: o4.prototype.deleteRule }, o4.prototype.insertRule = new Proxy(c3[t4].insertRule, { apply: G_((t5, o5, n4) => {
        const [s4, i4] = n4, { id: d4, styleId: c4 } = nI(o5.parentStyleSheet, a3, r3.styleMirror);
        return (d4 && -1 !== d4 || c4 && -1 !== c4) && e9({ id: d4, styleId: c4, adds: [{ rule: s4, index: [...oI(o5), i4 || 0] }] }), t5.apply(o5, n4);
      }) }), o4.prototype.deleteRule = new Proxy(c3[t4].deleteRule, { apply: G_((t5, o5, n4) => {
        const [s4] = n4, { id: i4, styleId: d4 } = nI(o5.parentStyleSheet, a3, r3.styleMirror);
        return (i4 && -1 !== i4 || d4 && -1 !== d4) && e9({ id: i4, styleId: d4, removes: [{ index: [...oI(o5), s4] }] }), t5.apply(o5, n4);
      }) });
    }), G_(() => {
      t3.CSSStyleSheet.prototype.insertRule = o3, t3.CSSStyleSheet.prototype.deleteRule = n3, s3 && (t3.CSSStyleSheet.prototype.replace = s3), i3 && (t3.CSSStyleSheet.prototype.replaceSync = i3), Object.entries(d3).forEach(([e10, a4]) => {
        a4.prototype.insertRule = c3[e10].insertRule, a4.prototype.deleteRule = c3[e10].deleteRule;
      });
    });
  }(e8, { win: r2 }), l2 = sI(e8, e8.doc), p2 = function({ styleDeclarationCb: e9, mirror: a3, ignoreCSSAttributes: r3, stylesheetManager: t3 }, { win: o3 }) {
    const n3 = o3.CSSStyleDeclaration.prototype.setProperty;
    o3.CSSStyleDeclaration.prototype.setProperty = new Proxy(n3, { apply: G_((o4, s4, i3) => {
      const [d3, c3, u3] = i3;
      if (r3.has(d3)) return n3.apply(s4, [d3, c3, u3]);
      const { id: l3, styleId: p3 } = nI(Y_([s4, "access", (e10) => e10.parentRule, "optionalAccess", (e10) => e10.parentStyleSheet]), a3, t3.styleMirror);
      return (l3 && -1 !== l3 || p3 && -1 !== p3) && e9({ id: l3, styleId: p3, set: { property: d3, value: c3, priority: u3 }, index: oI(s4.parentRule) }), o4.apply(s4, i3);
    }) });
    const s3 = o3.CSSStyleDeclaration.prototype.removeProperty;
    return o3.CSSStyleDeclaration.prototype.removeProperty = new Proxy(s3, { apply: G_((o4, n4, i3) => {
      const [d3] = i3;
      if (r3.has(d3)) return s3.apply(n4, [d3]);
      const { id: c3, styleId: u3 } = nI(Y_([n4, "access", (e10) => e10.parentRule, "optionalAccess", (e10) => e10.parentStyleSheet]), a3, t3.styleMirror);
      return (c3 && -1 !== c3 || u3 && -1 !== u3) && e9({ id: c3, styleId: u3, remove: { property: d3 }, index: oI(n4.parentRule) }), o4.apply(n4, i3);
    }) }), G_(() => {
      o3.CSSStyleDeclaration.prototype.setProperty = n3, o3.CSSStyleDeclaration.prototype.removeProperty = s3;
    });
  }(e8, { win: r2 }), m2 = e8.collectFonts ? function({ fontCb: e9, doc: a3 }) {
    const r3 = a3.defaultView;
    if (!r3) return () => {
    };
    const t3 = [], o3 = /* @__PURE__ */ new WeakMap(), n3 = r3.FontFace;
    r3.FontFace = function(e10, a4, r4) {
      const t4 = new n3(e10, a4, r4);
      return o3.set(t4, { family: e10, buffer: "string" != typeof a4, descriptors: r4, fontSource: "string" == typeof a4 ? a4 : JSON.stringify(Array.from(new Uint8Array(a4))) }), t4;
    };
    const s3 = l_(a3.fonts, "add", function(a4) {
      return function(r4) {
        return A_(G_(() => {
          const a5 = o3.get(r4);
          a5 && (e9(a5), o3.delete(r4));
        }), 0), a4.apply(this, [r4]);
      };
    });
    return t3.push(() => {
      r3.FontFace = n3;
    }), t3.push(s3), G_(() => {
      t3.forEach((e10) => e10());
    });
  }(e8) : () => {
  }, h2 = function(e9) {
    const { doc: a3, mirror: r3, blockClass: t3, blockSelector: o3, unblockSelector: n3, selectionCb: s3 } = e9;
    let i3 = true;
    const d3 = G_(() => {
      const e10 = a3.getSelection();
      if (!e10 || i3 && Y_([e10, "optionalAccess", (e11) => e11.isCollapsed])) return;
      i3 = e10.isCollapsed || false;
      const d4 = [], c3 = e10.rangeCount || 0;
      for (let a4 = 0; a4 < c3; a4++) {
        const s4 = e10.getRangeAt(a4), { startContainer: i4, startOffset: c4, endContainer: u3, endOffset: l3 } = s4;
        g_(i4, t3, o3, n3, true) || g_(u3, t3, o3, n3, true) || d4.push({ start: r3.getId(i4), startOffset: c4, end: r3.getId(u3), endOffset: l3 });
      }
      s3({ ranges: d4 });
    });
    return d3(), s_("selectionchange", d3);
  }(e8), f2 = function({ doc: e9, customElementCb: a3 }) {
    const r3 = e9.defaultView;
    if (!r3 || !r3.customElements) return () => {
    };
    const t3 = l_(r3.customElements, "define", function(e10) {
      return function(r4, t4, o3) {
        try {
          a3({ define: { name: r4 } });
        } catch (e11) {
        }
        return e10.apply(this, [r4, t4, o3]);
      };
    });
    return t3;
  }(e8), v2 = [];
  for (const a3 of e8.plugins) v2.push(a3.observer(a3.callback, r2, a3.options));
  return G_(() => {
    J_.forEach((e9) => e9.reset()), t2.disconnect(), o2(), n2(), s2(), i2(), d2(), c2(), u2(), l2(), p2(), m2(), h2(), f2(), v2.forEach((e9) => e9());
  });
}
function dI(e8) {
  return void 0 !== window[e8];
}
function cI(e8) {
  return Boolean(void 0 !== window[e8] && window[e8].prototype && "insertRule" in window[e8].prototype && "deleteRule" in window[e8].prototype);
}
var uI = class {
  constructor(e8) {
    this.generateIdFn = e8, this.iframeIdToRemoteIdMap = /* @__PURE__ */ new WeakMap(), this.iframeRemoteIdToIdMap = /* @__PURE__ */ new WeakMap();
  }
  getId(e8, a2, r2, t2) {
    const o2 = r2 || this.getIdToRemoteIdMap(e8), n2 = t2 || this.getRemoteIdToIdMap(e8);
    let s2 = o2.get(a2);
    return s2 || (s2 = this.generateIdFn(), o2.set(a2, s2), n2.set(s2, a2)), s2;
  }
  getIds(e8, a2) {
    const r2 = this.getIdToRemoteIdMap(e8), t2 = this.getRemoteIdToIdMap(e8);
    return a2.map((a3) => this.getId(e8, a3, r2, t2));
  }
  getRemoteId(e8, a2, r2) {
    const t2 = r2 || this.getRemoteIdToIdMap(e8);
    if ("number" != typeof a2) return a2;
    const o2 = t2.get(a2);
    return o2 || -1;
  }
  getRemoteIds(e8, a2) {
    const r2 = this.getRemoteIdToIdMap(e8);
    return a2.map((a3) => this.getRemoteId(e8, a3, r2));
  }
  reset(e8) {
    if (!e8) return this.iframeIdToRemoteIdMap = /* @__PURE__ */ new WeakMap(), void (this.iframeRemoteIdToIdMap = /* @__PURE__ */ new WeakMap());
    this.iframeIdToRemoteIdMap.delete(e8), this.iframeRemoteIdToIdMap.delete(e8);
  }
  getIdToRemoteIdMap(e8) {
    let a2 = this.iframeIdToRemoteIdMap.get(e8);
    return a2 || (a2 = /* @__PURE__ */ new Map(), this.iframeIdToRemoteIdMap.set(e8, a2)), a2;
  }
  getRemoteIdToIdMap(e8) {
    let a2 = this.iframeRemoteIdToIdMap.get(e8);
    return a2 || (a2 = /* @__PURE__ */ new Map(), this.iframeRemoteIdToIdMap.set(e8, a2)), a2;
  }
};
function lI(e8) {
  let a2, r2 = e8[0], t2 = 1;
  for (; t2 < e8.length; ) {
    const o2 = e8[t2], n2 = e8[t2 + 1];
    if (t2 += 2, ("optionalAccess" === o2 || "optionalCall" === o2) && null == r2) return;
    "access" === o2 || "optionalAccess" === o2 ? (a2 = r2, r2 = n2(r2)) : "call" !== o2 && "optionalCall" !== o2 || (r2 = n2((...e9) => r2.call(a2, ...e9)), a2 = void 0);
  }
  return r2;
}
var pI = class {
  constructor() {
    this.crossOriginIframeMirror = new uI(zx), this.crossOriginIframeRootIdMap = /* @__PURE__ */ new WeakMap();
  }
  addIframe() {
  }
  addLoadListener() {
  }
  attachIframe() {
  }
};
var mI = class {
  constructor(e8) {
    this.iframes = /* @__PURE__ */ new WeakMap(), this.crossOriginIframeMap = /* @__PURE__ */ new WeakMap(), this.crossOriginIframeMirror = new uI(zx), this.crossOriginIframeRootIdMap = /* @__PURE__ */ new WeakMap(), this.mutationCb = e8.mutationCb, this.wrappedEmit = e8.wrappedEmit, this.stylesheetManager = e8.stylesheetManager, this.recordCrossOriginIframes = e8.recordCrossOriginIframes, this.crossOriginIframeStyleMirror = new uI(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror)), this.mirror = e8.mirror, this.recordCrossOriginIframes && window.addEventListener("message", this.handleMessage.bind(this));
  }
  addIframe(e8) {
    this.iframes.set(e8, true), e8.contentWindow && this.crossOriginIframeMap.set(e8.contentWindow, e8);
  }
  addLoadListener(e8) {
    this.loadListener = e8;
  }
  attachIframe(e8, a2) {
    this.mutationCb({ adds: [{ parentId: this.mirror.getId(e8), nextId: null, node: a2 }], removes: [], texts: [], attributes: [], isAttachIframe: true }), lI([this, "access", (e9) => e9.loadListener, "optionalCall", (a3) => a3(e8)]), e8.contentDocument && e8.contentDocument.adoptedStyleSheets && e8.contentDocument.adoptedStyleSheets.length > 0 && this.stylesheetManager.adoptStyleSheets(e8.contentDocument.adoptedStyleSheets, this.mirror.getId(e8.contentDocument));
  }
  handleMessage(e8) {
    const a2 = e8;
    if ("rrweb" !== a2.data.type || a2.origin !== a2.data.origin) return;
    if (!e8.source) return;
    const r2 = this.crossOriginIframeMap.get(e8.source);
    if (!r2) return;
    const t2 = this.transformCrossOriginEvent(r2, a2.data.event);
    t2 && this.wrappedEmit(t2, a2.data.isCheckout);
  }
  transformCrossOriginEvent(e8, a2) {
    switch (a2.type) {
      case C_.FullSnapshot: {
        this.crossOriginIframeMirror.reset(e8), this.crossOriginIframeStyleMirror.reset(e8), this.replaceIdOnNode(a2.data.node, e8);
        const r2 = a2.data.node.id;
        return this.crossOriginIframeRootIdMap.set(e8, r2), this.patchRootIdOnNode(a2.data.node, r2), { timestamp: a2.timestamp, type: C_.IncrementalSnapshot, data: { source: R_.Mutation, adds: [{ parentId: this.mirror.getId(e8), nextId: null, node: a2.data.node }], removes: [], texts: [], attributes: [], isAttachIframe: true } };
      }
      case C_.Meta:
      case C_.Load:
      case C_.DomContentLoaded:
        return false;
      case C_.Plugin:
        return a2;
      case C_.Custom:
        return this.replaceIds(a2.data.payload, e8, ["id", "parentId", "previousId", "nextId"]), a2;
      case C_.IncrementalSnapshot:
        switch (a2.data.source) {
          case R_.Mutation:
            return a2.data.adds.forEach((a3) => {
              this.replaceIds(a3, e8, ["parentId", "nextId", "previousId"]), this.replaceIdOnNode(a3.node, e8);
              const r2 = this.crossOriginIframeRootIdMap.get(e8);
              r2 && this.patchRootIdOnNode(a3.node, r2);
            }), a2.data.removes.forEach((a3) => {
              this.replaceIds(a3, e8, ["parentId", "id"]);
            }), a2.data.attributes.forEach((a3) => {
              this.replaceIds(a3, e8, ["id"]);
            }), a2.data.texts.forEach((a3) => {
              this.replaceIds(a3, e8, ["id"]);
            }), a2;
          case R_.Drag:
          case R_.TouchMove:
          case R_.MouseMove:
            return a2.data.positions.forEach((a3) => {
              this.replaceIds(a3, e8, ["id"]);
            }), a2;
          case R_.ViewportResize:
            return false;
          case R_.MediaInteraction:
          case R_.MouseInteraction:
          case R_.Scroll:
          case R_.CanvasMutation:
          case R_.Input:
            return this.replaceIds(a2.data, e8, ["id"]), a2;
          case R_.StyleSheetRule:
          case R_.StyleDeclaration:
            return this.replaceIds(a2.data, e8, ["id"]), this.replaceStyleIds(a2.data, e8, ["styleId"]), a2;
          case R_.Font:
            return a2;
          case R_.Selection:
            return a2.data.ranges.forEach((a3) => {
              this.replaceIds(a3, e8, ["start", "end"]);
            }), a2;
          case R_.AdoptedStyleSheet:
            return this.replaceIds(a2.data, e8, ["id"]), this.replaceStyleIds(a2.data, e8, ["styleIds"]), lI([a2, "access", (e9) => e9.data, "access", (e9) => e9.styles, "optionalAccess", (e9) => e9.forEach, "call", (a3) => a3((a4) => {
              this.replaceStyleIds(a4, e8, ["styleId"]);
            })]), a2;
        }
    }
    return false;
  }
  replace(e8, a2, r2, t2) {
    for (const o2 of t2) (Array.isArray(a2[o2]) || "number" == typeof a2[o2]) && (Array.isArray(a2[o2]) ? a2[o2] = e8.getIds(r2, a2[o2]) : a2[o2] = e8.getId(r2, a2[o2]));
    return a2;
  }
  replaceIds(e8, a2, r2) {
    return this.replace(this.crossOriginIframeMirror, e8, a2, r2);
  }
  replaceStyleIds(e8, a2, r2) {
    return this.replace(this.crossOriginIframeStyleMirror, e8, a2, r2);
  }
  replaceIdOnNode(e8, a2) {
    this.replaceIds(e8, a2, ["id", "rootId"]), "childNodes" in e8 && e8.childNodes.forEach((e9) => {
      this.replaceIdOnNode(e9, a2);
    });
  }
  patchRootIdOnNode(e8, a2) {
    e8.type === Ix.Document || e8.rootId || (e8.rootId = a2), "childNodes" in e8 && e8.childNodes.forEach((e9) => {
      this.patchRootIdOnNode(e9, a2);
    });
  }
};
var hI = class {
  init() {
  }
  addShadowRoot() {
  }
  observeAttachShadow() {
  }
  reset() {
  }
};
var fI = class {
  constructor(e8) {
    this.shadowDoms = /* @__PURE__ */ new WeakSet(), this.restoreHandlers = [], this.mutationCb = e8.mutationCb, this.scrollCb = e8.scrollCb, this.bypassOptions = e8.bypassOptions, this.mirror = e8.mirror, this.init();
  }
  init() {
    this.reset(), this.patchAttachShadow(Element, document);
  }
  addShadowRoot(e8, a2) {
    if (!Sx(e8)) return;
    if (this.shadowDoms.has(e8)) return;
    this.shadowDoms.add(e8);
    const r2 = Q_({ ...this.bypassOptions, doc: a2, mutationCb: this.mutationCb, mirror: this.mirror, shadowDomManager: this }, e8);
    this.restoreHandlers.push(() => r2.disconnect()), this.restoreHandlers.push(eI({ ...this.bypassOptions, scrollCb: this.scrollCb, doc: e8, mirror: this.mirror })), A_(() => {
      e8.adoptedStyleSheets && e8.adoptedStyleSheets.length > 0 && this.bypassOptions.stylesheetManager.adoptStyleSheets(e8.adoptedStyleSheets, this.mirror.getId(e8.host)), this.restoreHandlers.push(sI({ mirror: this.mirror, stylesheetManager: this.bypassOptions.stylesheetManager }, e8));
    }, 0);
  }
  observeAttachShadow(e8) {
    e8.contentWindow && e8.contentDocument && this.patchAttachShadow(e8.contentWindow.Element, e8.contentDocument);
  }
  patchAttachShadow(e8, a2) {
    const r2 = this;
    this.restoreHandlers.push(l_(e8.prototype, "attachShadow", function(e9) {
      return function(t2) {
        const o2 = e9.call(this, t2);
        return this.shadowRoot && E_(this) && r2.addShadowRoot(this.shadowRoot, a2), o2;
      };
    }));
  }
  reset() {
    this.restoreHandlers.forEach((e8) => {
      try {
        e8();
      } catch (e9) {
      }
    }), this.restoreHandlers = [], this.shadowDoms = /* @__PURE__ */ new WeakSet();
  }
};
var vI = class {
  reset() {
  }
  freeze() {
  }
  unfreeze() {
  }
  lock() {
  }
  unlock() {
  }
  snapshot() {
  }
};
var gI = class {
  constructor(e8) {
    this.trackedLinkElements = /* @__PURE__ */ new WeakSet(), this.styleMirror = new k_(), this.mutationCb = e8.mutationCb, this.adoptedStyleSheetCb = e8.adoptedStyleSheetCb;
  }
  attachLinkElement(e8, a2) {
    "_cssText" in a2.attributes && this.mutationCb({ adds: [], removes: [], texts: [], attributes: [{ id: a2.id, attributes: a2.attributes }] }), this.trackLinkElement(e8);
  }
  trackLinkElement(e8) {
    this.trackedLinkElements.has(e8) || (this.trackedLinkElements.add(e8), this.trackStylesheetInLinkElement(e8));
  }
  adoptStyleSheets(e8, a2) {
    if (0 === e8.length) return;
    const r2 = { id: a2, styleIds: [] }, t2 = [];
    for (const a3 of e8) {
      let e9;
      this.styleMirror.has(a3) ? e9 = this.styleMirror.getId(a3) : (e9 = this.styleMirror.add(a3), t2.push({ styleId: e9, rules: Array.from(a3.rules || CSSRule, (e10, a4) => ({ rule: Ex(e10), index: a4 })) })), r2.styleIds.push(e9);
    }
    t2.length > 0 && (r2.styles = t2), this.adoptedStyleSheetCb(r2);
  }
  reset() {
    this.styleMirror.reset(), this.trackedLinkElements = /* @__PURE__ */ new WeakSet();
  }
  trackStylesheetInLinkElement(e8) {
  }
};
var bI = class {
  constructor() {
    this.nodeMap = /* @__PURE__ */ new WeakMap(), this.loop = true, this.periodicallyClear();
  }
  periodicallyClear() {
    !function(...e8) {
      O_("requestAnimationFrame")(...e8);
    }(() => {
      this.clear(), this.loop && this.periodicallyClear();
    });
  }
  inOtherBuffer(e8, a2) {
    const r2 = this.nodeMap.get(e8);
    return r2 && Array.from(r2).some((e9) => e9 !== a2);
  }
  add(e8, a2) {
    this.nodeMap.set(e8, (this.nodeMap.get(e8) || /* @__PURE__ */ new Set()).add(a2));
  }
  clear() {
    this.nodeMap = /* @__PURE__ */ new WeakMap();
  }
  destroy() {
    this.loop = false;
  }
};
var wI;
var yI;
var xI = new jx();
function _I(e8 = {}) {
  const { emit: a2, checkoutEveryNms: r2, checkoutEveryNth: t2, blockClass: o2 = "rr-block", blockSelector: n2 = null, unblockSelector: s2 = null, ignoreClass: i2 = "rr-ignore", ignoreSelector: d2 = null, maskAllText: c2 = false, maskTextClass: u2 = "rr-mask", unmaskTextClass: l2 = null, maskTextSelector: p2 = null, unmaskTextSelector: m2 = null, inlineStylesheet: h2 = true, maskAllInputs: f2, maskInputOptions: v2, slimDOMOptions: g2, maskAttributeFn: b2, maskInputFn: w2, maskTextFn: y2, maxCanvasSize: x2 = null, packFn: _2, sampling: I2 = {}, dataURLOptions: k2 = {}, mousemoveWait: S2, recordCanvas: T2 = false, recordCrossOriginIframes: E2 = false, recordAfter: j2 = "DOMContentLoaded" === e8.recordAfter ? e8.recordAfter : "load", userTriggeredOnInput: O2 = false, collectFonts: A2 = false, inlineImages: C2 = false, plugins: R2, keepIframeSrcFn: N2 = () => false, ignoreCSSAttributes: P2 = /* @__PURE__ */ new Set([]), errorHandler: M2, onMutation: L2, getCanvasManager: D2 } = e8;
  K_(M2);
  const z2 = !E2 || window.parent === window;
  let F2 = false;
  if (!z2) try {
    window.parent.document && (F2 = false);
  } catch (e9) {
    F2 = true;
  }
  if (z2 && !a2) throw new Error("emit function is required");
  void 0 !== S2 && void 0 === I2.mousemove && (I2.mousemove = S2), xI.reset();
  const B2 = true === f2 ? { color: true, date: true, "datetime-local": true, email: true, month: true, number: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true, textarea: true, select: true, radio: true, checkbox: true } : void 0 !== v2 ? v2 : {}, q2 = true === g2 || "all" === g2 ? { script: true, comment: true, headFavicon: true, headWhitespace: true, headMetaSocial: true, headMetaRobots: true, headMetaHttpEquiv: true, headMetaVerification: true, headMetaAuthorship: "all" === g2, headMetaDescKeywords: "all" === g2 } : g2 || {};
  let $2;
  !function(e9 = window) {
    "NodeList" in e9 && !e9.NodeList.prototype.forEach && (e9.NodeList.prototype.forEach = Array.prototype.forEach), "DOMTokenList" in e9 && !e9.DOMTokenList.prototype.forEach && (e9.DOMTokenList.prototype.forEach = Array.prototype.forEach), Node.prototype.contains || (Node.prototype.contains = (...e10) => {
      let a3 = e10[0];
      if (!(0 in e10)) throw new TypeError("1 argument is required");
      do {
        if (this === a3) return true;
      } while (a3 = a3 && a3.parentNode);
      return false;
    });
  }();
  let U2 = 0;
  const H2 = (e9) => {
    for (const a3 of R2 || []) a3.eventProcessor && (e9 = a3.eventProcessor(e9));
    return _2 && !F2 && (e9 = _2(e9)), e9;
  };
  wI = (e9, o3) => {
    const n3 = e9;
    if (n3.timestamp = p_(), !cg([J_, "access", (e10) => e10[0], "optionalAccess", (e10) => e10.isFrozen, "call", (e10) => e10()]) || n3.type === C_.FullSnapshot || n3.type === C_.IncrementalSnapshot && n3.data.source === R_.Mutation || J_.forEach((e10) => e10.unfreeze()), z2) cg([a2, "optionalCall", (e10) => e10(H2(n3), o3)]);
    else if (F2) {
      const e10 = { type: "rrweb", event: H2(n3), origin: window.location.origin, isCheckout: o3 };
      window.parent.postMessage(e10, "*");
    }
    if (n3.type === C_.FullSnapshot) $2 = n3, U2 = 0;
    else if (n3.type === C_.IncrementalSnapshot) {
      if (n3.data.source === R_.Mutation && n3.data.isAttachIframe) return;
      U2++;
      const e10 = t2 && U2 >= t2, a3 = r2 && $2 && n3.timestamp - $2.timestamp > r2;
      (e10 || a3) && Z2(true);
    }
  };
  const W2 = (e9) => {
    wI({ type: C_.IncrementalSnapshot, data: { source: R_.Mutation, ...e9 } });
  }, K2 = (e9) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.Scroll, ...e9 } }), V2 = (e9) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.CanvasMutation, ...e9 } }), G2 = new gI({ mutationCb: W2, adoptedStyleSheetCb: (e9) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.AdoptedStyleSheet, ...e9 } }) }), Y2 = "boolean" == typeof __RRWEB_EXCLUDE_IFRAME__ && __RRWEB_EXCLUDE_IFRAME__ ? new pI() : new mI({ mirror: xI, mutationCb: W2, stylesheetManager: G2, recordCrossOriginIframes: E2, wrappedEmit: wI });
  for (const e9 of R2 || []) e9.getMirror && e9.getMirror({ nodeMirror: xI, crossOriginIframeMirror: Y2.crossOriginIframeMirror, crossOriginIframeStyleMirror: Y2.crossOriginIframeStyleMirror });
  const J2 = new bI(), X2 = function(e9, a3) {
    try {
      return e9 ? e9(a3) : new vI();
    } catch (e10) {
      return console.warn("Unable to initialize CanvasManager"), new vI();
    }
  }(D2, { mirror: xI, win: window, mutationCb: (e9) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.CanvasMutation, ...e9 } }), recordCanvas: T2, blockClass: o2, blockSelector: n2, unblockSelector: s2, maxCanvasSize: x2, sampling: I2.canvas, dataURLOptions: k2, errorHandler: M2 }), Q2 = "boolean" == typeof __RRWEB_EXCLUDE_SHADOW_DOM__ && __RRWEB_EXCLUDE_SHADOW_DOM__ ? new hI() : new fI({ mutationCb: W2, scrollCb: K2, bypassOptions: { onMutation: L2, blockClass: o2, blockSelector: n2, unblockSelector: s2, maskAllText: c2, maskTextClass: u2, unmaskTextClass: l2, maskTextSelector: p2, unmaskTextSelector: m2, inlineStylesheet: h2, maskInputOptions: B2, dataURLOptions: k2, maskAttributeFn: b2, maskTextFn: y2, maskInputFn: w2, recordCanvas: T2, inlineImages: C2, sampling: I2, slimDOMOptions: q2, iframeManager: Y2, stylesheetManager: G2, canvasManager: X2, keepIframeSrcFn: N2, processedNodeManager: J2 }, mirror: xI }), Z2 = (e9 = false) => {
    wI({ type: C_.Meta, data: { href: window.location.href, width: f_(), height: h_() } }, e9), G2.reset(), Q2.init(), J_.forEach((e10) => e10.lock());
    const a3 = function(e10, a4) {
      const { mirror: r3 = new jx(), blockClass: t3 = "rr-block", blockSelector: o3 = null, unblockSelector: n3 = null, maskAllText: s3 = false, maskTextClass: i3 = "rr-mask", unmaskTextClass: d3 = null, maskTextSelector: c3 = null, unmaskTextSelector: u3 = null, inlineStylesheet: l3 = true, inlineImages: p3 = false, recordCanvas: m3 = false, maskAllInputs: h3 = false, maskAttributeFn: f3, maskTextFn: v3, maskInputFn: g3, slimDOM: b3 = false, dataURLOptions: w3, preserveWhiteSpace: y3, onSerialize: x3, onIframeLoad: _3, iframeLoadTimeout: I3, onStylesheetLoad: k3, stylesheetLoadTimeout: S3, keepIframeSrcFn: T3 = () => false } = a4 || {};
      return o_(e10, { doc: e10, mirror: r3, blockClass: t3, blockSelector: o3, unblockSelector: n3, maskAllText: s3, maskTextClass: i3, unmaskTextClass: d3, maskTextSelector: c3, unmaskTextSelector: u3, skipChild: false, inlineStylesheet: l3, maskInputOptions: true === h3 ? { color: true, date: true, "datetime-local": true, email: true, month: true, number: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true, textarea: true, select: true } : false === h3 ? {} : h3, maskAttributeFn: f3, maskTextFn: v3, maskInputFn: g3, slimDOMOptions: true === b3 || "all" === b3 ? { script: true, comment: true, headFavicon: true, headWhitespace: true, headMetaDescKeywords: "all" === b3, headMetaSocial: true, headMetaRobots: true, headMetaHttpEquiv: true, headMetaAuthorship: true, headMetaVerification: true } : false === b3 ? {} : b3, dataURLOptions: w3, inlineImages: p3, recordCanvas: m3, preserveWhiteSpace: y3, onSerialize: x3, onIframeLoad: _3, iframeLoadTimeout: I3, onStylesheetLoad: k3, stylesheetLoadTimeout: S3, keepIframeSrcFn: T3, newlyAddedElement: false });
    }(document, { mirror: xI, blockClass: o2, blockSelector: n2, unblockSelector: s2, maskAllText: c2, maskTextClass: u2, unmaskTextClass: l2, maskTextSelector: p2, unmaskTextSelector: m2, inlineStylesheet: h2, maskAllInputs: B2, maskAttributeFn: b2, maskInputFn: w2, maskTextFn: y2, slimDOM: q2, dataURLOptions: k2, recordCanvas: T2, inlineImages: C2, onSerialize: (e10) => {
      x_(e10, xI) && Y2.addIframe(e10), __(e10, xI) && G2.trackLinkElement(e10), I_(e10) && Q2.addShadowRoot(e10.shadowRoot, document);
    }, onIframeLoad: (e10, a4) => {
      Y2.attachIframe(e10, a4), Q2.observeAttachShadow(e10);
    }, onStylesheetLoad: (e10, a4) => {
      G2.attachLinkElement(e10, a4);
    }, keepIframeSrcFn: N2 });
    if (!a3) return console.warn("Failed to snapshot the document");
    wI({ type: C_.FullSnapshot, data: { node: a3, initialOffset: m_(window) } }), J_.forEach((e10) => e10.unlock()), document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0 && G2.adoptStyleSheets(document.adoptedStyleSheets, xI.getId(document));
  };
  yI = Z2;
  try {
    const e9 = [], a3 = (e10) => G_(iI)({ onMutation: L2, mutationCb: W2, mousemoveCb: (e11, a4) => wI({ type: C_.IncrementalSnapshot, data: { source: a4, positions: e11 } }), mouseInteractionCb: (e11) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.MouseInteraction, ...e11 } }), scrollCb: K2, viewportResizeCb: (e11) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.ViewportResize, ...e11 } }), inputCb: (e11) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.Input, ...e11 } }), mediaInteractionCb: (e11) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.MediaInteraction, ...e11 } }), styleSheetRuleCb: (e11) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.StyleSheetRule, ...e11 } }), styleDeclarationCb: (e11) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.StyleDeclaration, ...e11 } }), canvasMutationCb: V2, fontCb: (e11) => wI({ type: C_.IncrementalSnapshot, data: { source: R_.Font, ...e11 } }), selectionCb: (e11) => {
      wI({ type: C_.IncrementalSnapshot, data: { source: R_.Selection, ...e11 } });
    }, customElementCb: (e11) => {
      wI({ type: C_.IncrementalSnapshot, data: { source: R_.CustomElement, ...e11 } });
    }, blockClass: o2, ignoreClass: i2, ignoreSelector: d2, maskAllText: c2, maskTextClass: u2, unmaskTextClass: l2, maskTextSelector: p2, unmaskTextSelector: m2, maskInputOptions: B2, inlineStylesheet: h2, sampling: I2, recordCanvas: T2, inlineImages: C2, userTriggeredOnInput: O2, collectFonts: A2, doc: e10, maskAttributeFn: b2, maskInputFn: w2, maskTextFn: y2, keepIframeSrcFn: N2, blockSelector: n2, unblockSelector: s2, slimDOMOptions: q2, dataURLOptions: k2, mirror: xI, iframeManager: Y2, stylesheetManager: G2, shadowDomManager: Q2, processedNodeManager: J2, canvasManager: X2, ignoreCSSAttributes: P2, plugins: cg([R2, "optionalAccess", (e11) => e11.filter, "call", (e11) => e11((e12) => e12.observer), "optionalAccess", (e11) => e11.map, "call", (e11) => e11((e12) => ({ observer: e12.observer, options: e12.options, callback: (a4) => wI({ type: C_.Plugin, data: { plugin: e12.name, payload: a4 } }) }))]) || [] }, {});
    Y2.addLoadListener((r4) => {
      try {
        e9.push(a3(r4.contentDocument));
      } catch (e10) {
        console.warn(e10);
      }
    });
    const r3 = () => {
      Z2(), e9.push(a3(document));
    };
    return "interactive" === document.readyState || "complete" === document.readyState ? r3() : (e9.push(s_("DOMContentLoaded", () => {
      wI({ type: C_.DomContentLoaded, data: {} }), "DOMContentLoaded" === j2 && r3();
    })), e9.push(s_("load", () => {
      wI({ type: C_.Load, data: {} }), "load" === j2 && r3();
    }, window))), () => {
      e9.forEach((e10) => e10()), J2.destroy(), yI = void 0, V_();
    };
  } catch (e9) {
    console.warn(e9);
  }
}
_I.mirror = xI, _I.takeFullSnapshot = function(e8) {
  if (!yI) throw new Error("please take full snapshot after start recording");
  yI(e8);
};
function II(e8) {
  return e8 > 9999999999 ? e8 : 1e3 * e8;
}
function kI(e8) {
  return e8 > 9999999999 ? e8 / 1e3 : e8;
}
function SI(e8, a2) {
  "sentry.transaction" !== a2.category && (["ui.click", "ui.input"].includes(a2.category) ? e8.triggerUserActivity() : e8.checkAndHandleExpiredSession(), e8.addUpdate(() => (e8.throttledAddEvent({ type: C_.Custom, timestamp: 1e3 * (a2.timestamp || 0), data: { tag: "breadcrumb", payload: Ov(a2, 10, 1e3) } }), "console" === a2.category)));
}
function TI(e8) {
  return e8.closest("button,a") || e8;
}
function EI(e8) {
  const a2 = jI(e8);
  return a2 && a2 instanceof Element ? TI(a2) : a2;
}
function jI(e8) {
  return function(e9) {
    return "object" == typeof e9 && !!e9 && "target" in e9;
  }(e8) ? e8.target : e8;
}
var OI;
function AI(e8) {
  return OI || (OI = [], kf(fx, "open", function(e9) {
    return function(...a2) {
      if (OI) try {
        OI.forEach((e10) => e10());
      } catch (e10) {
      }
      return e9.apply(fx, a2);
    };
  })), OI.push(e8), () => {
    const a2 = OI ? OI.indexOf(e8) : -1;
    a2 > -1 && OI.splice(a2, 1);
  };
}
var CI = class {
  constructor(e8, a2, r2 = SI) {
    this._lastMutation = 0, this._lastScroll = 0, this._clicks = [], this._timeout = a2.timeout / 1e3, this._threshold = a2.threshold / 1e3, this._scollTimeout = a2.scrollTimeout / 1e3, this._replay = e8, this._ignoreSelector = a2.ignoreSelector, this._addBreadcrumbEvent = r2;
  }
  addListeners() {
    const e8 = AI(() => {
      this._lastMutation = NI();
    });
    this._teardown = () => {
      e8(), this._clicks = [], this._lastMutation = 0, this._lastScroll = 0;
    };
  }
  removeListeners() {
    this._teardown && this._teardown(), this._checkClickTimeout && clearTimeout(this._checkClickTimeout);
  }
  handleClick(e8, a2) {
    if (function(e9, a3) {
      if (!RI.includes(e9.tagName)) return true;
      if ("INPUT" === e9.tagName && !["submit", "button"].includes(e9.getAttribute("type") || "")) return true;
      if ("A" === e9.tagName && (e9.hasAttribute("download") || e9.hasAttribute("target") && "_self" !== e9.getAttribute("target"))) return true;
      if (a3 && e9.matches(a3)) return true;
      return false;
    }(a2, this._ignoreSelector) || !function(e9) {
      return !(!e9.data || "number" != typeof e9.data.nodeId || !e9.timestamp);
    }(e8)) return;
    const r2 = { timestamp: kI(e8.timestamp), clickBreadcrumb: e8, clickCount: 0, node: a2 };
    this._clicks.some((e9) => e9.node === r2.node && Math.abs(e9.timestamp - r2.timestamp) < 1) || (this._clicks.push(r2), 1 === this._clicks.length && this._scheduleCheckClicks());
  }
  registerMutation(e8 = Date.now()) {
    this._lastMutation = kI(e8);
  }
  registerScroll(e8 = Date.now()) {
    this._lastScroll = kI(e8);
  }
  registerClick(e8) {
    const a2 = TI(e8);
    this._handleMultiClick(a2);
  }
  _handleMultiClick(e8) {
    this._getClicks(e8).forEach((e9) => {
      e9.clickCount++;
    });
  }
  _getClicks(e8) {
    return this._clicks.filter((a2) => a2.node === e8);
  }
  _checkClicks() {
    const e8 = [], a2 = NI();
    this._clicks.forEach((r2) => {
      !r2.mutationAfter && this._lastMutation && (r2.mutationAfter = r2.timestamp <= this._lastMutation ? this._lastMutation - r2.timestamp : void 0), !r2.scrollAfter && this._lastScroll && (r2.scrollAfter = r2.timestamp <= this._lastScroll ? this._lastScroll - r2.timestamp : void 0), r2.timestamp + this._timeout <= a2 && e8.push(r2);
    });
    for (const a3 of e8) {
      const e9 = this._clicks.indexOf(a3);
      e9 > -1 && (this._generateBreadcrumbs(a3), this._clicks.splice(e9, 1));
    }
    this._clicks.length && this._scheduleCheckClicks();
  }
  _generateBreadcrumbs(e8) {
    const a2 = this._replay, r2 = e8.scrollAfter && e8.scrollAfter <= this._scollTimeout, t2 = e8.mutationAfter && e8.mutationAfter <= this._threshold, o2 = !r2 && !t2, { clickCount: n2, clickBreadcrumb: s2 } = e8;
    if (o2) {
      const r3 = 1e3 * Math.min(e8.mutationAfter || this._timeout, this._timeout), t3 = r3 < 1e3 * this._timeout ? "mutation" : "timeout", o3 = { type: "default", message: s2.message, timestamp: s2.timestamp, category: "ui.slowClickDetected", data: { ...s2.data, url: fx.location.href, route: a2.getCurrentRoute(), timeAfterClickMs: r3, endReason: t3, clickCount: n2 || 1 } };
      this._addBreadcrumbEvent(a2, o3);
    } else if (n2 > 1) {
      const e9 = { type: "default", message: s2.message, timestamp: s2.timestamp, category: "ui.multiClick", data: { ...s2.data, url: fx.location.href, route: a2.getCurrentRoute(), clickCount: n2, metric: true } };
      this._addBreadcrumbEvent(a2, e9);
    }
  }
  _scheduleCheckClicks() {
    this._checkClickTimeout && clearTimeout(this._checkClickTimeout), this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1e3);
  }
};
var RI = ["A", "BUTTON", "INPUT"];
function NI() {
  return Date.now() / 1e3;
}
function PI(e8, a2) {
  try {
    if (!function(e9) {
      return 3 === e9.type;
    }(a2)) return;
    const { source: r2 } = a2.data;
    if (r2 === R_.Mutation && e8.registerMutation(a2.timestamp), r2 === R_.Scroll && e8.registerScroll(a2.timestamp), function(e9) {
      return e9.data.source === R_.MouseInteraction;
    }(a2)) {
      const { type: r3, id: t2 } = a2.data, o2 = _I.mirror.getNode(t2);
      o2 instanceof HTMLElement && r3 === N_.Click && e8.registerClick(o2);
    }
  } catch (e9) {
  }
}
function MI(e8) {
  return { timestamp: Date.now() / 1e3, type: "default", ...e8 };
}
var LI;
!function(e8) {
  e8[e8.Document = 0] = "Document", e8[e8.DocumentType = 1] = "DocumentType", e8[e8.Element = 2] = "Element", e8[e8.Text = 3] = "Text", e8[e8.CDATA = 4] = "CDATA", e8[e8.Comment = 5] = "Comment";
}(LI || (LI = {}));
var DI = /* @__PURE__ */ new Set(["id", "class", "aria-label", "role", "name", "alt", "title", "data-test-id", "data-testid", "disabled", "aria-disabled", "data-sentry-component"]);
function zI(e8) {
  const a2 = {};
  for (const r2 in e8) if (DI.has(r2)) {
    let t2 = r2;
    "data-testid" !== r2 && "data-test-id" !== r2 || (t2 = "testId"), a2[t2] = e8[r2];
  }
  return a2;
}
var FI = (e8) => (a2) => {
  if (!e8.isEnabled()) return;
  const r2 = function(e9) {
    const { target: a3, message: r3 } = function(e10) {
      const a4 = "click" === e10.name;
      let r4, t3 = null;
      try {
        t3 = a4 ? EI(e10.event) : jI(e10.event), r4 = lf(t3, { maxStringLength: 200 }) || "<unknown>";
      } catch (e11) {
        r4 = "<unknown>";
      }
      return { target: t3, message: r4 };
    }(e9);
    return MI({ category: `ui.${e9.name}`, ...BI(a3, r3) });
  }(a2);
  if (!r2) return;
  const t2 = "click" === a2.name, o2 = t2 ? a2.event : void 0;
  var n2, s2, i2;
  !(t2 && e8.clickDetector && o2 && o2.target) || o2.altKey || o2.metaKey || o2.ctrlKey || o2.shiftKey || (n2 = e8.clickDetector, s2 = r2, i2 = EI(a2.event), n2.handleClick(s2, i2)), SI(e8, r2);
};
function BI(e8, a2) {
  const r2 = _I.mirror.getId(e8), t2 = r2 && _I.mirror.getNode(r2), o2 = t2 && _I.mirror.getMeta(t2), n2 = o2 && function(e9) {
    return e9.type === LI.Element;
  }(o2) ? o2 : null;
  return { message: a2, data: n2 ? { nodeId: r2, node: { id: r2, tagName: n2.tagName, textContent: Array.from(n2.childNodes).map((e9) => e9.type === LI.Text && e9.textContent).filter(Boolean).map((e9) => e9.trim()).join(""), attributes: zI(n2.attributes) } } : {} };
}
function qI(e8, a2) {
  if (!e8.isEnabled()) return;
  e8.updateUserActivity();
  const r2 = function(e9) {
    const { metaKey: a3, shiftKey: r3, ctrlKey: t2, altKey: o2, key: n2, target: s2 } = e9;
    if (!s2 || function(e10) {
      return "INPUT" === e10.tagName || "TEXTAREA" === e10.tagName || e10.isContentEditable;
    }(s2) || !n2) return null;
    const i2 = a3 || t2 || o2, d2 = 1 === n2.length;
    if (!i2 && d2) return null;
    const c2 = lf(s2, { maxStringLength: 200 }) || "<unknown>", u2 = BI(s2, c2);
    return MI({ category: "ui.keyDown", message: c2, data: { ...u2.data, metaKey: a3, shiftKey: r3, ctrlKey: t2, altKey: o2, key: n2 } });
  }(a2);
  r2 && SI(e8, r2);
}
var $I = { resource: function(e8) {
  const { entryType: a2, initiatorType: r2, name: t2, responseEnd: o2, startTime: n2, decodedBodySize: s2, encodedBodySize: i2, responseStatus: d2, transferSize: c2 } = e8;
  if (["fetch", "xmlhttprequest"].includes(r2)) return null;
  return { type: `${a2}.${r2}`, start: HI(n2), end: HI(o2), name: t2, data: { size: c2, statusCode: d2, decodedBodySize: s2, encodedBodySize: i2 } };
}, paint: function(e8) {
  const { duration: a2, entryType: r2, name: t2, startTime: o2 } = e8, n2 = HI(o2);
  return { type: r2, name: t2, start: n2, end: n2 + a2, data: void 0 };
}, navigation: function(e8) {
  const { entryType: a2, name: r2, decodedBodySize: t2, duration: o2, domComplete: n2, encodedBodySize: s2, domContentLoadedEventStart: i2, domContentLoadedEventEnd: d2, domInteractive: c2, loadEventStart: u2, loadEventEnd: l2, redirectCount: p2, startTime: m2, transferSize: h2, type: f2 } = e8;
  if (0 === o2) return null;
  return { type: `${a2}.${f2}`, start: HI(m2), end: HI(n2), name: r2, data: { size: h2, decodedBodySize: t2, encodedBodySize: s2, duration: o2, domInteractive: c2, domContentLoadedEventStart: i2, domContentLoadedEventEnd: d2, loadEventStart: u2, loadEventEnd: l2, domComplete: n2, redirectCount: p2 } };
} };
function UI(e8) {
  return $I[e8.entryType] ? $I[e8.entryType](e8) : null;
}
function HI(e8) {
  return (($v || fx.performance.timeOrigin) + e8) / 1e3;
}
function WI(e8) {
  function a2(a3) {
    e8.performanceEntries.includes(a3) || e8.performanceEntries.push(a3);
  }
  function r2({ entries: e9 }) {
    e9.forEach(a2);
  }
  const t2 = [];
  return ["navigation", "paint", "resource"].forEach((e9) => {
    t2.push(Pw(e9, r2));
  }), t2.push(Nw(({ metric: a3 }) => {
    e8.replayPerformanceEntries.push(function(e9) {
      const a4 = e9.entries, r3 = a4[a4.length - 1], t3 = r3 ? r3.element : void 0, o2 = e9.value, n2 = HI(o2);
      return { type: "largest-contentful-paint", name: "largest-contentful-paint", start: n2, end: n2, data: { value: o2, size: o2, nodeId: t3 ? _I.mirror.getId(t3) : void 0 } };
    }(a3));
  })), () => {
    t2.forEach((e9) => e9());
  };
}
var KI = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
function VI(e8, a2) {
  KI && (bf.info(e8), a2 && YI(e8));
}
function GI(e8, a2) {
  KI && (bf.info(e8), a2 && setTimeout(() => {
    YI(e8);
  }, 0));
}
function YI(e8) {
  Cg({ category: "console", data: { logger: "replay" }, level: "info", message: e8 }, { level: "info" });
}
var JI = class extends Error {
  constructor() {
    super("Event buffer exceeded maximum size of 20000000.");
  }
};
var XI = class {
  constructor() {
    this.events = [], this._totalSize = 0, this.hasCheckout = false;
  }
  get hasEvents() {
    return this.events.length > 0;
  }
  get type() {
    return "sync";
  }
  destroy() {
    this.events = [];
  }
  async addEvent(e8) {
    const a2 = JSON.stringify(e8).length;
    if (this._totalSize += a2, this._totalSize > yx) throw new JI();
    this.events.push(e8);
  }
  finish() {
    return new Promise((e8) => {
      const a2 = this.events;
      this.clear(), e8(JSON.stringify(a2));
    });
  }
  clear() {
    this.events = [], this._totalSize = 0, this.hasCheckout = false;
  }
  getEarliestTimestamp() {
    const e8 = this.events.map((e9) => e9.timestamp).sort()[0];
    return e8 ? II(e8) : null;
  }
};
var QI = class {
  constructor(e8) {
    this._worker = e8, this._id = 0;
  }
  ensureReady() {
    return this._ensureReadyPromise || (this._ensureReadyPromise = new Promise((e8, a2) => {
      this._worker.addEventListener("message", ({ data: r2 }) => {
        r2.success ? e8() : a2();
      }, { once: true }), this._worker.addEventListener("error", (e9) => {
        a2(e9);
      }, { once: true });
    })), this._ensureReadyPromise;
  }
  destroy() {
    VI("[Replay] Destroying compression worker"), this._worker.terminate();
  }
  postMessage(e8, a2) {
    const r2 = this._getAndIncrementId();
    return new Promise((t2, o2) => {
      const n2 = ({ data: a3 }) => {
        const s2 = a3;
        if (s2.method === e8 && s2.id === r2) {
          if (this._worker.removeEventListener("message", n2), !s2.success) return KI && bf.error("[Replay]", s2.response), void o2(new Error("Error in compression worker"));
          t2(s2.response);
        }
      };
      this._worker.addEventListener("message", n2), this._worker.postMessage({ id: r2, method: e8, arg: a2 });
    });
  }
  _getAndIncrementId() {
    return this._id++;
  }
};
var ZI = class {
  constructor(e8) {
    this._worker = new QI(e8), this._earliestTimestamp = null, this._totalSize = 0, this.hasCheckout = false;
  }
  get hasEvents() {
    return !!this._earliestTimestamp;
  }
  get type() {
    return "worker";
  }
  ensureReady() {
    return this._worker.ensureReady();
  }
  destroy() {
    this._worker.destroy();
  }
  addEvent(e8) {
    const a2 = II(e8.timestamp);
    (!this._earliestTimestamp || a2 < this._earliestTimestamp) && (this._earliestTimestamp = a2);
    const r2 = JSON.stringify(e8);
    return this._totalSize += r2.length, this._totalSize > yx ? Promise.reject(new JI()) : this._sendEventToWorker(r2);
  }
  finish() {
    return this._finishRequest();
  }
  clear() {
    this._earliestTimestamp = null, this._totalSize = 0, this.hasCheckout = false, this._worker.postMessage("clear").then(null, (e8) => {
      KI && bf.warn('[Replay] Sending "clear" message to worker failed', e8);
    });
  }
  getEarliestTimestamp() {
    return this._earliestTimestamp;
  }
  _sendEventToWorker(e8) {
    return this._worker.postMessage("addEvent", e8);
  }
  async _finishRequest() {
    const e8 = await this._worker.postMessage("finish");
    return this._earliestTimestamp = null, this._totalSize = 0, e8;
  }
};
var ek = class {
  constructor(e8) {
    this._fallback = new XI(), this._compression = new ZI(e8), this._used = this._fallback, this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();
  }
  get type() {
    return this._used.type;
  }
  get hasEvents() {
    return this._used.hasEvents;
  }
  get hasCheckout() {
    return this._used.hasCheckout;
  }
  set hasCheckout(e8) {
    this._used.hasCheckout = e8;
  }
  destroy() {
    this._fallback.destroy(), this._compression.destroy();
  }
  clear() {
    return this._used.clear();
  }
  getEarliestTimestamp() {
    return this._used.getEarliestTimestamp();
  }
  addEvent(e8) {
    return this._used.addEvent(e8);
  }
  async finish() {
    return await this.ensureWorkerIsLoaded(), this._used.finish();
  }
  ensureWorkerIsLoaded() {
    return this._ensureWorkerIsLoadedPromise;
  }
  async _ensureWorkerIsLoaded() {
    try {
      await this._compression.ensureReady();
    } catch (e8) {
      return void VI("[Replay] Failed to load the compression worker, falling back to simple buffer");
    }
    await this._switchToCompressionWorker();
  }
  async _switchToCompressionWorker() {
    const { events: e8, hasCheckout: a2 } = this._fallback, r2 = [];
    for (const a3 of e8) r2.push(this._compression.addEvent(a3));
    this._compression.hasCheckout = a2, this._used = this._compression;
    try {
      await Promise.all(r2);
    } catch (e9) {
      KI && bf.warn("[Replay] Failed to add events when switching buffers.", e9);
    }
  }
};
function ak({ useCompression: e8, workerUrl: a2 }) {
  if (e8 && window.Worker) {
    const e9 = function(e10) {
      try {
        const a3 = e10 || function() {
          if ("undefined" == typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ || !__SENTRY_EXCLUDE_REPLAY_WORKER__) return function() {
            const e11 = new Blob(['var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if("function"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G="undefined"!=typeof TextEncoder&&new TextEncoder,H="undefined"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error("Adding invalid event");const n=this._hasEvents?",":"";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push("]",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push("[")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener("message",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&"function"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:"init",success:!0,response:void 0});']);
            return URL.createObjectURL(e11);
          }();
          return "";
        }();
        if (!a3) return;
        VI("[Replay] Using compression worker" + (e10 ? ` from ${e10}` : ""));
        const r2 = new Worker(a3);
        return new ek(r2);
      } catch (e11) {
        VI("[Replay] Failed to create compression worker");
      }
    }(a2);
    if (e9) return e9;
  }
  return VI("[Replay] Using simple buffer"), new XI();
}
function rk() {
  try {
    return "sessionStorage" in fx && !!fx.sessionStorage;
  } catch (e8) {
    return false;
  }
}
function tk(e8) {
  !function() {
    if (!rk()) return;
    try {
      fx.sessionStorage.removeItem(vx);
    } catch (e9) {
    }
  }(), e8.session = void 0;
}
function ok(e8) {
  return void 0 !== e8 && Math.random() < e8;
}
function nk(e8) {
  const a2 = Date.now();
  return { id: e8.id || Wf(), started: e8.started || a2, lastActivity: e8.lastActivity || a2, segmentId: e8.segmentId || 0, sampled: e8.sampled, previousSessionId: e8.previousSessionId };
}
function sk(e8) {
  if (rk()) try {
    fx.sessionStorage.setItem(vx, JSON.stringify(e8));
  } catch (e9) {
  }
}
function ik({ sessionSampleRate: e8, allowBuffering: a2, stickySession: r2 = false }, { previousSessionId: t2 } = {}) {
  const o2 = function(e9, a3) {
    return ok(e9) ? "session" : !!a3 && "buffer";
  }(e8, a2), n2 = nk({ sampled: o2, previousSessionId: t2 });
  return r2 && sk(n2), n2;
}
function dk(e8, a2, r2 = +/* @__PURE__ */ new Date()) {
  return null === e8 || void 0 === a2 || a2 < 0 || 0 !== a2 && e8 + a2 <= r2;
}
function ck(e8, { maxReplayDuration: a2, sessionIdleExpire: r2, targetTime: t2 = Date.now() }) {
  return dk(e8.started, a2, t2) || dk(e8.lastActivity, r2, t2);
}
function uk(e8, { sessionIdleExpire: a2, maxReplayDuration: r2 }) {
  return !!ck(e8, { sessionIdleExpire: a2, maxReplayDuration: r2 }) && ("buffer" !== e8.sampled || 0 !== e8.segmentId);
}
function lk({ traceInternals: e8, sessionIdleExpire: a2, maxReplayDuration: r2, previousSessionId: t2 }, o2) {
  const n2 = o2.stickySession && function(e9) {
    if (!rk()) return null;
    try {
      const a3 = fx.sessionStorage.getItem(vx);
      if (!a3) return null;
      const r3 = JSON.parse(a3);
      return GI("[Replay] Loading existing session", e9), nk(r3);
    } catch (e10) {
      return null;
    }
  }(e8);
  return n2 ? uk(n2, { sessionIdleExpire: a2, maxReplayDuration: r2 }) ? (GI("[Replay] Session in sessionStorage is expired, creating new one..."), ik(o2, { previousSessionId: n2.id })) : n2 : (GI("[Replay] Creating new session", e8), ik(o2, { previousSessionId: t2 }));
}
function pk(e8, a2, r2) {
  return !!hk(e8, a2) && (mk(e8, a2, r2), true);
}
async function mk(e8, a2, r2) {
  if (!e8.eventBuffer) return null;
  try {
    r2 && "buffer" === e8.recordingMode && e8.eventBuffer.clear(), r2 && (e8.eventBuffer.hasCheckout = true);
    const t2 = function(e9, a3) {
      try {
        if ("function" == typeof a3 && function(e10) {
          return e10.type === C_.Custom;
        }(e9)) return a3(e9);
      } catch (e10) {
        return KI && bf.error("[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...", e10), null;
      }
      return e9;
    }(a2, e8.getOptions().beforeAddRecordingEvent);
    if (!t2) return;
    return await e8.eventBuffer.addEvent(t2);
  } catch (a3) {
    const r3 = a3 && a3 instanceof JI ? "addEventSizeExceeded" : "addEvent";
    KI && bf.error(a3), await e8.stop({ reason: r3 });
    const t2 = Ng();
    t2 && t2.recordDroppedEvent("internal_sdk_error", "replay");
  }
}
function hk(e8, a2) {
  if (!e8.eventBuffer || e8.isPaused() || !e8.isEnabled()) return false;
  const r2 = II(a2.timestamp);
  return !(r2 + e8.timeouts.sessionIdlePause < Date.now()) && (!(r2 > e8.getContext().initialTimestamp + e8.getOptions().maxReplayDuration) || (VI(`[Replay] Skipping event with timestamp ${r2} because it is after maxReplayDuration`, e8.getOptions()._experiments.traceInternals), false));
}
function fk(e8) {
  return !e8.type;
}
function vk(e8) {
  return "transaction" === e8.type;
}
function gk(e8) {
  return "feedback" === e8.type;
}
function bk(e8) {
  const a2 = function() {
    const e9 = Ng();
    if (!e9) return false;
    const a3 = e9.getTransport();
    if (!a3) return false;
    return a3.send.__sentry__baseTransport__ || false;
  }();
  return (r2, t2) => {
    if (!e8.isEnabled() || !fk(r2) && !vk(r2)) return;
    const o2 = t2 && t2.statusCode;
    a2 && (!o2 || o2 < 200 || o2 >= 300) || (vk(r2) ? function(e9, a3) {
      const r3 = e9.getContext();
      a3.contexts && a3.contexts.trace && a3.contexts.trace.trace_id && r3.traceIds.size < 100 && r3.traceIds.add(a3.contexts.trace.trace_id);
    }(e8, r2) : function(e9, a3) {
      const r3 = e9.getContext();
      a3.event_id && r3.errorIds.size < 100 && r3.errorIds.add(a3.event_id);
      if ("buffer" !== e9.recordingMode || !a3.tags || !a3.tags.replayId) return;
      const { beforeErrorSampling: t3 } = e9.getOptions();
      if ("function" == typeof t3 && !t3(a3)) return;
      setTimeout(() => {
        e9.sendBufferedReplayOrFlush();
      });
    }(e8, r2));
  };
}
function wk(e8) {
  return (a2) => {
    e8.isEnabled() && fk(a2) && function(e9, a3) {
      const r2 = a3.exception && a3.exception.values && a3.exception.values[0].value;
      if ("string" != typeof r2) return;
      if (r2.match(/reactjs\.org\/docs\/error-decoder\.html\?invariant=(418|419|422|423|425)/) || r2.match(/(does not match server-rendered HTML|Hydration failed because)/i)) {
        SI(e9, MI({ category: "replay.hydrate-error" }));
      }
    }(e8, a2);
  };
}
function yk(e8, a2 = false) {
  const r2 = a2 ? bk(e8) : void 0;
  return Object.assign((a3, t2) => {
    if (!e8.isEnabled()) return a3;
    if (function(e9) {
      return "replay_event" === e9.type;
    }(a3)) return delete a3.breadcrumbs, a3;
    if (!fk(a3) && !vk(a3) && !gk(a3)) return a3;
    if (!e8.checkAndHandleExpiredSession()) return a3;
    if (gk(a3)) return e8.flush(), a3.contexts.feedback.replay_id = e8.getSessionId(), function(e9, a4) {
      e9.triggerUserActivity(), e9.addUpdate(() => !a4.timestamp || (e9.throttledAddEvent({ type: C_.Custom, timestamp: 1e3 * a4.timestamp, data: { tag: "breadcrumb", payload: { timestamp: a4.timestamp, type: "default", category: "sentry.feedback", data: { feedbackId: a4.event_id } } } }), false));
    }(e8, a3), a3;
    if (function(e9, a4) {
      return !(e9.type || !e9.exception || !e9.exception.values || !e9.exception.values.length || !a4.originalException || !a4.originalException.__rrweb__);
    }(a3, t2) && !e8.getOptions()._experiments.captureExceptions) return KI && bf.log("[Replay] Ignoring error from rrweb internals", a3), null;
    const o2 = function(e9, a4) {
      return "buffer" === e9.recordingMode && a4.message !== gx && !(!a4.exception || a4.type) && ok(e9.getOptions().errorSampleRate);
    }(e8, a3);
    return (o2 || "session" === e8.recordingMode) && (a3.tags = { ...a3.tags, replayId: e8.getSessionId() }), r2 && r2(a3, { statusCode: 200 }), a3;
  }, { id: "Replay" });
}
function xk(e8, a2) {
  return a2.map(({ type: a3, start: r2, end: t2, name: o2, data: n2 }) => {
    const s2 = e8.throttledAddEvent({ type: C_.Custom, timestamp: r2, data: { tag: "performanceSpan", payload: { op: a3, description: o2, startTimestamp: r2, endTimestamp: t2, data: n2 } } });
    return "string" == typeof s2 ? Promise.resolve(null) : s2;
  });
}
function _k(e8) {
  return (a2) => {
    if (!e8.isEnabled()) return;
    const r2 = function(e9) {
      const { from: a3, to: r3 } = e9, t2 = Date.now() / 1e3;
      return { type: "navigation.push", start: t2, end: t2, name: r3, data: { previous: a3 } };
    }(a2);
    null !== r2 && (e8.getContext().urls.push(r2.name), e8.triggerUserActivity(), e8.addUpdate(() => (xk(e8, [r2]), false)));
  };
}
function Ik(e8, a2) {
  e8.isEnabled() && null !== a2 && (function(e9, a3) {
    return (!KI || !e9.getOptions()._experiments.traceInternals) && Kb(a3, Ng());
  }(e8, a2.name) || e8.addUpdate(() => (xk(e8, [a2]), true)));
}
function kk(e8) {
  return (a2) => {
    if (!e8.isEnabled()) return;
    const r2 = function(e9) {
      const { startTimestamp: a3, endTimestamp: r3, xhr: t2 } = e9, o2 = t2[kv];
      if (!a3 || !r3 || !o2) return null;
      const { method: n2, url: s2, status_code: i2 } = o2;
      return void 0 === s2 ? null : { type: "resource.xhr", name: s2, start: a3 / 1e3, end: r3 / 1e3, data: { method: n2, statusCode: i2 } };
    }(a2);
    Ik(e8, r2);
  };
}
function Sk(e8, a2) {
  if (e8) try {
    if ("string" == typeof e8) return a2.encode(e8).length;
    if (e8 instanceof URLSearchParams) return a2.encode(e8.toString()).length;
    if (e8 instanceof FormData) {
      const r2 = Nk(e8);
      return a2.encode(r2).length;
    }
    if (e8 instanceof Blob) return e8.size;
    if (e8 instanceof ArrayBuffer) return e8.byteLength;
  } catch (e9) {
  }
}
function Tk(e8) {
  if (!e8) return;
  const a2 = parseInt(e8, 10);
  return isNaN(a2) ? void 0 : a2;
}
function Ek(e8) {
  try {
    if ("string" == typeof e8) return [e8];
    if (e8 instanceof URLSearchParams) return [e8.toString()];
    if (e8 instanceof FormData) return [Nk(e8)];
    if (!e8) return [void 0];
  } catch (a2) {
    return KI && bf.warn("[Replay] Failed to serialize body", e8), [void 0, "BODY_PARSE_ERROR"];
  }
  return KI && bf.info("[Replay] Skipping network body because of body type", e8), [void 0, "UNPARSEABLE_BODY_TYPE"];
}
function jk(e8, a2) {
  if (!e8) return { headers: {}, size: void 0, _meta: { warnings: [a2] } };
  const r2 = { ...e8._meta }, t2 = r2.warnings || [];
  return r2.warnings = [...t2, a2], e8._meta = r2, e8;
}
function Ok(e8, a2) {
  if (!a2) return null;
  const { startTimestamp: r2, endTimestamp: t2, url: o2, method: n2, statusCode: s2, request: i2, response: d2 } = a2;
  return { type: e8, start: r2 / 1e3, end: t2 / 1e3, name: o2, data: Cf({ method: n2, statusCode: s2, request: i2, response: d2 }) };
}
function Ak(e8) {
  return { headers: {}, size: e8, _meta: { warnings: ["URL_SKIPPED"] } };
}
function Ck(e8, a2, r2) {
  if (!a2 && 0 === Object.keys(e8).length) return;
  if (!a2) return { headers: e8 };
  if (!r2) return { headers: e8, size: a2 };
  const t2 = { headers: e8, size: a2 }, { body: o2, warnings: n2 } = function(e9) {
    if (!e9 || "string" != typeof e9) return { body: e9 };
    const a3 = e9.length > bx, r3 = function(e10) {
      const a4 = e10[0], r4 = e10[e10.length - 1];
      return "[" === a4 && "]" === r4 || "{" === a4 && "}" === r4;
    }(e9);
    if (a3) {
      const a4 = e9.slice(0, bx);
      return r3 ? { body: a4, warnings: ["MAYBE_JSON_TRUNCATED"] } : { body: `${a4}…`, warnings: ["TEXT_TRUNCATED"] };
    }
    if (r3) try {
      return { body: JSON.parse(e9) };
    } catch (e10) {
    }
    return { body: e9 };
  }(r2);
  return t2.body = o2, n2 && n2.length > 0 && (t2._meta = { warnings: n2 }), t2;
}
function Rk(e8, a2) {
  return Object.keys(e8).reduce((r2, t2) => {
    const o2 = t2.toLowerCase();
    return a2.includes(o2) && e8[t2] && (r2[o2] = e8[t2]), r2;
  }, {});
}
function Nk(e8) {
  return new URLSearchParams(e8).toString();
}
function Pk(e8, a2) {
  const r2 = function(e9, a3 = fx.document.baseURI) {
    if (e9.startsWith("http://") || e9.startsWith("https://") || e9.startsWith(fx.location.origin)) return e9;
    const r3 = new URL(e9, a3);
    if (r3.origin !== new URL(a3).origin) return e9;
    const t2 = r3.href;
    if (!e9.endsWith("/") && t2.endsWith("/")) return t2.slice(0, -1);
    return t2;
  }(e8);
  return ef(r2, a2);
}
async function Mk(e8, a2, r2) {
  try {
    const t2 = await async function(e9, a3, r3) {
      const t3 = Date.now(), { startTimestamp: o3 = t3, endTimestamp: n2 = t3 } = a3, { url: s2, method: i2, status_code: d2 = 0, request_body_size: c2, response_body_size: u2 } = e9.data, l2 = Pk(s2, r3.networkDetailAllowUrls) && !Pk(s2, r3.networkDetailDenyUrls), p2 = l2 ? function({ networkCaptureBodies: e10, networkRequestHeaders: a4 }, r4, t4) {
        const o4 = r4 ? function(e11, a5) {
          if (1 === e11.length && "string" != typeof e11[0]) return zk(e11[0], a5);
          if (2 === e11.length) return zk(e11[1], a5);
          return {};
        }(r4, a4) : {};
        if (!e10) return Ck(o4, t4, void 0);
        const n3 = Lk(r4), [s3, i3] = Ek(n3), d3 = Ck(o4, t4, s3);
        if (i3) return jk(d3, i3);
        return d3;
      }(r3, a3.input, c2) : Ak(c2), m2 = await async function(e10, { networkCaptureBodies: a4, textEncoder: r4, networkResponseHeaders: t4 }, o4, n3) {
        if (!e10 && void 0 !== n3) return Ak(n3);
        const s3 = o4 ? Dk(o4.headers, t4) : {};
        if (!o4 || !a4 && void 0 !== n3) return Ck(s3, n3, void 0);
        const [i3, d3] = await async function(e11) {
          const a5 = function(e12) {
            try {
              return e12.clone();
            } catch (e13) {
              KI && bf.warn("[Replay] Failed to clone response body", e13);
            }
          }(e11);
          if (!a5) return [void 0, "BODY_PARSE_ERROR"];
          try {
            const e12 = await function(e13) {
              return new Promise((a6, r5) => {
                const t5 = setTimeout(() => r5(new Error("Timeout while trying to read response body")), 500);
                (async function(e14) {
                  return await e14.text();
                })(e13).then((e14) => a6(e14), (e14) => r5(e14)).finally(() => clearTimeout(t5));
              });
            }(a5);
            return [e12];
          } catch (e12) {
            return KI && bf.warn("[Replay] Failed to get text body from response", e12), [void 0, "BODY_PARSE_ERROR"];
          }
        }(o4), c3 = function(e11, { networkCaptureBodies: a5, textEncoder: r5, responseBodySize: t5, captureDetails: o5, headers: n4 }) {
          try {
            const s4 = e11 && e11.length && void 0 === t5 ? Sk(e11, r5) : t5;
            return o5 ? Ck(n4, s4, a5 ? e11 : void 0) : Ak(s4);
          } catch (e12) {
            return KI && bf.warn("[Replay] Failed to serialize response body", e12), Ck(n4, t5, void 0);
          }
        }(i3, { networkCaptureBodies: a4, textEncoder: r4, responseBodySize: n3, captureDetails: e10, headers: s3 });
        if (d3) return jk(c3, d3);
        return c3;
      }(l2, r3, a3.response, u2);
      return { startTimestamp: o3, endTimestamp: n2, url: s2, method: i2, statusCode: d2, request: p2, response: m2 };
    }(e8, a2, r2), o2 = Ok("resource.fetch", t2);
    Ik(r2.replay, o2);
  } catch (e9) {
    KI && bf.error("[Replay] Failed to capture fetch breadcrumb", e9);
  }
}
function Lk(e8 = []) {
  if (2 === e8.length && "object" == typeof e8[1]) return e8[1].body;
}
function Dk(e8, a2) {
  const r2 = {};
  return a2.forEach((a3) => {
    e8.get(a3) && (r2[a3] = e8.get(a3));
  }), r2;
}
function zk(e8, a2) {
  if (!e8) return {};
  const r2 = e8.headers;
  return r2 ? r2 instanceof Headers ? Dk(r2, a2) : Array.isArray(r2) ? {} : Rk(r2, a2) : {};
}
async function Fk(e8, a2, r2) {
  try {
    const t2 = function(e9, a3, r3) {
      const t3 = Date.now(), { startTimestamp: o3 = t3, endTimestamp: n2 = t3, input: s2, xhr: i2 } = a3, { url: d2, method: c2, status_code: u2 = 0, request_body_size: l2, response_body_size: p2 } = e9.data;
      if (!d2) return null;
      if (!i2 || !Pk(d2, r3.networkDetailAllowUrls) || Pk(d2, r3.networkDetailDenyUrls)) {
        return { startTimestamp: o3, endTimestamp: n2, url: d2, method: c2, statusCode: u2, request: Ak(l2), response: Ak(p2) };
      }
      const m2 = i2[kv], h2 = m2 ? Rk(m2.request_headers, r3.networkRequestHeaders) : {}, f2 = Rk(function(e10) {
        const a4 = e10.getAllResponseHeaders();
        if (!a4) return {};
        return a4.split("\r\n").reduce((e11, a5) => {
          const [r4, t4] = a5.split(": ");
          return e11[r4.toLowerCase()] = t4, e11;
        }, {});
      }(i2), r3.networkResponseHeaders), [v2, g2] = r3.networkCaptureBodies ? Ek(s2) : [void 0], [b2, w2] = r3.networkCaptureBodies ? function(e10) {
        const a4 = [];
        try {
          return [e10.responseText];
        } catch (e11) {
          a4.push(e11);
        }
        try {
          return function(e11, a5) {
            try {
              if ("string" == typeof e11) return [e11];
              if (e11 instanceof Document) return [e11.body.outerHTML];
              if ("json" === a5 && e11 && "object" == typeof e11) return [JSON.stringify(e11)];
              if (!e11) return [void 0];
            } catch (a6) {
              return KI && bf.warn("[Replay] Failed to serialize body", e11), [void 0, "BODY_PARSE_ERROR"];
            }
            return KI && bf.info("[Replay] Skipping network body because of body type", e11), [void 0, "UNPARSEABLE_BODY_TYPE"];
          }(e10.response, e10.responseType);
        } catch (e11) {
          a4.push(e11);
        }
        return KI && bf.warn("[Replay] Failed to get xhr response body", ...a4), [void 0];
      }(i2) : [void 0], y2 = Ck(h2, l2, v2), x2 = Ck(f2, p2, b2);
      return { startTimestamp: o3, endTimestamp: n2, url: d2, method: c2, statusCode: u2, request: g2 ? jk(y2, g2) : y2, response: w2 ? jk(x2, w2) : x2 };
    }(e8, a2, r2), o2 = Ok("resource.xhr", t2);
    Ik(r2.replay, o2);
  } catch (e9) {
    KI && bf.error("[Replay] Failed to capture xhr breadcrumb", e9);
  }
}
function Bk(e8, a2, r2) {
  const { xhr: t2, input: o2 } = a2;
  if (!t2) return;
  const n2 = Sk(o2, r2.textEncoder), s2 = t2.getResponseHeader("content-length") ? Tk(t2.getResponseHeader("content-length")) : function(e9, a3, r3) {
    try {
      return Sk("json" === a3 && e9 && "object" == typeof e9 ? JSON.stringify(e9) : e9, r3);
    } catch (e10) {
      return;
    }
  }(t2.response, t2.responseType, r2.textEncoder);
  void 0 !== n2 && (e8.data.request_body_size = n2), void 0 !== s2 && (e8.data.response_body_size = s2);
}
function qk(e8) {
  const a2 = Ng();
  try {
    const r2 = new TextEncoder(), { networkDetailAllowUrls: t2, networkDetailDenyUrls: o2, networkCaptureBodies: n2, networkRequestHeaders: s2, networkResponseHeaders: i2 } = e8.getOptions(), d2 = { replay: e8, textEncoder: r2, networkDetailAllowUrls: t2, networkDetailDenyUrls: o2, networkCaptureBodies: n2, networkRequestHeaders: s2, networkResponseHeaders: i2 };
    a2 && a2.on ? a2.on("beforeAddBreadcrumb", (e9, a3) => function(e10, a4, r3) {
      if (!a4.data) return;
      try {
        (function(e11) {
          return "xhr" === e11.category;
        })(a4) && function(e11) {
          return e11 && e11.xhr;
        }(r3) && (Bk(a4, r3, e10), Fk(a4, r3, e10)), function(e11) {
          return "fetch" === e11.category;
        }(a4) && function(e11) {
          return e11 && e11.response;
        }(r3) && (!function(e11, a5, r4) {
          const { input: t3, response: o3 } = a5, n3 = Sk(t3 ? Lk(t3) : void 0, r4.textEncoder), s3 = o3 ? Tk(o3.headers.get("content-length")) : void 0;
          void 0 !== n3 && (e11.data.request_body_size = n3), void 0 !== s3 && (e11.data.response_body_size = s3);
        }(a4, r3, e10), Mk(a4, r3, e10));
      } catch (e11) {
        KI && bf.warn("Error when enriching network breadcrumb");
      }
    }(d2, e9, a3)) : (dv(/* @__PURE__ */ function(e9) {
      return (a3) => {
        if (!e9.isEnabled()) return;
        const r3 = function(e10) {
          const { startTimestamp: a4, endTimestamp: r4, fetchData: t3, response: o3 } = e10;
          if (!r4) return null;
          const { method: n3, url: s3 } = t3;
          return { type: "resource.fetch", start: a4 / 1e3, end: r4 / 1e3, name: s3, data: { method: n3, statusCode: o3 ? o3.status : void 0 } };
        }(a3);
        Ik(e9, r3);
      };
    }(e8)), Sv(kk(e8)));
  } catch (e9) {
  }
}
var $k = null;
var Uk = (e8) => (a2) => {
  if (!e8.isEnabled()) return;
  const r2 = function(e9) {
    const a3 = e9.getLastBreadcrumb && e9.getLastBreadcrumb();
    if ($k === a3 || !a3) return null;
    if ($k = a3, !function(e10) {
      return !!e10.category;
    }(a3) || ["fetch", "xhr", "sentry.event", "sentry.transaction"].includes(a3.category) || a3.category.startsWith("ui.")) return null;
    if ("console" === a3.category) return function(e10) {
      const a4 = e10.data && e10.data.arguments;
      if (!Array.isArray(a4) || 0 === a4.length) return MI(e10);
      let r3 = false;
      const t2 = a4.map((e11) => {
        if (!e11) return e11;
        if ("string" == typeof e11) return e11.length > wx ? (r3 = true, `${e11.slice(0, wx)}…`) : e11;
        if ("object" == typeof e11) try {
          const a5 = Ov(e11, 7);
          return JSON.stringify(a5).length > wx ? (r3 = true, `${JSON.stringify(a5, null, 2).slice(0, wx)}…`) : a5;
        } catch (e12) {
        }
        return e11;
      });
      return MI({ ...e10, data: { ...e10.data, arguments: t2, ...r3 ? { _meta: { warnings: ["CONSOLE_ARG_TRUNCATED"] } } : {} } });
    }(a3);
    return MI(a3);
  }(a2);
  r2 && SI(e8, r2);
};
function Hk(e8) {
  const a2 = Pg(), r2 = Ng();
  a2.addScopeListener(Uk(e8)), rv(FI(e8)), xv(_k(e8)), qk(e8);
  const t2 = yk(e8, !Wk(r2));
  r2 && r2.addEventProcessor ? r2.addEventProcessor(t2) : function(e9) {
    const a3 = Ng();
    a3 && a3.addEventProcessor && a3.addEventProcessor(e9);
  }(t2), Wk(r2) && (r2.on("beforeSendEvent", wk(e8)), r2.on("afterSendEvent", bk(e8)), r2.on("createDsc", (a3) => {
    const r3 = e8.getSessionId();
    if (r3 && e8.isEnabled() && "session" === e8.recordingMode) {
      e8.checkAndHandleExpiredSession() && (a3.replay_id = r3);
    }
  }), r2.on("startTransaction", (a3) => {
    e8.lastTransaction = a3;
  }), r2.on("finishTransaction", (a3) => {
    e8.lastTransaction = a3;
  }), r2.on("beforeSendFeedback", (a3, r3) => {
    const t3 = e8.getSessionId();
    r3 && r3.includeReplay && e8.isEnabled() && t3 && a3.contexts && a3.contexts.feedback && (a3.contexts.feedback.replay_id = t3);
  }));
}
function Wk(e8) {
  return !(!e8 || !e8.on);
}
function Kk(e8) {
  const { jsHeapSizeLimit: a2, totalJSHeapSize: r2, usedJSHeapSize: t2 } = e8, o2 = Date.now() / 1e3;
  return { type: "memory", name: "memory", start: o2, end: o2, data: { memory: { jsHeapSizeLimit: a2, totalJSHeapSize: r2, usedJSHeapSize: t2 } } };
}
function Vk(e8) {
  let a2 = false;
  return (r2, t2) => {
    if (!e8.checkAndHandleExpiredSession()) return void (KI && bf.warn("[Replay] Received replay event after session expired."));
    const o2 = t2 || !a2;
    a2 = true, e8.clickDetector && PI(e8.clickDetector, r2), e8.addUpdate(() => {
      if ("buffer" === e8.recordingMode && o2 && e8.setInitialState(), !pk(e8, r2, o2)) return true;
      if (!o2) return false;
      if (function(e9, a3) {
        if (!a3 || !e9.session || 0 !== e9.session.segmentId) return;
        pk(e9, function(e10) {
          const a4 = e10.getOptions();
          return { type: C_.Custom, timestamp: Date.now(), data: { tag: "options", payload: { shouldRecordCanvas: e10.isRecordingCanvas(), sessionSampleRate: a4.sessionSampleRate, errorSampleRate: a4.errorSampleRate, useCompressionOption: a4.useCompression, blockAllMedia: a4.blockAllMedia, maskAllText: a4.maskAllText, maskAllInputs: a4.maskAllInputs, useCompression: !!e10.eventBuffer && "worker" === e10.eventBuffer.type, networkDetailHasUrls: a4.networkDetailAllowUrls.length > 0, networkCaptureBodies: a4.networkCaptureBodies, networkRequestHasHeaders: a4.networkRequestHeaders.length > 0, networkResponseHasHeaders: a4.networkResponseHeaders.length > 0 } } };
        }(e9), false);
      }(e8, o2), e8.session && e8.session.previousSessionId) return true;
      if ("buffer" === e8.recordingMode && e8.session && e8.eventBuffer) {
        const a3 = e8.eventBuffer.getEarliestTimestamp();
        a3 && (VI(`[Replay] Updating session start time to earliest event in buffer to ${new Date(a3)}`, e8.getOptions()._experiments.traceInternals), e8.session.started = a3, e8.getOptions().stickySession && sk(e8.session));
      }
      return "session" === e8.recordingMode && e8.flush(), true;
    });
  };
}
async function Gk({ recordingData: e8, replayId: a2, segmentId: r2, eventContext: t2, timestamp: o2, session: n2 }) {
  const s2 = function({ recordingData: e9, headers: a3 }) {
    let r3;
    const t3 = `${JSON.stringify(a3)}
`;
    if ("string" == typeof e9) r3 = `${t3}${e9}`;
    else {
      const a4 = new TextEncoder().encode(t3);
      r3 = new Uint8Array(a4.length + e9.length), r3.set(a4), r3.set(e9, a4.length);
    }
    return r3;
  }({ recordingData: e8, headers: { segment_id: r2 } }), { urls: i2, errorIds: d2, traceIds: c2, initialTimestamp: u2 } = t2, l2 = Ng(), p2 = Pg(), m2 = l2 && l2.getTransport(), h2 = l2 && l2.getDsn();
  if (!(l2 && m2 && h2 && n2.sampled)) return;
  const f2 = { type: "replay_event", replay_start_timestamp: u2 / 1e3, timestamp: o2 / 1e3, error_ids: d2, trace_ids: c2, urls: i2, replay_id: a2, segment_id: r2, replay_type: n2.sampled }, v2 = await async function({ client: e9, scope: a3, replayId: r3, event: t3 }) {
    const o3 = { event_id: r3, integrations: "object" != typeof e9._integrations || null === e9._integrations || Array.isArray(e9._integrations) ? void 0 : Object.keys(e9._integrations) };
    e9.emit && e9.emit("preprocessEvent", t3, o3);
    const n3 = await kg(e9.getOptions(), t3, o3, a3, e9, ab());
    if (!n3) return null;
    n3.platform = n3.platform || "javascript";
    const s3 = e9.getSdkMetadata && e9.getSdkMetadata(), { name: i3, version: d3 } = s3 && s3.sdk || {};
    return n3.sdk = { ...n3.sdk, name: i3 || "sentry.javascript.unknown", version: d3 || "0.0.0" }, n3;
  }({ scope: p2, client: l2, replayId: a2, event: f2 });
  if (!v2) return l2.recordDroppedEvent("event_processor", "replay", f2), void VI("An event processor returned `null`, will not send event.");
  delete v2.sdkProcessingMetadata;
  const g2 = function(e9, a3, r3, t3) {
    return Xv(sg(e9, ng(e9), t3, r3), [[{ type: "replay_event" }, e9], [{ type: "replay_recording", length: "string" == typeof a3 ? new TextEncoder().encode(a3).length : a3.length }, a3]]);
  }(v2, s2, h2, l2.getOptions().tunnel);
  let b2;
  try {
    b2 = await m2.send(g2);
  } catch (e9) {
    const a3 = new Error(gx);
    try {
      a3.cause = e9;
    } catch (e10) {
    }
    throw a3;
  }
  if (!b2) return b2;
  if ("number" == typeof b2.statusCode && (b2.statusCode < 200 || b2.statusCode >= 300)) throw new Yk(b2.statusCode);
  const w2 = dg({}, b2);
  if (ig(w2, "replay")) throw new Jk(w2);
  return b2;
}
var Yk = class extends Error {
  constructor(e8) {
    super(`Transport returned status code ${e8}`);
  }
};
var Jk = class extends Error {
  constructor(e8) {
    super("Rate limit hit"), this.rateLimits = e8;
  }
};
async function Xk(e8, a2 = { count: 0, interval: 5e3 }) {
  const { recordingData: r2, options: t2 } = e8;
  var o2, n2;
  if (r2.length) try {
    return await Gk(e8), true;
  } catch (r3) {
    if (r3 instanceof Yk || r3 instanceof Jk) throw r3;
    if (o2 = "Replays", n2 = { _retryCount: a2.count }, eb().setContext(o2, n2), KI && t2._experiments && t2._experiments.captureExceptions && jg(r3), a2.count >= 3) {
      const e9 = new Error(`${gx} - max retries exceeded`);
      try {
        e9.cause = r3;
      } catch (e10) {
      }
      throw e9;
    }
    return a2.interval *= ++a2.count, new Promise((r4, t3) => {
      setTimeout(async () => {
        try {
          await Xk(e8, a2), r4(true);
        } catch (e9) {
          t3(e9);
        }
      }, a2.interval);
    });
  }
}
var Qk = "__THROTTLED";
function Zk(e8, a2, r2) {
  const t2 = /* @__PURE__ */ new Map();
  let o2 = false;
  return (...n2) => {
    const s2 = Math.floor(Date.now() / 1e3);
    if (((e9) => {
      const a3 = e9 - r2;
      t2.forEach((e10, r3) => {
        r3 < a3 && t2.delete(r3);
      });
    })(s2), [...t2.values()].reduce((e9, a3) => e9 + a3, 0) >= a2) {
      const e9 = o2;
      return o2 = true, e9 ? "__SKIPPED" : Qk;
    }
    o2 = false;
    const i2 = t2.get(s2) || 0;
    return t2.set(s2, i2 + 1), e8(...n2);
  };
}
var eS = class _eS {
  constructor({ options: e8, recordingOptions: a2 }) {
    _eS.prototype.__init.call(this), _eS.prototype.__init2.call(this), _eS.prototype.__init3.call(this), _eS.prototype.__init4.call(this), _eS.prototype.__init5.call(this), _eS.prototype.__init6.call(this), this.eventBuffer = null, this.performanceEntries = [], this.replayPerformanceEntries = [], this.recordingMode = "session", this.timeouts = { sessionIdlePause: 3e5, sessionIdleExpire: 9e5 }, this._lastActivity = Date.now(), this._isEnabled = false, this._isPaused = false, this._hasInitializedCoreListeners = false, this._context = { errorIds: /* @__PURE__ */ new Set(), traceIds: /* @__PURE__ */ new Set(), urls: [], initialTimestamp: Date.now(), initialUrl: "" }, this._recordingOptions = a2, this._options = e8, this._debouncedFlush = function(e9, a3, r3) {
      let t3, o3, n2;
      const s2 = r3 && r3.maxWait ? Math.max(r3.maxWait, a3) : 0;
      function i2() {
        return d2(), t3 = e9(), t3;
      }
      function d2() {
        void 0 !== o3 && clearTimeout(o3), void 0 !== n2 && clearTimeout(n2), o3 = n2 = void 0;
      }
      function c2() {
        return o3 && clearTimeout(o3), o3 = setTimeout(i2, a3), s2 && void 0 === n2 && (n2 = setTimeout(i2, s2)), t3;
      }
      return c2.cancel = d2, c2.flush = function() {
        return void 0 !== o3 || void 0 !== n2 ? i2() : t3;
      }, c2;
    }(() => this._flush(), this._options.flushMinDelay, { maxWait: this._options.flushMaxDelay }), this._throttledAddEvent = Zk((e9, a3) => function(e10, a4, r3) {
      return hk(e10, a4) ? mk(e10, a4, r3) : Promise.resolve(null);
    }(this, e9, a3), 300, 5);
    const { slowClickTimeout: r2, slowClickIgnoreSelectors: t2 } = this.getOptions(), o2 = r2 ? { threshold: Math.min(3e3, r2), timeout: r2, scrollTimeout: 300, ignoreSelector: t2 ? t2.join(",") : "" } : void 0;
    o2 && (this.clickDetector = new CI(this, o2));
  }
  getContext() {
    return this._context;
  }
  isEnabled() {
    return this._isEnabled;
  }
  isPaused() {
    return this._isPaused;
  }
  isRecordingCanvas() {
    return Boolean(this._canvas);
  }
  getOptions() {
    return this._options;
  }
  initializeSampling(e8) {
    const { errorSampleRate: a2, sessionSampleRate: r2 } = this._options;
    a2 <= 0 && r2 <= 0 || (this._initializeSessionForSampling(e8), this.session ? false !== this.session.sampled && (this.recordingMode = "buffer" === this.session.sampled && 0 === this.session.segmentId ? "buffer" : "session", GI(`[Replay] Starting replay in ${this.recordingMode} mode`, this._options._experiments.traceInternals), this._initializeRecording()) : this._handleException(new Error("Unable to initialize and create session")));
  }
  start() {
    if (this._isEnabled && "session" === this.recordingMode) throw new Error("Replay recording is already in progress");
    if (this._isEnabled && "buffer" === this.recordingMode) throw new Error("Replay buffering is in progress, call `flush()` to save the replay");
    GI("[Replay] Starting replay in session mode", this._options._experiments.traceInternals), this._updateUserActivity();
    const e8 = lk({ maxReplayDuration: this._options.maxReplayDuration, sessionIdleExpire: this.timeouts.sessionIdleExpire, traceInternals: this._options._experiments.traceInternals }, { stickySession: this._options.stickySession, sessionSampleRate: 1, allowBuffering: false });
    this.session = e8, this._initializeRecording();
  }
  startBuffering() {
    if (this._isEnabled) throw new Error("Replay recording is already in progress");
    GI("[Replay] Starting replay in buffer mode", this._options._experiments.traceInternals);
    const e8 = lk({ sessionIdleExpire: this.timeouts.sessionIdleExpire, maxReplayDuration: this._options.maxReplayDuration, traceInternals: this._options._experiments.traceInternals }, { stickySession: this._options.stickySession, sessionSampleRate: 0, allowBuffering: true });
    this.session = e8, this.recordingMode = "buffer", this._initializeRecording();
  }
  startRecording() {
    try {
      const e8 = this._canvas;
      this._stopRecording = _I({ ...this._recordingOptions, ..."buffer" === this.recordingMode && { checkoutEveryNms: 6e4 }, emit: Vk(this), onMutation: this._onMutationHandler, ...e8 ? { recordCanvas: e8.recordCanvas, getCanvasManager: e8.getCanvasManager, sampling: e8.sampling, dataURLOptions: e8.dataURLOptions } : {} });
    } catch (e8) {
      this._handleException(e8);
    }
  }
  stopRecording() {
    try {
      return this._stopRecording && (this._stopRecording(), this._stopRecording = void 0), true;
    } catch (e8) {
      return this._handleException(e8), false;
    }
  }
  async stop({ forceFlush: e8 = false, reason: a2 } = {}) {
    if (this._isEnabled) {
      this._isEnabled = false;
      try {
        VI("[Replay] Stopping Replay" + (a2 ? ` triggered by ${a2}` : ""), this._options._experiments.traceInternals), this._removeListeners(), this.stopRecording(), this._debouncedFlush.cancel(), e8 && await this._flush({ force: true }), this.eventBuffer && this.eventBuffer.destroy(), this.eventBuffer = null, tk(this);
      } catch (e9) {
        this._handleException(e9);
      }
    }
  }
  pause() {
    this._isPaused || (this._isPaused = true, this.stopRecording(), VI("[Replay] Pausing replay", this._options._experiments.traceInternals));
  }
  resume() {
    this._isPaused && this._checkSession() && (this._isPaused = false, this.startRecording(), VI("[Replay] Resuming replay", this._options._experiments.traceInternals));
  }
  async sendBufferedReplayOrFlush({ continueRecording: e8 = true } = {}) {
    if ("session" === this.recordingMode) return this.flushImmediate();
    const a2 = Date.now();
    VI("[Replay] Converting buffer to session", this._options._experiments.traceInternals), await this.flushImmediate();
    const r2 = this.stopRecording();
    e8 && r2 && "session" !== this.recordingMode && (this.recordingMode = "session", this.session && (this._updateUserActivity(a2), this._updateSessionActivity(a2), this._maybeSaveSession()), this.startRecording());
  }
  addUpdate(e8) {
    const a2 = e8();
    "buffer" !== this.recordingMode && true !== a2 && this._debouncedFlush();
  }
  triggerUserActivity() {
    if (this._updateUserActivity(), this._stopRecording) this.checkAndHandleExpiredSession(), this._updateSessionActivity();
    else {
      if (!this._checkSession()) return;
      this.resume();
    }
  }
  updateUserActivity() {
    this._updateUserActivity(), this._updateSessionActivity();
  }
  conditionalFlush() {
    return "buffer" === this.recordingMode ? Promise.resolve() : this.flushImmediate();
  }
  flush() {
    return this._debouncedFlush();
  }
  flushImmediate() {
    return this._debouncedFlush(), this._debouncedFlush.flush();
  }
  cancelFlush() {
    this._debouncedFlush.cancel();
  }
  getSessionId() {
    return this.session && this.session.id;
  }
  checkAndHandleExpiredSession() {
    if (!(this._lastActivity && dk(this._lastActivity, this.timeouts.sessionIdlePause) && this.session && "session" === this.session.sampled)) return !!this._checkSession();
    this.pause();
  }
  setInitialState() {
    const e8 = `${fx.location.pathname}${fx.location.hash}${fx.location.search}`, a2 = `${fx.location.origin}${e8}`;
    this.performanceEntries = [], this.replayPerformanceEntries = [], this._clearContext(), this._context.initialUrl = a2, this._context.initialTimestamp = Date.now(), this._context.urls.push(a2);
  }
  throttledAddEvent(e8, a2) {
    const r2 = this._throttledAddEvent(e8, a2);
    if (r2 === Qk) {
      const e9 = MI({ category: "replay.throttled" });
      this.addUpdate(() => !pk(this, { type: 5, timestamp: e9.timestamp || 0, data: { tag: "breadcrumb", payload: e9, metric: true } }));
    }
    return r2;
  }
  getCurrentRoute() {
    const e8 = this.lastTransaction || Pg().getTransaction(), a2 = (e8 && _g(e8).data || {})[hb];
    if (e8 && a2 && ["route", "custom"].includes(a2)) return _g(e8).description;
  }
  _initializeRecording() {
    this.setInitialState(), this._updateSessionActivity(), this.eventBuffer = ak({ useCompression: this._options.useCompression, workerUrl: this._options.workerUrl }), this._removeListeners(), this._addListeners(), this._isEnabled = true, this._isPaused = false, this.startRecording();
  }
  _handleException(e8) {
    KI && bf.error("[Replay]", e8), KI && this._options._experiments && this._options._experiments.captureExceptions && jg(e8);
  }
  _initializeSessionForSampling(e8) {
    const a2 = this._options.errorSampleRate > 0, r2 = lk({ sessionIdleExpire: this.timeouts.sessionIdleExpire, maxReplayDuration: this._options.maxReplayDuration, traceInternals: this._options._experiments.traceInternals, previousSessionId: e8 }, { stickySession: this._options.stickySession, sessionSampleRate: this._options.sessionSampleRate, allowBuffering: a2 });
    this.session = r2;
  }
  _checkSession() {
    if (!this.session) return false;
    const e8 = this.session;
    return !uk(e8, { sessionIdleExpire: this.timeouts.sessionIdleExpire, maxReplayDuration: this._options.maxReplayDuration }) || (this._refreshSession(e8), false);
  }
  async _refreshSession(e8) {
    this._isEnabled && (await this.stop({ reason: "refresh session" }), this.initializeSampling(e8.id));
  }
  _addListeners() {
    try {
      fx.document.addEventListener("visibilitychange", this._handleVisibilityChange), fx.addEventListener("blur", this._handleWindowBlur), fx.addEventListener("focus", this._handleWindowFocus), fx.addEventListener("keydown", this._handleKeyboardEvent), this.clickDetector && this.clickDetector.addListeners(), this._hasInitializedCoreListeners || (Hk(this), this._hasInitializedCoreListeners = true);
    } catch (e8) {
      this._handleException(e8);
    }
    this._performanceCleanupCallback = WI(this);
  }
  _removeListeners() {
    try {
      fx.document.removeEventListener("visibilitychange", this._handleVisibilityChange), fx.removeEventListener("blur", this._handleWindowBlur), fx.removeEventListener("focus", this._handleWindowFocus), fx.removeEventListener("keydown", this._handleKeyboardEvent), this.clickDetector && this.clickDetector.removeListeners(), this._performanceCleanupCallback && this._performanceCleanupCallback();
    } catch (e8) {
      this._handleException(e8);
    }
  }
  __init() {
    this._handleVisibilityChange = () => {
      "visible" === fx.document.visibilityState ? this._doChangeToForegroundTasks() : this._doChangeToBackgroundTasks();
    };
  }
  __init2() {
    this._handleWindowBlur = () => {
      const e8 = MI({ category: "ui.blur" });
      this._doChangeToBackgroundTasks(e8);
    };
  }
  __init3() {
    this._handleWindowFocus = () => {
      const e8 = MI({ category: "ui.focus" });
      this._doChangeToForegroundTasks(e8);
    };
  }
  __init4() {
    this._handleKeyboardEvent = (e8) => {
      qI(this, e8);
    };
  }
  _doChangeToBackgroundTasks(e8) {
    if (!this.session) return;
    ck(this.session, { maxReplayDuration: this._options.maxReplayDuration, sessionIdleExpire: this.timeouts.sessionIdleExpire }) || (e8 && this._createCustomBreadcrumb(e8), this.conditionalFlush());
  }
  _doChangeToForegroundTasks(e8) {
    if (!this.session) return;
    this.checkAndHandleExpiredSession() ? e8 && this._createCustomBreadcrumb(e8) : VI("[Replay] Document has become active, but session has expired");
  }
  _updateUserActivity(e8 = Date.now()) {
    this._lastActivity = e8;
  }
  _updateSessionActivity(e8 = Date.now()) {
    this.session && (this.session.lastActivity = e8, this._maybeSaveSession());
  }
  _createCustomBreadcrumb(e8) {
    this.addUpdate(() => {
      this.throttledAddEvent({ type: C_.Custom, timestamp: e8.timestamp || 0, data: { tag: "breadcrumb", payload: e8 } });
    });
  }
  _addPerformanceEntries() {
    const e8 = (a2 = this.performanceEntries, a2.map(UI).filter(Boolean)).concat(this.replayPerformanceEntries);
    var a2;
    return this.performanceEntries = [], this.replayPerformanceEntries = [], Promise.all(xk(this, e8));
  }
  _clearContext() {
    this._context.errorIds.clear(), this._context.traceIds.clear(), this._context.urls = [];
  }
  _updateInitialTimestampFromEventBuffer() {
    const { session: e8, eventBuffer: a2 } = this;
    if (!e8 || !a2) return;
    if (e8.segmentId) return;
    const r2 = a2.getEarliestTimestamp();
    r2 && r2 < this._context.initialTimestamp && (this._context.initialTimestamp = r2);
  }
  _popEventContext() {
    const e8 = { initialTimestamp: this._context.initialTimestamp, initialUrl: this._context.initialUrl, errorIds: Array.from(this._context.errorIds), traceIds: Array.from(this._context.traceIds), urls: this._context.urls };
    return this._clearContext(), e8;
  }
  async _runFlush() {
    const e8 = this.getSessionId();
    if (this.session && this.eventBuffer && e8) {
      if (await this._addPerformanceEntries(), this.eventBuffer && this.eventBuffer.hasEvents && (await async function(e9) {
        try {
          return Promise.all(xk(e9, [Kk(fx.performance.memory)]));
        } catch (e10) {
          return [];
        }
      }(this), this.eventBuffer && e8 === this.getSessionId())) try {
        this._updateInitialTimestampFromEventBuffer();
        const a2 = Date.now();
        if (a2 - this._context.initialTimestamp > this._options.maxReplayDuration + 3e4) throw new Error("Session is too long, not sending replay");
        const r2 = this._popEventContext(), t2 = this.session.segmentId++;
        this._maybeSaveSession();
        const o2 = await this.eventBuffer.finish();
        await Xk({ replayId: e8, recordingData: o2, segmentId: t2, eventContext: r2, session: this.session, options: this.getOptions(), timestamp: a2 });
      } catch (e9) {
        this._handleException(e9), this.stop({ reason: "sendReplay" });
        const a2 = Ng();
        a2 && a2.recordDroppedEvent("send_error", "replay");
      }
    } else KI && bf.error("[Replay] No session or eventBuffer found to flush.");
  }
  __init5() {
    this._flush = async ({ force: e8 = false } = {}) => {
      if (!this._isEnabled && !e8) return;
      if (!this.checkAndHandleExpiredSession()) return void (KI && bf.error("[Replay] Attempting to finish replay event after session expired."));
      if (!this.session) return;
      const a2 = this.session.started, r2 = Date.now() - a2;
      this._debouncedFlush.cancel();
      const t2 = r2 < this._options.minReplayDuration, o2 = r2 > this._options.maxReplayDuration + 5e3;
      if (t2 || o2) return VI(`[Replay] Session duration (${Math.floor(r2 / 1e3)}s) is too ${t2 ? "short" : "long"}, not sending replay.`, this._options._experiments.traceInternals), void (t2 && this._debouncedFlush());
      const n2 = this.eventBuffer;
      if (n2 && 0 === this.session.segmentId && !n2.hasCheckout && VI("[Replay] Flushing initial segment without checkout.", this._options._experiments.traceInternals), !this._flushLock) return this._flushLock = this._runFlush(), await this._flushLock, void (this._flushLock = void 0);
      try {
        await this._flushLock;
      } catch (e9) {
        KI && bf.error(e9);
      } finally {
        this._debouncedFlush();
      }
    };
  }
  _maybeSaveSession() {
    this.session && this._options.stickySession && sk(this.session);
  }
  __init6() {
    this._onMutationHandler = (e8) => {
      const a2 = e8.length, r2 = this._options.mutationLimit, t2 = r2 && a2 > r2;
      if (a2 > this._options.mutationBreadcrumbLimit || t2) {
        const e9 = MI({ category: "replay.mutations", data: { count: a2, limit: t2 } });
        this._createCustomBreadcrumb(e9);
      }
      return !t2 || (this.stop({ reason: "mutationLimit", forceFlush: "session" === this.recordingMode }), false);
    };
  }
};
function aS(e8, a2, r2, t2) {
  const o2 = [...e8, ..."string" == typeof t2 ? t2.split(",") : [], ...a2];
  return void 0 !== r2 && ("string" == typeof r2 && o2.push(`.${r2}`), gf(() => {
    console.warn("[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.");
  })), o2.join(",");
}
var rS = 'img,image,svg,video,object,picture,embed,map,audio,link[rel="icon"],link[rel="apple-touch-icon"]';
var tS = ["content-length", "content-type", "accept"];
var oS = false;
var nS = (e8) => new sS(e8);
var sS = class _sS {
  static __initStatic() {
    this.id = "Replay";
  }
  constructor({ flushMinDelay: e8 = 5e3, flushMaxDelay: a2 = 5500, minReplayDuration: r2 = 4999, maxReplayDuration: t2 = 36e5, stickySession: o2 = true, useCompression: n2 = true, workerUrl: s2, _experiments: i2 = {}, sessionSampleRate: d2, errorSampleRate: c2, maskAllText: u2 = true, maskAllInputs: l2 = true, blockAllMedia: p2 = true, mutationBreadcrumbLimit: m2 = 750, mutationLimit: h2 = 1e4, slowClickTimeout: f2 = 7e3, slowClickIgnoreSelectors: v2 = [], networkDetailAllowUrls: g2 = [], networkDetailDenyUrls: b2 = [], networkCaptureBodies: w2 = true, networkRequestHeaders: y2 = [], networkResponseHeaders: x2 = [], mask: _2 = [], maskAttributes: I2 = ["title", "placeholder"], unmask: k2 = [], block: S2 = [], unblock: T2 = [], ignore: E2 = [], maskFn: j2, beforeAddRecordingEvent: O2, beforeErrorSampling: A2, blockClass: C2, blockSelector: R2, maskInputOptions: N2, maskTextClass: P2, maskTextSelector: M2, ignoreClass: L2 } = {}) {
    this.name = _sS.id;
    const D2 = function({ mask: e9, unmask: a3, block: r3, unblock: t3, ignore: o3, blockClass: n3, blockSelector: s3, maskTextClass: i3, maskTextSelector: d3, ignoreClass: c3 }) {
      const u3 = { maskTextSelector: aS(e9, [".sentry-mask", "[data-sentry-mask]"], i3, d3), unmaskTextSelector: aS(a3, [".sentry-unmask", "[data-sentry-unmask]"]), blockSelector: aS(r3, [".sentry-block", "[data-sentry-block]", 'base[href="/"]'], n3, s3), unblockSelector: aS(t3, [".sentry-unblock", "[data-sentry-unblock]"]), ignoreSelector: aS(o3, [".sentry-ignore", "[data-sentry-ignore]", 'input[type="file"]'], c3) };
      return n3 instanceof RegExp && (u3.blockClass = n3), i3 instanceof RegExp && (u3.maskTextClass = i3), u3;
    }({ mask: _2, unmask: k2, block: S2, unblock: T2, ignore: E2, blockClass: C2, blockSelector: R2, maskTextClass: P2, maskTextSelector: M2, ignoreClass: L2 });
    if (this._recordingOptions = { maskAllInputs: l2, maskAllText: u2, maskInputOptions: { ...N2 || {}, password: true }, maskTextFn: j2, maskInputFn: j2, maskAttributeFn: (e9, a3, r3) => function({ el: e10, key: a4, maskAttributes: r4, maskAllText: t3, privacyOptions: o3, value: n3 }) {
      return t3 ? o3.unmaskTextSelector && e10.matches(o3.unmaskTextSelector) ? n3 : r4.includes(a4) || "value" === a4 && "INPUT" === e10.tagName && ["submit", "button"].includes(e10.getAttribute("type") || "") ? n3.replace(/[\S]/g, "*") : n3 : n3;
    }({ maskAttributes: I2, maskAllText: u2, privacyOptions: D2, key: e9, value: a3, el: r3 }), ...D2, slimDOMOptions: "all", inlineStylesheet: true, inlineImages: false, collectFonts: true, errorHandler: (e9) => {
      try {
        e9.__rrweb__ = true;
      } catch (e10) {
      }
    } }, this._initialOptions = { flushMinDelay: e8, flushMaxDelay: a2, minReplayDuration: Math.min(r2, 15e3), maxReplayDuration: Math.min(t2, xx), stickySession: o2, sessionSampleRate: d2, errorSampleRate: c2, useCompression: n2, workerUrl: s2, blockAllMedia: p2, maskAllInputs: l2, maskAllText: u2, mutationBreadcrumbLimit: m2, mutationLimit: h2, slowClickTimeout: f2, slowClickIgnoreSelectors: v2, networkDetailAllowUrls: g2, networkDetailDenyUrls: b2, networkCaptureBodies: w2, networkRequestHeaders: iS(y2), networkResponseHeaders: iS(x2), beforeAddRecordingEvent: O2, beforeErrorSampling: A2, _experiments: i2 }, "number" == typeof d2 && (console.warn(`[Replay] You are passing \`sessionSampleRate\` to the Replay integration.
This option is deprecated and will be removed soon.
Instead, configure \`replaysSessionSampleRate\` directly in the SDK init options, e.g.:
Sentry.init({ replaysSessionSampleRate: ${d2} })`), this._initialOptions.sessionSampleRate = d2), "number" == typeof c2 && (console.warn(`[Replay] You are passing \`errorSampleRate\` to the Replay integration.
This option is deprecated and will be removed soon.
Instead, configure \`replaysOnErrorSampleRate\` directly in the SDK init options, e.g.:
Sentry.init({ replaysOnErrorSampleRate: ${c2} })`), this._initialOptions.errorSampleRate = c2), this._initialOptions.blockAllMedia && (this._recordingOptions.blockSelector = this._recordingOptions.blockSelector ? `${this._recordingOptions.blockSelector},${rS}` : rS), this._isInitialized && jv()) throw new Error("Multiple Sentry Session Replay instances are not supported");
    this._isInitialized = true;
  }
  get _isInitialized() {
    return oS;
  }
  set _isInitialized(e8) {
    oS = e8;
  }
  setupOnce() {
    jv() && (this._setup(), setTimeout(() => this._initialize()));
  }
  start() {
    this._replay && this._replay.start();
  }
  startBuffering() {
    this._replay && this._replay.startBuffering();
  }
  stop() {
    return this._replay ? this._replay.stop({ forceFlush: "session" === this._replay.recordingMode }) : Promise.resolve();
  }
  flush(e8) {
    return this._replay && this._replay.isEnabled() ? this._replay.sendBufferedReplayOrFlush(e8) : Promise.resolve();
  }
  getReplayId() {
    if (this._replay && this._replay.isEnabled()) return this._replay.getSessionId();
  }
  _initialize() {
    this._replay && (this._maybeLoadFromReplayCanvasIntegration(), this._replay.initializeSampling());
  }
  _setup() {
    const e8 = function(e9) {
      const a2 = Ng(), r2 = a2 && a2.getOptions(), t2 = { sessionSampleRate: 0, errorSampleRate: 0, ...Cf(e9) };
      if (!r2) return gf(() => {
        console.warn("SDK client is not available.");
      }), t2;
      null == e9.sessionSampleRate && null == e9.errorSampleRate && null == r2.replaysSessionSampleRate && null == r2.replaysOnErrorSampleRate && gf(() => {
        console.warn("Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.");
      });
      "number" == typeof r2.replaysSessionSampleRate && (t2.sessionSampleRate = r2.replaysSessionSampleRate);
      "number" == typeof r2.replaysOnErrorSampleRate && (t2.errorSampleRate = r2.replaysOnErrorSampleRate);
      return t2;
    }(this._initialOptions);
    this._replay = new eS({ options: e8, recordingOptions: this._recordingOptions });
  }
  _maybeLoadFromReplayCanvasIntegration() {
    try {
      const e8 = Ng().getIntegrationByName("ReplayCanvas");
      if (!e8) return;
      this._replay._canvas = e8.getOptions();
    } catch (e8) {
    }
  }
};
function iS(e8) {
  return [...tS, ...e8.map((e9) => e9.toLowerCase())];
}
sS.__initStatic();
var dS = "CaptureConsole";
var cS = (e8 = {}) => {
  const a2 = e8.levels || ff;
  return { name: dS, setupOnce() {
  }, setup(e9) {
    "console" in sf && Uf(({ args: r2, level: t2 }) => {
      Ng() === e9 && a2.includes(t2) && function(e10, a3) {
        const r3 = { level: Fv(a3), extra: { arguments: e10 } };
        Rg((t3) => {
          if (t3.addEventProcessor((e11) => (e11.logger = "console", Yf(e11, { handled: false, type: "console" }), e11)), "assert" === a3 && false === e10[0]) {
            const a4 = `Assertion failed: ${Qh(e10.slice(1), " ") || "console.assert"}`;
            return t3.setExtra("arguments", e10.slice(1)), void Og(a4, r3);
          }
          const o2 = e10.find((e11) => e11 instanceof Error);
          if ("error" === a3 && o2) return void jg(o2, r3);
          Og(Qh(e10, " "), r3);
        });
      }(r2, t2);
    });
  } };
};
Lb(dS, cS);
var uS = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
var lS = "ExtraErrorData";
var pS = (e8 = {}) => {
  const a2 = e8.depth || 3, r2 = e8.captureErrorCause || false;
  return { name: lS, setupOnce() {
  }, processEvent: (e9, t2) => function(e10, a3 = {}, r3, t3) {
    if (!a3.originalException || !Dh(a3.originalException)) return e10;
    const o2 = a3.originalException.name || a3.originalException.constructor.name, n2 = function(e11, a4) {
      try {
        const r4 = ["name", "message", "stack", "line", "column", "fileName", "lineNumber", "columnNumber", "toJSON"], t4 = {};
        for (const a5 of Object.keys(e11)) {
          if (-1 !== r4.indexOf(a5)) continue;
          const o3 = e11[a5];
          t4[a5] = Dh(o3) ? o3.toString() : o3;
        }
        if (a4 && void 0 !== e11.cause && (t4.cause = Dh(e11.cause) ? e11.cause.toString() : e11.cause), "function" == typeof e11.toJSON) {
          const a5 = e11.toJSON();
          for (const e12 of Object.keys(a5)) {
            const r5 = a5[e12];
            t4[e12] = Dh(r5) ? r5.toString() : r5;
          }
        }
        return t4;
      } catch (e12) {
        uS && bf.error("Unable to extract extra data from the Error object:", e12);
      }
      return null;
    }(a3.originalException, t3);
    if (n2) {
      const a4 = { ...e10.contexts }, t4 = Ov(n2, r3);
      return Hh(t4) && (Sf(t4, "__sentry_skip_normalization__", true), a4[o2] = t4), { ...e10, contexts: a4 };
    }
    return e10;
  }(e9, t2, a2, r2) };
};
Lb(lS, pS);
var mS = sf;
var hS = "ContextLines";
var fS = (e8 = {}) => {
  const a2 = null != e8.frameContextLines ? e8.frameContextLines : 7;
  return { name: hS, setupOnce() {
  }, processEvent: (e9) => function(e10, a3) {
    const r2 = mS.document, t2 = mS.location && (o2 = mS.location.href, o2.split(/[\?#]/, 1)[0]);
    var o2;
    if (!r2 || !t2) return e10;
    const n2 = e10.exception && e10.exception.values;
    if (!n2 || !n2.length) return e10;
    const s2 = r2.documentElement.innerHTML;
    if (!s2) return e10;
    const i2 = ["<!DOCTYPE html>", "<html>", ...s2.split("\n"), "</html>"];
    return n2.forEach((e11) => {
      const r3 = e11.stacktrace;
      r3 && r3.frames && (r3.frames = r3.frames.map((e12) => function(e13, a4, r4, t3) {
        if (e13.filename !== r4 || !e13.lineno || !a4.length) return e13;
        return function(e14, a5, r5 = 5) {
          if (void 0 === a5.lineno) return;
          const t4 = e14.length, o3 = Math.max(Math.min(t4 - 1, a5.lineno - 1), 0);
          a5.pre_context = e14.slice(Math.max(0, o3 - r5), o3).map((e15) => Xh(e15, 0)), a5.context_line = Xh(e14[Math.min(t4 - 1, o3)], a5.colno || 0), a5.post_context = e14.slice(Math.min(o3 + 1, t4), o3 + 1 + r5).map((e15) => Xh(e15, 0));
        }(a4, e13, t3), e13;
      }(e12, i2, t2, a3)));
    }), e10;
  }(e9, a2) };
};
Lb(hS, fS);
var vS = new RegExp("^https:\\/\\/roar-swr--pr\\d+-\\w+\\.web\\.app\\/");
var gS = new RegExp("^https:\\/\\/roar-staging\\.web\\.app\\/game\\/swr|https:\\/\\/roar-staging--pr\\d+-\\w+\\.web\\.app\\/");
var bS = class {
  constructor(e8, a2, r2, t2) {
    this.gameParams = a2, this.userParams = r2, this.firekit = e8, this.displayElement = t2, this.jsPsych = null;
  }
  async init() {
    hx({ dsn: "https://824c4c36b4dff88550ff5cc0a3de46e1@o4505913837420544.ingest.sentry.io/4505913888735232", integrations: [nS({ maskAllText: true, maskAllInputs: true }), py(), cS({ levels: ["warning", "error", "debug", "assert"] }), fS(), pS()], attachStacktrace: true, tracesSampleRate: 0.2, tracePropagationTargets: [vS, gS, "https://roar.education/game/swr", "localhost"], replaysSessionSampleRate: 0.1, replaysOnErrorSampleRate: 1, beforeSend: (e9) => e9 }), await this.firekit.startRun();
    const e8 = await (async (e9, a2, r2, t2) => {
      const o2 = Qn(Qn({ ...a2, ...r2 }, Zn), es), { userMode: n2 = "shortAdaptive", assessmentPid: s2, labId: i2, recruitment: d2, storyOption: c2, userMetadata: u2 = {}, consent: l2, audioFeedbackOption: p2, language: m2 = nc.language, numAdaptive: h2 = ["shortAdaptive", "shortAdaptiveEasyBlock"].includes(n2) ? 84 : 150, numNew: f2 = 0, numValidated: v2 = "fullItemBank" === n2 ? 246 : 84, skipInstructions: g2, addNoResponse: b2, grade: w2, birthMonth: y2, birthYear: x2, age: _2, ageMonths: I2 } = o2, k2 = As(y2, x2, _2, I2);
      "en" !== m2 && nc.changeLanguage(m2);
      const S2 = { taskId: e9.task.taskId, userMode: n2, pid: s2, labId: i2, recruitment: d2 || "pilot", userMetadata: { ...u2, grade: w2, ...k2 }, audioFeedbackOption: p2, audioFeedback: Im(p2), story: gm(c2, w2), consent: l2 ?? true, skipInstructions: g2 ?? true, numAdaptive: h2, numNew: f2, numValidated: v2, adaptive2new: Math.floor(h2 / f2), stimulusRuleList: bm[n2], stimulusCountList: km(n2, h2, f2, v2), totalTrialsPractice: 5, countSlowPractice: 2, nRandom: 5, indexArray: uu(Array(parseInt(f2, 10)).fill(0).concat(Array(parseInt(v2, 10)).fill(1))), timing: { stimulusTimePracticeOnly: wm[0], stimulusTime: wm[1], fixationTime: ym[0], trialTimePracticeOnly: xm[0], trialTime: xm[0] }, startTime: /* @__PURE__ */ new Date(), firekit: e9, addNoResponse: b2 ?? false, displayElement: t2 || null }, T2 = Object.fromEntries(Object.entries(a2).map(([e10, a3]) => [e10, S2[e10] ?? a3]));
      return await S2.firekit.updateTaskParams(T2), S2.pid && await S2.firekit.updateUser({ assessmentPid: S2.pid, ...u2 }), S2;
    })(this.firekit, this.gameParams, this.userParams, this.displayElement);
    return s.session.set("config", e8), Mh(this.firekit, e8);
  }
  async run() {
    const { jsPsych: e8, timeline: a2 } = await this.init();
    this.jsPsych = e8, this.jsPsych.run(a2), await ((e9) => {
      const a3 = (r2) => {
        e9() ? r2() : setTimeout((e10) => a3(r2), 400);
      };
      return new Promise(a3);
    })(() => true === this.firekit.run.completed);
  }
  async abort() {
    this.firekit.abortRun(), document.querySelectorAll("audio").forEach((e8) => e8.pause()), this.jsPsych && this.jsPsych.endExperiment();
  }
};
export {
  bS as default
};
/*! Bundled license information:

@bdelab/roar-swr/lib/index.c3c86661.js:
  (*! store2 - v2.14.3 - 2024-02-14
  * Copyright (c) 2024 Nathan Bubna; Licensed MIT *)
  (*!
   * mime-types
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)
*/
//# sourceMappingURL=@bdelab_roar-swr.js.map
