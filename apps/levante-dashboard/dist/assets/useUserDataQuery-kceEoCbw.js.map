{"version":3,"file":"useUserDataQuery-kceEoCbw.js","sources":["../../src/composables/queries/useUserDataQuery.ts"],"sourcesContent":["import { useQuery, type UseQueryReturnType, type UseQueryOptions } from '@tanstack/vue-query';\nimport { storeToRefs } from 'pinia';\nimport { useAuthStore } from '@/store/auth';\nimport { computeQueryOverrides } from '@/helpers/computeQueryOverrides';\nimport { fetchDocById } from '@/helpers/query/utils';\nimport { USER_DATA_QUERY_KEY } from '@/constants/queryKeys';\nimport { FIRESTORE_COLLECTIONS } from '@/constants/firebase';\nimport { computed, unref, type MaybeRefOrGetter } from 'vue';\n\n/**\n * User profile data query.\n *\n * @param userId – The user ID to fetch, set to a falsy value to fetch the current user.\n * @param queryOptions – Optional TanStack query options.\n * @returns The TanStack query result.\n */\nconst useUserDataQuery = (\n  userId: MaybeRefOrGetter<string | undefined | null> = undefined,\n  queryOptions?: UseQueryOptions,\n): UseQueryReturnType => {\n  const authStore = useAuthStore();\n  const { roarUid } = storeToRefs(authStore);\n\n  const uid = computed(() => unref(userId) || roarUid.value);\n  const queryConditions = [() => !!uid.value];\n  const { isQueryEnabled, options } = computeQueryOverrides(queryConditions, queryOptions);\n\n  return useQuery({\n    queryKey: [USER_DATA_QUERY_KEY, uid.value],\n    queryFn: () => fetchDocById(FIRESTORE_COLLECTIONS.USERS, uid.value),\n    enabled: isQueryEnabled,\n    ...options,\n  });\n};\n\nexport default useUserDataQuery;\n"],"names":["useUserDataQuery","userId","queryOptions","authStore","useAuthStore","roarUid","storeToRefs","uid","computed","unref","queryConditions","isQueryEnabled","options","computeQueryOverrides","useQuery","USER_DATA_QUERY_KEY","fetchDocById","FIRESTORE_COLLECTIONS"],"mappings":"+dAgBA,MAAMA,EAAmB,CACvBC,EAAsD,OACtDC,IACuB,CACvB,MAAMC,EAAYC,EAAA,EACZ,CAAE,QAAAC,CAAA,EAAYC,EAAYH,CAAS,EAEnCI,EAAMC,EAAS,IAAMC,EAAMR,CAAM,GAAKI,EAAQ,KAAK,EACnDK,EAAkB,CAAC,IAAM,CAAC,CAACH,EAAI,KAAK,EACpC,CAAE,eAAAI,EAAgB,QAAAC,CAAA,EAAYC,EAAsBH,EAAiBR,CAAY,EAEvF,OAAOY,EAAS,CACd,SAAU,CAACC,EAAqBR,EAAI,KAAK,EACzC,QAAS,IAAMS,EAAaC,EAAsB,MAAOV,EAAI,KAAK,EAClE,QAASI,EACT,GAAGC,CAAA,CACJ,CACH"}