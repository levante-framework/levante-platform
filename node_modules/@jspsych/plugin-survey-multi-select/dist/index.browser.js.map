{"version":3,"file":"index.browser.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"survey-multi-select\",\n  parameters: {\n    /** Array containing one or more objects with parameters for the question(s) that should be shown on the page. */\n    questions: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      pretty_name: \"Questions\",\n      nested: {\n        /** Question prompt. */\n        prompt: {\n          type: ParameterType.HTML_STRING,\n          pretty_name: \"Prompt\",\n          default: undefined,\n        },\n        /** Array of multiple select options for this question. */\n        options: {\n          type: ParameterType.STRING,\n          pretty_name: \"Options\",\n          array: true,\n          default: undefined,\n        },\n        /** If true, then the question will be centered and options will be displayed horizontally. */\n        horizontal: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Horizontal\",\n          default: false,\n        },\n        /** Whether or not a response to this question must be given in order to continue. */\n        required: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Required\",\n          default: false,\n        },\n        /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n        name: {\n          type: ParameterType.STRING,\n          pretty_name: \"Question Name\",\n          default: \"\",\n        },\n      },\n    },\n    /** If true, the order of the questions in the 'questions' array will be randomized. */\n    randomize_question_order: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Randomize Question Order\",\n      default: false,\n    },\n    /** HTML-formatted string to display at top of the page above all of the questions. */\n    preamble: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Preamble\",\n      default: null,\n    },\n    /** Label of the button to submit responses. */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n    },\n    /** Message that will be displayed if one or more required questions is not answered. */\n    required_message: {\n      type: ParameterType.STRING,\n      pretty_name: \"Required message\",\n      default: \"You must choose at least one response for this question\",\n    },\n    /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n    autocomplete: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow autocomplete\",\n      default: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **survey-multi-select**\n *\n * jsPsych plugin for presenting multiple choice survey questions with the ability to respond with more than one option\n *\n * @see {@link https://www.jspsych.org/plugins/jspsych-survey-multi-select/ survey-multi-select plugin documentation on jspsych.org}\n */\nclass SurveyMultiSelectPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var plugin_id_name = \"jspsych-survey-multi-select\";\n    var plugin_id_selector = \"#\" + plugin_id_name;\n    const _join = (...args: Array<string | number>) => args.join(\"-\");\n\n    // inject CSS for trial\n    var cssstr =\n      \".jspsych-survey-multi-select-question { margin-top: 2em; margin-bottom: 2em; text-align: left; }\" +\n      \".jspsych-survey-multi-select-text span.required {color: darkred;}\" +\n      \".jspsych-survey-multi-select-horizontal .jspsych-survey-multi-select-text {  text-align: center;}\" +\n      \".jspsych-survey-multi-select-option { line-height: 2; }\" +\n      \".jspsych-survey-multi-select-horizontal .jspsych-survey-multi-select-option {  display: inline-block;  margin-left: 1em;  margin-right: 1em;  vertical-align: top;}\" +\n      \"label.jspsych-survey-multi-select-text input[type='checkbox'] {margin-right: 1em;}\";\n    display_element.innerHTML =\n      '<style id=\"jspsych-survey-multi-select-css\">' + cssstr + \"</style>\";\n\n    // form element\n    var trial_form_id = _join(plugin_id_name, \"form\");\n    display_element.innerHTML += '<form id=\"' + trial_form_id + '\"></form>';\n    var trial_form = display_element.querySelector<HTMLFormElement>(\"#\" + trial_form_id);\n    if (!trial.autocomplete) {\n      trial_form.setAttribute(\"autocomplete\", \"off\");\n    }\n    // show preamble text\n    var preamble_id_name = _join(plugin_id_name, \"preamble\");\n    if (trial.preamble !== null) {\n      trial_form.innerHTML +=\n        '<div id=\"' +\n        preamble_id_name +\n        '\" class=\"' +\n        preamble_id_name +\n        '\">' +\n        trial.preamble +\n        \"</div>\";\n    }\n    // generate question order. this is randomized here as opposed to randomizing the order of trial.questions\n    // so that the data are always associated with the same question regardless of order\n    var question_order = [];\n    for (var i = 0; i < trial.questions.length; i++) {\n      question_order.push(i);\n    }\n    if (trial.randomize_question_order) {\n      question_order = this.jsPsych.randomization.shuffle(question_order);\n    }\n    // add multiple-select questions\n    for (var i = 0; i < trial.questions.length; i++) {\n      var question = trial.questions[question_order[i]];\n      var question_id = question_order[i];\n      // create question container\n      var question_classes = [_join(plugin_id_name, \"question\")];\n      if (question.horizontal) {\n        question_classes.push(_join(plugin_id_name, \"horizontal\"));\n      }\n\n      trial_form.innerHTML +=\n        '<div id=\"' +\n        _join(plugin_id_name, question_id) +\n        '\" data-name=\"' +\n        question.name +\n        '\" class=\"' +\n        question_classes.join(\" \") +\n        '\"></div>';\n\n      var question_selector = _join(plugin_id_selector, question_id);\n\n      // add question text\n      display_element.querySelector(question_selector).innerHTML +=\n        '<p id=\"survey-question\" class=\"' +\n        plugin_id_name +\n        '-text survey-multi-select\">' +\n        question.prompt +\n        \"</p>\";\n\n      // create option check boxes\n      for (var j = 0; j < question.options.length; j++) {\n        var option_id_name = _join(plugin_id_name, \"option\", question_id, j);\n\n        // add check box container\n        display_element.querySelector(question_selector).innerHTML +=\n          '<div id=\"' + option_id_name + '\" class=\"' + _join(plugin_id_name, \"option\") + '\"></div>';\n\n        // add label and question text\n        var form = document.getElementById(option_id_name);\n        var input_name = _join(plugin_id_name, \"response\", question_id);\n        var input_id = _join(plugin_id_name, \"response\", question_id, j);\n        var label = document.createElement(\"label\");\n        label.setAttribute(\"class\", plugin_id_name + \"-text\");\n        label.innerHTML = question.options[j];\n        label.setAttribute(\"for\", input_id);\n\n        // create checkboxes\n        var input = document.createElement(\"input\");\n        input.setAttribute(\"type\", \"checkbox\");\n        input.setAttribute(\"name\", input_name);\n        input.setAttribute(\"id\", input_id);\n        input.setAttribute(\"value\", question.options[j]);\n        form.appendChild(label);\n        label.insertBefore(input, label.firstChild);\n      }\n    }\n    // add submit button\n    trial_form.innerHTML += '<div class=\"fail-message\"></div>';\n    trial_form.innerHTML +=\n      '<button id=\"' +\n      plugin_id_name +\n      '-next\" class=\"' +\n      plugin_id_name +\n      ' jspsych-btn\">' +\n      trial.button_label +\n      \"</button>\";\n\n    // validation check on the data first for custom validation handling\n    // then submit the form\n    display_element\n      .querySelector(\"#jspsych-survey-multi-select-next\")\n      .addEventListener(\"click\", () => {\n        for (var i = 0; i < trial.questions.length; i++) {\n          if (trial.questions[i].required) {\n            if (\n              display_element.querySelector(\n                \"#jspsych-survey-multi-select-\" + i + \" input:checked\"\n              ) == null\n            ) {\n              display_element\n                .querySelector<HTMLInputElement>(\"#jspsych-survey-multi-select-\" + i + \" input\")\n                .setCustomValidity(trial.required_message);\n            } else {\n              display_element\n                .querySelector<HTMLInputElement>(\"#jspsych-survey-multi-select-\" + i + \" input\")\n                .setCustomValidity(\"\");\n            }\n          }\n        }\n        trial_form.reportValidity();\n      });\n\n    trial_form.addEventListener(\"submit\", (event) => {\n      event.preventDefault();\n      // measure response time\n      var endTime = performance.now();\n      var response_time = Math.round(endTime - startTime);\n\n      // create object to hold responses\n      var question_data = {};\n      var has_response = [];\n      for (var index = 0; index < trial.questions.length; index++) {\n        var match = display_element.querySelector(\"#jspsych-survey-multi-select-\" + index);\n        var val = [];\n        var inputboxes = match.querySelectorAll<HTMLInputElement>(\"input[type=checkbox]:checked\");\n        for (var j = 0; j < inputboxes.length; j++) {\n          var currentChecked = inputboxes[j];\n          val.push(currentChecked.value);\n        }\n        var id = \"Q\" + index;\n        var obje = {};\n        var name = id;\n        if (match.attributes[\"data-name\"].value !== \"\") {\n          name = match.attributes[\"data-name\"].value;\n        }\n        obje[name] = val;\n        Object.assign(question_data, obje);\n        if (val.length == 0) {\n          has_response.push(false);\n        } else {\n          has_response.push(true);\n        }\n      }\n\n      // save data\n      var trial_data = {\n        rt: response_time,\n        response: question_data,\n        question_order: question_order,\n      };\n      display_element.innerHTML = \"\";\n\n      // next trial\n      this.jsPsych.finishTrial(trial_data);\n    });\n\n    var startTime = performance.now();\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const question_data = {};\n    let rt = 1000;\n\n    for (const q of trial.questions) {\n      let n_answers;\n      if (q.required) {\n        n_answers = this.jsPsych.randomization.randomInt(1, q.options.length);\n      } else {\n        n_answers = this.jsPsych.randomization.randomInt(0, q.options.length);\n      }\n      const name = q.name ? q.name : `Q${trial.questions.indexOf(q)}`;\n      const selections = this.jsPsych.randomization.sampleWithoutReplacement(q.options, n_answers);\n      question_data[name] = selections;\n      rt += this.jsPsych.randomization.sampleExGaussian(1500, 400, 1 / 200, true);\n    }\n\n    const default_data = {\n      response: question_data,\n      rt: rt,\n      question_order: trial.randomize_question_order\n        ? this.jsPsych.randomization.shuffle([...Array(trial.questions.length).keys()])\n        : [...Array(trial.questions.length).keys()],\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const answers: [string, []][] = Object.entries(data.response);\n    for (let i = 0; i < answers.length; i++) {\n      for (const a of answers[i][1]) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\n            `#jspsych-survey-multi-select-response-${i}-${trial.questions[i].options.indexOf(a)}`\n          ),\n          ((data.rt - 1000) / answers.length) * (i + 1)\n        );\n      }\n    }\n\n    this.jsPsych.pluginAPI.clickTarget(\n      display_element.querySelector(\"#jspsych-survey-multi-select-next\"),\n      data.rt\n    );\n  }\n}\n\nexport default SurveyMultiSelectPlugin;\n"],"names":["ParameterType"],"mappings":"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"}