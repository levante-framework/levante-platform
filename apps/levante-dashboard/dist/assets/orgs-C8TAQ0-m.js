import{c6 as J,c7 as W,c8 as X,bA as Z,c9 as ss,ca as es,cb as ts,aR as k,bl as F,bm as E,b6 as T,q as S,aJ as L,aK as R,j as V,F as as,cc as O}from"./index-kdKfEdeI.js";import{g as M}from"./lodash-DAY8-RAI.js";import{a6 as ls}from"./tanstack-CsBZeLmk.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="954842fd-768f-4ca0-b2af-02edc3f8ba53",e._sentryDebugIdIdentifier="sentry-dbid-954842fd-768f-4ca0-b2af-02edc3f8ba53")}catch{}})();var ns=J,rs=Z,os=ss,is=X,cs=W,us=Math.max;function ds(e){if(!(e&&e.length))return[];var t=0;return e=ns(e,function(n){if(cs(n))return t=us(n.length,t),!0}),is(t,function(n){return rs(e,os(n))})}var fs=ds,hs=es,ps=fs,Is=hs(ps),vs=Is;const H=M(vs);var ms=ts,Ss=1/0;function gs(e){var t=e==null?0:e.length;return t?ms(e,Ss):[]}var ys=gs;const D=M(ys),w={DISTRICTS:"districts",SCHOOLS:"schools",GROUPS:"groups"},g={DISTRICTS:"district",SCHOOLS:"school",CLASSES:"class",GROUPS:"group"},x=({orgType:e,orgNormalizedName:t,parentDistrict:n,parentSchool:a,orderBy:u,aggregationQuery:I,pageLimit:i,page:r,paginate:l=!0,select:c=["id","name","tags"]})=>{const p={structuredQuery:{orderBy:u??T}};l&&(p.structuredQuery.limit=i,p.structuredQuery.offset=r*i),p.structuredQuery.select={fields:c.map(h=>({fieldPath:h}))},p.structuredQuery.from=[{collectionId:e,allDescendants:!1}];const o=[];return t&&!(n||a)?(o.push({fieldFilter:{field:{fieldPath:"normalizedName"},op:"EQUAL",value:{stringValue:t}}}),n&&o.push({fieldFilter:{field:{fieldPath:"districtId"},op:"EQUAL",value:{stringValue:n}}})):e==="schools"&&n||e==="classes"&&n&&!a?t?o.push({fieldFilter:{field:{fieldPath:"normalizedName"},op:"EQUAL",value:{stringValue:t}}},{fieldFilter:{field:{fieldPath:"districtId"},op:"EQUAL",value:{stringValue:n}}}):o.push({fieldFilter:{field:{fieldPath:"districtId"},op:"EQUAL",value:{stringValue:n}}}):e==="classes"&&a&&(t?o.push({fieldFilter:{field:{fieldPath:"normalizedName"},op:"EQUAL",value:{stringValue:t}}},{fieldFilter:{field:{fieldPath:"schoolId"},op:"EQUAL",value:{stringValue:a}}}):o.push({fieldFilter:{field:{fieldPath:"schoolId"},op:"EQUAL",value:{stringValue:a}}})),o.length>0&&(p.structuredQuery.where={compositeFilter:{op:"AND",filters:o}}),p},Es=async(e,t,n,a,u=null)=>{var r,l;const I=k(),i=x({orgType:e,parentDistrict:e==="schools"?(r=n==null?void 0:n.value)==null?void 0:r.id:null,parentSchool:e==="classes"?(l=a==null?void 0:a.value)==null?void 0:l.id:null,aggregationQuery:!1,orgNormalizedName:t,paginate:!1,select:["id","name","normalizedName"],orderBy:u});return I.post(`${F()}:runQuery`,i).then(({data:c})=>E(c))},Qs=async(e,t,n,a,u=["name","id","tags","currentActivationCode"])=>{const I=ls(t);if(n.value){const i=k(),r=x({orgType:e,parentDistrict:e==="schools"?I:null,aggregationQuery:!1,paginate:!1,select:u});return e==="districts"?console.log(`Fetching ${e}`):e==="schools"&&console.log(`Fetching ${e} for ${I}`),i.post(`${F()}:runQuery`,r).then(({data:l})=>E(l))}else if(["groups","families"].includes(e)){const i=(a.value[e]??[]).map(r=>S(e,r,u));return Promise.all(i)}else if(e==="districts"){const i=(a.value[e]??[]).map(h=>S(e,h,u)),r=(a.value.schools??[]).map(h=>S("schools",h,["districtId"])),l=(a.value.classes??[]).map(h=>S("classes",h,["districtId"])),c=await Promise.all(r),p=await Promise.all(l),o=c.map(h=>h.districtId);o.push(...p.map(h=>h.districtId));for(const h of o)i.push(S(e,h,u));return Promise.all(i)}else if(e==="schools"){const i=await S("districts",I,["schools"]);if((a.value.districts??[]).includes(I)){const r=(i.schools??[]).map(l=>S("schools",l,u));return Promise.all(r)}else if((a.value.schools??[]).length>0){const l=(O(a.value.schools,i.schools)??[]).map(c=>S("schools",c,u));return Promise.all(l)}else if((a.value.classes??[]).length>0){const r=(a.value.classes??[]).map(o=>S("classes",o,["schoolId"])),l=await Promise.all(r),p=(O(i.schools,l.map(o=>o.schoolId))??[]).map(o=>S("schools",o,u));return Promise.all(p)}return Promise.resolve([])}},Ps=async(e,t,n,a,u,I,i,r,l=["id","name","tags"])=>{const c=k(),p=x({orgType:e.value,parentDistrict:t.value,parentSchool:n.value,aggregationQuery:!1,orderBy:a.value,pageLimit:u.value,paginate:!0,page:I.value,select:l});if(i.value)return c.post(`${F()}:runQuery`,p).then(({data:o})=>E(o));{if(e.value==="schools"&&(r.value.districts??[]).includes(t.value))return c.post(`${F()}:runQuery`,p).then(({data:b})=>E(b));if(e.value==="classes"&&((r.value.schools??[]).includes(n.value)||(r.value.districts??[]).includes(t.value)))return c.post(`${F()}:runQuery`,p).then(({data:y})=>E(y));const h=(r.value[e.value]??[]).map(y=>S(e.value,y,l)),P=((a==null?void 0:a.value)??T)[0].field.fieldPath,$=((a==null?void 0:a.value)??T)[0].direction;return(await Promise.all(h)).sort((y,b)=>$==="ASCENDING"?2*+(y[P]>b[P])-1:$==="DESCENDING"?2*+(b[P]>y[P])-1:0).slice(I.value*u.value,(I.value+1)*u.value)}},_s=async(e,t,n,a,u,I,i)=>{const r=k(),l=x({orgType:e.value,parentDistrict:t.value,parentSchool:n.value,aggregationQuery:!1,orderBy:a.value,paginate:!1,select:i});if(u.value)try{return await r.post(`${F()}:runQuery`,l).then(({data:c})=>E(c))}catch(c){return console.error("orgFetchAll: Error fetching all orgs for super admin:",c),[]}else try{return await Ps(e,t,n,a,{value:2**31-1},{value:0},u,I,i)}catch(c){return console.error("orgFetchAll: Error fetching all orgs for non-super admin:",c),[]}},$s=async(e,t)=>{const n=[w.DISTRICTS,w.SCHOOLS,w.GROUPS,w.FAMILIES],a=D(n.map(s=>(t[s]??[]).map(v=>`${s}/${v}`)??[])),u=D(n.map(s=>(t[s]??[]).map(v=>`administrations/${e}/stats/${v}`)??[])),I=[L(a,["name","schools","classes","archivedSchools","archivedClasses","districtId"]),L(u)],[i,r]=await Promise.all(I),l=R(H(i,r).map(([s,v],f)=>{if(!s||V(s))return;const{classes:m,schools:C,archivedSchools:Q,archivedClasses:_,collection:B,...K}=s,U={key:String(f),data:{orgType:g[B.toUpperCase()],schools:C,classes:m,archivedSchools:Q,archivedClasses:_,stats:v,...K}};return(m||_)&&(U.children=[...m??[],..._??[]].map(q=>({key:`${U.key}-${q}`,data:{orgType:g.CLASSES,id:q}}))),U}),void 0),c=l.filter(s=>s.data.orgType===g.DISTRICTS).map(s=>s.data.id),p=D(l.map(s=>[...s.data.schools??[],...s.data.archivedSchools??[]])),o=l.length>0?R(t.schools,...p):t.schools,h=D(l.map(s=>[...s.data.classes??[],...s.data.archivedClasses??[]])),P=l.length>0?R(t.classes,...h):t.classes,$=(l??[]).filter(s=>s.data.orgType===g.SCHOOLS&&o.includes(s.data.id)),G=(l??[]).filter(s=>s.data.orgType===g.SCHOOLS&&!o.includes(s.data.id)),y=P.map(s=>`classes/${s}`),b=P.map(s=>`administrations/${e}/stats/${s}`),z=[L(y,["name","schoolId","districtId"]),L(b)],[j,N]=await Promise.all(z);let A=R(H(j,N).map(([s,v],f)=>{const{collection:m=as.CLASSES,...C}=s??{};return V(C)?void 0:{key:String(l.length+f),data:{orgType:g[m.toUpperCase()],...v&&{stats:v},...C}}}),void 0);const Y=A.filter(s=>c.includes(s.data.districtId));A=A.filter(s=>!c.includes(s.data.districtId));const d=l.filter(s=>s.data.orgType===g.DISTRICTS);d.push(...$);for(const s of G){const v=s.data.districtId,f=d.findIndex(m=>m.data.id===v);f!==-1?d[f].children===void 0?d[f].children=[{...s,key:`${d[f].key}-${s.key}`}]:d[f].children.push(s):d.push(s)}for(const s of Y){const v=s.data.districtId,f=d.findIndex(m=>m.data.id===v);if(f!==-1){const m=`${d[f].key}-9999`,C={key:m,data:{orgType:g.SCHOOLS,orgId:"9999",name:"Direct Report Classes"},children:[{...s,key:`${m}-${s.key}`}]};if(d[f].children===void 0)d[f].children=[C];else{const Q=d[f].children.findIndex(_=>_.key===m);Q===-1?d[f].children.push(C):d[f].children[Q].children.push(s)}}else d.push(s)}return d.push(...A??[]),d.push(...l.filter(s=>s.data.orgType===g.GROUPS)),d.push(...l.filter(s=>s.data.orgType===g.FAMILIES)),(d??[]).forEach(s=>{s.children&&s.children.sort((v,f)=>v.data.stats?f.data.stats?v.data.name.localeCompare(f.data.name):-1:1)}),d};export{g as S,H as _,_s as a,Ps as b,Es as c,$s as f,Qs as o};
//# sourceMappingURL=orgs-C8TAQ0-m.js.map
