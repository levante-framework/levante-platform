{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"html-slider-response\",\n  parameters: {\n    /** The HTML string to be displayed */\n    stimulus: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Stimulus\",\n      default: undefined,\n    },\n    /** Sets the minimum value of the slider. */\n    min: {\n      type: ParameterType.INT,\n      pretty_name: \"Min slider\",\n      default: 0,\n    },\n    /** Sets the maximum value of the slider */\n    max: {\n      type: ParameterType.INT,\n      pretty_name: \"Max slider\",\n      default: 100,\n    },\n    /** Sets the starting value of the slider */\n    slider_start: {\n      type: ParameterType.INT,\n      pretty_name: \"Slider starting value\",\n      default: 50,\n    },\n    /** Sets the step of the slider */\n    step: {\n      type: ParameterType.INT,\n      pretty_name: \"Step\",\n      default: 1,\n    },\n    /** Array containing the labels for the slider. Labels will be displayed at equidistant locations along the slider. */\n    labels: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Labels\",\n      default: [],\n      array: true,\n    },\n    /** Width of the slider in pixels. */\n    slider_width: {\n      type: ParameterType.INT,\n      pretty_name: \"Slider width\",\n      default: null,\n    },\n    /** Label of the button to advance. */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n      array: false,\n    },\n    /** If true, the participant will have to move the slider before continuing. */\n    require_movement: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Require movement\",\n      default: false,\n    },\n    /** Any content here will be displayed below the slider. */\n    prompt: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Prompt\",\n      default: null,\n    },\n    /** How long to show the stimulus. */\n    stimulus_duration: {\n      type: ParameterType.INT,\n      pretty_name: \"Stimulus duration\",\n      default: null,\n    },\n    /** How long to show the trial. */\n    trial_duration: {\n      type: ParameterType.INT,\n      pretty_name: \"Trial duration\",\n      default: null,\n    },\n    /** If true, trial will end when user makes a response. */\n    response_ends_trial: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Response ends trial\",\n      default: true,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **html-slider-response**\n *\n * jsPsych plugin for showing an HTML stimulus and collecting a slider response\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-html-slider-response/ html-slider-response plugin documentation on jspsych.org}\n */\nclass HtmlSliderResponsePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    // half of the thumb width value from jspsych.css, used to adjust the label positions\n    var half_thumb_width = 7.5;\n\n    var html = '<div id=\"jspsych-html-slider-response-wrapper\" style=\"margin: 100px 0px;\">';\n    html += '<div id=\"jspsych-html-slider-response-stimulus\">' + trial.stimulus + \"</div>\";\n    html +=\n      '<div class=\"jspsych-html-slider-response-container\" style=\"position:relative; margin: 0 auto 3em auto; ';\n    if (trial.slider_width !== null) {\n      html += \"width:\" + trial.slider_width + \"px;\";\n    } else {\n      html += \"width:auto;\";\n    }\n    html += '\">';\n    html +=\n      '<input type=\"range\" class=\"jspsych-slider\" value=\"' +\n      trial.slider_start +\n      '\" min=\"' +\n      trial.min +\n      '\" max=\"' +\n      trial.max +\n      '\" step=\"' +\n      trial.step +\n      '\" id=\"jspsych-html-slider-response-response\"></input>';\n    html += \"<div>\";\n    for (var j = 0; j < trial.labels.length; j++) {\n      var label_width_perc = 100 / (trial.labels.length - 1);\n      var percent_of_range = j * (100 / (trial.labels.length - 1));\n      var percent_dist_from_center = ((percent_of_range - 50) / 50) * 100;\n      var offset = (percent_dist_from_center * half_thumb_width) / 100;\n      html +=\n        '<div style=\"border: 1px solid transparent; display: inline-block; position: absolute; ' +\n        \"left:calc(\" +\n        percent_of_range +\n        \"% - (\" +\n        label_width_perc +\n        \"% / 2) - \" +\n        offset +\n        \"px); text-align: center; width: \" +\n        label_width_perc +\n        '%;\">';\n      html += '<span style=\"text-align: center; font-size: 80%;\">' + trial.labels[j] + \"</span>\";\n      html += \"</div>\";\n    }\n    html += \"</div>\";\n    html += \"</div>\";\n    html += \"</div>\";\n\n    if (trial.prompt !== null) {\n      html += trial.prompt;\n    }\n\n    // add submit button\n    html +=\n      '<button id=\"jspsych-html-slider-response-next\" class=\"jspsych-btn\" ' +\n      (trial.require_movement ? \"disabled\" : \"\") +\n      \">\" +\n      trial.button_label +\n      \"</button>\";\n\n    display_element.innerHTML = html;\n\n    var response = {\n      rt: null,\n      response: null,\n    };\n\n    if (trial.require_movement) {\n      const enable_button = () => {\n        display_element.querySelector<HTMLInputElement>(\n          \"#jspsych-html-slider-response-next\"\n        ).disabled = false;\n      };\n\n      display_element\n        .querySelector(\"#jspsych-html-slider-response-response\")\n        .addEventListener(\"mousedown\", enable_button);\n\n      display_element\n        .querySelector(\"#jspsych-html-slider-response-response\")\n        .addEventListener(\"touchstart\", enable_button);\n\n      display_element\n        .querySelector(\"#jspsych-html-slider-response-response\")\n        .addEventListener(\"change\", enable_button);\n    }\n\n    const end_trial = () => {\n      this.jsPsych.pluginAPI.clearAllTimeouts();\n\n      // save data\n      var trialdata = {\n        rt: response.rt,\n        stimulus: trial.stimulus,\n        slider_start: trial.slider_start,\n        response: response.response,\n      };\n\n      display_element.innerHTML = \"\";\n\n      // next trial\n      this.jsPsych.finishTrial(trialdata);\n    };\n\n    display_element\n      .querySelector(\"#jspsych-html-slider-response-next\")\n      .addEventListener(\"click\", () => {\n        // measure response time\n        var endTime = performance.now();\n        response.rt = Math.round(endTime - startTime);\n        response.response = display_element.querySelector<HTMLInputElement>(\n          \"#jspsych-html-slider-response-response\"\n        ).valueAsNumber;\n\n        if (trial.response_ends_trial) {\n          end_trial();\n        } else {\n          display_element.querySelector<HTMLButtonElement>(\n            \"#jspsych-html-slider-response-next\"\n          ).disabled = true;\n        }\n      });\n\n    if (trial.stimulus_duration !== null) {\n      this.jsPsych.pluginAPI.setTimeout(() => {\n        display_element.querySelector<HTMLElement>(\n          \"#jspsych-html-slider-response-stimulus\"\n        ).style.visibility = \"hidden\";\n      }, trial.stimulus_duration);\n    }\n\n    // end trial if trial_duration is set\n    if (trial.trial_duration !== null) {\n      this.jsPsych.pluginAPI.setTimeout(end_trial, trial.trial_duration);\n    }\n\n    var startTime = performance.now();\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const default_data = {\n      stimulus: trial.stimulus,\n      slider_start: trial.slider_start,\n      response: this.jsPsych.randomization.randomInt(trial.min, trial.max),\n      rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    if (data.rt !== null) {\n      const el = display_element.querySelector<HTMLInputElement>(\"input[type='range']\");\n\n      setTimeout(() => {\n        this.jsPsych.pluginAPI.clickTarget(el);\n        el.valueAsNumber = data.response;\n      }, data.rt / 2);\n\n      this.jsPsych.pluginAPI.clickTarget(display_element.querySelector(\"button\"), data.rt);\n    }\n  }\n}\n\nexport default HtmlSliderResponsePlugin;\n"],"names":[],"mappings":"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"}