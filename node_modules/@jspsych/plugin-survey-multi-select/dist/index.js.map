{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"survey-multi-select\",\n  parameters: {\n    /** Array containing one or more objects with parameters for the question(s) that should be shown on the page. */\n    questions: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      pretty_name: \"Questions\",\n      nested: {\n        /** Question prompt. */\n        prompt: {\n          type: ParameterType.HTML_STRING,\n          pretty_name: \"Prompt\",\n          default: undefined,\n        },\n        /** Array of multiple select options for this question. */\n        options: {\n          type: ParameterType.STRING,\n          pretty_name: \"Options\",\n          array: true,\n          default: undefined,\n        },\n        /** If true, then the question will be centered and options will be displayed horizontally. */\n        horizontal: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Horizontal\",\n          default: false,\n        },\n        /** Whether or not a response to this question must be given in order to continue. */\n        required: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Required\",\n          default: false,\n        },\n        /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n        name: {\n          type: ParameterType.STRING,\n          pretty_name: \"Question Name\",\n          default: \"\",\n        },\n      },\n    },\n    /** If true, the order of the questions in the 'questions' array will be randomized. */\n    randomize_question_order: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Randomize Question Order\",\n      default: false,\n    },\n    /** HTML-formatted string to display at top of the page above all of the questions. */\n    preamble: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Preamble\",\n      default: null,\n    },\n    /** Label of the button to submit responses. */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n    },\n    /** Message that will be displayed if one or more required questions is not answered. */\n    required_message: {\n      type: ParameterType.STRING,\n      pretty_name: \"Required message\",\n      default: \"You must choose at least one response for this question\",\n    },\n    /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n    autocomplete: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow autocomplete\",\n      default: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **survey-multi-select**\n *\n * jsPsych plugin for presenting multiple choice survey questions with the ability to respond with more than one option\n *\n * @see {@link https://www.jspsych.org/plugins/jspsych-survey-multi-select/ survey-multi-select plugin documentation on jspsych.org}\n */\nclass SurveyMultiSelectPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var plugin_id_name = \"jspsych-survey-multi-select\";\n    var plugin_id_selector = \"#\" + plugin_id_name;\n    const _join = (...args: Array<string | number>) => args.join(\"-\");\n\n    // inject CSS for trial\n    var cssstr =\n      \".jspsych-survey-multi-select-question { margin-top: 2em; margin-bottom: 2em; text-align: left; }\" +\n      \".jspsych-survey-multi-select-text span.required {color: darkred;}\" +\n      \".jspsych-survey-multi-select-horizontal .jspsych-survey-multi-select-text {  text-align: center;}\" +\n      \".jspsych-survey-multi-select-option { line-height: 2; }\" +\n      \".jspsych-survey-multi-select-horizontal .jspsych-survey-multi-select-option {  display: inline-block;  margin-left: 1em;  margin-right: 1em;  vertical-align: top;}\" +\n      \"label.jspsych-survey-multi-select-text input[type='checkbox'] {margin-right: 1em;}\";\n    display_element.innerHTML =\n      '<style id=\"jspsych-survey-multi-select-css\">' + cssstr + \"</style>\";\n\n    // form element\n    var trial_form_id = _join(plugin_id_name, \"form\");\n    display_element.innerHTML += '<form id=\"' + trial_form_id + '\"></form>';\n    var trial_form = display_element.querySelector<HTMLFormElement>(\"#\" + trial_form_id);\n    if (!trial.autocomplete) {\n      trial_form.setAttribute(\"autocomplete\", \"off\");\n    }\n    // show preamble text\n    var preamble_id_name = _join(plugin_id_name, \"preamble\");\n    if (trial.preamble !== null) {\n      trial_form.innerHTML +=\n        '<div id=\"' +\n        preamble_id_name +\n        '\" class=\"' +\n        preamble_id_name +\n        '\">' +\n        trial.preamble +\n        \"</div>\";\n    }\n    // generate question order. this is randomized here as opposed to randomizing the order of trial.questions\n    // so that the data are always associated with the same question regardless of order\n    var question_order = [];\n    for (var i = 0; i < trial.questions.length; i++) {\n      question_order.push(i);\n    }\n    if (trial.randomize_question_order) {\n      question_order = this.jsPsych.randomization.shuffle(question_order);\n    }\n    // add multiple-select questions\n    for (var i = 0; i < trial.questions.length; i++) {\n      var question = trial.questions[question_order[i]];\n      var question_id = question_order[i];\n      // create question container\n      var question_classes = [_join(plugin_id_name, \"question\")];\n      if (question.horizontal) {\n        question_classes.push(_join(plugin_id_name, \"horizontal\"));\n      }\n\n      trial_form.innerHTML +=\n        '<div id=\"' +\n        _join(plugin_id_name, question_id) +\n        '\" data-name=\"' +\n        question.name +\n        '\" class=\"' +\n        question_classes.join(\" \") +\n        '\"></div>';\n\n      var question_selector = _join(plugin_id_selector, question_id);\n\n      // add question text\n      display_element.querySelector(question_selector).innerHTML +=\n        '<p id=\"survey-question\" class=\"' +\n        plugin_id_name +\n        '-text survey-multi-select\">' +\n        question.prompt +\n        \"</p>\";\n\n      // create option check boxes\n      for (var j = 0; j < question.options.length; j++) {\n        var option_id_name = _join(plugin_id_name, \"option\", question_id, j);\n\n        // add check box container\n        display_element.querySelector(question_selector).innerHTML +=\n          '<div id=\"' + option_id_name + '\" class=\"' + _join(plugin_id_name, \"option\") + '\"></div>';\n\n        // add label and question text\n        var form = document.getElementById(option_id_name);\n        var input_name = _join(plugin_id_name, \"response\", question_id);\n        var input_id = _join(plugin_id_name, \"response\", question_id, j);\n        var label = document.createElement(\"label\");\n        label.setAttribute(\"class\", plugin_id_name + \"-text\");\n        label.innerHTML = question.options[j];\n        label.setAttribute(\"for\", input_id);\n\n        // create checkboxes\n        var input = document.createElement(\"input\");\n        input.setAttribute(\"type\", \"checkbox\");\n        input.setAttribute(\"name\", input_name);\n        input.setAttribute(\"id\", input_id);\n        input.setAttribute(\"value\", question.options[j]);\n        form.appendChild(label);\n        label.insertBefore(input, label.firstChild);\n      }\n    }\n    // add submit button\n    trial_form.innerHTML += '<div class=\"fail-message\"></div>';\n    trial_form.innerHTML +=\n      '<button id=\"' +\n      plugin_id_name +\n      '-next\" class=\"' +\n      plugin_id_name +\n      ' jspsych-btn\">' +\n      trial.button_label +\n      \"</button>\";\n\n    // validation check on the data first for custom validation handling\n    // then submit the form\n    display_element\n      .querySelector(\"#jspsych-survey-multi-select-next\")\n      .addEventListener(\"click\", () => {\n        for (var i = 0; i < trial.questions.length; i++) {\n          if (trial.questions[i].required) {\n            if (\n              display_element.querySelector(\n                \"#jspsych-survey-multi-select-\" + i + \" input:checked\"\n              ) == null\n            ) {\n              display_element\n                .querySelector<HTMLInputElement>(\"#jspsych-survey-multi-select-\" + i + \" input\")\n                .setCustomValidity(trial.required_message);\n            } else {\n              display_element\n                .querySelector<HTMLInputElement>(\"#jspsych-survey-multi-select-\" + i + \" input\")\n                .setCustomValidity(\"\");\n            }\n          }\n        }\n        trial_form.reportValidity();\n      });\n\n    trial_form.addEventListener(\"submit\", (event) => {\n      event.preventDefault();\n      // measure response time\n      var endTime = performance.now();\n      var response_time = Math.round(endTime - startTime);\n\n      // create object to hold responses\n      var question_data = {};\n      var has_response = [];\n      for (var index = 0; index < trial.questions.length; index++) {\n        var match = display_element.querySelector(\"#jspsych-survey-multi-select-\" + index);\n        var val = [];\n        var inputboxes = match.querySelectorAll<HTMLInputElement>(\"input[type=checkbox]:checked\");\n        for (var j = 0; j < inputboxes.length; j++) {\n          var currentChecked = inputboxes[j];\n          val.push(currentChecked.value);\n        }\n        var id = \"Q\" + index;\n        var obje = {};\n        var name = id;\n        if (match.attributes[\"data-name\"].value !== \"\") {\n          name = match.attributes[\"data-name\"].value;\n        }\n        obje[name] = val;\n        Object.assign(question_data, obje);\n        if (val.length == 0) {\n          has_response.push(false);\n        } else {\n          has_response.push(true);\n        }\n      }\n\n      // save data\n      var trial_data = {\n        rt: response_time,\n        response: question_data,\n        question_order: question_order,\n      };\n      display_element.innerHTML = \"\";\n\n      // next trial\n      this.jsPsych.finishTrial(trial_data);\n    });\n\n    var startTime = performance.now();\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const question_data = {};\n    let rt = 1000;\n\n    for (const q of trial.questions) {\n      let n_answers;\n      if (q.required) {\n        n_answers = this.jsPsych.randomization.randomInt(1, q.options.length);\n      } else {\n        n_answers = this.jsPsych.randomization.randomInt(0, q.options.length);\n      }\n      const name = q.name ? q.name : `Q${trial.questions.indexOf(q)}`;\n      const selections = this.jsPsych.randomization.sampleWithoutReplacement(q.options, n_answers);\n      question_data[name] = selections;\n      rt += this.jsPsych.randomization.sampleExGaussian(1500, 400, 1 / 200, true);\n    }\n\n    const default_data = {\n      response: question_data,\n      rt: rt,\n      question_order: trial.randomize_question_order\n        ? this.jsPsych.randomization.shuffle([...Array(trial.questions.length).keys()])\n        : [...Array(trial.questions.length).keys()],\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const answers: [string, []][] = Object.entries(data.response);\n    for (let i = 0; i < answers.length; i++) {\n      for (const a of answers[i][1]) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\n            `#jspsych-survey-multi-select-response-${i}-${trial.questions[i].options.indexOf(a)}`\n          ),\n          ((data.rt - 1000) / answers.length) * (i + 1)\n        );\n      }\n    }\n\n    this.jsPsych.pluginAPI.clickTarget(\n      display_element.querySelector(\"#jspsych-survey-multi-select-next\"),\n      data.rt\n    );\n  }\n}\n\nexport default SurveyMultiSelectPlugin;\n"],"names":[],"mappings":"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"}