{
  "version": 3,
  "sources": ["../../../../../node_modules/src/scrollpanel/style/ScrollPanelStyle.js", "../../../../../node_modules/src/scrollpanel/BaseScrollPanel.vue", "../../../../../node_modules/src/scrollpanel/ScrollPanel.vue", "../../../../../node_modules/src/scrollpanel/ScrollPanel.vue?vue&type=template&id=46324a00&lang.js"],
  "sourcesContent": ["import { style } from '@primeuix/styles/scrollpanel';\nimport BaseStyle from '@primevue/core/base/style';\n\nconst classes = {\n    root: 'p-scrollpanel p-component',\n    contentContainer: 'p-scrollpanel-content-container',\n    content: 'p-scrollpanel-content',\n    barX: 'p-scrollpanel-bar p-scrollpanel-bar-x',\n    barY: 'p-scrollpanel-bar p-scrollpanel-bar-y'\n};\n\nexport default BaseStyle.extend({\n    name: 'scrollpanel',\n    style,\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ScrollPanelStyle from 'primevue/scrollpanel/style';\n\nexport default {\n    name: 'BaseScrollPanel',\n    extends: BaseComponent,\n    props: {\n        step: {\n            type: Number,\n            default: 5\n        }\n    },\n    style: ScrollPanelStyle,\n    provide() {\n        return {\n            $pcScrollPanel: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('contentContainer')\" v-bind=\"ptm('contentContainer')\">\n            <div ref=\"content\" :id=\"contentId\" :class=\"cx('content')\" @scroll=\"onScroll\" @mouseenter=\"moveBar\" v-bind=\"ptm('content')\">\n                <slot></slot>\n            </div>\n        </div>\n        <div\n            ref=\"xBar\"\n            :class=\"cx('barx')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"horizontal\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollLeft\"\n            @mousedown=\"onXBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            v-bind=\"ptm('barx')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n        <div\n            ref=\"yBar\"\n            :class=\"cx('bary')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"vertical\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollTop\"\n            @mousedown=\"onYBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            v-bind=\"ptm('bary')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n    </div>\n</template>\n\n<script>\nimport { addClass, getHeight, removeClass } from '@primeuix/utils/dom';\nimport BaseScrollPanel from './BaseScrollPanel.vue';\n\nexport default {\n    name: 'ScrollPanel',\n    extends: BaseScrollPanel,\n    inheritAttrs: false,\n    initialized: false,\n    documentResizeListener: null,\n    documentMouseMoveListener: null,\n    documentMouseUpListener: null,\n    frame: null,\n    scrollXRatio: null,\n    scrollYRatio: null,\n    isXBarClicked: false,\n    isYBarClicked: false,\n    lastPageX: null,\n    lastPageY: null,\n    timer: null,\n    outsideClickListener: null,\n    data() {\n        return {\n            orientation: 'vertical',\n            lastScrollTop: 0,\n            lastScrollLeft: 0\n        };\n    },\n    mounted() {\n        if (this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    updated() {\n        if (!this.initialized && this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    beforeUnmount() {\n        this.unbindDocumentResizeListener();\n\n        if (this.frame) {\n            window.cancelAnimationFrame(this.frame);\n        }\n    },\n    methods: {\n        initialize() {\n            this.moveBar();\n            this.bindDocumentResizeListener();\n            this.calculateContainerHeight();\n        },\n        calculateContainerHeight() {\n            let containerStyles = getComputedStyle(this.$el),\n                xBarStyles = getComputedStyle(this.$refs.xBar),\n                pureContainerHeight = getHeight(this.$el) - parseInt(xBarStyles['height'], 10);\n\n            if (containerStyles['max-height'] !== 'none' && pureContainerHeight === 0) {\n                if (this.$refs.content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n                    this.$el.style.height = containerStyles['max-height'];\n                } else {\n                    this.$el.style.height =\n                        this.$refs.content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + 'px';\n                }\n            }\n        },\n        moveBar() {\n            if (this.$refs.content) {\n                /* horizontal scroll */\n                let totalWidth = this.$refs.content.scrollWidth;\n                let ownWidth = this.$refs.content.clientWidth;\n                let bottom = (this.$el.clientHeight - this.$refs.xBar.clientHeight) * -1;\n\n                this.scrollXRatio = ownWidth / totalWidth;\n\n                /* vertical scroll */\n                let totalHeight = this.$refs.content.scrollHeight;\n                let ownHeight = this.$refs.content.clientHeight;\n                let right = (this.$el.clientWidth - this.$refs.yBar.clientWidth) * -1;\n\n                this.scrollYRatio = ownHeight / totalHeight;\n\n                const scrollBarHeight = Math.max(this.scrollYRatio * 100, 10);\n\n                this.frame = this.requestAnimationFrame(() => {\n                    if (this.$refs.xBar) {\n                        if (this.scrollXRatio >= 1) {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.xBar.style.cssText = 'width:' + Math.max(this.scrollXRatio * 100, 10) + '%; inset-inline-start:' + (Math.abs(this.$refs.content.scrollLeft) / totalWidth) * 100 + '%;bottom:' + bottom + 'px;';\n                        }\n                    }\n\n                    if (this.$refs.yBar) {\n                        if (this.scrollYRatio >= 1) {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.yBar.style.cssText =\n                                'height:' + scrollBarHeight + '%; top: calc(' + (this.$refs.content.scrollTop / (totalHeight - ownHeight)) * (100 - scrollBarHeight) + '% - ' + this.$refs.xBar.clientHeight + 'px); inset-inline-end:' + right + 'px;';\n                        }\n                    }\n                });\n            }\n        },\n        onYBarMouseDown(e) {\n            this.isYBarClicked = true;\n            this.$refs.yBar.focus();\n            this.lastPageY = e.pageY;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onXBarMouseDown(e) {\n            this.isXBarClicked = true;\n            this.$refs.xBar.focus();\n            this.lastPageX = e.pageX;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onScroll(event) {\n            if (this.lastScrollLeft !== event.target.scrollLeft) {\n                this.lastScrollLeft = event.target.scrollLeft;\n                this.orientation = 'horizontal';\n            } else if (this.lastScrollTop !== event.target.scrollTop) {\n                this.lastScrollTop = event.target.scrollTop;\n                this.orientation = 'vertical';\n            }\n\n            this.moveBar();\n        },\n        onKeyDown(event) {\n            if (this.orientation === 'vertical') {\n                switch (event.code) {\n                    case 'ArrowDown': {\n                        this.setTimer('scrollTop', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowUp': {\n                        this.setTimer('scrollTop', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowRight': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            } else if (this.orientation === 'horizontal') {\n                switch (event.code) {\n                    case 'ArrowRight': {\n                        this.setTimer('scrollLeft', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft': {\n                        this.setTimer('scrollLeft', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowDown':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            }\n        },\n        onKeyUp() {\n            this.clearTimer();\n        },\n        repeat(bar, step) {\n            this.$refs.content[bar] += step;\n            this.moveBar();\n        },\n        setTimer(bar, step) {\n            this.clearTimer();\n            this.timer = setTimeout(() => {\n                this.repeat(bar, step);\n            }, 40);\n        },\n        clearTimer() {\n            if (this.timer) {\n                clearTimeout(this.timer);\n            }\n        },\n        onDocumentMouseMove(e) {\n            if (this.isXBarClicked) {\n                this.onMouseMoveForXBar(e);\n            } else if (this.isYBarClicked) {\n                this.onMouseMoveForYBar(e);\n            } else {\n                this.onMouseMoveForXBar(e);\n                this.onMouseMoveForYBar(e);\n            }\n        },\n        onMouseMoveForXBar(e) {\n            let deltaX = e.pageX - this.lastPageX;\n\n            this.lastPageX = e.pageX;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollLeft += deltaX / this.scrollXRatio;\n            });\n        },\n        onMouseMoveForYBar(e) {\n            let deltaY = e.pageY - this.lastPageY;\n\n            this.lastPageY = e.pageY;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollTop += deltaY / this.scrollYRatio;\n            });\n        },\n        onFocus(event) {\n            if (this.$refs.xBar.isSameNode(event.target)) {\n                this.orientation = 'horizontal';\n            } else if (this.$refs.yBar.isSameNode(event.target)) {\n                this.orientation = 'vertical';\n            }\n        },\n        onBlur() {\n            if (this.orientation === 'horizontal') {\n                this.orientation = 'vertical';\n            }\n        },\n        onDocumentMouseUp() {\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            this.$refs.xBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.unbindDocumentMouseListeners();\n            this.isXBarClicked = false;\n            this.isYBarClicked = false;\n        },\n        requestAnimationFrame(f) {\n            let frame = window.requestAnimationFrame || this.timeoutFrame;\n\n            return frame(f);\n        },\n        refresh() {\n            this.moveBar();\n        },\n        scrollTop(scrollTop) {\n            let scrollableHeight = this.$refs.content.scrollHeight - this.$refs.content.clientHeight;\n\n            scrollTop = scrollTop > scrollableHeight ? scrollableHeight : scrollTop > 0 ? scrollTop : 0;\n            this.$refs.content.scrollTop = scrollTop;\n        },\n        timeoutFrame(fn) {\n            setTimeout(fn, 0);\n        },\n        bindDocumentMouseListeners() {\n            if (!this.documentMouseMoveListener) {\n                this.documentMouseMoveListener = (e) => {\n                    this.onDocumentMouseMove(e);\n                };\n\n                document.addEventListener('mousemove', this.documentMouseMoveListener);\n            }\n\n            if (!this.documentMouseUpListener) {\n                this.documentMouseUpListener = (e) => {\n                    this.onDocumentMouseUp(e);\n                };\n\n                document.addEventListener('mouseup', this.documentMouseUpListener);\n            }\n        },\n        unbindDocumentMouseListeners() {\n            if (this.documentMouseMoveListener) {\n                document.removeEventListener('mousemove', this.documentMouseMoveListener);\n                this.documentMouseMoveListener = null;\n            }\n\n            if (this.documentMouseUpListener) {\n                document.removeEventListener('mouseup', this.documentMouseUpListener);\n                this.documentMouseUpListener = null;\n            }\n        },\n        bindDocumentResizeListener() {\n            if (!this.documentResizeListener) {\n                this.documentResizeListener = () => {\n                    this.moveBar();\n                };\n\n                window.addEventListener('resize', this.documentResizeListener);\n            }\n        },\n        unbindDocumentResizeListener() {\n            if (this.documentResizeListener) {\n                window.removeEventListener('resize', this.documentResizeListener);\n                this.documentResizeListener = null;\n            }\n        }\n    },\n    computed: {\n        contentId() {\n            return this.$id + '_content';\n        }\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('contentContainer')\" v-bind=\"ptm('contentContainer')\">\n            <div ref=\"content\" :id=\"contentId\" :class=\"cx('content')\" @scroll=\"onScroll\" @mouseenter=\"moveBar\" v-bind=\"ptm('content')\">\n                <slot></slot>\n            </div>\n        </div>\n        <div\n            ref=\"xBar\"\n            :class=\"cx('barx')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"horizontal\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollLeft\"\n            @mousedown=\"onXBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            v-bind=\"ptm('barx')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n        <div\n            ref=\"yBar\"\n            :class=\"cx('bary')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"vertical\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollTop\"\n            @mousedown=\"onYBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            v-bind=\"ptm('bary')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n    </div>\n</template>\n\n<script>\nimport { addClass, getHeight, removeClass } from '@primeuix/utils/dom';\nimport BaseScrollPanel from './BaseScrollPanel.vue';\n\nexport default {\n    name: 'ScrollPanel',\n    extends: BaseScrollPanel,\n    inheritAttrs: false,\n    initialized: false,\n    documentResizeListener: null,\n    documentMouseMoveListener: null,\n    documentMouseUpListener: null,\n    frame: null,\n    scrollXRatio: null,\n    scrollYRatio: null,\n    isXBarClicked: false,\n    isYBarClicked: false,\n    lastPageX: null,\n    lastPageY: null,\n    timer: null,\n    outsideClickListener: null,\n    data() {\n        return {\n            orientation: 'vertical',\n            lastScrollTop: 0,\n            lastScrollLeft: 0\n        };\n    },\n    mounted() {\n        if (this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    updated() {\n        if (!this.initialized && this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    beforeUnmount() {\n        this.unbindDocumentResizeListener();\n\n        if (this.frame) {\n            window.cancelAnimationFrame(this.frame);\n        }\n    },\n    methods: {\n        initialize() {\n            this.moveBar();\n            this.bindDocumentResizeListener();\n            this.calculateContainerHeight();\n        },\n        calculateContainerHeight() {\n            let containerStyles = getComputedStyle(this.$el),\n                xBarStyles = getComputedStyle(this.$refs.xBar),\n                pureContainerHeight = getHeight(this.$el) - parseInt(xBarStyles['height'], 10);\n\n            if (containerStyles['max-height'] !== 'none' && pureContainerHeight === 0) {\n                if (this.$refs.content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n                    this.$el.style.height = containerStyles['max-height'];\n                } else {\n                    this.$el.style.height =\n                        this.$refs.content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + 'px';\n                }\n            }\n        },\n        moveBar() {\n            if (this.$refs.content) {\n                /* horizontal scroll */\n                let totalWidth = this.$refs.content.scrollWidth;\n                let ownWidth = this.$refs.content.clientWidth;\n                let bottom = (this.$el.clientHeight - this.$refs.xBar.clientHeight) * -1;\n\n                this.scrollXRatio = ownWidth / totalWidth;\n\n                /* vertical scroll */\n                let totalHeight = this.$refs.content.scrollHeight;\n                let ownHeight = this.$refs.content.clientHeight;\n                let right = (this.$el.clientWidth - this.$refs.yBar.clientWidth) * -1;\n\n                this.scrollYRatio = ownHeight / totalHeight;\n\n                const scrollBarHeight = Math.max(this.scrollYRatio * 100, 10);\n\n                this.frame = this.requestAnimationFrame(() => {\n                    if (this.$refs.xBar) {\n                        if (this.scrollXRatio >= 1) {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.xBar.style.cssText = 'width:' + Math.max(this.scrollXRatio * 100, 10) + '%; inset-inline-start:' + (Math.abs(this.$refs.content.scrollLeft) / totalWidth) * 100 + '%;bottom:' + bottom + 'px;';\n                        }\n                    }\n\n                    if (this.$refs.yBar) {\n                        if (this.scrollYRatio >= 1) {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.yBar.style.cssText =\n                                'height:' + scrollBarHeight + '%; top: calc(' + (this.$refs.content.scrollTop / (totalHeight - ownHeight)) * (100 - scrollBarHeight) + '% - ' + this.$refs.xBar.clientHeight + 'px); inset-inline-end:' + right + 'px;';\n                        }\n                    }\n                });\n            }\n        },\n        onYBarMouseDown(e) {\n            this.isYBarClicked = true;\n            this.$refs.yBar.focus();\n            this.lastPageY = e.pageY;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onXBarMouseDown(e) {\n            this.isXBarClicked = true;\n            this.$refs.xBar.focus();\n            this.lastPageX = e.pageX;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onScroll(event) {\n            if (this.lastScrollLeft !== event.target.scrollLeft) {\n                this.lastScrollLeft = event.target.scrollLeft;\n                this.orientation = 'horizontal';\n            } else if (this.lastScrollTop !== event.target.scrollTop) {\n                this.lastScrollTop = event.target.scrollTop;\n                this.orientation = 'vertical';\n            }\n\n            this.moveBar();\n        },\n        onKeyDown(event) {\n            if (this.orientation === 'vertical') {\n                switch (event.code) {\n                    case 'ArrowDown': {\n                        this.setTimer('scrollTop', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowUp': {\n                        this.setTimer('scrollTop', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowRight': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            } else if (this.orientation === 'horizontal') {\n                switch (event.code) {\n                    case 'ArrowRight': {\n                        this.setTimer('scrollLeft', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft': {\n                        this.setTimer('scrollLeft', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowDown':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            }\n        },\n        onKeyUp() {\n            this.clearTimer();\n        },\n        repeat(bar, step) {\n            this.$refs.content[bar] += step;\n            this.moveBar();\n        },\n        setTimer(bar, step) {\n            this.clearTimer();\n            this.timer = setTimeout(() => {\n                this.repeat(bar, step);\n            }, 40);\n        },\n        clearTimer() {\n            if (this.timer) {\n                clearTimeout(this.timer);\n            }\n        },\n        onDocumentMouseMove(e) {\n            if (this.isXBarClicked) {\n                this.onMouseMoveForXBar(e);\n            } else if (this.isYBarClicked) {\n                this.onMouseMoveForYBar(e);\n            } else {\n                this.onMouseMoveForXBar(e);\n                this.onMouseMoveForYBar(e);\n            }\n        },\n        onMouseMoveForXBar(e) {\n            let deltaX = e.pageX - this.lastPageX;\n\n            this.lastPageX = e.pageX;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollLeft += deltaX / this.scrollXRatio;\n            });\n        },\n        onMouseMoveForYBar(e) {\n            let deltaY = e.pageY - this.lastPageY;\n\n            this.lastPageY = e.pageY;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollTop += deltaY / this.scrollYRatio;\n            });\n        },\n        onFocus(event) {\n            if (this.$refs.xBar.isSameNode(event.target)) {\n                this.orientation = 'horizontal';\n            } else if (this.$refs.yBar.isSameNode(event.target)) {\n                this.orientation = 'vertical';\n            }\n        },\n        onBlur() {\n            if (this.orientation === 'horizontal') {\n                this.orientation = 'vertical';\n            }\n        },\n        onDocumentMouseUp() {\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            this.$refs.xBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.unbindDocumentMouseListeners();\n            this.isXBarClicked = false;\n            this.isYBarClicked = false;\n        },\n        requestAnimationFrame(f) {\n            let frame = window.requestAnimationFrame || this.timeoutFrame;\n\n            return frame(f);\n        },\n        refresh() {\n            this.moveBar();\n        },\n        scrollTop(scrollTop) {\n            let scrollableHeight = this.$refs.content.scrollHeight - this.$refs.content.clientHeight;\n\n            scrollTop = scrollTop > scrollableHeight ? scrollableHeight : scrollTop > 0 ? scrollTop : 0;\n            this.$refs.content.scrollTop = scrollTop;\n        },\n        timeoutFrame(fn) {\n            setTimeout(fn, 0);\n        },\n        bindDocumentMouseListeners() {\n            if (!this.documentMouseMoveListener) {\n                this.documentMouseMoveListener = (e) => {\n                    this.onDocumentMouseMove(e);\n                };\n\n                document.addEventListener('mousemove', this.documentMouseMoveListener);\n            }\n\n            if (!this.documentMouseUpListener) {\n                this.documentMouseUpListener = (e) => {\n                    this.onDocumentMouseUp(e);\n                };\n\n                document.addEventListener('mouseup', this.documentMouseUpListener);\n            }\n        },\n        unbindDocumentMouseListeners() {\n            if (this.documentMouseMoveListener) {\n                document.removeEventListener('mousemove', this.documentMouseMoveListener);\n                this.documentMouseMoveListener = null;\n            }\n\n            if (this.documentMouseUpListener) {\n                document.removeEventListener('mouseup', this.documentMouseUpListener);\n                this.documentMouseUpListener = null;\n            }\n        },\n        bindDocumentResizeListener() {\n            if (!this.documentResizeListener) {\n                this.documentResizeListener = () => {\n                    this.moveBar();\n                };\n\n                window.addEventListener('resize', this.documentResizeListener);\n            }\n        },\n        unbindDocumentResizeListener() {\n            if (this.documentResizeListener) {\n                window.removeEventListener('resize', this.documentResizeListener);\n                this.documentResizeListener = null;\n            }\n        }\n    },\n    computed: {\n        contentId() {\n            return this.$id + '_content';\n        }\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["classes", "root", "contentContainer", "content", "barX", "barY", "BaseStyle", "extend", "name", "style", "name", "BaseComponent", "props", "step", "type", "Number", "style", "ScrollPanelStyle", "provide", "$pcScrollPanel", "$parentInstance", "script", "BaseScrollPanel", "inheritAttrs", "initialized", "documentResizeListener", "documentMouseMoveListener", "documentMouseUpListener", "frame", "scrollXRatio", "scrollYRatio", "isXBarClicked", "isYBarClicked", "lastPageX", "lastPageY", "timer", "outsideClickListener", "data", "orientation", "lastScrollTop", "lastScrollLeft", "mounted", "$el", "offsetParent", "initialize", "updated", "beforeUnmount", "unbindDocumentResizeListener", "window", "cancelAnimationFrame", "methods", "moveBar", "bindDocumentResizeListener", "calculateContainerHeight", "containerStyles", "getComputedStyle", "xBarStyles", "$refs", "xBar", "pureContainerHeight", "getHeight", "parseInt", "content", "offsetHeight", "height", "parseFloat", "paddingTop", "paddingBottom", "borderTopWidth", "borderBottomWidth", "_this", "totalWidth", "scrollWidth", "ownWidth", "clientWidth", "bottom", "clientHeight", "totalHeight", "scrollHeight", "ownHeight", "right", "yBar", "scrollBarHeight", "Math", "max", "requestAnimationFrame", "setAttribute", "isUnstyled", "addClass", "removeClass", "cssText", "abs", "scrollLeft", "scrollTop", "onYBarMouseDown", "e", "focus", "pageY", "document", "body", "bindDocumentMouseListeners", "preventDefault", "onXBarMouseDown", "pageX", "onScroll", "event", "target", "onKeyDown", "code", "setTimer", "onKeyUp", "clearTimer", "repeat", "bar", "_this2", "setTimeout", "clearTimeout", "onDocumentMouseMove", "onMouseMoveForXBar", "onMouseMoveForYBar", "_this3", "deltaX", "_this4", "deltaY", "onFocus", "isSameNode", "onBlur", "onDocumentMouseUp", "unbindDocumentMouseListeners", "f", "timeoutFrame", "refresh", "scrollableHeight", "fn", "_this5", "addEventListener", "removeEventListener", "_this6", "computed", "contentId", "$id", "_openBlock", "_createElementBlock", "_mergeProps", "_ctx", "cx", "ptmi", "_createElementVNode", "ptm", "ref", "id", "$options", "apply", "arguments", "onMouseenter", "_renderSlot", "$slots", "tabindex", "role", "$data", "onMousedown", "onKeydown", "_cache", "$event", "onKeyup", "_hoisted_2", "_hoisted_3"]
}
