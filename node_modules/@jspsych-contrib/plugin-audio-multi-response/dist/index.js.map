{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"audio-multi-response\",\n  parameters: {\n    /** The HTML string to be displayed. */\n    stimulus: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Stimulus\",\n      default: undefined,\n    },\n    /** Array containing the label(s) for the button(s). */\n    button_choices: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button Choices\",\n      default: [],\n      array: true,\n    },\n    /** Array containing the key(s) the subject is allowed to press to respond to the stimulus. */\n    keyboard_choices: {\n      type: ParameterType.KEYS,\n      pretty_name: \"Keyboard Choices\",\n      default: \"NO_KEYS\",\n    },\n    /** The HTML for creating button. Can create own style. Use the \"%choice%\" string to indicate where the label from the choices parameter should be inserted. */\n    button_html: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Button HTML\",\n      default: '<button class=\"jspsych-btn\">%choice%</button>',\n      array: true,\n    },\n    /** Any content here will be displayed below the stimulus. */\n    prompt: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Prompt\",\n      default: null,\n    },\n    /** Whether to display the prompt above the buttons. */\n    prompt_above_buttons: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Prompt above buttons\",\n      default: false,\n    },\n    /** How long to show trial before it ends. */\n    trial_duration: {\n      type: ParameterType.INT,\n      pretty_name: \"Trial duration\",\n      default: null,\n    },\n    /** The vertical margin of the button. */\n    margin_vertical: {\n      type: ParameterType.STRING,\n      pretty_name: \"Margin vertical\",\n      default: \"0px\",\n    },\n    /** The horizontal margin of the button. */\n    margin_horizontal: {\n      type: ParameterType.STRING,\n      pretty_name: \"Margin horizontal\",\n      default: \"8px\",\n    },\n    /** If true, trial will end when subject makes a response. */\n    response_ends_trial: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Response ends trial\",\n      default: true,\n    },\n    /** If true, then the trial will end as soon as the audio file finishes playing. */\n    trial_ends_after_audio: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Trial ends after audio\",\n      default: false,\n    },\n    /** If true, then responses are allowed while the audio is playing. If false, then the audio must finish playing before a response is accepted. */\n    response_allowed_while_playing: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Response allowed while playing\",\n      default: true,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **audio-multi-response**\n * jsPsych plugin for playing an audio file and getting a button or keyboard response\n * @author Adam Richie-Halford\n * @see {@link https://www.jspsych.org/plugins/jspsych-audio-multi-response/ audio-multi-response plugin documentation on jspsych.org}\n */\nclass AudioMultiResponsePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n  private audio;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>, on_load: () => void) {\n    // hold the .resolve() function from the Promise that ends the trial\n    let trial_complete;\n\n    // setup stimulus\n    var context = this.jsPsych.pluginAPI.audioContext();\n\n    // store response\n    let response = {\n      rt: null,\n      key: null,\n      button: null,\n      source: null,\n    };\n\n    // record webaudio context start time\n    var startTime;\n\n    // load audio file\n    this.jsPsych.pluginAPI\n      .getAudioBuffer(trial.stimulus)\n      .then((buffer) => {\n        if (context !== null) {\n          this.audio = context.createBufferSource();\n          this.audio.buffer = buffer;\n          this.audio.connect(context.destination);\n        } else {\n          this.audio = buffer;\n          this.audio.currentTime = 0;\n        }\n        setupTrial();\n      })\n      .catch((err) => {\n        console.error(\n          `Failed to load audio file \"${trial.stimulus}\". Try checking the file path. We recommend using the preload plugin to load audio files.`\n        );\n        console.error(err);\n      });\n\n    const setupTrial = () => {\n      // set up end event if trial needs it\n      if (trial.trial_ends_after_audio) {\n        this.audio.addEventListener(\"ended\", end_trial);\n      }\n\n      // enable buttons after audio ends if necessary\n      if (!trial.response_allowed_while_playing && !trial.trial_ends_after_audio) {\n        this.audio.addEventListener(\"ended\", setup_keyboard_listener);\n        this.audio.addEventListener(\"ended\", enable_buttons);\n      }\n\n      //display buttons\n      var buttons = [];\n      if (Array.isArray(trial.button_html)) {\n        if (trial.button_html.length == trial.button_choices.length) {\n          buttons = trial.button_html;\n        } else {\n          console.error(\n            \"Error in audio-multi-response plugin. The length of the button_html array does not equal the length of the choices array\"\n          );\n        }\n      } else {\n        for (var i = 0; i < trial.button_choices.length; i++) {\n          buttons.push(trial.button_html);\n        }\n      }\n\n      let html = '<div id=\"jspsych-audio-multi-response-btngroup\">';\n\n      for (var i = 0; i < trial.button_choices.length; i++) {\n        var str = buttons[i].replace(/%choice%/g, trial.button_choices[i]);\n        html +=\n          '<div class=\"jspsych-audio-multi-response-button\" style=\"cursor: pointer; display: inline-block; margin:' +\n          trial.margin_vertical +\n          \" \" +\n          trial.margin_horizontal +\n          '\" id=\"jspsych-audio-multi-response-button-' +\n          i +\n          '\" data-choice=\"' +\n          i +\n          '\">' +\n          str +\n          \"</div>\";\n      }\n      html += \"</div>\";\n\n      //show prompt if there is one\n      if (trial.prompt !== null) {\n        if (trial.prompt_above_buttons) {\n          html = '<div id=\"jspsych-audio-multi-response-prompt\">' + trial.prompt + \"</div>\" + html;\n        } else {\n          html += '<div id=\"jspsych-audio-multi-response-prompt\">' + trial.prompt + \"</div>\";\n        }\n      }\n\n      display_element.innerHTML = html;\n\n      if (trial.response_allowed_while_playing) {\n        enable_buttons();\n        setup_keyboard_listener();\n      } else {\n        disable_buttons();\n      }\n\n      // start time\n      startTime = performance.now();\n\n      // start audio\n      if (context !== null) {\n        startTime = context.currentTime;\n        this.audio.start(startTime);\n      } else {\n        this.audio.play();\n      }\n\n      // end trial if time limit is set\n      if (trial.trial_duration !== null) {\n        this.jsPsych.pluginAPI.setTimeout(() => {\n          end_trial();\n        }, trial.trial_duration);\n      }\n\n      on_load();\n    };\n\n    // function to end trial when it is time\n    const end_trial = () => {\n      // kill any remaining setTimeout handlers\n      this.jsPsych.pluginAPI.clearAllTimeouts();\n\n      // stop the audio file if it is playing\n      // remove end event listeners if they exist\n      if (context !== null) {\n        this.audio.stop();\n      } else {\n        this.audio.pause();\n      }\n\n      this.audio.removeEventListener(\"ended\", end_trial);\n      this.audio.removeEventListener(\"ended\", setup_keyboard_listener);\n      this.audio.removeEventListener(\"ended\", enable_buttons);\n\n      // kill keyboard listeners\n      this.jsPsych.pluginAPI.cancelAllKeyboardResponses();\n\n      // gather the data to store for the trial\n      const trial_data = {\n        rt: response.rt,\n        stimulus: trial.stimulus,\n        keyboard_response: response.key,\n        button_response: response.button,\n        response_source: response.source,\n      };\n\n      // clear the display\n      display_element.innerHTML = \"\";\n\n      // move on to the next trial\n      this.jsPsych.finishTrial(trial_data);\n\n      trial_complete();\n    };\n\n    function button_response(e) {\n      var choice = e.currentTarget.getAttribute(\"data-choice\"); // don't use dataset for jsdom compatibility\n      after_button_response(choice);\n    }\n\n    function disable_buttons() {\n      var btns = document.querySelectorAll(\".jspsych-audio-multi-response-button\");\n      for (var i = 0; i < btns.length; i++) {\n        var btn_el = btns[i].querySelector(\"button\");\n        if (btn_el) {\n          btn_el.disabled = true;\n        }\n        btns[i].removeEventListener(\"click\", button_response);\n      }\n    }\n\n    function enable_buttons() {\n      var btns = document.querySelectorAll(\".jspsych-audio-multi-response-button\");\n      for (var i = 0; i < btns.length; i++) {\n        var btn_el = btns[i].querySelector(\"button\");\n        if (btn_el) {\n          btn_el.disabled = false;\n        }\n        btns[i].addEventListener(\"click\", button_response);\n      }\n    }\n\n    // function to handle responses by the subject\n    function after_button_response(choice) {\n      // measure rt\n      var endTime = performance.now();\n      var rt = Math.round(endTime - startTime);\n      if (context !== null) {\n        endTime = context.currentTime;\n        rt = Math.round((endTime - startTime) * 1000);\n      }\n      response.button = parseInt(choice);\n      response.rt = rt;\n      response.source = \"button\";\n\n      // disable all the buttons after a response\n      disable_buttons();\n\n      if (trial.response_ends_trial) {\n        end_trial();\n      }\n    }\n\n    // function to handle keyboard responses by the subject\n    const after_keyboard_response = (info) => {\n      // only record the first response\n      if (response.key == null) {\n        response = {\n          source: \"keyboard\",\n          button: null,\n          ...info,\n        };\n      }\n\n      if (trial.response_ends_trial) {\n        end_trial();\n      }\n    };\n\n    const setup_keyboard_listener = () => {\n      // start the keyboard response listener\n      if (trial.keyboard_choices != \"NO_KEYS\") {\n        let responseArgs;\n\n        if (context !== null) {\n          responseArgs = {\n            rt_method: \"audio\",\n            audio_context: context,\n            audio_context_start_time: startTime,\n          };\n        } else {\n          responseArgs = {\n            rt_method: \"performance\",\n          };\n        }\n\n        this.jsPsych.pluginAPI.getKeyboardResponse({\n          callback_function: after_keyboard_response,\n          valid_responses: trial.keyboard_choices,\n          persist: false,\n          allow_held_key: false,\n          ...responseArgs,\n        });\n      }\n    };\n\n    return new Promise((resolve) => {\n      trial_complete = resolve;\n    });\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const keyboard_data = {\n      stimulus: trial.stimulus,\n      rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),\n      keyboard_response: this.jsPsych.pluginAPI.getValidKey(trial.keyboard_choices),\n      button_response: null,\n      response_source: \"keyboard\",\n    };\n\n    const button_data = {\n      stimulus: trial.stimulus,\n      rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),\n      button_response: this.jsPsych.randomization.randomInt(0, trial.button_choices.length - 1),\n      keyboard_response: null,\n      response_source: \"button\",\n    };\n\n    const default_data = Math.random() < 0.5 ? keyboard_data : button_data;\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    const respond = () => {\n      if (data.rt !== null) {\n        if (data.button_response !== null) {\n          this.jsPsych.pluginAPI.clickTarget(\n            display_element.querySelector(`div[data-choice=\"${data.response}\"] button`),\n            data.rt\n          );\n        } else {\n          this.jsPsych.pluginAPI.pressKey(data.keyboard_response, data.rt);\n        }\n      }\n    };\n\n    this.trial(display_element, trial, () => {\n      load_callback();\n      if (!trial.response_allowed_while_playing) {\n        this.audio.addEventListener(\"ended\", respond);\n      } else {\n        respond();\n      }\n    });\n  }\n}\n\nexport default AudioMultiResponsePlugin;\n"],"names":[],"mappings":"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"}