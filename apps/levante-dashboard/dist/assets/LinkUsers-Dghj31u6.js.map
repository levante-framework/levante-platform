{"version":3,"file":"LinkUsers-Dghj31u6.js","sources":["../../src/components/userInfo/LinkUsersInfo.vue","../../src/pages/users/LinkUsers.vue"],"sourcesContent":["<template>\n  <PvPanel header=\"Link Users\" class=\"link-users-panel\">\n    <div class=\"info-message-container\">\n      <i class=\"pi pi-exclamation-circle\"></i>\n      <p>\n        Make sure you are editing the downloaded file you got after adding users. This new file contains all of your\n        information and LEVANTE UIDs.\n      </p>\n    </div>\n\n    <div class=\"how-to-section\">\n      <h3>How to Link Users</h3>\n      <ol class=\"numbered-steps\">\n        <li>\n          <span class=\"step-number\">1</span>Fill in CSV with the user linking data from below. Users need to be linked\n          so we can keep track of their relationships, like assigning the proper specific survey sections to caregiver\n          and teacher users.\n        </li>\n        <li><span class=\"step-number\">2</span>Upload the file and click \"Start Linking\"</li>\n      </ol>\n    </div>\n\n    <p>\n      The following fields define the columns for your CSV file when linking users. Please refer to the legend below for\n      specific requirements on each field.\n    </p>\n    <ul>\n      <li><b>id</b><span class=\"field-marker\">*</span> - A unique identifier for the user in CSV file.</li>\n      <li><b>userType</b><span class=\"field-marker\">*</span> - The type of user: child, caregiver, teacher.</li>\n      <li>\n        <b>caregiverId</b><span class=\"field-marker\">*</span><span class=\"field-marker\">†</span> - A unique identifier\n        (id) for the child's caregiver.\n      </li>\n      <li>\n        <b>teacherId</b><span class=\"field-marker\">*</span><span class=\"field-marker\">†</span> - A unique identifier\n        (id) for the child's teacher. (*only required if administering teacher survey)\n      </li>\n      <li>\n        <b>uid</b><span class=\"field-marker\">*</span><span class=\"field-marker\">‡</span> - The unique LEVANTE identifier\n        that is returned after user is added to dashboard.\n      </li>\n    </ul>\n\n    <p class=\"mb-6 legend\">\n      <span class=\"field-marker\">*</span> Required for this Step<br />\n      <span class=\"field-marker\">†</span> Required only for child users. Leave blank for caregiver or teacher users.<br />\n      <span class=\"field-marker\">‡</span> Created by the platform during Add Users step.\n    </p>\n\n    <p>\n      Below is an example of what your CSV/spreadsheet should look like. Only the required columns will be processed.\n    </p>\n\n    <div class=\"csv-example-image-container\">\n      <img\n        id=\"link-users-example-image\"\n        :src=\"LEVANTE_BUCKET_URL + '/link_users_example.png'\"\n        alt=\"Link Users CSV example\"\n        class=\"csv-example-image\"\n      />\n    </div>\n  </PvPanel>\n</template>\n\n<script setup>\nimport PvPanel from 'primevue/panel';\nimport { LEVANTE_BUCKET_URL } from '@/constants/bucket';\n</script>\n\n<style scoped>\n.info-message-container {\n  display: flex;\n  background-color: rgb(252, 252, 218);\n  border: 2px solid rgb(228, 206, 7);\n  border-radius: 0.5rem;\n  color: rgb(199, 180, 7);\n  margin-bottom: 1rem;\n\n  p {\n    font-weight: bold;\n    margin: 1rem 1rem 1rem 0;\n  }\n\n  i {\n    margin: 1rem;\n  }\n}\n\n#example-image {\n  width: 100%;\n  border-radius: 0.5rem;\n  margin-top: 0.5rem;\n}\n\n.field-marker {\n  color: var(--bright-red);\n  font-weight: bold;\n  vertical-align: super;\n  font-size: 0.8em;\n  margin-left: 0.1em;\n}\n\n.legend {\n  line-height: 1.6;\n}\n\n.link-users-panel :deep(.p-panel-header) {\n  font-size: 2rem;\n}\n\n.mb-6 {\n  margin-bottom: 1.5rem;\n}\n\n.how-to-section {\n  background-color: #f8f9fa;\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  margin: 2rem 0;\n\n  h3 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n    color: var(--primary-color);\n    font-size: 1.2rem;\n  }\n\n  .numbered-steps {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n\n    li {\n      margin-bottom: 0.75rem;\n      line-height: 1.5;\n      display: flex;\n      align-items: flex-start;\n      gap: 0.75rem;\n    }\n\n    li:last-child {\n      margin-bottom: 0;\n    }\n\n    .step-number {\n      background-color: var(--primary-color);\n      color: white;\n      width: 24px;\n      height: 24px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-weight: bold;\n      flex-shrink: 0;\n    }\n  }\n}\n\n.csv-example-image-container {\n  display: flex;\n  justify-content: center;\n  overflow-x: auto;\n  position: relative;\n  height: 123px;\n\n  .csv-example-image {\n    width: auto;\n    max-height: 108px;\n    display: block;\n    position: absolute;\n    left: 0;\n  }\n}\n</style>\n","<template>\n  <main class=\"container main\">\n    <section class=\"main-body\">\n      <LinkUsersInfo />\n\n      <div v-if=\"!isFileUploaded\" class=\"text-gray-500 mb-2 surface-100 border-round p-2 mt-5\">\n        <PvFileUpload\n          name=\"linkUsersUploader[]\"\n          custom-upload\n          accept=\".csv\"\n          class=\"bg-primary mb-2 p-3 w-2 text-white border-none border-round h-3rem m-0 hover:bg-red-900\"\n          auto\n          :show-upload-button=\"false\"\n          :show-cancel-button=\"false\"\n          @uploader=\"onFileUpload($event)\"\n        >\n          <template #empty>\n            <div class=\"flex justify-center items-center text-gray-500\">\n              <p>Click choose or drag and drop files to here to upload.</p>\n            </div>\n          </template>\n        </PvFileUpload>\n      </div>\n\n      <div v-if=\"isFileUploaded && !errorUsers.length\">\n        <PvDataTable\n          ref=\"dataTable\"\n          :value=\"rawUserFile\"\n          show-gridlines\n          :row-hover=\"true\"\n          :resizable-columns=\"true\"\n          paginator\n          :always-show-paginator=\"false\"\n          :rows=\"10\"\n          class=\"datatable\"\n        >\n          <PvColumn v-for=\"col of allFields\" :key=\"col.field\" :field=\"col.field\">\n            <template #header>\n              <div class=\"col-header\">\n                <b>{{ col.header }}</b>\n              </div>\n            </template>\n          </PvColumn>\n        </PvDataTable>\n\n        <div class=\"submit-container\">\n          <PvButton\n            :label=\"activeSubmit ? 'Linking Users' : 'Start Linking'\"\n            :icon=\"activeSubmit ? 'pi pi-spin pi-spinner' : ''\"\n            :disabled=\"activeSubmit\"\n            class=\"bg-primary mb-2 p-3 w-2 text-white border-none border-round h-3rem m-0 hover:bg-red-900\"\n            @click=\"submitUsers\"\n          />\n        </div>\n      </div>\n\n      <div v-if=\"showErrorTable\" class=\"error-container\">\n        <div class=\"error-header\">\n          <h3>Rows with Errors</h3>\n        </div>\n        <PvDataTable\n          ref=\"errorTable\"\n          :value=\"errorUsers\"\n          show-gridlines\n          :row-hover=\"true\"\n          :resizable-columns=\"true\"\n          paginator\n          :always-show-paginator=\"false\"\n          :rows=\"10\"\n          class=\"datatable\"\n        >\n          <PvColumn v-for=\"col of errorUserColumns\" :key=\"col.field\" :field=\"col.field\">\n            <template #header>\n              {{ col.header }}\n            </template>\n          </PvColumn>\n        </PvDataTable>\n      </div>\n    </section>\n  </main>\n</template>\n\n<script setup>\nimport { ref, toRaw } from 'vue';\nimport { csvFileToJson } from '@/helpers';\nimport { useToast } from 'primevue/usetoast';\nimport { useAuthStore } from '@/store/auth';\nimport LinkUsersInfo from '@/components/userInfo/LinkUsersInfo.vue';\nimport PvButton from 'primevue/button';\nimport PvColumn from 'primevue/column';\nimport PvDataTable from 'primevue/datatable';\nimport PvFileUpload from 'primevue/fileupload';\nimport _forEach from 'lodash/forEach';\nimport _startCase from 'lodash/startCase';\nimport _isEmpty from 'lodash/isEmpty';\nimport { TOAST_DEFAULT_LIFE_DURATION } from '@/constants/toasts';\n\nconst authStore = useAuthStore();\nconst toast = useToast();\nconst isFileUploaded = ref(false);\nconst rawUserFile = ref([]);\nconst errorUsers = ref([]);\nconst errorUserColumns = ref([]);\nconst activeSubmit = ref(false);\nconst showErrorTable = ref(false);\n\n// LINKING\n// Required: id, userType, uid\n// Optional: parentId, teacherId\n\nconst allFields = [\n  {\n    field: 'id',\n    header: 'ID',\n    dataType: 'string',\n  },\n  {\n    field: 'userType',\n    header: 'User Type',\n    dataType: 'string',\n  },\n  {\n    field: 'caregiverId',\n    header: 'Caregiver ID',\n    dataType: 'string',\n  },\n  {\n    field: 'teacherId',\n    header: 'Teacher ID',\n    dataType: 'string',\n  },\n  {\n    field: 'uid',\n    header: 'UID',\n    dataType: 'string',\n  },\n];\n\nconst onFileUpload = async (event) => {\n  showErrorTable.value = false;\n  // Read the file\n  const file = event.files[0];\n\n  // Parse the file directly with csvFileToJson\n  const parsedData = await csvFileToJson(file);\n\n  // Check if there's any data\n  if (!parsedData || parsedData.length === 0) {\n    toast.add({\n      severity: 'error',\n      summary: 'Error: Empty File',\n      detail: 'The uploaded file contains no data',\n      life: TOAST_DEFAULT_LIFE_DURATION,\n    });\n    return;\n  }\n\n  // Store the parsed data\n  rawUserFile.value = parsedData;\n\n  // Get all column names from the first row, case-insensitive check\n  const firstRow = toRaw(rawUserFile.value[0]);\n  const allColumns = Object.keys(firstRow).map((col) => col.toLowerCase());\n  console.log('allColumns: ', allColumns);\n\n  // First check if the required columns are present (case-insensitive)\n  const hasId = allColumns.includes('id');\n  const hasUserType = allColumns.includes('usertype');\n  const hasUid = allColumns.includes('uid');\n\n  const missingColumns = [];\n\n  if (!hasId) {\n    missingColumns.push('id');\n  }\n  if (!hasUserType) {\n    missingColumns.push('userType');\n  }\n  if (!hasUid) {\n    missingColumns.push('uid');\n  }\n\n  if (missingColumns.length > 0) {\n    toast.add({\n      severity: 'error',\n      summary: 'Error: Missing Column',\n      detail: `Missing required column(s): ${missingColumns.join(', ')}`,\n      life: TOAST_DEFAULT_LIFE_DURATION,\n    });\n    return;\n  }\n\n  // parentId and teacherId are now optional, so we don't check for them here\n\n  validateUsers();\n\n  if (errorUsers.value.length === 0) {\n    isFileUploaded.value = true;\n    toast.add({\n      severity: 'success',\n      summary: 'Success',\n      detail: 'File Successfully Uploaded',\n      life: TOAST_DEFAULT_LIFE_DURATION,\n    });\n  }\n};\n\nconst validateUsers = () => {\n  errorUsers.value = [];\n  const userMap = new Map(toRaw(rawUserFile.value).map((user) => [user.id.toString(), user]));\n\n  const requiredFields = ['id', 'usertype', 'uid'];\n\n  rawUserFile.value.forEach((user) => {\n    console.log('user: ', user);\n    const missingFields = [];\n\n    // Check for required fields (case-insensitive)\n    requiredFields.forEach((requiredField) => {\n      // Find the actual field name in the user object (case-insensitive)\n      const actualField = Object.keys(user).find((key) => key.toLowerCase() === requiredField);\n      if (!actualField || !user[actualField]) {\n        missingFields.push(requiredField === 'usertype' ? 'userType' : requiredField);\n      }\n    });\n\n    // Check parentId and teacherId if they exist (now optional)\n    // Find userType field (case-insensitive)\n    const userTypeField = Object.keys(user).find((key) => key.toLowerCase() === 'usertype');\n\n    if (userTypeField && user[userTypeField].toLowerCase() === 'child') {\n      // Find parentId field (case-insensitive)\n      const caregiverIdField = Object.keys(user).find((key) => key.toLowerCase() === 'caregiverid');\n\n      // Only validate parentId if it exists\n      if (caregiverIdField && user[caregiverIdField] && user[caregiverIdField].trim() !== '') {\n        const caregiverIds =\n          typeof user[caregiverIdField] === 'string'\n            ? user[caregiverIdField].split(',').map((id) => id.trim())\n            : [user[caregiverIdField].toString()];\n\n        caregiverIds.forEach((caregiverId) => {\n          console.log('caregiverId in loop:', caregiverId);\n\n          if (!userMap.has(caregiverId)) {\n            missingFields.push(`Caregiver with ID ${caregiverId} not found`);\n          } else {\n            // Find userType field in caregiver (case-insensitive)\n            const caregiverUserTypeField = Object.keys(userMap.get(caregiverId)).find(\n              (key) => key.toLowerCase() === 'usertype',\n            );\n            const caregiverUserTypeValue = caregiverUserTypeField\n              ? userMap.get(caregiverId)[caregiverUserTypeField].toLowerCase()\n              : null;\n\n            if (!caregiverUserTypeField || caregiverUserTypeValue !== 'caregiver') {\n              missingFields.push(`User with ID ${caregiverId} is not a caregiver`);\n            }\n          }\n        });\n      }\n\n      // Find teacherId field (case-insensitive)\n      const teacherIdField = Object.keys(user).find((key) => key.toLowerCase() === 'teacherid');\n\n      // Only validate teacherId if it exists\n      if (teacherIdField && user[teacherIdField] && user[teacherIdField].trim() !== '') {\n        const teacherIds =\n          typeof user[teacherIdField] === 'string'\n            ? user[teacherIdField].split(',').map((id) => id.trim())\n            : [user[teacherIdField].toString()];\n\n        teacherIds.forEach((teacherId) => {\n          if (!userMap.has(teacherId)) {\n            missingFields.push(`Teacher with ID ${teacherId} not found`);\n          } else {\n            // Find userType field in teacher (case-insensitive)\n            const teacherUserTypeField = Object.keys(userMap.get(teacherId)).find(\n              (key) => key.toLowerCase() === 'usertype',\n            );\n\n            if (!teacherUserTypeField || userMap.get(teacherId)[teacherUserTypeField].toLowerCase() !== 'teacher') {\n              missingFields.push(`User with ID ${teacherId} is not a teacher`);\n            }\n          }\n        });\n      }\n    }\n\n    if (missingFields.length > 0) {\n      addErrorUser(user, `Missing Field(s): ${missingFields.join(', ')}`);\n    }\n  });\n\n  if (errorUsers.value.length > 0) {\n    console.log('errorUsers: ', errorUsers.value);\n    toast.add({\n      severity: 'error',\n      summary: 'Missing Fields. See below for details.',\n      life: TOAST_DEFAULT_LIFE_DURATION,\n    });\n  }\n};\n\nconst submitUsers = async () => {\n  activeSubmit.value = true;\n  try {\n    // Normalize field names for the backend\n    const normalizedUsers = toRaw(rawUserFile.value).map((user) => {\n      const normalizedUser = {};\n\n      // Process required fields\n      const idField = Object.keys(user).find((key) => key.toLowerCase() === 'id');\n      const userTypeField = Object.keys(user).find((key) => key.toLowerCase() === 'usertype');\n      const uidField = Object.keys(user).find((key) => key.toLowerCase() === 'uid');\n\n      if (idField) normalizedUser.id = user[idField];\n      if (userTypeField) {\n        const userTypeValue = user[userTypeField];\n        // Change 'caregiver' to 'parent' before sending to backend\n        normalizedUser.userType = userTypeValue.toLowerCase() === 'caregiver' ? 'parent' : userTypeValue;\n      }\n      if (uidField) normalizedUser.uid = user[uidField];\n\n      // Process optional fields\n      const caregiverIdField = Object.keys(user).find((key) => key.toLowerCase() === 'caregiverid');\n      const teacherIdField = Object.keys(user).find((key) => key.toLowerCase() === 'teacherid');\n\n      // Rename caregiverId to parentId\n      if (caregiverIdField && user[caregiverIdField]) normalizedUser.parentId = user[caregiverIdField];\n      if (teacherIdField && user[teacherIdField]) normalizedUser.teacherId = user[teacherIdField];\n\n      // Include any other fields that might be in the original data\n      Object.keys(user).forEach((key) => {\n        const lowerCaseKey = key.toLowerCase();\n        // Ensure original fields (case-insensitive) and already processed fields are not copied again\n        if (!['id', 'usertype', 'uid', 'caregiverid', 'teacherid', 'parentid'].includes(lowerCaseKey)) {\n          normalizedUser[key] = user[key];\n        }\n      });\n\n      return normalizedUser;\n    });\n\n    await authStore.roarfirekit.linkUsers(normalizedUsers);\n    isFileUploaded.value = false;\n\n    toast.add({\n      severity: 'success',\n      summary: 'Success',\n      detail: 'Users linked successfully',\n      life: TOAST_DEFAULT_LIFE_DURATION,\n    });\n  } catch (error) {\n    console.error(error);\n    toast.add({\n      severity: 'error',\n      summary: 'Error',\n      detail: `Failed to link users: ${error.message}. Please try again.`,\n      life: TOAST_DEFAULT_LIFE_DURATION,\n    });\n  } finally {\n    activeSubmit.value = false;\n  }\n};\n\nfunction generateColumns(rawJson) {\n  let columns = [];\n  const columnValues = Object.keys(rawJson);\n  _forEach(columnValues, (col) => {\n    let dataType = typeof rawJson[col];\n    if (dataType === 'object') {\n      if (rawJson[col] instanceof Date) dataType = 'date';\n    }\n    columns.push({\n      field: col,\n      header: _startCase(col),\n      dataType: dataType,\n    });\n  });\n  return columns;\n}\n\nfunction addErrorUser(user, error) {\n  // If there are no error users yet, generate the\n  //  columns before displaying the table.\n  if (_isEmpty(errorUserColumns.value)) {\n    errorUserColumns.value = generateColumns(user);\n    errorUserColumns.value.unshift({\n      dataType: 'string',\n      field: 'error',\n      header: 'Cause of Error',\n    });\n    showErrorTable.value = true;\n  }\n  // Concat the userObject with the error reason.\n  errorUsers.value.push({\n    ...user,\n    error,\n  });\n}\n</script>\n\n<style scoped>\n.extra-height {\n  min-height: 33vh;\n}\n\n.datatable {\n  border: 1px solid var(--surface-d);\n  border-radius: 5px;\n  margin-top: 1rem;\n}\n\n.submit-container {\n  margin-top: 1rem;\n}\n\n.error-container {\n  margin-top: 2rem;\n}\n\n.error-header {\n  margin-bottom: 1rem;\n}\n</style>\n"],"names":["_createBlock","_unref","PvPanel","_createElementVNode","_cache","_hoisted_1","LEVANTE_BUCKET_URL","authStore","useAuthStore","toast","useToast","isFileUploaded","ref","rawUserFile","errorUsers","errorUserColumns","activeSubmit","showErrorTable","allFields","onFileUpload","event","file","parsedData","csvFileToJson","TOAST_DEFAULT_LIFE_DURATION","firstRow","toRaw","allColumns","col","hasId","hasUserType","hasUid","missingColumns","validateUsers","userMap","user","requiredFields","missingFields","requiredField","actualField","key","userTypeField","caregiverIdField","id","caregiverId","caregiverUserTypeField","caregiverUserTypeValue","teacherIdField","teacherId","teacherUserTypeField","addErrorUser","submitUsers","normalizedUsers","normalizedUser","idField","uidField","userTypeValue","lowerCaseKey","error","generateColumns","rawJson","columns","columnValues","_forEach","dataType","_startCase","_isEmpty","_openBlock","_createElementBlock","_hoisted_2","_createVNode","LinkUsersInfo","_hoisted_3","PvFileUpload","$event","_hoisted_4","PvDataTable","_Fragment","_renderList","PvColumn","_hoisted_5","_toDisplayString","_hoisted_6","PvButton","_hoisted_7","_createTextVNode"],"mappings":"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"}