{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"survey-html-form\",\n  parameters: {\n    /** HTML formatted string containing all the input elements to display. Every element has to have its own distinctive name attribute. The <form> tag must not be included and is generated by the plugin. */\n    html: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"HTML\",\n      default: null,\n    },\n    /** HTML formatted string to display at the top of the page above all the questions. */\n    preamble: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Preamble\",\n      default: null,\n    },\n    /** The text that appears on the button to finish the trial. */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n    },\n    /** The HTML element ID of a form field to autofocus on. */\n    autofocus: {\n      type: ParameterType.STRING,\n      pretty_name: \"Element ID to focus\",\n      default: \"\",\n    },\n    /** Retrieve the data as an array e.g. [{name: \"INPUT_NAME\", value: \"INPUT_VALUE\"}, ...] instead of an object e.g. {INPUT_NAME: INPUT_VALUE, ...}. */\n    dataAsArray: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Data As Array\",\n      default: false,\n    },\n    /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n    autocomplete: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow autocomplete\",\n      default: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **survey-html-form**\n *\n * jsPsych plugin for displaying free HTML forms and collecting responses from all input elements\n *\n * @author Jan Simson\n * @see {@link https://www.jspsych.org/plugins/jspsych-survey-html-form/ survey-html-form plugin documentation on jspsych.org}\n */\nclass SurveyHtmlFormPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var html = \"\";\n    // show preamble text\n    if (trial.preamble !== null) {\n      html +=\n        '<div id=\"jspsych-survey-html-form-preamble\" class=\"jspsych-survey-html-form-preamble\">' +\n        trial.preamble +\n        \"</div>\";\n    }\n    // start form\n    if (trial.autocomplete) {\n      html += '<form id=\"jspsych-survey-html-form\">';\n    } else {\n      html += '<form id=\"jspsych-survey-html-form\" autocomplete=\"off\">';\n    }\n\n    // add form HTML / input elements\n    html += trial.html;\n\n    // add submit button\n    html +=\n      '<input type=\"submit\" id=\"jspsych-survey-html-form-next\" class=\"jspsych-btn jspsych-survey-html-form\" value=\"' +\n      trial.button_label +\n      '\"></input>';\n\n    html += \"</form>\";\n    display_element.innerHTML = html;\n\n    if (trial.autofocus !== \"\") {\n      var focus_elements = display_element.querySelectorAll<HTMLInputElement>(\n        \"#\" + trial.autofocus\n      );\n      if (focus_elements.length === 0) {\n        console.warn(\"No element found with id: \" + trial.autofocus);\n      } else if (focus_elements.length > 1) {\n        console.warn('The id \"' + trial.autofocus + '\" is not unique so autofocus will not work.');\n      } else {\n        focus_elements[0].focus();\n      }\n    }\n\n    display_element\n      .querySelector(\"#jspsych-survey-html-form\")\n      .addEventListener(\"submit\", (event) => {\n        // don't submit form\n        event.preventDefault();\n\n        // measure response time\n        var endTime = performance.now();\n        var response_time = Math.round(endTime - startTime);\n\n        var this_form = display_element.querySelector(\"#jspsych-survey-html-form\");\n        var question_data = serializeArray(this_form);\n\n        if (!trial.dataAsArray) {\n          question_data = objectifyForm(question_data);\n        }\n\n        // save data\n        var trialdata = {\n          rt: response_time,\n          response: question_data,\n        };\n\n        display_element.innerHTML = \"\";\n\n        // next trial\n        this.jsPsych.finishTrial(trialdata);\n      });\n\n    var startTime = performance.now();\n\n    /**\n     * Serialize all form data into an array\n     * @copyright (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com\n     * @param  {Node}   form The form to serialize\n     * @return {String}      The serialized form data\n     */\n    function serializeArray(form) {\n      // Setup our serialized data\n      var serialized = [];\n\n      // Loop through each field in the form\n      for (var i = 0; i < form.elements.length; i++) {\n        var field = form.elements[i];\n\n        // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n        if (\n          !field.name ||\n          field.disabled ||\n          field.type === \"file\" ||\n          field.type === \"reset\" ||\n          field.type === \"submit\" ||\n          field.type === \"button\"\n        )\n          continue;\n\n        // If a multi-select, get all selections\n        if (field.type === \"select-multiple\") {\n          for (var n = 0; n < field.options.length; n++) {\n            if (!field.options[n].selected) continue;\n            serialized.push({\n              name: field.name,\n              value: field.options[n].value,\n            });\n          }\n        }\n\n        // Convert field data to a query string\n        else if ((field.type !== \"checkbox\" && field.type !== \"radio\") || field.checked) {\n          serialized.push({\n            name: field.name,\n            value: field.value,\n          });\n        }\n      }\n\n      return serialized;\n    }\n\n    // from https://stackoverflow.com/questions/1184624/convert-form-data-to-javascript-object-with-jquery\n    function objectifyForm(formArray) {\n      //serialize data function\n      var returnArray = <any>{};\n      for (var i = 0; i < formArray.length; i++) {\n        returnArray[formArray[i][\"name\"]] = formArray[i][\"value\"];\n      }\n      return returnArray;\n    }\n  }\n}\n\nexport default SurveyHtmlFormPlugin;\n"],"names":["info","name","parameters","html","type","ParameterType","HTML_STRING","pretty_name","default","preamble","button_label","STRING","autofocus","dataAsArray","BOOL","autocomplete","SurveyHtmlFormPlugin","jsPsych","_classCallCheck","this","key","value","display_element","trial","_this","innerHTML","focus_elements","querySelectorAll","length","console","warn","focus","querySelector","addEventListener","event","preventDefault","endTime","performance","now","response_time","Math","round","startTime","question_data","form","serialized","i","elements","field","disabled","n","options","selected","push","checked","serializeArray","formArray","returnArray","objectifyForm","trialdata","rt","response","finishTrial"],"mappings":"kiBAEA,IAAMA,EAAc,CAClBC,KAAM,mBACNC,WAAY,CAEVC,KAAM,CACJC,KAAMC,EAAaA,cAACC,YACpBC,YAAa,OACbC,QAAS,MAGXC,SAAU,CACRL,KAAMC,EAAaA,cAACC,YACpBC,YAAa,WACbC,QAAS,MAGXE,aAAc,CACZN,KAAMC,EAAaA,cAACM,OACpBJ,YAAa,eACbC,QAAS,YAGXI,UAAW,CACTR,KAAMC,EAAaA,cAACM,OACpBJ,YAAa,sBACbC,QAAS,IAGXK,YAAa,CACXT,KAAMC,EAAaA,cAACS,KACpBP,YAAa,gBACbC,SAAS,GAGXO,aAAc,CACZX,KAAMC,EAAaA,cAACS,KACpBP,YAAa,qBACbC,SAAS,KAeTQ,EAAoB,WAGxB,SAAAA,EAAoBC,gGAAgBC,MAAAF,GAAhBG,KAAOF,QAAPA,CAAmB,WAmItC,SAnIuCD,KAAA,CAAA,CAAAI,IAAA,QAAAC,MAExC,SAAMC,EAA8BC,GAAsB,IAAAC,EAAAL,KACpDhB,EAAO,GA2BX,GAzBuB,OAAnBoB,EAAMd,WACRN,GACE,yFACAoB,EAAMd,SACN,UAGAc,EAAMR,aACRZ,GAAQ,uCAERA,GAAQ,0DAIVA,GAAQoB,EAAMpB,KAGdA,GACE,+GACAoB,EAAMb,aACN,aAEFP,GAAQ,UACRmB,EAAgBG,UAAYtB,EAEJ,KAApBoB,EAAMX,UAAkB,CAC1B,IAAIc,EAAiBJ,EAAgBK,iBACnC,IAAMJ,EAAMX,WAEgB,IAA1Bc,EAAeE,OACjBC,QAAQC,KAAK,6BAA+BP,EAAMX,WACzCc,EAAeE,OAAS,EACjCC,QAAQC,KAAK,WAAaP,EAAMX,UAAY,+CAE5Cc,EAAe,GAAGK,OAErB,CAEDT,EACGU,cAAc,6BACdC,iBAAiB,UAAU,SAACC,GAE3BA,EAAMC,iBAGN,IAAIC,EAAUC,YAAYC,MACtBC,EAAgBC,KAAKC,MAAML,EAAUM,GAGrCC;;;;;;;AA0BR,SAAwBC,GAKtB,IAHA,IAAIC,EAAa,GAGRC,EAAI,EAAGA,EAAIF,EAAKG,SAASnB,OAAQkB,IAAK,CAC7C,IAAIE,EAAQJ,EAAKG,SAASD,GAG1B,GACGE,EAAM/C,OACP+C,EAAMC,UACS,SAAfD,EAAM5C,MACS,UAAf4C,EAAM5C,MACS,WAAf4C,EAAM5C,MACS,WAAf4C,EAAM5C,KAKR,GAAmB,oBAAf4C,EAAM5C,KACR,IAAK,IAAI8C,EAAI,EAAGA,EAAIF,EAAMG,QAAQvB,OAAQsB,IACnCF,EAAMG,QAAQD,GAAGE,UACtBP,EAAWQ,KAAK,CACdpD,KAAM+C,EAAM/C,KACZoB,MAAO2B,EAAMG,QAAQD,GAAG7B,aAML,aAAf2B,EAAM5C,MAAsC,UAAf4C,EAAM5C,MAAqB4C,EAAMM,UACtET,EAAWQ,KAAK,CACdpD,KAAM+C,EAAM/C,KACZoB,MAAO2B,EAAM3B,OAGlB,CAED,OAAOwB,CACT,CAlEwBU,CADJjC,EAAgBU,cAAc,8BAGzCT,EAAMV,cACT8B,EAkEN,SAAuBa,GAGrB,IADA,IAAIC,EAAmB,CAAA,EACdX,EAAI,EAAGA,EAAIU,EAAU5B,OAAQkB,IACpCW,EAAYD,EAAUV,GAAS,MAAKU,EAAUV,GAAU,MAE1D,OAAOW,CACT,CAzEsBC,CAAcf,IAIhC,IAAIgB,EAAY,CACdC,GAAIrB,EACJsB,SAAUlB,GAGZrB,EAAgBG,UAAY,GAG5BD,EAAKP,QAAQ6C,YAAYH,EAC3B,IAEF,IAAIjB,EAAYL,YAAYC,KA2D9B,oFAACtB,CAAA,CAtIuB,UACjBA,EAAIhB,KAAGA"}