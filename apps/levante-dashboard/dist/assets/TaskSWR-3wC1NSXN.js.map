{"version":3,"mappings":";qwBAgBA,MAAMA,EAAQC,EAId,IAAIC,EAEJ,MAAMC,EAASH,EAAM,OACf,CAAE,QAAAI,CAAO,EAAKC,EAAgB,SAAS,+BAA+B,EACtEC,EAASC,EAAS,EAClBC,EAAcC,EAAI,EAAK,EACvBC,EAAcD,EAAI,EAAK,EACvBE,EAAYC,EAAY,EACxBC,EAAYC,EAAY,EACxB,CAAE,cAAAC,EAAe,YAAAC,GAAgBC,EAAYN,CAAS,EAEtD,CAAE,YAAaO,CAAwB,EAAKC,EAA6B,EAEzEC,EAAcX,EAAI,EAAK,EAC7B,IAAIY,EACJ,MAAMC,EAAO,IAAM,CACbD,GAAaA,EAAW,EAC5BD,EAAY,MAAQ,EACtB,EACMG,EAAiB,IAAM,CAC3BjB,EAAO,GAAG,CAAC,CACb,EAEAe,EAAcV,EAAU,WAAW,MAAOa,EAAUC,IAAU,CACxDA,EAAM,YAAY,YAAYH,EAAI,CACxC,CAAC,EAED,KAAM,CAAE,UAAWI,EAAmB,KAAMC,CAAQ,EAAKC,EAAsB,CAC7E,QAASR,CACX,CAAC,EAID,OAAO,iBACL,WACA,IAAM,CACJG,EAAc,CAChB,EACA,CAAE,KAAM,EAAI,CACd,EAEAM,EAAU,SAAY,CACpB,GAAI,CACF3B,GAAgB,MAAK4B,EAAA,wBAAAC,CAAA,OAAC,QAAO,mBAAkB,iBAAAA,EAAA,iCAAG,OACpD,OAASC,EAAO,CACd,QAAQ,MAAM,qDAAsDA,CAAK,CAC3E,CAEIhB,EAAY,MAAM,YAAYM,EAAI,CACxC,CAAC,EAEDW,EAAgB,IAAM,CACpB,OAAO,oBAAoB,WAAYV,CAAc,CACvD,CAAC,EAEDW,EACE,CAACnB,EAAeW,CAAiB,EACjC,MAAO,CAACS,EAAqBC,CAAkB,IAAM,CACnD,GAAID,GAAuB,CAACC,GAAsB,CAAC5B,EAAY,MAAO,CACpEA,EAAY,MAAQ,GACpB,KAAM,CAAE,cAAA6B,CAAa,EAAKpB,EAAYJ,CAAS,EAC/C,MAAMyB,EAAUD,CAAa,CAC/B,CACF,EACA,CAAE,UAAW,EAAI,CACnB,EAEA,eAAeC,EAAUD,EAAe,CACtC,GAAI,CACF,IAAIE,EAAmB,YAAY,UAAY,CAE3B,SAAS,cAAc,0BAA0B,IAEjE7B,EAAY,MAAQ,GACpB,cAAc6B,CAAgB,EAElC,EAAG,GAAG,EAEN,MAAMC,EAAS,MAAM7B,EAAU,YAAY,gBAAgB0B,EAAc,MAAM,GAAIlC,EAAQC,CAAO,EAE5FqC,EAAa,CACjB,MAAO,GACP,WAAYC,EAAKf,EAAS,MAAO,YAAY,EAC7C,UAAWe,EAAKf,EAAS,MAAO,WAAW,CACjD,EAEUgB,EAAa,CAAE,GAAGH,EAAO,UAAU,aAAa,EAItD,MAFgB,IAAItC,EAAasC,EAAQG,EAAYF,EAAY,gBAAgB,EAEnE,MAAM,KAAK,SAAY,CAEnC,MAAMvB,EAAyB,CAC7B,QAASmB,EAAc,MAAM,GAC7B,OAAAlC,CACR,CAAO,EAGDU,EAAU,mBAAkB,EAC5BP,EAAO,KAAK,CAAE,KAAM,MAAM,CAAE,CAC9B,CAAC,CACH,OAAS0B,EAAO,CACd,QAAQ,MAAM,6CAA8CA,CAAK,EACjE,MACE,yIACN,CACE,CACF,6BA9HyBtB,EAAA,oBAAvBkC,EAAiDC,EAAA,OAAb,6BACpCC,EAA8D,OAAzD,GAAG,iBAAiB,MAAM,cAAc,UAAU","names":["props","__props","TaskLauncher","taskId","version","packageLockJson","router","useRouter","taskStarted","ref","gameStarted","authStore","useAuthStore","gameStore","useGameStore","isFirekitInit","roarfirekit","storeToRefs","completeAssessmentMutate","useCompleteAssessmentMutation","initialized","unsubscribe","init","handlePopState","mutation","state","isLoadingUserData","userData","useUserChildDataQuery","onMounted","__vitePreload","__vite_default__","error","onBeforeUnmount","watch","newFirekitInitValue","newLoadingUserData","selectedAdmin","startTask","checkGameStarted","appKit","userParams","_get","gameParams","_createBlock","LevanteSpinner","_createElementVNode"],"ignoreList":[],"sources":["../../src/components/tasks/TaskSWR.vue"],"sourcesContent":["<template>\n  <LevanteSpinner v-if=\"!gameStarted\" fullscreen />\n  <div id=\"jspsych-target\" class=\"game-target\" translate=\"no\" />\n</template>\n<script setup>\nimport { onMounted, onBeforeUnmount, watch, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { storeToRefs } from 'pinia';\nimport _get from 'lodash/get';\nimport { useAuthStore } from '@/store/auth';\nimport { useGameStore } from '@/store/game';\nimport useUserChildDataQuery from '@/composables/queries/useUserChildDataQuery';\nimport useCompleteAssessmentMutation from '@/composables/mutations/useCompleteAssessmentMutation';\nimport packageLockJson from '../../../package-lock.json';\nimport LevanteSpinner from '@/components/LevanteSpinner.vue';\n\nconst props = defineProps({\n  taskId: { type: String, required: true, default: 'swr' },\n});\n\nlet TaskLauncher;\n\nconst taskId = props.taskId;\nconst { version } = packageLockJson.packages['node_modules/@bdelab/roar-swr'];\nconst router = useRouter();\nconst taskStarted = ref(false);\nconst gameStarted = ref(false);\nconst authStore = useAuthStore();\nconst gameStore = useGameStore();\nconst { isFirekitInit, roarfirekit } = storeToRefs(authStore);\n\nconst { mutateAsync: completeAssessmentMutate } = useCompleteAssessmentMutation();\n\nconst initialized = ref(false);\nlet unsubscribe;\nconst init = () => {\n  if (unsubscribe) unsubscribe();\n  initialized.value = true;\n};\nconst handlePopState = () => {\n  router.go(0);\n};\n\nunsubscribe = authStore.$subscribe(async (mutation, state) => {\n  if (state.roarfirekit.restConfig) init();\n});\n\nconst { isLoading: isLoadingUserData, data: userData } = useUserChildDataQuery({\n  enabled: initialized,\n});\n\n// The following code intercepts the back button and instead forces a refresh.\n// We add { once: true } to prevent an infinite loop.\nwindow.addEventListener(\n  'popstate',\n  () => {\n    handlePopState();\n  },\n  { once: true },\n);\n\nonMounted(async () => {\n  try {\n    TaskLauncher = (await import('@bdelab/roar-swr')).default;\n  } catch (error) {\n    console.error('An error occurred while importing the game module.', error);\n  }\n\n  if (roarfirekit.value.restConfig) init();\n});\n\nonBeforeUnmount(() => {\n  window.removeEventListener('popstate', handlePopState);\n});\n\nwatch(\n  [isFirekitInit, isLoadingUserData],\n  async ([newFirekitInitValue, newLoadingUserData]) => {\n    if (newFirekitInitValue && !newLoadingUserData && !taskStarted.value) {\n      taskStarted.value = true;\n      const { selectedAdmin } = storeToRefs(gameStore);\n      await startTask(selectedAdmin);\n    }\n  },\n  { immediate: true },\n);\n\nasync function startTask(selectedAdmin) {\n  try {\n    let checkGameStarted = setInterval(function () {\n      // Poll for the preload trials progress bar to exist and then begin the game\n      let gameLoading = document.querySelector('.jspsych-content-wrapper');\n      if (gameLoading) {\n        gameStarted.value = true;\n        clearInterval(checkGameStarted);\n      }\n    }, 100);\n\n    const appKit = await authStore.roarfirekit.startAssessment(selectedAdmin.value.id, taskId, version);\n\n    const userParams = {\n      grade: '',\n      birthMonth: _get(userData.value, 'birthMonth'),\n      birthYear: _get(userData.value, 'birthYear'),\n    };\n\n    const gameParams = { ...appKit._taskInfo.variantParams };\n\n    const roarApp = new TaskLauncher(appKit, gameParams, userParams, 'jspsych-target');\n\n    await roarApp.run().then(async () => {\n      // Handle any post-game actions.\n      await completeAssessmentMutate({\n        adminId: selectedAdmin.value.id,\n        taskId,\n      });\n\n      // Navigate to home, but first set the refresh flag to true.\n      gameStore.requireHomeRefresh();\n      router.push({ name: 'Home' });\n    });\n  } catch (error) {\n    console.error('An error occurred while starting the task:', error);\n    alert(\n      'An error occurred while starting the task. Please refresh the page and try again. If the error persists, please submit an issue report.',\n    );\n  }\n}\n</script>\n<style>\n@import '@bdelab/roar-swr/lib/resources/roar-swr.css';\n\n.game-target {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.game-target:focus {\n  outline: none;\n}\n</style>\n"],"file":"assets/TaskSWR-3wC1NSXN.js"}