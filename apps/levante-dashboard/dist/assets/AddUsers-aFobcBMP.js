import{m as be,d as _e,z as Ue,e as Se,k as re,bI as Ee,j as oe,bJ as Q,b9 as Ie}from"./index-kdKfEdeI.js";import{_ as Le}from"./cloneDeep-Y1f-YOpN.js";import{_ as je}from"./forEach-Bss9sJkU.js";import{_ as Oe}from"./capitalize-DtoFwN2t.js";import{_ as xe}from"./startCase-CKAWOUbs.js";import{_ as Fe}from"./chunk-C6jcZpD8.js";import{L as Ae}from"./bucket-D8HfKr8u.js";import{s as Ne}from"./index-DgqMGbNZ.js";import{M as ae,O,_ as N,S as e,a1 as c,z as C,r as i,w as Re,R as G,k as A,N as fe,F as he,a0 as pe,W as X,t as Z,x as Ve}from"./tanstack-CsBZeLmk.js";import{c as $e}from"./orgs-C8TAQ0-m.js";import{e as me,d as ye}from"./index-SnZVGOaT.js";import{s as Me}from"./index-BEZzqj1Q.js";import{s as De}from"./index-C9Tcp7BM.js";import{T}from"./toasts-BqURhU4z.js";import"./phoneme-MNW3QAs-.js";import"./sentry-CX5z418I.js";import"./lodash-DAY8-RAI.js";import"./_arrayEach-FC5DT91E.js";import"./_baseEach-Ab1i50PF.js";import"./upperFirst-CKgMld1W.js";import"./_createCompounder-BtP0Easx.js";import"./toInteger-CM0MbwkG.js";import"./toNumber-iH9M7_fM.js";import"./index-d6wokVQG.js";import"./index-CmbHKKL9.js";import"./index-DXN1oPWm.js";import"./index-DBlP99Qc.js";import"./index-BqleXkYD.js";import"./index-CsSDOoHL.js";(function(){try{var R=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},M=new R.Error().stack;M&&(R._sentryDebugIds=R._sentryDebugIds||{},R._sentryDebugIds[M]="dce2cc26-5d49-43a9-b133-67093c6860a9",R._sentryDebugIdIdentifier="sentry-dbid-dce2cc26-5d49-43a9-b133-67093c6860a9")}catch{}})();const Be={class:"csv-example-image-container"},qe=["src"],ze={__name:"AddUsersInfo",setup(R){const M=()=>{const r=["id","userType","month","year","caregiverId","teacherId","site","school","class","cohort"].join(",")+`
`;return new Blob([r],{type:"text/csv;charset=utf-8;"})},m=()=>{const V=M(),r=document.createElement("a"),Y=URL.createObjectURL(V);r.setAttribute("href",Y),r.setAttribute("download","add_users_template.csv"),r.style.visibility="hidden",document.body.appendChild(r),r.click(),document.body.removeChild(r)};return(V,r)=>(O(),ae(C(Ne),{header:"Add users",class:"add-users-panel"},{default:N(()=>[r[1]||(r[1]=e("div",{class:"info-message-container"},[e("i",{class:"pi pi-exclamation-circle"}),e("p",null,"Groups must be created before adding users. You cannot add users otherwise.")],-1)),r[2]||(r[2]=e("div",{class:"how-to-section"},[e("h3",null,"How to Add Users"),e("ol",{class:"numbered-steps"},[e("li",null,[e("span",{class:"step-number"},"1"),c("Download the template below or create your own CSV with the required columns ")]),e("li",null,[e("span",{class:"step-number"},"2"),c("Fill in the CSV with the user data")]),e("li",null,[e("span",{class:"step-number"},"3"),c('Upload the CSV file and click "Start Adding Users"')]),e("li",null,[e("span",{class:"step-number"},"4"),c('When finished, a file called "registered_users.csv" will be downloaded. If it is not in your downloads folder, click the "Download Users" button. ')]),e("li",null,[e("span",{class:"step-number"},"5"),c('Click "Continue to Link Users" and get their login information.')])])],-1)),r[3]||(r[3]=e("p",null," The following fields define the columns for your CSV file when adding users. Please refer to the legend below for specific requirements on each field. ",-1)),r[4]||(r[4]=e("p",null,"Caregivers and Teachers need to have the same Groups as the children they relate to.",-1)),r[5]||(r[5]=e("ul",null,[e("li",null,[e("b",null,"id"),e("span",{class:"field-marker"},"*"),c(" - A unique identifier for the user in CSV file.")]),e("li",null,[e("b",null,"userType"),e("span",{class:"field-marker"},"*"),c(" - The type of user: child, caregiver, teacher.")]),e("li",null,[e("b",null,"month"),e("span",{class:"field-marker"},"*"),e("span",{class:"field-marker"},"†"),c(" - The month a child user was born (numeric; For Example, 5 for May). ")]),e("li",null,[e("b",null,"year"),e("span",{class:"field-marker"},"*"),e("span",{class:"field-marker"},"†"),c(" - The year a child user was born (four-digit; For Example, 2017). ")]),e("li",null,[e("b",null,"caregiverId"),c(" - A unique identifier (id) for the child's caregiver.")]),e("li",null,[e("b",null,"teacherId"),c(" - A unique identifier (id) for the child's teacher.")]),e("li",null,[e("b",null,"site"),e("span",{class:"field-marker"},"*"),c(" - The name of the site you created from the Add Groups page. ")]),e("li",null,[c(" One of the following"),e("span",{class:"field-marker"},"*"),c(": "),e("ul",{class:"nested-list"},[e("li",null,[e("b",null,"cohort"),c(" - The name of the cohort.")]),e("li",null,[e("b",null,"school"),c(" - The name of the school. "),e("ul",{class:"nested-list"},[e("li",null,[e("b",null,"class"),c(" - The name of the class. Must have a school as well. (Optional)")])])])])])],-1)),r[6]||(r[6]=e("p",{class:"mb-6 legend"},[e("span",{class:"field-marker"},"*"),c(" Required for this Step"),e("br"),e("span",{class:"field-marker"},"†"),c(" Required only for child users. Leave blank for caregiver or teacher users. ")],-1)),e("div",{class:"download-button-container"},[e("button",{class:"download-csv-btn","data-testid":"download-template",onClick:m},r[0]||(r[0]=[e("i",{class:"pi pi-download"},null,-1),c(" Download CSV Template ",-1)]))]),r[7]||(r[7]=e("p",null," Below is an example of what your CSV/spreadsheet should look like. Only the required columns will be processed. ",-1)),e("div",Be,[e("img",{id:"add-users-example-image",src:C(Ae)+"/add_users_example.png",alt:"Add Users CSV Example ",class:"csv-example-image"},null,8,qe)])]),_:1,__:[1,2,3,4,5,6,7]}))}},Ge=be(ze,[["__scopeId","data-v-04c36806"]]),Ye={class:"container main"},He={class:"main-body"},We={class:"text-gray-500 mb-2 surface-100 border-round p-2"},Pe={key:0},Ke={class:"col-header"},Je={class:"submit-container"},Qe={key:0,class:"button-group"},Xe={key:1,class:"error-container"},Ze={__name:"AddUsers",setup(R){const M=_e(),m=Ue(),V=i(!1),r=i({}),Y=i([]),ve=i(),ge=[{field:"userType",header:"User Type",dataType:"string"},{field:"month",header:"Month",dataType:"number"},{field:"year",header:"Year",dataType:"number"},{field:"cohort",header:"Cohort",dataType:"string"},{field:"site",header:"Site",dataType:"string"},{field:"school",header:"School",dataType:"string"},{field:"class",header:"Class",dataType:"string"}],le=i(),x=i([]),E=i([]),ie=i(""),D=i(!1),H=i(!1),_=i(!1),we=Se();Re(x,()=>{Ve(()=>{window.scrollTo(0,document.body.scrollHeight)})},{deep:!0});const Ce=async l=>{r.value={},x.value=[],E.value=[],D.value=!1,ie.value="",le.value=null,H.value=!1,V.value=!1,Y.value=[],_.value=!1;const o=l.files[0],d=await Ee(o);if(!d||d.length===0){m.add({severity:"error",summary:"Error: Empty File",detail:"The uploaded file contains no data",life:T});return}r.value=d;const f=Z(r.value[0]),s=Object.keys(f).map(a=>a.toLowerCase());if(!s.includes("usertype")){m.add({severity:"error",summary:"Error: Missing Column",detail:"Missing required column(s): userType",life:T}),H.value=!0;return}if(r.value.some(a=>{const y=Object.keys(a).find(I=>I.toLowerCase()==="usertype");return y&&a[y].toLowerCase()==="child"})){const a=s.includes("month"),y=s.includes("year");if(!a||!y){m.add({severity:"error",summary:"Error: Missing Column",detail:"Missing required column(s): Month or Year",life:T}),H.value=!0;return}}const F=s.includes("cohort"),g=s.includes("site"),k=s.includes("school");if(!F&&(!g||!k)){m.add({severity:"error",summary:"Error: Missing Column",detail:"Missing required column(s): Cohort OR Site and School",life:T});return}const h=["usertype","month","year"],w=["usertype"];r.value.forEach(a=>{var J;const y=[],I=[],p=Object.keys(a).find(n=>n.toLowerCase()==="usertype"),t=p?(J=a[p])==null?void 0:J.toLowerCase():null;if(!p||!t)y.push("userType");else{const n=["child","teacher","caregiver"];n.includes(t)||I.push(`userType must be one of: ${n.join(", ")}`),t==="child"?h.forEach(L=>{const P=Object.keys(a).find(j=>j.toLowerCase()===L);if(!P||!a[P])y.push(L==="usertype"?"userType":L);else{if(L==="month"){const j=Object.keys(a).find(te=>te.toLowerCase()==="month"),K=j?parseInt(a[j],10):NaN;(isNaN(K)||K<1||K>12)&&I.push("month must be a number between 1 and 12")}if(L==="year"){const j=Object.keys(a).find(te=>te.toLowerCase()==="year"),K=j?a[j]:"";/^\d{4}$/.test(K)||I.push("year must be a four-digit number")}}}):(t==="caregiver"||t==="teacher")&&w.forEach(L=>{const P=Object.keys(a).find(j=>j.toLowerCase()===L);(!P||!a[P])&&y.push(L==="usertype"?"userType":L)})}const S=Object.keys(a).find(n=>n.toLowerCase()==="cohort"),b=Object.keys(a).find(n=>n.toLowerCase()==="site"),v=Object.keys(a).find(n=>n.toLowerCase()==="school"),W=S&&a[S]&&a[S].split(",").map(n=>n.trim()).filter(n=>n).length>0,B=b&&a[b]&&a[b].split(",").map(n=>n.trim()).filter(n=>n).length>0,q=v&&a[v]&&a[v].split(",").map(n=>n.trim()).filter(n=>n).length>0;B||y.push("Site"),!W&&!q&&y.push("Cohort OR School");let z=[];y.length>0&&z.push(`Missing Field(s): ${y.join(", ")}`),I.length>0&&z.push(`Invalid Field(s): ${I.join("; ")}`),z.length>0&&ue(a,z.join(". "))}),x.value.length?m.add({severity:"error",summary:"Validation Errors. See below for details.",life:T}):(V.value=!0,H.value=!1,D.value=!1,m.add({severity:"success",summary:"Success",detail:"File Successfully Uploaded",life:T}))};function ne(l){let o=[];const d=Object.keys(l);return je(d,f=>{if(f==="orgIds")return;let s=typeof l[f];s==="object"&&l[f]instanceof Date&&(s="date"),o.push({field:f,header:xe(f),dataType:s})}),o}async function ke(){if(x.value.length>0){m.add({severity:"error",summary:"Cannot Submit",detail:"Please fix the errors in your CSV file before submitting",life:5e3});return}_.value=!0,x.value=[],E.value=[],D.value=!1,ie.value="";const l=Le(Z(r.value)).map((s,u)=>({user:s,index:u})).filter(({user:s})=>!s.uid||s.uid===""),o=[];if(l.length===0){m.add({severity:"info",summary:"No New Users to Register",detail:"All users in the file have already been registered",life:T}),_.value=!1;return}for(const{user:s,index:u}of l)try{const U=Object.keys(s).find(t=>t.toLowerCase()==="site"),F=Object.keys(s).find(t=>t.toLowerCase()==="school"),g=Object.keys(s).find(t=>t.toLowerCase()==="class"),k=Object.keys(s).find(t=>t.toLowerCase()==="cohort"),h=U?s[U].split(",").map(t=>t.trim()).filter(t=>t):[],w=F?s[F].split(",").map(t=>t.trim()).filter(t=>t):[],a=g?s[g].split(",").map(t=>t.trim()).filter(t=>t):[],y=k?s[k].split(",").map(t=>t.trim()).filter(t=>t):[];if(h.length<=0){m.add({severity:"error",summary:"Required field missing",detail:"At least, one site is required for every user.",life:T}),_.value=!1;return}if(w.length<=0&&y.length<=0){m.add({severity:"error",summary:"Required field missing",detail:"At least, one school or cohort is required for every user.",life:T}),_.value=!1;return}const I={site:h,school:w,class:a,cohort:y},p={sites:[],schools:[],classes:[],cohorts:[]};for(const[t,S]of Object.entries(I))if(S&&S.length>0)try{if(t==="school"){if(h.length===0)throw new Error("Schools specified but no site provided");for(const b of S){let v=!1;for(const W of h)try{const B=await $("districts",W),q=await $(Q(t),b,i(B),i(void 0));p.schools.push(q),v=!0;break}catch{continue}if(!v)throw new Error(`School '${b}' not found in any of the specified sites`)}}else if(t==="class"){if(h.length===0||w.length===0)throw new Error("Classes specified but no site or school provided");for(const b of S){let v=!1;for(const W of h){for(const B of w)try{const q=await $("districts",W),z=await $("schools",B),J=await $(Q(t),b,i(q),i(z));p.classes.push(J),v=!0;break}catch{continue}if(v)break}if(!v)throw new Error(`Class '${b}' not found in any of the specified site/school combinations`)}}else if(t==="cohort")for(const b of S){const v=await $(Q("groups"),b,i(void 0),i(void 0));p.cohorts.push(v)}else if(t==="site")for(const b of S){const v=await $(Q("districts"),b,i(void 0),i(void 0));p.sites.push(v)}}catch(b){o.push({user:s,index:u,error:`Invalid ${Oe(t)}: ${b.message}`});break}oe(p)?o.some(t=>t.user===s)||o.push({user:s,index:u,error:"No valid organization information found"}):(p.districts=p.sites,delete p.sites,p.groups=p.cohorts,delete p.cohorts,s.orgIds=p)}catch(U){o.push({user:s,index:u,error:U.message})}if(o.length>0){oe(E.value)&&(E.value=ne(o[0].user),E.value.unshift({dataType:"string",field:"error",header:"Cause of Error"})),o.forEach(({user:s,error:u})=>{ue(s,u)}),D.value=!0,_.value=!1;return}const d=Fe(l,700);let f=0;for(const s of d)try{const u=s.map(({user:g})=>{const k={...g},h=Object.keys(g).find(w=>w.toLowerCase()==="usertype");if(h){const w=g[h];k.userType=w,h!=="userType"&&delete k[h],typeof w=="string"&&w.toLowerCase()==="caregiver"&&(k.userType="parent")}return k}),F=(await M.createUsers(u)).data.data;F.forEach((g,k)=>{const h=s[k].index;h<r.value.length&&(r.value[h]={...r.value[h],email:g.email,password:g.password,uid:g.uid})}),Y.value.push(...F),f+=F.length,m.add({severity:"success",summary:"User Creation Successful",life:T}),Te()}catch(u){console.error(u),m.add({severity:"error",summary:"Error registering users: "+u.message,life:T})}_.value=!1}const de=i(null),ee=i(null);function Te(){const l=Z(r.value[0]),o=Object.keys(l).join(",")+`
`,f=Z(r.value).map(u=>Object.values(u).map(U=>U==null?"":`"${U.toString().replace(/"/g,'""')}"`).join(",")).join(`
`),s=o+f;de.value=new Blob([s],{type:"text/csv;charset=utf-8;"}),ee.value=URL.createObjectURL(de.value),ce()}function ce(){const l="registered-users.csv";if(ee.value){const o=document.createElement("a");o.setAttribute("href",ee.value),o.setAttribute("download",l),document.body.appendChild(o),o.click(),document.body.removeChild(o)}}function ue(l,o){oe(E.value)&&(E.value=ne(l),E.value.unshift({dataType:"string",field:"error",header:"Cause of Error"}),D.value=!0),x.value.push({...l,error:o})}const se={districts:{},schools:{},classes:{},groups:{}},$=async(l,o,d=i(null),f=i(null))=>{const s=Ie(o);if(se[l][s])return se[l][s];const u=await $e(l,s,d,f);if(u.length===0)throw l==="districts"?new Error(`No Groups found for site '${o}'`):l==="groups"?new Error(`No Groups found for cohort '${o}'`):new Error(`No Groups found for ${l} '${o}'`);return se[l][s]=u[0].id,u[0].id};return(l,o)=>(O(),G("main",Ye,[e("section",He,[A(Ge),A(C(Me)),e("div",We,[A(C(De),{name:"massUploader[]","custom-upload":"",accept:".csv",class:"bg-primary mb-2 p-3 w-2 text-white border-none border-round h-3rem m-0 hover:bg-red-900",auto:"","show-upload-button":!1,"show-cancel-button":!1,onUploader:o[0]||(o[0]=d=>Ce(d))},{empty:N(()=>o[2]||(o[2]=[e("div",{class:"flex justify-center items-center text-gray-500"},[e("p",null,"Click choose or drag your CSV file here to upload.")],-1)])),_:1})]),V.value&&!H.value&&!x.value.length?(O(),G("div",Pe,[A(C(ye),{ref_key:"dataTable",ref:ve,value:r.value,"show-gridlines":"","row-hover":!0,"resizable-columns":!0,paginator:"","always-show-paginator":!1,rows:10,class:"datatable"},{default:N(()=>[(O(),G(he,null,pe(ge,d=>A(C(me),{key:d.field,field:d.field},{header:N(()=>[e("div",Ke,[e("b",null,X(d.header),1)])]),body:N(({data:f,field:s})=>[e("span",null,X(f[s]),1)]),_:2},1032,["field"])),64))]),_:1},8,["value"]),e("div",Je,[Y.value.length?(O(),G("div",Qe,[A(C(re),{label:"Continue to Link Users",class:"continue-button",icon:"pi pi-link",onClick:o[1]||(o[1]=d=>C(we).push({name:"Link Users"}))}),A(C(re),{label:"Download Users",class:"download-button",icon:"pi pi-download",onClick:ce})])):(O(),ae(C(re),{key:1,label:_.value?"Adding Users":"Start Adding Users",icon:_.value?"pi pi-spin pi-spinner":"",disabled:_.value,class:"bg-primary mb-2 p-3 w-2 text-white border-none border-round h-3rem m-0 hover:bg-red-900","data-testid":"start-adding-button",onClick:ke},null,8,["label","icon","disabled"]))])])):fe("",!0),D.value?(O(),G("div",Xe,[o[3]||(o[3]=e("div",{class:"error-header"},[e("h3",null,"Rows with Errors")],-1)),A(C(ye),{ref_key:"errorTable",ref:le,value:x.value,"show-gridlines":"","export-filename":"error-datatable-export","row-hover":!0,"resizable-columns":!0,paginator:"","always-show-paginator":!1,rows:10,class:"datatable"},{default:N(()=>[(O(!0),G(he,null,pe(E.value,d=>(O(),ae(C(me),{key:d.field,field:d.field},{header:N(()=>[c(X(d.header),1)]),body:N(({data:f,field:s})=>[e("span",null,X(f[s]),1)]),_:2},1032,["field"]))),128))]),_:1},8,["value"])])):fe("",!0)])]))}},Ls=be(Ze,[["__scopeId","data-v-d2cf51e6"]]);export{Ls as default};
//# sourceMappingURL=AddUsers-aFobcBMP.js.map
