{"version":3,"file":"useTasksDictionaryQuery-DDq5c2TB.js","sources":["../../src/helpers/plotting.ts","../../src/composables/queries/useTasksDictionaryQuery.ts"],"sourcesContent":["export const chart = {};\n\n// Define interfaces for clarity\ninterface BorderRadiusValue {\n  topLeft: number;\n  topRight: number;\n  bottomLeft: number;\n  bottomRight: number;\n}\n\ninterface BorderRadii {\n  left: BorderRadiusValue;\n  middle: BorderRadiusValue;\n  right: BorderRadiusValue;\n}\n\ninterface OrgStats {\n  assigned?: number;\n  started?: number;\n  completed?: number;\n}\n\n// Define a simplified type for Chart.js data/options,\n// or import specific types from 'chart.js' if needed\ntype ChartJsData = any;\ntype ChartJsOptions = any;\n\nconst getBorderRadii = (left: number, middle: number, right: number): BorderRadii => {\n  const defaultRadius: BorderRadiusValue = {\n    topLeft: 0,\n    topRight: 0,\n    bottomLeft: 0,\n    bottomRight: 0,\n  };\n  const borderRadii: BorderRadii = {\n    left: { ...defaultRadius },\n    middle: { ...defaultRadius },\n    right: { ...defaultRadius },\n  };\n  if (left > 0) {\n    borderRadii.left.topLeft = Number.MAX_VALUE;\n    borderRadii.left.bottomLeft = Number.MAX_VALUE;\n  } else if (middle > 0) {\n    borderRadii.middle.topLeft = Number.MAX_VALUE;\n    borderRadii.middle.bottomLeft = Number.MAX_VALUE;\n  } else {\n    borderRadii.right.topLeft = Number.MAX_VALUE;\n    borderRadii.right.bottomLeft = Number.MAX_VALUE;\n  }\n\n  if (right > 0) {\n    borderRadii.right.topRight = Number.MAX_VALUE;\n    borderRadii.right.bottomRight = Number.MAX_VALUE;\n  } else if (middle > 0) {\n    borderRadii.middle.topRight = Number.MAX_VALUE;\n    borderRadii.middle.bottomRight = Number.MAX_VALUE;\n  } else {\n    borderRadii.left.topRight = Number.MAX_VALUE;\n    borderRadii.left.bottomRight = Number.MAX_VALUE;\n  }\n\n  return borderRadii;\n};\n\nexport const setBarChartData = (orgStats: OrgStats | null | undefined): ChartJsData => {\n  let { assigned = 0, started = 0, completed = 0 } = orgStats || {};\n  const documentStyle = getComputedStyle(document.documentElement);\n\n  // Ensure these are numbers before subtraction\n  started = Number(started) || 0;\n  completed = Number(completed) || 0;\n  assigned = Number(assigned) || 0;\n\n  started -= completed;\n  assigned -= started + completed;\n\n  const borderRadii = getBorderRadii(completed, started, assigned);\n  const borderWidth = 0;\n\n  const chartData = {\n    labels: [''],\n    datasets: [\n      {\n        type: 'bar',\n        label: 'Completed',\n        backgroundColor: documentStyle.getPropertyValue('--bright-green'),\n        data: [completed],\n        borderWidth: borderWidth,\n        borderSkipped: false,\n        borderRadius: borderRadii.left,\n      },\n      {\n        type: 'bar',\n        label: 'Started',\n        backgroundColor: documentStyle.getPropertyValue('--yellow-100'),\n        data: [started],\n        borderWidth: borderWidth,\n        borderSkipped: false,\n        borderRadius: borderRadii.middle,\n      },\n      {\n        type: 'bar',\n        label: 'Not Started',\n        backgroundColor: documentStyle.getPropertyValue('--surface-d'),\n        data: [assigned],\n        borderWidth: borderWidth,\n        borderSkipped: false,\n        borderRadius: borderRadii.right,\n      },\n    ],\n  };\n\n  return chartData;\n};\n\nexport const setBarChartOptions = (orgStats: OrgStats | null | undefined): ChartJsOptions => {\n  let { assigned = 0 } = orgStats || {};\n\n  assigned = Number(assigned) || 0;\n\n  const min = 0;\n  const max = assigned;\n\n  return {\n    indexAxis: 'y',\n    maintainAspectRatio: false,\n    aspectRatio: 9,\n    plugins: {\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n      },\n      legend: false,\n    },\n    scales: {\n      x: {\n        stacked: true,\n        ticks: {\n          display: false,\n        },\n        grid: {\n          display: false,\n        },\n        border: {\n          display: false,\n        },\n        min,\n        max,\n      },\n      y: {\n        stacked: true,\n        ticks: {\n          display: false,\n        },\n        grid: {\n          display: false,\n        },\n        border: {\n          display: false,\n        },\n        min,\n        max,\n      },\n    },\n  };\n};\n","import { computed } from 'vue';\nimport useTasksQuery from '@/composables/queries/useTasksQuery';\n\n/**\n * Tasks dictionary query.\n *\n * Leverage the useTasksQuery composable to fetch tasks and reduce them into a dictionary. This is useful for quickly\n * accessing tasks by ID without having to iterate over the potentially large tasks array.\n *\n * @param {QueryOptions|undefined} queryOptions â€“ Optional TanStack query options.\n * @returns {UseQueryResult} The TanStack query result with the tasks dictionary.\n */\nconst useTasksDictionaryQuery = (queryOptions = undefined) => {\n  const { data, ...queryState } = useTasksQuery(true, undefined, queryOptions);\n\n  const tasksDictionary = computed(() => {\n    return Array.isArray(data.value)\n      ? data.value.reduce((acc, doc) => {\n          acc[doc.id] = doc;\n          return acc;\n        }, {})\n      : {};\n  });\n\n  return { data: tasksDictionary, ...queryState };\n};\n\nexport default useTasksDictionaryQuery;\n"],"names":["getBorderRadii","left","middle","right","defaultRadius","borderRadii","setBarChartData","orgStats","assigned","started","completed","documentStyle","borderWidth","setBarChartOptions","min","max","useTasksDictionaryQuery","queryOptions","data","queryState","useTasksQuery","computed","acc","doc"],"mappings":"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"}