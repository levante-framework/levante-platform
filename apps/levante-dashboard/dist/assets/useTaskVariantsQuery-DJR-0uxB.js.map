{"version":3,"file":"useTaskVariantsQuery-DJR-0uxB.js","sources":["../../src/composables/queries/useTaskVariantsQuery.ts"],"sourcesContent":["import { type MaybeRefOrGetter } from 'vue';\nimport { toValue } from 'vue';\nimport { useQuery } from '@tanstack/vue-query';\nimport { variantsFetcher } from '@/helpers/query/tasks';\nimport { TASK_VARIANTS_QUERY_KEY } from '@/constants/queryKeys';\n\n/**\n * Tasks Variants query.\n *\n * @param {QueryOptions|undefined} queryOptions â€“ Optional TanStack query options.\n * @returns {UseQueryResult} The TanStack query result.\n */\nconst useTaskVariantsQuery = (registeredVariantsOnly = false, queryOptions?: UseQueryOptions): UseQueryReturnType => {\n  const queryKey = toValue(registeredVariantsOnly)\n    ? [TASK_VARIANTS_QUERY_KEY, 'registered']\n    : [TASK_VARIANTS_QUERY_KEY];\n\n  return useQuery({\n    queryKey,\n    queryFn: () => variantsFetcher(registeredVariantsOnly),\n    ...queryOptions,\n  });\n};\n\nexport default useTaskVariantsQuery;\n"],"names":["useTaskVariantsQuery","registeredVariantsOnly","queryOptions","queryKey","toValue","TASK_VARIANTS_QUERY_KEY","useQuery","variantsFetcher"],"mappings":"8dAYA,MAAMA,EAAuB,CAACC,EAAyB,GAAOC,IAAuD,CACnH,MAAMC,EAAWC,EAAQH,CAAsB,EAC3C,CAACI,EAAyB,YAAY,EACtC,CAACA,CAAuB,EAE5B,OAAOC,EAAS,CACd,SAAAH,EACA,QAAS,IAAMI,EAAgBN,CAAsB,EACrD,GAAGC,CAAA,CACJ,CACH"}