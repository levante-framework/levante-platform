{
  "version": 3,
  "sources": ["../../../../../node_modules/src/blockui/style/BlockUIStyle.js", "../../../../../node_modules/src/blockui/BaseBlockUI.vue", "../../../../../node_modules/src/blockui/BlockUI.vue", "../../../../../node_modules/src/blockui/BlockUI.vue?vue&type=template&id=65d07dd0&lang.js"],
  "sourcesContent": ["import { style } from '@primeuix/styles/blockui';\nimport BaseStyle from '@primevue/core/base/style';\n\nconst classes = {\n    root: 'p-blockui'\n};\n\nexport default BaseStyle.extend({\n    name: 'blockui',\n    style,\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport BlockUIStyle from 'primevue/blockui/style';\n\nexport default {\n    name: 'BaseBlockUI',\n    extends: BaseComponent,\n    props: {\n        blocked: {\n            type: Boolean,\n            default: false\n        },\n        fullScreen: {\n            type: Boolean,\n            default: false\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        }\n    },\n    style: BlockUIStyle,\n    provide() {\n        return {\n            $pcBlockUI: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <div ref=\"container\" :class=\"cx('root')\" :aria-busy=\"isBlocked\" v-bind=\"ptmi('root')\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\nimport { addClass, createElement, hasCSSAnimation } from '@primeuix/utils/dom';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { blockBodyScroll, unblockBodyScroll } from 'primevue/utils';\nimport BaseBlockUI from './BaseBlockUI.vue';\n\nexport default {\n    name: 'BlockUI',\n    extends: BaseBlockUI,\n    inheritAttrs: false,\n    emits: ['block', 'unblock'],\n    mask: null,\n    data() {\n        return {\n            isBlocked: false\n        };\n    },\n    watch: {\n        blocked(newValue) {\n            if (newValue === true) this.block();\n            else this.unblock();\n        }\n    },\n    mounted() {\n        if (this.blocked) {\n            this.block();\n        }\n    },\n    methods: {\n        block() {\n            let styleClass = 'p-blockui-mask p-overlay-mask p-overlay-mask-enter';\n\n            if (this.fullScreen) {\n                styleClass += ' p-blockui-mask-document';\n\n                this.mask = createElement('div', {\n                    style: {\n                        position: 'fixed',\n                        top: '0',\n                        left: '0',\n                        width: '100%',\n                        height: '100%'\n                    },\n                    class: !this.isUnstyled && styleClass,\n                    'p-bind': this.ptm('mask')\n                });\n\n                document.body.appendChild(this.mask);\n                blockBodyScroll();\n                document.activeElement.blur();\n            } else {\n                this.mask = createElement('div', {\n                    style: {\n                        position: 'absolute',\n                        top: '0',\n                        left: '0',\n                        width: '100%',\n                        height: '100%'\n                    },\n                    class: !this.isUnstyled && styleClass,\n                    'p-bind': this.ptm('mask')\n                });\n                this.$refs.container.appendChild(this.mask);\n            }\n\n            if (this.autoZIndex) {\n                ZIndex.set('modal', this.mask, this.baseZIndex + this.$primevue.config.zIndex.modal);\n            }\n\n            this.isBlocked = true;\n            this.$emit('block');\n        },\n        unblock() {\n            if (this.mask) {\n                !this.isUnstyled && addClass(this.mask, 'p-overlay-mask-leave');\n\n                const handleAnimationEnd = () => {\n                    clearTimeout(fallbackTimer);\n                    this.mask.removeEventListener('animationend', handleAnimationEnd);\n                    this.mask.removeEventListener('webkitAnimationEnd', handleAnimationEnd);\n                };\n\n                const fallbackTimer = setTimeout(() => {\n                    this.removeMask();\n                }, 10);\n\n                if (hasCSSAnimation(this.mask) > 0) {\n                    this.mask.addEventListener('animationend', handleAnimationEnd);\n                    this.mask.addEventListener('webkitAnimationEnd', handleAnimationEnd);\n                }\n            } else {\n                this.removeMask();\n            }\n        },\n        removeMask() {\n            ZIndex.clear(this.mask);\n\n            if (this.fullScreen) {\n                document.body.removeChild(this.mask);\n                unblockBodyScroll();\n            } else {\n                this.$refs.container?.removeChild(this.mask);\n            }\n\n            this.isBlocked = false;\n            this.$emit('unblock');\n        }\n    }\n};\n</script>\n", "<template>\n    <div ref=\"container\" :class=\"cx('root')\" :aria-busy=\"isBlocked\" v-bind=\"ptmi('root')\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\nimport { addClass, createElement, hasCSSAnimation } from '@primeuix/utils/dom';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { blockBodyScroll, unblockBodyScroll } from 'primevue/utils';\nimport BaseBlockUI from './BaseBlockUI.vue';\n\nexport default {\n    name: 'BlockUI',\n    extends: BaseBlockUI,\n    inheritAttrs: false,\n    emits: ['block', 'unblock'],\n    mask: null,\n    data() {\n        return {\n            isBlocked: false\n        };\n    },\n    watch: {\n        blocked(newValue) {\n            if (newValue === true) this.block();\n            else this.unblock();\n        }\n    },\n    mounted() {\n        if (this.blocked) {\n            this.block();\n        }\n    },\n    methods: {\n        block() {\n            let styleClass = 'p-blockui-mask p-overlay-mask p-overlay-mask-enter';\n\n            if (this.fullScreen) {\n                styleClass += ' p-blockui-mask-document';\n\n                this.mask = createElement('div', {\n                    style: {\n                        position: 'fixed',\n                        top: '0',\n                        left: '0',\n                        width: '100%',\n                        height: '100%'\n                    },\n                    class: !this.isUnstyled && styleClass,\n                    'p-bind': this.ptm('mask')\n                });\n\n                document.body.appendChild(this.mask);\n                blockBodyScroll();\n                document.activeElement.blur();\n            } else {\n                this.mask = createElement('div', {\n                    style: {\n                        position: 'absolute',\n                        top: '0',\n                        left: '0',\n                        width: '100%',\n                        height: '100%'\n                    },\n                    class: !this.isUnstyled && styleClass,\n                    'p-bind': this.ptm('mask')\n                });\n                this.$refs.container.appendChild(this.mask);\n            }\n\n            if (this.autoZIndex) {\n                ZIndex.set('modal', this.mask, this.baseZIndex + this.$primevue.config.zIndex.modal);\n            }\n\n            this.isBlocked = true;\n            this.$emit('block');\n        },\n        unblock() {\n            if (this.mask) {\n                !this.isUnstyled && addClass(this.mask, 'p-overlay-mask-leave');\n\n                const handleAnimationEnd = () => {\n                    clearTimeout(fallbackTimer);\n                    this.mask.removeEventListener('animationend', handleAnimationEnd);\n                    this.mask.removeEventListener('webkitAnimationEnd', handleAnimationEnd);\n                };\n\n                const fallbackTimer = setTimeout(() => {\n                    this.removeMask();\n                }, 10);\n\n                if (hasCSSAnimation(this.mask) > 0) {\n                    this.mask.addEventListener('animationend', handleAnimationEnd);\n                    this.mask.addEventListener('webkitAnimationEnd', handleAnimationEnd);\n                }\n            } else {\n                this.removeMask();\n            }\n        },\n        removeMask() {\n            ZIndex.clear(this.mask);\n\n            if (this.fullScreen) {\n                document.body.removeChild(this.mask);\n                unblockBodyScroll();\n            } else {\n                this.$refs.container?.removeChild(this.mask);\n            }\n\n            this.isBlocked = false;\n            this.$emit('unblock');\n        }\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["classes", "root", "BaseStyle", "extend", "name", "style", "name", "BaseComponent", "props", "blocked", "type", "Boolean", "fullScreen", "baseZIndex", "Number", "autoZIndex", "style", "BlockUIStyle", "provide", "$pcBlockUI", "$parentInstance", "script", "BaseBlockUI", "inheritAttrs", "emits", "mask", "data", "isBlocked", "watch", "newValue", "block", "unblock", "mounted", "methods", "styleClass", "createElement", "position", "top", "left", "width", "height", "isUnstyled", "ptm", "document", "body", "appendChild", "blockBodyScroll", "activeElement", "blur", "$refs", "container", "ZIndex", "set", "$primevue", "config", "zIndex", "modal", "$emit", "_this", "addClass", "handleAnimationEnd", "clearTimeout", "fallbackTimer", "removeEventListener", "setTimeout", "removeMask", "hasCSSAnimation", "addEventListener", "clear", "removeChild", "unblockBodyScroll", "_this$$refs$container", "_openBlock", "_createElementBlock", "_mergeProps", "ref", "_ctx", "cx", "$data", "ptmi", "_renderSlot", "$slots"]
}
